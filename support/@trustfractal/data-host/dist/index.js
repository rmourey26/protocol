(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("DataHost", [], factory);
	else if(typeof exports === 'object')
		exports["DataHost"] = factory();
	else
		root["DataHost"] = factory();
})(this, function() {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ([
/* 0 */,
/* 1 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Background": () => (/* binding */ Background)
/* harmony export */ });
class Background {
    async setup() {
        console.log('Background initialized.');
    }
}


/***/ }),
/* 2 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InjectionScript": () => (/* binding */ InjectionScript)
/* harmony export */ });
class InjectionScript {
    // substrateAddress is going to be used to send funds
    async setup(substrateAddress) {
        console.log(`InjectionScript initialized with address: ${substrateAddress}.`);
    }
}


/***/ }),
/* 3 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FractalUI": () => (/* binding */ FractalUI)
/* harmony export */ });
/* harmony import */ var _components_App__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(912);
// import App from '@components/App';


class FractalUI {
    //TODO(melatron): Add substrateAddress that would be used for sending funds
    render(element) {
        react_dom__WEBPACK_IMPORTED_MODULE_1__.render((0,_components_App__WEBPACK_IMPORTED_MODULE_0__["default"])(), element);
    }
}


/***/ }),
/* 4 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);
/* harmony import */ var _components_Protocol__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(12);
/* harmony import */ var _styles_GlobalStyle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(909);



function App() {
    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_styles_GlobalStyle__WEBPACK_IMPORTED_MODULE_2__["default"], {}, void 0), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_Protocol__WEBPACK_IMPORTED_MODULE_1__["default"], {}, void 0)] }, void 0));
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (App);


/***/ }),
/* 5 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (process.env.NODE_ENV === 'production') {
  module.exports = __webpack_require__(6);
} else {
  module.exports = __webpack_require__(11);
}


/***/ }),
/* 6 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** @license React v17.0.2
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
__webpack_require__(7);var f=__webpack_require__(8),g=60103;exports.Fragment=60107;if("function"===typeof Symbol&&Symbol.for){var h=Symbol.for;g=h("react.element");exports.Fragment=h("react.fragment")}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};
function q(c,a,k){var b,d={},e=null,l=null;void 0!==k&&(e=""+k);void 0!==a.key&&(e=""+a.key);void 0!==a.ref&&(l=a.ref);for(b in a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q;exports.jsxs=q;


/***/ }),
/* 7 */
/***/ ((module) => {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/


/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};


/***/ }),
/* 8 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (process.env.NODE_ENV === 'production') {
  module.exports = __webpack_require__(9);
} else {
  module.exports = __webpack_require__(10);
}


/***/ }),
/* 9 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** @license React v17.0.2
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var l=__webpack_require__(7),n=60103,p=60106;exports.Fragment=60107;exports.StrictMode=60108;exports.Profiler=60114;var q=60109,r=60110,t=60112;exports.Suspense=60113;var u=60115,v=60116;
if("function"===typeof Symbol&&Symbol.for){var w=Symbol.for;n=w("react.element");p=w("react.portal");exports.Fragment=w("react.fragment");exports.StrictMode=w("react.strict_mode");exports.Profiler=w("react.profiler");q=w("react.provider");r=w("react.context");t=w("react.forward_ref");exports.Suspense=w("react.suspense");u=w("react.memo");v=w("react.lazy")}var x="function"===typeof Symbol&&Symbol.iterator;
function y(a){if(null===a||"object"!==typeof a)return null;a=x&&a[x]||a["@@iterator"];return"function"===typeof a?a:null}function z(a){for(var b="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=1;c<arguments.length;c++)b+="&args[]="+encodeURIComponent(arguments[c]);return"Minified React error #"+a+"; visit "+b+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}
var A={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},B={};function C(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}C.prototype.isReactComponent={};C.prototype.setState=function(a,b){if("object"!==typeof a&&"function"!==typeof a&&null!=a)throw Error(z(85));this.updater.enqueueSetState(this,a,b,"setState")};C.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")};
function D(){}D.prototype=C.prototype;function E(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}var F=E.prototype=new D;F.constructor=E;l(F,C.prototype);F.isPureReactComponent=!0;var G={current:null},H=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0};
function J(a,b,c){var e,d={},k=null,h=null;if(null!=b)for(e in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=""+b.key),b)H.call(b,e)&&!I.hasOwnProperty(e)&&(d[e]=b[e]);var g=arguments.length-2;if(1===g)d.children=c;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];d.children=f}if(a&&a.defaultProps)for(e in g=a.defaultProps,g)void 0===d[e]&&(d[e]=g[e]);return{$$typeof:n,type:a,key:k,ref:h,props:d,_owner:G.current}}
function K(a,b){return{$$typeof:n,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function L(a){return"object"===typeof a&&null!==a&&a.$$typeof===n}function escape(a){var b={"=":"=0",":":"=2"};return"$"+a.replace(/[=:]/g,function(a){return b[a]})}var M=/\/+/g;function N(a,b){return"object"===typeof a&&null!==a&&null!=a.key?escape(""+a.key):b.toString(36)}
function O(a,b,c,e,d){var k=typeof a;if("undefined"===k||"boolean"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case "string":case "number":h=!0;break;case "object":switch(a.$$typeof){case n:case p:h=!0}}if(h)return h=a,d=d(h),a=""===e?"."+N(h,0):e,Array.isArray(d)?(c="",null!=a&&(c=a.replace(M,"$&/")+"/"),O(d,b,c,"",function(a){return a})):null!=d&&(L(d)&&(d=K(d,c+(!d.key||h&&h.key===d.key?"":(""+d.key).replace(M,"$&/")+"/")+a)),b.push(d)),1;h=0;e=""===e?".":e+":";if(Array.isArray(a))for(var g=
0;g<a.length;g++){k=a[g];var f=e+N(k,g);h+=O(k,b,c,f,d)}else if(f=y(a),"function"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=e+N(k,g++),h+=O(k,b,c,f,d);else if("object"===k)throw b=""+a,Error(z(31,"[object Object]"===b?"object with keys {"+Object.keys(a).join(", ")+"}":b));return h}function P(a,b,c){if(null==a)return a;var e=[],d=0;O(a,e,"","",function(a){return b.call(c,a,d++)});return e}
function Q(a){if(-1===a._status){var b=a._result;b=b();a._status=0;a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}if(1===a._status)return a._result;throw a._result;}var R={current:null};function S(){var a=R.current;if(null===a)throw Error(z(321));return a}var T={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:G,IsSomeRendererActing:{current:!1},assign:l};
exports.Children={map:P,forEach:function(a,b,c){P(a,function(){b.apply(this,arguments)},c)},count:function(a){var b=0;P(a,function(){b++});return b},toArray:function(a){return P(a,function(a){return a})||[]},only:function(a){if(!L(a))throw Error(z(143));return a}};exports.Component=C;exports.PureComponent=E;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=T;
exports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(z(267,a));var e=l({},a.props),d=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=G.current);void 0!==b.key&&(d=""+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)H.call(b,f)&&!I.hasOwnProperty(f)&&(e[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)e.children=c;else if(1<f){g=Array(f);for(var m=0;m<f;m++)g[m]=arguments[m+2];e.children=g}return{$$typeof:n,type:a.type,
key:d,ref:k,props:e,_owner:h}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:r,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:q,_context:a};return a.Consumer=a};exports.createElement=J;exports.createFactory=function(a){var b=J.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:t,render:a}};exports.isValidElement=L;
exports.lazy=function(a){return{$$typeof:v,_payload:{_status:-1,_result:a},_init:Q}};exports.memo=function(a,b){return{$$typeof:u,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return S().useCallback(a,b)};exports.useContext=function(a,b){return S().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return S().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return S().useImperativeHandle(a,b,c)};
exports.useLayoutEffect=function(a,b){return S().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return S().useMemo(a,b)};exports.useReducer=function(a,b,c){return S().useReducer(a,b,c)};exports.useRef=function(a){return S().useRef(a)};exports.useState=function(a){return S().useState(a)};exports.version="17.0.2";


/***/ }),
/* 10 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** @license React v17.0.2
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



if (process.env.NODE_ENV !== "production") {
  (function() {
'use strict';

var _assign = __webpack_require__(7);

// TODO: this is special because it gets imported during build.
var ReactVersion = '17.0.2';

// ATTENTION
// When adding new symbols to this file,
// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var REACT_ELEMENT_TYPE = 0xeac7;
var REACT_PORTAL_TYPE = 0xeaca;
exports.Fragment = 0xeacb;
exports.StrictMode = 0xeacc;
exports.Profiler = 0xead2;
var REACT_PROVIDER_TYPE = 0xeacd;
var REACT_CONTEXT_TYPE = 0xeace;
var REACT_FORWARD_REF_TYPE = 0xead0;
exports.Suspense = 0xead1;
var REACT_SUSPENSE_LIST_TYPE = 0xead8;
var REACT_MEMO_TYPE = 0xead3;
var REACT_LAZY_TYPE = 0xead4;
var REACT_BLOCK_TYPE = 0xead9;
var REACT_SERVER_BLOCK_TYPE = 0xeada;
var REACT_FUNDAMENTAL_TYPE = 0xead5;
var REACT_SCOPE_TYPE = 0xead7;
var REACT_OPAQUE_ID_TYPE = 0xeae0;
var REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;
var REACT_OFFSCREEN_TYPE = 0xeae2;
var REACT_LEGACY_HIDDEN_TYPE = 0xeae3;

if (typeof Symbol === 'function' && Symbol.for) {
  var symbolFor = Symbol.for;
  REACT_ELEMENT_TYPE = symbolFor('react.element');
  REACT_PORTAL_TYPE = symbolFor('react.portal');
  exports.Fragment = symbolFor('react.fragment');
  exports.StrictMode = symbolFor('react.strict_mode');
  exports.Profiler = symbolFor('react.profiler');
  REACT_PROVIDER_TYPE = symbolFor('react.provider');
  REACT_CONTEXT_TYPE = symbolFor('react.context');
  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');
  exports.Suspense = symbolFor('react.suspense');
  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');
  REACT_MEMO_TYPE = symbolFor('react.memo');
  REACT_LAZY_TYPE = symbolFor('react.lazy');
  REACT_BLOCK_TYPE = symbolFor('react.block');
  REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');
  REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');
  REACT_SCOPE_TYPE = symbolFor('react.scope');
  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');
  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');
  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');
  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');
}

var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';
function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable !== 'object') {
    return null;
  }

  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];

  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }

  return null;
}

/**
 * Keeps track of the current dispatcher.
 */
var ReactCurrentDispatcher = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

/**
 * Keeps track of the current batch's configuration such as how long an update
 * should suspend for if it needs to.
 */
var ReactCurrentBatchConfig = {
  transition: 0
};

/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */
var ReactCurrentOwner = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

var ReactDebugCurrentFrame = {};
var currentExtraStackFrame = null;
function setExtraStackFrame(stack) {
  {
    currentExtraStackFrame = stack;
  }
}

{
  ReactDebugCurrentFrame.setExtraStackFrame = function (stack) {
    {
      currentExtraStackFrame = stack;
    }
  }; // Stack implementation injected by the current renderer.


  ReactDebugCurrentFrame.getCurrentStack = null;

  ReactDebugCurrentFrame.getStackAddendum = function () {
    var stack = ''; // Add an extra top frame while an element is being validated

    if (currentExtraStackFrame) {
      stack += currentExtraStackFrame;
    } // Delegate to the injected renderer-specific implementation


    var impl = ReactDebugCurrentFrame.getCurrentStack;

    if (impl) {
      stack += impl() || '';
    }

    return stack;
  };
}

/**
 * Used by act() to track whether you're inside an act() scope.
 */
var IsSomeRendererActing = {
  current: false
};

var ReactSharedInternals = {
  ReactCurrentDispatcher: ReactCurrentDispatcher,
  ReactCurrentBatchConfig: ReactCurrentBatchConfig,
  ReactCurrentOwner: ReactCurrentOwner,
  IsSomeRendererActing: IsSomeRendererActing,
  // Used by renderers to avoid bundling object-assign twice in UMD bundles:
  assign: _assign
};

{
  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;
}

// by calls to these methods by a Babel plugin.
//
// In PROD (or in packages without access to React internals),
// they are left as they are instead.

function warn(format) {
  {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    printWarning('warn', format, args);
  }
}
function error(format) {
  {
    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      args[_key2 - 1] = arguments[_key2];
    }

    printWarning('error', format, args);
  }
}

function printWarning(level, format, args) {
  // When changing this logic, you might want to also
  // update consoleWithStackDev.www.js as well.
  {
    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    var stack = ReactDebugCurrentFrame.getStackAddendum();

    if (stack !== '') {
      format += '%s';
      args = args.concat([stack]);
    }

    var argsWithFormat = args.map(function (item) {
      return '' + item;
    }); // Careful: RN currently depends on this prefix

    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
    // breaks IE9: https://github.com/facebook/react/issues/13610
    // eslint-disable-next-line react-internal/no-production-logging

    Function.prototype.apply.call(console[level], console, argsWithFormat);
  }
}

var didWarnStateUpdateForUnmountedComponent = {};

function warnNoop(publicInstance, callerName) {
  {
    var _constructor = publicInstance.constructor;
    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';
    var warningKey = componentName + "." + callerName;

    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
      return;
    }

    error("Can't call %s on a component that is not yet mounted. " + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);

    didWarnStateUpdateForUnmountedComponent[warningKey] = true;
  }
}
/**
 * This is the abstract API for an update queue.
 */


var ReactNoopUpdateQueue = {
  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    return false;
  },

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance, callback, callerName) {
    warnNoop(publicInstance, 'forceUpdate');
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
    warnNoop(publicInstance, 'replaceState');
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} Name of the calling function in the public API.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState, callback, callerName) {
    warnNoop(publicInstance, 'setState');
  }
};

var emptyObject = {};

{
  Object.freeze(emptyObject);
}
/**
 * Base class helpers for the updating state of a component.
 */


function Component(props, context, updater) {
  this.props = props;
  this.context = context; // If a component has string refs, we will assign a different object later.

  this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the
  // renderer.

  this.updater = updater || ReactNoopUpdateQueue;
}

Component.prototype.isReactComponent = {};
/**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */

Component.prototype.setState = function (partialState, callback) {
  if (!(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null)) {
    {
      throw Error( "setState(...): takes an object of state variables to update or a function which returns an object of state variables." );
    }
  }

  this.updater.enqueueSetState(this, partialState, callback, 'setState');
};
/**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */


Component.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
};
/**
 * Deprecated APIs. These APIs used to exist on classic React classes but since
 * we would like to deprecate them, we're not going to move them over to this
 * modern base class. Instead, we define a getter that warns if it's accessed.
 */


{
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };

  var defineDeprecationWarning = function (methodName, info) {
    Object.defineProperty(Component.prototype, methodName, {
      get: function () {
        warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);

        return undefined;
      }
    });
  };

  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

function ComponentDummy() {}

ComponentDummy.prototype = Component.prototype;
/**
 * Convenience component with default shallow equality check for sCU.
 */

function PureComponent(props, context, updater) {
  this.props = props;
  this.context = context; // If a component has string refs, we will assign a different object later.

  this.refs = emptyObject;
  this.updater = updater || ReactNoopUpdateQueue;
}

var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.

_assign(pureComponentPrototype, Component.prototype);

pureComponentPrototype.isPureReactComponent = true;

// an immutable object with a single mutable value
function createRef() {
  var refObject = {
    current: null
  };

  {
    Object.seal(refObject);
  }

  return refObject;
}

function getWrappedName(outerType, innerType, wrapperName) {
  var functionName = innerType.displayName || innerType.name || '';
  return outerType.displayName || (functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName);
}

function getContextName(type) {
  return type.displayName || 'Context';
}

function getComponentName(type) {
  if (type == null) {
    // Host root, text node or just invalid type.
    return null;
  }

  {
    if (typeof type.tag === 'number') {
      error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');
    }
  }

  if (typeof type === 'function') {
    return type.displayName || type.name || null;
  }

  if (typeof type === 'string') {
    return type;
  }

  switch (type) {
    case exports.Fragment:
      return 'Fragment';

    case REACT_PORTAL_TYPE:
      return 'Portal';

    case exports.Profiler:
      return 'Profiler';

    case exports.StrictMode:
      return 'StrictMode';

    case exports.Suspense:
      return 'Suspense';

    case REACT_SUSPENSE_LIST_TYPE:
      return 'SuspenseList';
  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        var context = type;
        return getContextName(context) + '.Consumer';

      case REACT_PROVIDER_TYPE:
        var provider = type;
        return getContextName(provider._context) + '.Provider';

      case REACT_FORWARD_REF_TYPE:
        return getWrappedName(type, type.render, 'ForwardRef');

      case REACT_MEMO_TYPE:
        return getComponentName(type.type);

      case REACT_BLOCK_TYPE:
        return getComponentName(type._render);

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            return getComponentName(init(payload));
          } catch (x) {
            return null;
          }
        }
    }
  }

  return null;
}

var hasOwnProperty = Object.prototype.hasOwnProperty;
var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};
var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;

{
  didWarnAboutStringRefs = {};
}

function hasValidRef(config) {
  {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;

      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }

  return config.ref !== undefined;
}

function hasValidKey(config) {
  {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;

      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }

  return config.key !== undefined;
}

function defineKeyPropWarningGetter(props, displayName) {
  var warnAboutAccessingKey = function () {
    {
      if (!specialPropKeyWarningShown) {
        specialPropKeyWarningShown = true;

        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
      }
    }
  };

  warnAboutAccessingKey.isReactWarning = true;
  Object.defineProperty(props, 'key', {
    get: warnAboutAccessingKey,
    configurable: true
  });
}

function defineRefPropWarningGetter(props, displayName) {
  var warnAboutAccessingRef = function () {
    {
      if (!specialPropRefWarningShown) {
        specialPropRefWarningShown = true;

        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
      }
    }
  };

  warnAboutAccessingRef.isReactWarning = true;
  Object.defineProperty(props, 'ref', {
    get: warnAboutAccessingRef,
    configurable: true
  });
}

function warnIfStringRefCannotBeAutoConverted(config) {
  {
    if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {
      var componentName = getComponentName(ReactCurrentOwner.current.type);

      if (!didWarnAboutStringRefs[componentName]) {
        error('Component "%s" contains the string ref "%s". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);

        didWarnAboutStringRefs[componentName] = true;
      }
    }
  }
}
/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, instanceof check
 * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} props
 * @param {*} key
 * @param {string|object} ref
 * @param {*} owner
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @internal
 */


var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allows us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,
    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,
    // Record the component responsible for creating this element.
    _owner: owner
  };

  {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.

    Object.defineProperty(element._store, 'validated', {
      configurable: false,
      enumerable: false,
      writable: true,
      value: false
    }); // self and source are DEV only properties.

    Object.defineProperty(element, '_self', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: self
    }); // Two elements created in two different places should be considered
    // equal for testing purposes and therefore we hide it from enumeration.

    Object.defineProperty(element, '_source', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: source
    });

    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};
/**
 * Create and return a new ReactElement of the given type.
 * See https://reactjs.org/docs/react-api.html#createelement
 */

function createElement(type, config, children) {
  var propName; // Reserved names are extracted

  var props = {};
  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if (hasValidRef(config)) {
      ref = config.ref;

      {
        warnIfStringRefCannotBeAutoConverted(config);
      }
    }

    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object

    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  } // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.


  var childrenLength = arguments.length - 2;

  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);

    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }

    {
      if (Object.freeze) {
        Object.freeze(childArray);
      }
    }

    props.children = childArray;
  } // Resolve default props


  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;

    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }

  {
    if (key || ref) {
      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;

      if (key) {
        defineKeyPropWarningGetter(props, displayName);
      }

      if (ref) {
        defineRefPropWarningGetter(props, displayName);
      }
    }
  }

  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
}
function cloneAndReplaceKey(oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
  return newElement;
}
/**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://reactjs.org/docs/react-api.html#cloneelement
 */

function cloneElement(element, config, children) {
  if (!!(element === null || element === undefined)) {
    {
      throw Error( "React.cloneElement(...): The argument must be a React element, but you passed " + element + "." );
    }
  }

  var propName; // Original props are copied

  var props = _assign({}, element.props); // Reserved names are extracted


  var key = element.key;
  var ref = element.ref; // Self is preserved since the owner is preserved.

  var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a
  // transpiler, and the original source is probably a better indicator of the
  // true owner.

  var source = element._source; // Owner will be preserved, unless ref is overridden

  var owner = element._owner;

  if (config != null) {
    if (hasValidRef(config)) {
      // Silently steal the ref from the parent.
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }

    if (hasValidKey(config)) {
      key = '' + config.key;
    } // Remaining properties override existing props


    var defaultProps;

    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }

    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          // Resolve default props
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  } // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.


  var childrenLength = arguments.length - 2;

  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);

    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }

    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
}
/**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a ReactElement.
 * @final
 */

function isValidElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}

var SEPARATOR = '.';
var SUBSEPARATOR = ':';
/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */

function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = key.replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });
  return '$' + escapedString;
}
/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */


var didWarnAboutMaps = false;
var userProvidedKeyEscapeRegex = /\/+/g;

function escapeUserProvidedKey(text) {
  return text.replace(userProvidedKeyEscapeRegex, '$&/');
}
/**
 * Generate a key string that identifies a element within a set.
 *
 * @param {*} element A element that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */


function getElementKey(element, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (typeof element === 'object' && element !== null && element.key != null) {
    // Explicit key
    return escape('' + element.key);
  } // Implicit key determined by the index in the set


  return index.toString(36);
}

function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  var invokeCallback = false;

  if (children === null) {
    invokeCallback = true;
  } else {
    switch (type) {
      case 'string':
      case 'number':
        invokeCallback = true;
        break;

      case 'object':
        switch (children.$$typeof) {
          case REACT_ELEMENT_TYPE:
          case REACT_PORTAL_TYPE:
            invokeCallback = true;
        }

    }
  }

  if (invokeCallback) {
    var _child = children;
    var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows:

    var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;

    if (Array.isArray(mappedChild)) {
      var escapedChildKey = '';

      if (childKey != null) {
        escapedChildKey = escapeUserProvidedKey(childKey) + '/';
      }

      mapIntoArray(mappedChild, array, escapedChildKey, '', function (c) {
        return c;
      });
    } else if (mappedChild != null) {
      if (isValidElement(mappedChild)) {
        mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as
        // traverseAllChildren used to do for objects as children
        escapedPrefix + ( // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
        mappedChild.key && (!_child || _child.key !== mappedChild.key) ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number
        escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);
      }

      array.push(mappedChild);
    }

    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.

  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getElementKey(child, i);
      subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
    }
  } else {
    var iteratorFn = getIteratorFn(children);

    if (typeof iteratorFn === 'function') {
      var iterableChildren = children;

      {
        // Warn about using Maps as children
        if (iteratorFn === iterableChildren.entries) {
          if (!didWarnAboutMaps) {
            warn('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');
          }

          didWarnAboutMaps = true;
        }
      }

      var iterator = iteratorFn.call(iterableChildren);
      var step;
      var ii = 0;

      while (!(step = iterator.next()).done) {
        child = step.value;
        nextName = nextNamePrefix + getElementKey(child, ii++);
        subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
      }
    } else if (type === 'object') {
      var childrenString = '' + children;

      {
        {
          throw Error( "Objects are not valid as a React child (found: " + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + "). If you meant to render a collection of children, use an array instead." );
        }
      }
    }
  }

  return subtreeCount;
}

/**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenmap
 *
 * The provided mapFunction(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */
function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }

  var result = [];
  var count = 0;
  mapIntoArray(children, result, '', '', function (child) {
    return func.call(context, child, count++);
  });
  return result;
}
/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrencount
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */


function countChildren(children) {
  var n = 0;
  mapChildren(children, function () {
    n++; // Don't return anything
  });
  return n;
}

/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */
function forEachChildren(children, forEachFunc, forEachContext) {
  mapChildren(children, function () {
    forEachFunc.apply(this, arguments); // Don't return anything.
  }, forEachContext);
}
/**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
 */


function toArray(children) {
  return mapChildren(children, function (child) {
    return child;
  }) || [];
}
/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenonly
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */


function onlyChild(children) {
  if (!isValidElement(children)) {
    {
      throw Error( "React.Children.only expected to receive a single React element child." );
    }
  }

  return children;
}

function createContext(defaultValue, calculateChangedBits) {
  if (calculateChangedBits === undefined) {
    calculateChangedBits = null;
  } else {
    {
      if (calculateChangedBits !== null && typeof calculateChangedBits !== 'function') {
        error('createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits);
      }
    }
  }

  var context = {
    $$typeof: REACT_CONTEXT_TYPE,
    _calculateChangedBits: calculateChangedBits,
    // As a workaround to support multiple concurrent renderers, we categorize
    // some renderers as primary and others as secondary. We only expect
    // there to be two concurrent renderers at most: React Native (primary) and
    // Fabric (secondary); React DOM (primary) and React ART (secondary).
    // Secondary renderers store their context values on separate fields.
    _currentValue: defaultValue,
    _currentValue2: defaultValue,
    // Used to track how many concurrent renderers this context currently
    // supports within in a single renderer. Such as parallel server rendering.
    _threadCount: 0,
    // These are circular
    Provider: null,
    Consumer: null
  };
  context.Provider = {
    $$typeof: REACT_PROVIDER_TYPE,
    _context: context
  };
  var hasWarnedAboutUsingNestedContextConsumers = false;
  var hasWarnedAboutUsingConsumerProvider = false;
  var hasWarnedAboutDisplayNameOnConsumer = false;

  {
    // A separate object, but proxies back to the original context object for
    // backwards compatibility. It has a different $$typeof, so we can properly
    // warn for the incorrect usage of Context as a Consumer.
    var Consumer = {
      $$typeof: REACT_CONTEXT_TYPE,
      _context: context,
      _calculateChangedBits: context._calculateChangedBits
    }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here

    Object.defineProperties(Consumer, {
      Provider: {
        get: function () {
          if (!hasWarnedAboutUsingConsumerProvider) {
            hasWarnedAboutUsingConsumerProvider = true;

            error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');
          }

          return context.Provider;
        },
        set: function (_Provider) {
          context.Provider = _Provider;
        }
      },
      _currentValue: {
        get: function () {
          return context._currentValue;
        },
        set: function (_currentValue) {
          context._currentValue = _currentValue;
        }
      },
      _currentValue2: {
        get: function () {
          return context._currentValue2;
        },
        set: function (_currentValue2) {
          context._currentValue2 = _currentValue2;
        }
      },
      _threadCount: {
        get: function () {
          return context._threadCount;
        },
        set: function (_threadCount) {
          context._threadCount = _threadCount;
        }
      },
      Consumer: {
        get: function () {
          if (!hasWarnedAboutUsingNestedContextConsumers) {
            hasWarnedAboutUsingNestedContextConsumers = true;

            error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
          }

          return context.Consumer;
        }
      },
      displayName: {
        get: function () {
          return context.displayName;
        },
        set: function (displayName) {
          if (!hasWarnedAboutDisplayNameOnConsumer) {
            warn('Setting `displayName` on Context.Consumer has no effect. ' + "You should set it directly on the context with Context.displayName = '%s'.", displayName);

            hasWarnedAboutDisplayNameOnConsumer = true;
          }
        }
      }
    }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty

    context.Consumer = Consumer;
  }

  {
    context._currentRenderer = null;
    context._currentRenderer2 = null;
  }

  return context;
}

var Uninitialized = -1;
var Pending = 0;
var Resolved = 1;
var Rejected = 2;

function lazyInitializer(payload) {
  if (payload._status === Uninitialized) {
    var ctor = payload._result;
    var thenable = ctor(); // Transition to the next state.

    var pending = payload;
    pending._status = Pending;
    pending._result = thenable;
    thenable.then(function (moduleObject) {
      if (payload._status === Pending) {
        var defaultExport = moduleObject.default;

        {
          if (defaultExport === undefined) {
            error('lazy: Expected the result of a dynamic import() call. ' + 'Instead received: %s\n\nYour code should look like: \n  ' + // Break up imports to avoid accidentally parsing them as dependencies.
            'const MyComponent = lazy(() => imp' + "ort('./MyComponent'))", moduleObject);
          }
        } // Transition to the next state.


        var resolved = payload;
        resolved._status = Resolved;
        resolved._result = defaultExport;
      }
    }, function (error) {
      if (payload._status === Pending) {
        // Transition to the next state.
        var rejected = payload;
        rejected._status = Rejected;
        rejected._result = error;
      }
    });
  }

  if (payload._status === Resolved) {
    return payload._result;
  } else {
    throw payload._result;
  }
}

function lazy(ctor) {
  var payload = {
    // We use these fields to store the result.
    _status: -1,
    _result: ctor
  };
  var lazyType = {
    $$typeof: REACT_LAZY_TYPE,
    _payload: payload,
    _init: lazyInitializer
  };

  {
    // In production, this would just set it on the object.
    var defaultProps;
    var propTypes; // $FlowFixMe

    Object.defineProperties(lazyType, {
      defaultProps: {
        configurable: true,
        get: function () {
          return defaultProps;
        },
        set: function (newDefaultProps) {
          error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');

          defaultProps = newDefaultProps; // Match production behavior more closely:
          // $FlowFixMe

          Object.defineProperty(lazyType, 'defaultProps', {
            enumerable: true
          });
        }
      },
      propTypes: {
        configurable: true,
        get: function () {
          return propTypes;
        },
        set: function (newPropTypes) {
          error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');

          propTypes = newPropTypes; // Match production behavior more closely:
          // $FlowFixMe

          Object.defineProperty(lazyType, 'propTypes', {
            enumerable: true
          });
        }
      }
    });
  }

  return lazyType;
}

function forwardRef(render) {
  {
    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {
      error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');
    } else if (typeof render !== 'function') {
      error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);
    } else {
      if (render.length !== 0 && render.length !== 2) {
        error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');
      }
    }

    if (render != null) {
      if (render.defaultProps != null || render.propTypes != null) {
        error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');
      }
    }
  }

  var elementType = {
    $$typeof: REACT_FORWARD_REF_TYPE,
    render: render
  };

  {
    var ownName;
    Object.defineProperty(elementType, 'displayName', {
      enumerable: false,
      configurable: true,
      get: function () {
        return ownName;
      },
      set: function (name) {
        ownName = name;

        if (render.displayName == null) {
          render.displayName = name;
        }
      }
    });
  }

  return elementType;
}

// Filter certain DOM attributes (e.g. src, href) if their values are empty strings.

var enableScopeAPI = false; // Experimental Create Event Handle API.

function isValidElementType(type) {
  if (typeof type === 'string' || typeof type === 'function') {
    return true;
  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).


  if (type === exports.Fragment || type === exports.Profiler || type === REACT_DEBUG_TRACING_MODE_TYPE || type === exports.StrictMode || type === exports.Suspense || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI ) {
    return true;
  }

  if (typeof type === 'object' && type !== null) {
    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {
      return true;
    }
  }

  return false;
}

function memo(type, compare) {
  {
    if (!isValidElementType(type)) {
      error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);
    }
  }

  var elementType = {
    $$typeof: REACT_MEMO_TYPE,
    type: type,
    compare: compare === undefined ? null : compare
  };

  {
    var ownName;
    Object.defineProperty(elementType, 'displayName', {
      enumerable: false,
      configurable: true,
      get: function () {
        return ownName;
      },
      set: function (name) {
        ownName = name;

        if (type.displayName == null) {
          type.displayName = name;
        }
      }
    });
  }

  return elementType;
}

function resolveDispatcher() {
  var dispatcher = ReactCurrentDispatcher.current;

  if (!(dispatcher !== null)) {
    {
      throw Error( "Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem." );
    }
  }

  return dispatcher;
}

function useContext(Context, unstable_observedBits) {
  var dispatcher = resolveDispatcher();

  {
    if (unstable_observedBits !== undefined) {
      error('useContext() second argument is reserved for future ' + 'use in React. Passing it is not supported. ' + 'You passed: %s.%s', unstable_observedBits, typeof unstable_observedBits === 'number' && Array.isArray(arguments[2]) ? '\n\nDid you call array.map(useContext)? ' + 'Calling Hooks inside a loop is not supported. ' + 'Learn more at https://reactjs.org/link/rules-of-hooks' : '');
    } // TODO: add a more generic warning for invalid values.


    if (Context._context !== undefined) {
      var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs
      // and nobody should be using this in existing code.

      if (realContext.Consumer === Context) {
        error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');
      } else if (realContext.Provider === Context) {
        error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');
      }
    }
  }

  return dispatcher.useContext(Context, unstable_observedBits);
}
function useState(initialState) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useState(initialState);
}
function useReducer(reducer, initialArg, init) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useReducer(reducer, initialArg, init);
}
function useRef(initialValue) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useRef(initialValue);
}
function useEffect(create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useEffect(create, deps);
}
function useLayoutEffect(create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useLayoutEffect(create, deps);
}
function useCallback(callback, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useCallback(callback, deps);
}
function useMemo(create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useMemo(create, deps);
}
function useImperativeHandle(ref, create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useImperativeHandle(ref, create, deps);
}
function useDebugValue(value, formatterFn) {
  {
    var dispatcher = resolveDispatcher();
    return dispatcher.useDebugValue(value, formatterFn);
  }
}

// Helpers to patch console.logs to avoid logging during side-effect free
// replaying on render function. This currently only patches the object
// lazily which won't cover if the log function was extracted eagerly.
// We could also eagerly patch the method.
var disabledDepth = 0;
var prevLog;
var prevInfo;
var prevWarn;
var prevError;
var prevGroup;
var prevGroupCollapsed;
var prevGroupEnd;

function disabledLog() {}

disabledLog.__reactDisabledLog = true;
function disableLogs() {
  {
    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      prevLog = console.log;
      prevInfo = console.info;
      prevWarn = console.warn;
      prevError = console.error;
      prevGroup = console.group;
      prevGroupCollapsed = console.groupCollapsed;
      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099

      var props = {
        configurable: true,
        enumerable: true,
        value: disabledLog,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        info: props,
        log: props,
        warn: props,
        error: props,
        group: props,
        groupCollapsed: props,
        groupEnd: props
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    disabledDepth++;
  }
}
function reenableLogs() {
  {
    disabledDepth--;

    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      var props = {
        configurable: true,
        enumerable: true,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        log: _assign({}, props, {
          value: prevLog
        }),
        info: _assign({}, props, {
          value: prevInfo
        }),
        warn: _assign({}, props, {
          value: prevWarn
        }),
        error: _assign({}, props, {
          value: prevError
        }),
        group: _assign({}, props, {
          value: prevGroup
        }),
        groupCollapsed: _assign({}, props, {
          value: prevGroupCollapsed
        }),
        groupEnd: _assign({}, props, {
          value: prevGroupEnd
        })
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    if (disabledDepth < 0) {
      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');
    }
  }
}

var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
var prefix;
function describeBuiltInComponentFrame(name, source, ownerFn) {
  {
    if (prefix === undefined) {
      // Extract the VM specific prefix used by each line.
      try {
        throw Error();
      } catch (x) {
        var match = x.stack.trim().match(/\n( *(at )?)/);
        prefix = match && match[1] || '';
      }
    } // We use the prefix to ensure our stacks line up with native stack frames.


    return '\n' + prefix + name;
  }
}
var reentry = false;
var componentFrameCache;

{
  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
  componentFrameCache = new PossiblyWeakMap();
}

function describeNativeComponentFrame(fn, construct) {
  // If something asked for a stack inside a fake render, it should get ignored.
  if (!fn || reentry) {
    return '';
  }

  {
    var frame = componentFrameCache.get(fn);

    if (frame !== undefined) {
      return frame;
    }
  }

  var control;
  reentry = true;
  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.

  Error.prepareStackTrace = undefined;
  var previousDispatcher;

  {
    previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function
    // for warnings.

    ReactCurrentDispatcher$1.current = null;
    disableLogs();
  }

  try {
    // This should throw.
    if (construct) {
      // Something should be setting the props in the constructor.
      var Fake = function () {
        throw Error();
      }; // $FlowFixMe


      Object.defineProperty(Fake.prototype, 'props', {
        set: function () {
          // We use a throwing setter instead of frozen or non-writable props
          // because that won't throw in a non-strict mode function.
          throw Error();
        }
      });

      if (typeof Reflect === 'object' && Reflect.construct) {
        // We construct a different control for this case to include any extra
        // frames added by the construct call.
        try {
          Reflect.construct(Fake, []);
        } catch (x) {
          control = x;
        }

        Reflect.construct(fn, [], Fake);
      } else {
        try {
          Fake.call();
        } catch (x) {
          control = x;
        }

        fn.call(Fake.prototype);
      }
    } else {
      try {
        throw Error();
      } catch (x) {
        control = x;
      }

      fn();
    }
  } catch (sample) {
    // This is inlined manually because closure doesn't do it for us.
    if (sample && control && typeof sample.stack === 'string') {
      // This extracts the first frame from the sample that isn't also in the control.
      // Skipping one frame that we assume is the frame that calls the two.
      var sampleLines = sample.stack.split('\n');
      var controlLines = control.stack.split('\n');
      var s = sampleLines.length - 1;
      var c = controlLines.length - 1;

      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
        // We expect at least one stack frame to be shared.
        // Typically this will be the root most one. However, stack frames may be
        // cut off due to maximum stack limits. In this case, one maybe cut off
        // earlier than the other. We assume that the sample is longer or the same
        // and there for cut off earlier. So we should find the root most frame in
        // the sample somewhere in the control.
        c--;
      }

      for (; s >= 1 && c >= 0; s--, c--) {
        // Next we find the first one that isn't the same which should be the
        // frame that called our sample function and the control.
        if (sampleLines[s] !== controlLines[c]) {
          // In V8, the first line is describing the message but other VMs don't.
          // If we're about to return the first line, and the control is also on the same
          // line, that's a pretty good indicator that our sample threw at same line as
          // the control. I.e. before we entered the sample frame. So we ignore this result.
          // This can happen if you passed a class to function component, or non-function.
          if (s !== 1 || c !== 1) {
            do {
              s--;
              c--; // We may still have similar intermediate frames from the construct call.
              // The next one that isn't the same should be our match though.

              if (c < 0 || sampleLines[s] !== controlLines[c]) {
                // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                var _frame = '\n' + sampleLines[s].replace(' at new ', ' at ');

                {
                  if (typeof fn === 'function') {
                    componentFrameCache.set(fn, _frame);
                  }
                } // Return the line we found.


                return _frame;
              }
            } while (s >= 1 && c >= 0);
          }

          break;
        }
      }
    }
  } finally {
    reentry = false;

    {
      ReactCurrentDispatcher$1.current = previousDispatcher;
      reenableLogs();
    }

    Error.prepareStackTrace = previousPrepareStackTrace;
  } // Fallback to just using the name if we couldn't make it throw.


  var name = fn ? fn.displayName || fn.name : '';
  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';

  {
    if (typeof fn === 'function') {
      componentFrameCache.set(fn, syntheticFrame);
    }
  }

  return syntheticFrame;
}
function describeFunctionComponentFrame(fn, source, ownerFn) {
  {
    return describeNativeComponentFrame(fn, false);
  }
}

function shouldConstruct(Component) {
  var prototype = Component.prototype;
  return !!(prototype && prototype.isReactComponent);
}

function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {

  if (type == null) {
    return '';
  }

  if (typeof type === 'function') {
    {
      return describeNativeComponentFrame(type, shouldConstruct(type));
    }
  }

  if (typeof type === 'string') {
    return describeBuiltInComponentFrame(type);
  }

  switch (type) {
    case exports.Suspense:
      return describeBuiltInComponentFrame('Suspense');

    case REACT_SUSPENSE_LIST_TYPE:
      return describeBuiltInComponentFrame('SuspenseList');
  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_FORWARD_REF_TYPE:
        return describeFunctionComponentFrame(type.render);

      case REACT_MEMO_TYPE:
        // Memo may contain any component type so we recursively resolve it.
        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);

      case REACT_BLOCK_TYPE:
        return describeFunctionComponentFrame(type._render);

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            // Lazy may contain any component type so we recursively resolve it.
            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
          } catch (x) {}
        }
    }
  }

  return '';
}

var loggedTypeFailures = {};
var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;

function setCurrentlyValidatingElement(element) {
  {
    if (element) {
      var owner = element._owner;
      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
    } else {
      ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
  }
}

function checkPropTypes(typeSpecs, values, location, componentName, element) {
  {
    // $FlowFixMe This is okay but Flow doesn't know it.
    var has = Function.call.bind(Object.prototype.hasOwnProperty);

    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.

        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
            err.name = 'Invariant Violation';
            throw err;
          }

          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
        } catch (ex) {
          error$1 = ex;
        }

        if (error$1 && !(error$1 instanceof Error)) {
          setCurrentlyValidatingElement(element);

          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);

          setCurrentlyValidatingElement(null);
        }

        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error$1.message] = true;
          setCurrentlyValidatingElement(element);

          error('Failed %s type: %s', location, error$1.message);

          setCurrentlyValidatingElement(null);
        }
      }
    }
  }
}

function setCurrentlyValidatingElement$1(element) {
  {
    if (element) {
      var owner = element._owner;
      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
      setExtraStackFrame(stack);
    } else {
      setExtraStackFrame(null);
    }
  }
}

var propTypesMisspellWarningShown;

{
  propTypesMisspellWarningShown = false;
}

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner.current) {
    var name = getComponentName(ReactCurrentOwner.current.type);

    if (name) {
      return '\n\nCheck the render method of `' + name + '`.';
    }
  }

  return '';
}

function getSourceInfoErrorAddendum(source) {
  if (source !== undefined) {
    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
    var lineNumber = source.lineNumber;
    return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
  }

  return '';
}

function getSourceInfoErrorAddendumForProps(elementProps) {
  if (elementProps !== null && elementProps !== undefined) {
    return getSourceInfoErrorAddendum(elementProps.__source);
  }

  return '';
}
/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */


var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  var info = getDeclarationErrorAddendum();

  if (!info) {
    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;

    if (parentName) {
      info = "\n\nCheck the top-level render call using <" + parentName + ">.";
    }
  }

  return info;
}
/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */


function validateExplicitKey(element, parentType) {
  if (!element._store || element._store.validated || element.key != null) {
    return;
  }

  element._store.validated = true;
  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);

  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
    return;
  }

  ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
  // property, it may be the creator of the child that's responsible for
  // assigning it a key.

  var childOwner = '';

  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
    // Give the component that originally created this child.
    childOwner = " It was passed a child from " + getComponentName(element._owner.type) + ".";
  }

  {
    setCurrentlyValidatingElement$1(element);

    error('Each child in a list should have a unique "key" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);

    setCurrentlyValidatingElement$1(null);
  }
}
/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */


function validateChildKeys(node, parentType) {
  if (typeof node !== 'object') {
    return;
  }

  if (Array.isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];

      if (isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (isValidElement(node)) {
    // This element was passed in a valid location.
    if (node._store) {
      node._store.validated = true;
    }
  } else if (node) {
    var iteratorFn = getIteratorFn(node);

    if (typeof iteratorFn === 'function') {
      // Entry iterators used to provide implicit keys,
      // but now we print a separate warning for them later.
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step;

        while (!(step = iterator.next()).done) {
          if (isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    }
  }
}
/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */


function validatePropTypes(element) {
  {
    var type = element.type;

    if (type === null || type === undefined || typeof type === 'string') {
      return;
    }

    var propTypes;

    if (typeof type === 'function') {
      propTypes = type.propTypes;
    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
    // Inner props are checked in the reconciler.
    type.$$typeof === REACT_MEMO_TYPE)) {
      propTypes = type.propTypes;
    } else {
      return;
    }

    if (propTypes) {
      // Intentionally inside to avoid triggering lazy initializers:
      var name = getComponentName(type);
      checkPropTypes(propTypes, element.props, 'prop', name, element);
    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:

      var _name = getComponentName(type);

      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');
    }

    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {
      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');
    }
  }
}
/**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */


function validateFragmentProps(fragment) {
  {
    var keys = Object.keys(fragment.props);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];

      if (key !== 'children' && key !== 'key') {
        setCurrentlyValidatingElement$1(fragment);

        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);

        setCurrentlyValidatingElement$1(null);
        break;
      }
    }

    if (fragment.ref !== null) {
      setCurrentlyValidatingElement$1(fragment);

      error('Invalid attribute `ref` supplied to `React.Fragment`.');

      setCurrentlyValidatingElement$1(null);
    }
  }
}
function createElementWithValidation(type, props, children) {
  var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
  // succeed and there will likely be errors in render.

  if (!validType) {
    var info = '';

    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
      info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
    }

    var sourceInfo = getSourceInfoErrorAddendumForProps(props);

    if (sourceInfo) {
      info += sourceInfo;
    } else {
      info += getDeclarationErrorAddendum();
    }

    var typeString;

    if (type === null) {
      typeString = 'null';
    } else if (Array.isArray(type)) {
      typeString = 'array';
    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
      typeString = "<" + (getComponentName(type.type) || 'Unknown') + " />";
      info = ' Did you accidentally export a JSX literal instead of a component?';
    } else {
      typeString = typeof type;
    }

    {
      error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
    }
  }

  var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.
  // TODO: Drop this when these are no longer allowed as the type argument.

  if (element == null) {
    return element;
  } // Skip key warning if the type isn't valid since our key validation logic
  // doesn't expect a non-string/function type and can throw confusing errors.
  // We don't want exception behavior to differ between dev and prod.
  // (Rendering will throw with a helpful message and as soon as the type is
  // fixed, the key warnings will appear.)


  if (validType) {
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], type);
    }
  }

  if (type === exports.Fragment) {
    validateFragmentProps(element);
  } else {
    validatePropTypes(element);
  }

  return element;
}
var didWarnAboutDeprecatedCreateFactory = false;
function createFactoryWithValidation(type) {
  var validatedFactory = createElementWithValidation.bind(null, type);
  validatedFactory.type = type;

  {
    if (!didWarnAboutDeprecatedCreateFactory) {
      didWarnAboutDeprecatedCreateFactory = true;

      warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');
    } // Legacy hook: remove it


    Object.defineProperty(validatedFactory, 'type', {
      enumerable: false,
      get: function () {
        warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');

        Object.defineProperty(this, 'type', {
          value: type
        });
        return type;
      }
    });
  }

  return validatedFactory;
}
function cloneElementWithValidation(element, props, children) {
  var newElement = cloneElement.apply(this, arguments);

  for (var i = 2; i < arguments.length; i++) {
    validateChildKeys(arguments[i], newElement.type);
  }

  validatePropTypes(newElement);
  return newElement;
}

{

  try {
    var frozenObject = Object.freeze({});
    /* eslint-disable no-new */

    new Map([[frozenObject, null]]);
    new Set([frozenObject]);
    /* eslint-enable no-new */
  } catch (e) {
  }
}

var createElement$1 =  createElementWithValidation ;
var cloneElement$1 =  cloneElementWithValidation ;
var createFactory =  createFactoryWithValidation ;
var Children = {
  map: mapChildren,
  forEach: forEachChildren,
  count: countChildren,
  toArray: toArray,
  only: onlyChild
};

exports.Children = Children;
exports.Component = Component;
exports.PureComponent = PureComponent;
exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;
exports.cloneElement = cloneElement$1;
exports.createContext = createContext;
exports.createElement = createElement$1;
exports.createFactory = createFactory;
exports.createRef = createRef;
exports.forwardRef = forwardRef;
exports.isValidElement = isValidElement;
exports.lazy = lazy;
exports.memo = memo;
exports.useCallback = useCallback;
exports.useContext = useContext;
exports.useDebugValue = useDebugValue;
exports.useEffect = useEffect;
exports.useImperativeHandle = useImperativeHandle;
exports.useLayoutEffect = useLayoutEffect;
exports.useMemo = useMemo;
exports.useReducer = useReducer;
exports.useRef = useRef;
exports.useState = useState;
exports.version = ReactVersion;
  })();
}


/***/ }),
/* 11 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** @license React v17.0.2
 * react-jsx-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



if (process.env.NODE_ENV !== "production") {
  (function() {
'use strict';

var React = __webpack_require__(8);
var _assign = __webpack_require__(7);

// ATTENTION
// When adding new symbols to this file,
// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var REACT_ELEMENT_TYPE = 0xeac7;
var REACT_PORTAL_TYPE = 0xeaca;
exports.Fragment = 0xeacb;
var REACT_STRICT_MODE_TYPE = 0xeacc;
var REACT_PROFILER_TYPE = 0xead2;
var REACT_PROVIDER_TYPE = 0xeacd;
var REACT_CONTEXT_TYPE = 0xeace;
var REACT_FORWARD_REF_TYPE = 0xead0;
var REACT_SUSPENSE_TYPE = 0xead1;
var REACT_SUSPENSE_LIST_TYPE = 0xead8;
var REACT_MEMO_TYPE = 0xead3;
var REACT_LAZY_TYPE = 0xead4;
var REACT_BLOCK_TYPE = 0xead9;
var REACT_SERVER_BLOCK_TYPE = 0xeada;
var REACT_FUNDAMENTAL_TYPE = 0xead5;
var REACT_SCOPE_TYPE = 0xead7;
var REACT_OPAQUE_ID_TYPE = 0xeae0;
var REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;
var REACT_OFFSCREEN_TYPE = 0xeae2;
var REACT_LEGACY_HIDDEN_TYPE = 0xeae3;

if (typeof Symbol === 'function' && Symbol.for) {
  var symbolFor = Symbol.for;
  REACT_ELEMENT_TYPE = symbolFor('react.element');
  REACT_PORTAL_TYPE = symbolFor('react.portal');
  exports.Fragment = symbolFor('react.fragment');
  REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');
  REACT_PROFILER_TYPE = symbolFor('react.profiler');
  REACT_PROVIDER_TYPE = symbolFor('react.provider');
  REACT_CONTEXT_TYPE = symbolFor('react.context');
  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');
  REACT_SUSPENSE_TYPE = symbolFor('react.suspense');
  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');
  REACT_MEMO_TYPE = symbolFor('react.memo');
  REACT_LAZY_TYPE = symbolFor('react.lazy');
  REACT_BLOCK_TYPE = symbolFor('react.block');
  REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');
  REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');
  REACT_SCOPE_TYPE = symbolFor('react.scope');
  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');
  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');
  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');
  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');
}

var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';
function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable !== 'object') {
    return null;
  }

  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];

  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }

  return null;
}

var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

function error(format) {
  {
    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      args[_key2 - 1] = arguments[_key2];
    }

    printWarning('error', format, args);
  }
}

function printWarning(level, format, args) {
  // When changing this logic, you might want to also
  // update consoleWithStackDev.www.js as well.
  {
    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    var stack = ReactDebugCurrentFrame.getStackAddendum();

    if (stack !== '') {
      format += '%s';
      args = args.concat([stack]);
    }

    var argsWithFormat = args.map(function (item) {
      return '' + item;
    }); // Careful: RN currently depends on this prefix

    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
    // breaks IE9: https://github.com/facebook/react/issues/13610
    // eslint-disable-next-line react-internal/no-production-logging

    Function.prototype.apply.call(console[level], console, argsWithFormat);
  }
}

// Filter certain DOM attributes (e.g. src, href) if their values are empty strings.

var enableScopeAPI = false; // Experimental Create Event Handle API.

function isValidElementType(type) {
  if (typeof type === 'string' || typeof type === 'function') {
    return true;
  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).


  if (type === exports.Fragment || type === REACT_PROFILER_TYPE || type === REACT_DEBUG_TRACING_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI ) {
    return true;
  }

  if (typeof type === 'object' && type !== null) {
    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {
      return true;
    }
  }

  return false;
}

function getWrappedName(outerType, innerType, wrapperName) {
  var functionName = innerType.displayName || innerType.name || '';
  return outerType.displayName || (functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName);
}

function getContextName(type) {
  return type.displayName || 'Context';
}

function getComponentName(type) {
  if (type == null) {
    // Host root, text node or just invalid type.
    return null;
  }

  {
    if (typeof type.tag === 'number') {
      error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');
    }
  }

  if (typeof type === 'function') {
    return type.displayName || type.name || null;
  }

  if (typeof type === 'string') {
    return type;
  }

  switch (type) {
    case exports.Fragment:
      return 'Fragment';

    case REACT_PORTAL_TYPE:
      return 'Portal';

    case REACT_PROFILER_TYPE:
      return 'Profiler';

    case REACT_STRICT_MODE_TYPE:
      return 'StrictMode';

    case REACT_SUSPENSE_TYPE:
      return 'Suspense';

    case REACT_SUSPENSE_LIST_TYPE:
      return 'SuspenseList';
  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        var context = type;
        return getContextName(context) + '.Consumer';

      case REACT_PROVIDER_TYPE:
        var provider = type;
        return getContextName(provider._context) + '.Provider';

      case REACT_FORWARD_REF_TYPE:
        return getWrappedName(type, type.render, 'ForwardRef');

      case REACT_MEMO_TYPE:
        return getComponentName(type.type);

      case REACT_BLOCK_TYPE:
        return getComponentName(type._render);

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            return getComponentName(init(payload));
          } catch (x) {
            return null;
          }
        }
    }
  }

  return null;
}

// Helpers to patch console.logs to avoid logging during side-effect free
// replaying on render function. This currently only patches the object
// lazily which won't cover if the log function was extracted eagerly.
// We could also eagerly patch the method.
var disabledDepth = 0;
var prevLog;
var prevInfo;
var prevWarn;
var prevError;
var prevGroup;
var prevGroupCollapsed;
var prevGroupEnd;

function disabledLog() {}

disabledLog.__reactDisabledLog = true;
function disableLogs() {
  {
    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      prevLog = console.log;
      prevInfo = console.info;
      prevWarn = console.warn;
      prevError = console.error;
      prevGroup = console.group;
      prevGroupCollapsed = console.groupCollapsed;
      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099

      var props = {
        configurable: true,
        enumerable: true,
        value: disabledLog,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        info: props,
        log: props,
        warn: props,
        error: props,
        group: props,
        groupCollapsed: props,
        groupEnd: props
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    disabledDepth++;
  }
}
function reenableLogs() {
  {
    disabledDepth--;

    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      var props = {
        configurable: true,
        enumerable: true,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        log: _assign({}, props, {
          value: prevLog
        }),
        info: _assign({}, props, {
          value: prevInfo
        }),
        warn: _assign({}, props, {
          value: prevWarn
        }),
        error: _assign({}, props, {
          value: prevError
        }),
        group: _assign({}, props, {
          value: prevGroup
        }),
        groupCollapsed: _assign({}, props, {
          value: prevGroupCollapsed
        }),
        groupEnd: _assign({}, props, {
          value: prevGroupEnd
        })
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    if (disabledDepth < 0) {
      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');
    }
  }
}

var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
var prefix;
function describeBuiltInComponentFrame(name, source, ownerFn) {
  {
    if (prefix === undefined) {
      // Extract the VM specific prefix used by each line.
      try {
        throw Error();
      } catch (x) {
        var match = x.stack.trim().match(/\n( *(at )?)/);
        prefix = match && match[1] || '';
      }
    } // We use the prefix to ensure our stacks line up with native stack frames.


    return '\n' + prefix + name;
  }
}
var reentry = false;
var componentFrameCache;

{
  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
  componentFrameCache = new PossiblyWeakMap();
}

function describeNativeComponentFrame(fn, construct) {
  // If something asked for a stack inside a fake render, it should get ignored.
  if (!fn || reentry) {
    return '';
  }

  {
    var frame = componentFrameCache.get(fn);

    if (frame !== undefined) {
      return frame;
    }
  }

  var control;
  reentry = true;
  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.

  Error.prepareStackTrace = undefined;
  var previousDispatcher;

  {
    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function
    // for warnings.

    ReactCurrentDispatcher.current = null;
    disableLogs();
  }

  try {
    // This should throw.
    if (construct) {
      // Something should be setting the props in the constructor.
      var Fake = function () {
        throw Error();
      }; // $FlowFixMe


      Object.defineProperty(Fake.prototype, 'props', {
        set: function () {
          // We use a throwing setter instead of frozen or non-writable props
          // because that won't throw in a non-strict mode function.
          throw Error();
        }
      });

      if (typeof Reflect === 'object' && Reflect.construct) {
        // We construct a different control for this case to include any extra
        // frames added by the construct call.
        try {
          Reflect.construct(Fake, []);
        } catch (x) {
          control = x;
        }

        Reflect.construct(fn, [], Fake);
      } else {
        try {
          Fake.call();
        } catch (x) {
          control = x;
        }

        fn.call(Fake.prototype);
      }
    } else {
      try {
        throw Error();
      } catch (x) {
        control = x;
      }

      fn();
    }
  } catch (sample) {
    // This is inlined manually because closure doesn't do it for us.
    if (sample && control && typeof sample.stack === 'string') {
      // This extracts the first frame from the sample that isn't also in the control.
      // Skipping one frame that we assume is the frame that calls the two.
      var sampleLines = sample.stack.split('\n');
      var controlLines = control.stack.split('\n');
      var s = sampleLines.length - 1;
      var c = controlLines.length - 1;

      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
        // We expect at least one stack frame to be shared.
        // Typically this will be the root most one. However, stack frames may be
        // cut off due to maximum stack limits. In this case, one maybe cut off
        // earlier than the other. We assume that the sample is longer or the same
        // and there for cut off earlier. So we should find the root most frame in
        // the sample somewhere in the control.
        c--;
      }

      for (; s >= 1 && c >= 0; s--, c--) {
        // Next we find the first one that isn't the same which should be the
        // frame that called our sample function and the control.
        if (sampleLines[s] !== controlLines[c]) {
          // In V8, the first line is describing the message but other VMs don't.
          // If we're about to return the first line, and the control is also on the same
          // line, that's a pretty good indicator that our sample threw at same line as
          // the control. I.e. before we entered the sample frame. So we ignore this result.
          // This can happen if you passed a class to function component, or non-function.
          if (s !== 1 || c !== 1) {
            do {
              s--;
              c--; // We may still have similar intermediate frames from the construct call.
              // The next one that isn't the same should be our match though.

              if (c < 0 || sampleLines[s] !== controlLines[c]) {
                // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                var _frame = '\n' + sampleLines[s].replace(' at new ', ' at ');

                {
                  if (typeof fn === 'function') {
                    componentFrameCache.set(fn, _frame);
                  }
                } // Return the line we found.


                return _frame;
              }
            } while (s >= 1 && c >= 0);
          }

          break;
        }
      }
    }
  } finally {
    reentry = false;

    {
      ReactCurrentDispatcher.current = previousDispatcher;
      reenableLogs();
    }

    Error.prepareStackTrace = previousPrepareStackTrace;
  } // Fallback to just using the name if we couldn't make it throw.


  var name = fn ? fn.displayName || fn.name : '';
  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';

  {
    if (typeof fn === 'function') {
      componentFrameCache.set(fn, syntheticFrame);
    }
  }

  return syntheticFrame;
}
function describeFunctionComponentFrame(fn, source, ownerFn) {
  {
    return describeNativeComponentFrame(fn, false);
  }
}

function shouldConstruct(Component) {
  var prototype = Component.prototype;
  return !!(prototype && prototype.isReactComponent);
}

function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {

  if (type == null) {
    return '';
  }

  if (typeof type === 'function') {
    {
      return describeNativeComponentFrame(type, shouldConstruct(type));
    }
  }

  if (typeof type === 'string') {
    return describeBuiltInComponentFrame(type);
  }

  switch (type) {
    case REACT_SUSPENSE_TYPE:
      return describeBuiltInComponentFrame('Suspense');

    case REACT_SUSPENSE_LIST_TYPE:
      return describeBuiltInComponentFrame('SuspenseList');
  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_FORWARD_REF_TYPE:
        return describeFunctionComponentFrame(type.render);

      case REACT_MEMO_TYPE:
        // Memo may contain any component type so we recursively resolve it.
        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);

      case REACT_BLOCK_TYPE:
        return describeFunctionComponentFrame(type._render);

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            // Lazy may contain any component type so we recursively resolve it.
            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
          } catch (x) {}
        }
    }
  }

  return '';
}

var loggedTypeFailures = {};
var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;

function setCurrentlyValidatingElement(element) {
  {
    if (element) {
      var owner = element._owner;
      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
      ReactDebugCurrentFrame.setExtraStackFrame(stack);
    } else {
      ReactDebugCurrentFrame.setExtraStackFrame(null);
    }
  }
}

function checkPropTypes(typeSpecs, values, location, componentName, element) {
  {
    // $FlowFixMe This is okay but Flow doesn't know it.
    var has = Function.call.bind(Object.prototype.hasOwnProperty);

    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.

        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
            err.name = 'Invariant Violation';
            throw err;
          }

          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
        } catch (ex) {
          error$1 = ex;
        }

        if (error$1 && !(error$1 instanceof Error)) {
          setCurrentlyValidatingElement(element);

          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);

          setCurrentlyValidatingElement(null);
        }

        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error$1.message] = true;
          setCurrentlyValidatingElement(element);

          error('Failed %s type: %s', location, error$1.message);

          setCurrentlyValidatingElement(null);
        }
      }
    }
  }
}

var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};
var specialPropKeyWarningShown;
var specialPropRefWarningShown;
var didWarnAboutStringRefs;

{
  didWarnAboutStringRefs = {};
}

function hasValidRef(config) {
  {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;

      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }

  return config.ref !== undefined;
}

function hasValidKey(config) {
  {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;

      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }

  return config.key !== undefined;
}

function warnIfStringRefCannotBeAutoConverted(config, self) {
  {
    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {
      var componentName = getComponentName(ReactCurrentOwner.current.type);

      if (!didWarnAboutStringRefs[componentName]) {
        error('Component "%s" contains the string ref "%s". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentName(ReactCurrentOwner.current.type), config.ref);

        didWarnAboutStringRefs[componentName] = true;
      }
    }
  }
}

function defineKeyPropWarningGetter(props, displayName) {
  {
    var warnAboutAccessingKey = function () {
      if (!specialPropKeyWarningShown) {
        specialPropKeyWarningShown = true;

        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
      }
    };

    warnAboutAccessingKey.isReactWarning = true;
    Object.defineProperty(props, 'key', {
      get: warnAboutAccessingKey,
      configurable: true
    });
  }
}

function defineRefPropWarningGetter(props, displayName) {
  {
    var warnAboutAccessingRef = function () {
      if (!specialPropRefWarningShown) {
        specialPropRefWarningShown = true;

        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
      }
    };

    warnAboutAccessingRef.isReactWarning = true;
    Object.defineProperty(props, 'ref', {
      get: warnAboutAccessingRef,
      configurable: true
    });
  }
}
/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, instanceof check
 * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} props
 * @param {*} key
 * @param {string|object} ref
 * @param {*} owner
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @internal
 */


var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allows us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,
    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,
    // Record the component responsible for creating this element.
    _owner: owner
  };

  {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.

    Object.defineProperty(element._store, 'validated', {
      configurable: false,
      enumerable: false,
      writable: true,
      value: false
    }); // self and source are DEV only properties.

    Object.defineProperty(element, '_self', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: self
    }); // Two elements created in two different places should be considered
    // equal for testing purposes and therefore we hide it from enumeration.

    Object.defineProperty(element, '_source', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: source
    });

    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};
/**
 * https://github.com/reactjs/rfcs/pull/107
 * @param {*} type
 * @param {object} props
 * @param {string} key
 */

function jsxDEV(type, config, maybeKey, source, self) {
  {
    var propName; // Reserved names are extracted

    var props = {};
    var key = null;
    var ref = null; // Currently, key can be spread in as a prop. This causes a potential
    // issue if key is also explicitly declared (ie. <div {...props} key="Hi" />
    // or <div key="Hi" {...props} /> ). We want to deprecate key spread,
    // but as an intermediary step, we will use jsxDEV for everything except
    // <div {...props} key="Hi" />, because we aren't currently able to tell if
    // key is explicitly declared to be undefined or not.

    if (maybeKey !== undefined) {
      key = '' + maybeKey;
    }

    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    if (hasValidRef(config)) {
      ref = config.ref;
      warnIfStringRefCannotBeAutoConverted(config, self);
    } // Remaining properties are added to a new props object


    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    } // Resolve default props


    if (type && type.defaultProps) {
      var defaultProps = type.defaultProps;

      for (propName in defaultProps) {
        if (props[propName] === undefined) {
          props[propName] = defaultProps[propName];
        }
      }
    }

    if (key || ref) {
      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;

      if (key) {
        defineKeyPropWarningGetter(props, displayName);
      }

      if (ref) {
        defineRefPropWarningGetter(props, displayName);
      }
    }

    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
  }
}

var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;

function setCurrentlyValidatingElement$1(element) {
  {
    if (element) {
      var owner = element._owner;
      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
    } else {
      ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
  }
}

var propTypesMisspellWarningShown;

{
  propTypesMisspellWarningShown = false;
}
/**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a ReactElement.
 * @final
 */

function isValidElement(object) {
  {
    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
  }
}

function getDeclarationErrorAddendum() {
  {
    if (ReactCurrentOwner$1.current) {
      var name = getComponentName(ReactCurrentOwner$1.current.type);

      if (name) {
        return '\n\nCheck the render method of `' + name + '`.';
      }
    }

    return '';
  }
}

function getSourceInfoErrorAddendum(source) {
  {
    if (source !== undefined) {
      var fileName = source.fileName.replace(/^.*[\\\/]/, '');
      var lineNumber = source.lineNumber;
      return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
    }

    return '';
  }
}
/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */


var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  {
    var info = getDeclarationErrorAddendum();

    if (!info) {
      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;

      if (parentName) {
        info = "\n\nCheck the top-level render call using <" + parentName + ">.";
      }
    }

    return info;
  }
}
/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */


function validateExplicitKey(element, parentType) {
  {
    if (!element._store || element._store.validated || element.key != null) {
      return;
    }

    element._store.validated = true;
    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);

    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
      return;
    }

    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
    // property, it may be the creator of the child that's responsible for
    // assigning it a key.

    var childOwner = '';

    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {
      // Give the component that originally created this child.
      childOwner = " It was passed a child from " + getComponentName(element._owner.type) + ".";
    }

    setCurrentlyValidatingElement$1(element);

    error('Each child in a list should have a unique "key" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);

    setCurrentlyValidatingElement$1(null);
  }
}
/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */


function validateChildKeys(node, parentType) {
  {
    if (typeof node !== 'object') {
      return;
    }

    if (Array.isArray(node)) {
      for (var i = 0; i < node.length; i++) {
        var child = node[i];

        if (isValidElement(child)) {
          validateExplicitKey(child, parentType);
        }
      }
    } else if (isValidElement(node)) {
      // This element was passed in a valid location.
      if (node._store) {
        node._store.validated = true;
      }
    } else if (node) {
      var iteratorFn = getIteratorFn(node);

      if (typeof iteratorFn === 'function') {
        // Entry iterators used to provide implicit keys,
        // but now we print a separate warning for them later.
        if (iteratorFn !== node.entries) {
          var iterator = iteratorFn.call(node);
          var step;

          while (!(step = iterator.next()).done) {
            if (isValidElement(step.value)) {
              validateExplicitKey(step.value, parentType);
            }
          }
        }
      }
    }
  }
}
/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */


function validatePropTypes(element) {
  {
    var type = element.type;

    if (type === null || type === undefined || typeof type === 'string') {
      return;
    }

    var propTypes;

    if (typeof type === 'function') {
      propTypes = type.propTypes;
    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
    // Inner props are checked in the reconciler.
    type.$$typeof === REACT_MEMO_TYPE)) {
      propTypes = type.propTypes;
    } else {
      return;
    }

    if (propTypes) {
      // Intentionally inside to avoid triggering lazy initializers:
      var name = getComponentName(type);
      checkPropTypes(propTypes, element.props, 'prop', name, element);
    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:

      var _name = getComponentName(type);

      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');
    }

    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {
      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');
    }
  }
}
/**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */


function validateFragmentProps(fragment) {
  {
    var keys = Object.keys(fragment.props);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];

      if (key !== 'children' && key !== 'key') {
        setCurrentlyValidatingElement$1(fragment);

        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);

        setCurrentlyValidatingElement$1(null);
        break;
      }
    }

    if (fragment.ref !== null) {
      setCurrentlyValidatingElement$1(fragment);

      error('Invalid attribute `ref` supplied to `React.Fragment`.');

      setCurrentlyValidatingElement$1(null);
    }
  }
}

function jsxWithValidation(type, props, key, isStaticChildren, source, self) {
  {
    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
    // succeed and there will likely be errors in render.

    if (!validType) {
      var info = '';

      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
        info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
      }

      var sourceInfo = getSourceInfoErrorAddendum(source);

      if (sourceInfo) {
        info += sourceInfo;
      } else {
        info += getDeclarationErrorAddendum();
      }

      var typeString;

      if (type === null) {
        typeString = 'null';
      } else if (Array.isArray(type)) {
        typeString = 'array';
      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
        typeString = "<" + (getComponentName(type.type) || 'Unknown') + " />";
        info = ' Did you accidentally export a JSX literal instead of a component?';
      } else {
        typeString = typeof type;
      }

      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
    }

    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.
    // TODO: Drop this when these are no longer allowed as the type argument.

    if (element == null) {
      return element;
    } // Skip key warning if the type isn't valid since our key validation logic
    // doesn't expect a non-string/function type and can throw confusing errors.
    // We don't want exception behavior to differ between dev and prod.
    // (Rendering will throw with a helpful message and as soon as the type is
    // fixed, the key warnings will appear.)


    if (validType) {
      var children = props.children;

      if (children !== undefined) {
        if (isStaticChildren) {
          if (Array.isArray(children)) {
            for (var i = 0; i < children.length; i++) {
              validateChildKeys(children[i], type);
            }

            if (Object.freeze) {
              Object.freeze(children);
            }
          } else {
            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');
          }
        } else {
          validateChildKeys(children, type);
        }
      }
    }

    if (type === exports.Fragment) {
      validateFragmentProps(element);
    } else {
      validatePropTypes(element);
    }

    return element;
  }
} // These two functions exist to still get child warnings in dev
// even with the prod transform. This means that jsxDEV is purely
// opt-in behavior for better messages but that we won't stop
// giving you warnings if you use production apis.

function jsxWithValidationStatic(type, props, key) {
  {
    return jsxWithValidation(type, props, key, true);
  }
}
function jsxWithValidationDynamic(type, props, key) {
  {
    return jsxWithValidation(type, props, key, false);
  }
}

var jsx =  jsxWithValidationDynamic ; // we may want to special case jsxs internally to take advantage of static children.
// for now we can ship identical prod functions

var jsxs =  jsxWithValidationStatic ;

exports.jsx = jsx;
exports.jsxs = jsxs;
  })();
}


/***/ }),
/* 12 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);
/* harmony import */ var _common_TopComponent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(13);
/* harmony import */ var _components_Loading__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(24);
/* harmony import */ var _components_OptInForm__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(39);
/* harmony import */ var _components_SetupScreen__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(45);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(865);
/* harmony import */ var _services_Factory__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(46);
/* harmony import */ var _utils_ReactHooks__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(282);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(8);









function DataScreen() {
    return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div", {}, void 0);
}
function ProtocolState() {
    const [pageOverride, setPageOverride] = (0,react__WEBPACK_IMPORTED_MODULE_7__.useState)(null);
    const serviceOptedIn = (0,_utils_ReactHooks__WEBPACK_IMPORTED_MODULE_6__.useLoadedState)(() => (0,_services_Factory__WEBPACK_IMPORTED_MODULE_5__.getProtocolOptIn)().isOptedIn());
    const completedLiveness = (0,_utils_ReactHooks__WEBPACK_IMPORTED_MODULE_6__.useLoadedState)(() => (0,_services_Factory__WEBPACK_IMPORTED_MODULE_5__.getProtocolOptIn)().hasCompletedLiveness());
    const optInWithMnemonic = async (mnemonic) => {
        mnemonic = mnemonic || (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_8__.mnemonicGenerate)();
        try {
            setPageOverride((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_SetupScreen__WEBPACK_IMPORTED_MODULE_4__.SetupInProgress, { onRetry: () => optInWithMnemonic(mnemonic) }, void 0));
            await (0,_services_Factory__WEBPACK_IMPORTED_MODULE_5__.getProtocolOptIn)().optIn(mnemonic);
            serviceOptedIn.reload();
            completedLiveness.reload();
            setPageOverride((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_SetupScreen__WEBPACK_IMPORTED_MODULE_4__.SetupSuccess, { mnemonic: mnemonic, onContinue: () => setPageOverride(null) }, void 0));
        }
        catch (e) {
            console.log(e);
            // handleError(e, () => optInWithMnemonic(mnemonic));
        }
    };
    if (pageOverride != null) {
        return pageOverride;
    }
    if (!serviceOptedIn.isLoaded)
        return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_Loading__WEBPACK_IMPORTED_MODULE_2__["default"], {}, void 0);
    if (!serviceOptedIn.value) {
        return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_OptInForm__WEBPACK_IMPORTED_MODULE_3__.OptInForm, { onOptIn: () => optInWithMnemonic() }, void 0);
    }
    return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DataScreen, {}, void 0);
}
function Protocol() {
    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_common_TopComponent__WEBPACK_IMPORTED_MODULE_1__["default"], { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ProtocolState, {}, void 0) }, void 0));
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Protocol);


/***/ }),
/* 13 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(14);


const Root = styled_components__WEBPACK_IMPORTED_MODULE_1__["default"].div `
  position: relative;

  ${(props) => styled_components__WEBPACK_IMPORTED_MODULE_1__.css `
    padding-top: ${props.paddingTop};
    padding-bottom: ${props.paddingBottom};
    padding-left: ${props.paddingLeft};
    padding-right: ${props.paddingRight};
  `}
`;
TopComponent.defaultProps = {
    paddingTop: "var(--s-24)",
    paddingBottom: "var(--s-24)",
    paddingLeft: "var(--s-24)",
    paddingRight: "var(--s-24)",
};
function TopComponent(props) {
    const { children, paddingTop, paddingBottom, paddingLeft, paddingRight } = props;
    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Root, { paddingTop: paddingTop, paddingBottom: paddingBottom, paddingLeft: paddingLeft, paddingRight: paddingRight, children: children }, void 0));
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TopComponent);


/***/ }),
/* 14 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "ServerStyleSheet": () => (/* binding */ Je),
/* harmony export */   "StyleSheetConsumer": () => (/* binding */ le),
/* harmony export */   "StyleSheetContext": () => (/* binding */ ue),
/* harmony export */   "StyleSheetManager": () => (/* binding */ ye),
/* harmony export */   "ThemeConsumer": () => (/* binding */ Le),
/* harmony export */   "ThemeContext": () => (/* binding */ Ge),
/* harmony export */   "ThemeProvider": () => (/* binding */ Fe),
/* harmony export */   "__PRIVATE__": () => (/* binding */ Ke),
/* harmony export */   "createGlobalStyle": () => (/* binding */ We),
/* harmony export */   "css": () => (/* binding */ Ce),
/* harmony export */   "isStyledComponent": () => (/* binding */ N),
/* harmony export */   "keyframes": () => (/* binding */ Ue),
/* harmony export */   "useTheme": () => (/* binding */ Ze),
/* harmony export */   "version": () => (/* binding */ C),
/* harmony export */   "withTheme": () => (/* binding */ Xe)
/* harmony export */ });
/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(15);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);
/* harmony import */ var shallowequal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(18);
/* harmony import */ var shallowequal__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(shallowequal__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _emotion_stylis__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(19);
/* harmony import */ var _emotion_unitless__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(20);
/* harmony import */ var _emotion_is_prop_valid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(21);
/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(23);
/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_6__);
function v(){return(v=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var g=function(e,t){for(var n=[e[0]],r=0,o=t.length;r<o;r+=1)n.push(t[r],e[r+1]);return n},S=function(t){return null!==t&&"object"==typeof t&&"[object Object]"===(t.toString?t.toString():Object.prototype.toString.call(t))&&!(0,react_is__WEBPACK_IMPORTED_MODULE_0__.typeOf)(t)},w=Object.freeze([]),E=Object.freeze({});function b(e){return"function"==typeof e}function _(e){return"production"!==process.env.NODE_ENV&&"string"==typeof e&&e||e.displayName||e.name||"Component"}function N(e){return e&&"string"==typeof e.styledComponentId}var A="undefined"!=typeof process&&(process.env.REACT_APP_SC_ATTR||process.env.SC_ATTR)||"data-styled",C="5.3.3",I="undefined"!=typeof window&&"HTMLElement"in window,P=Boolean("boolean"==typeof SC_DISABLE_SPEEDY?SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!==process.env.REACT_APP_SC_DISABLE_SPEEDY&&""!==process.env.REACT_APP_SC_DISABLE_SPEEDY?"false"!==process.env.REACT_APP_SC_DISABLE_SPEEDY&&process.env.REACT_APP_SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!==process.env.SC_DISABLE_SPEEDY&&""!==process.env.SC_DISABLE_SPEEDY?"false"!==process.env.SC_DISABLE_SPEEDY&&process.env.SC_DISABLE_SPEEDY:"production"!==process.env.NODE_ENV),O={},R="production"!==process.env.NODE_ENV?{1:"Cannot create styled-component for component: %s.\n\n",2:"Can't collect styles once you've consumed a `ServerStyleSheet`'s styles! `ServerStyleSheet` is a one off instance for each server-side render cycle.\n\n- Are you trying to reuse it across renders?\n- Are you accidentally calling collectStyles twice?\n\n",3:"Streaming SSR is only supported in a Node.js environment; Please do not try to call this method in the browser.\n\n",4:"The `StyleSheetManager` expects a valid target or sheet prop!\n\n- Does this error occur on the client and is your target falsy?\n- Does this error occur on the server and is the sheet falsy?\n\n",5:"The clone method cannot be used on the client!\n\n- Are you running in a client-like environment on the server?\n- Are you trying to run SSR on the client?\n\n",6:"Trying to insert a new style tag, but the given Node is unmounted!\n\n- Are you using a custom target that isn't mounted?\n- Does your document not have a valid head element?\n- Have you accidentally removed a style tag manually?\n\n",7:'ThemeProvider: Please return an object from your "theme" prop function, e.g.\n\n```js\ntheme={() => ({})}\n```\n\n',8:'ThemeProvider: Please make your "theme" prop an object.\n\n',9:"Missing document `<head>`\n\n",10:"Cannot find a StyleSheet instance. Usually this happens if there are multiple copies of styled-components loaded at once. Check out this issue for how to troubleshoot and fix the common cases where this situation can happen: https://github.com/styled-components/styled-components/issues/1941#issuecomment-417862021\n\n",11:"_This error was replaced with a dev-time warning, it will be deleted for v4 final._ [createGlobalStyle] received children which will not be rendered. Please use the component without passing children elements.\n\n",12:"It seems you are interpolating a keyframe declaration (%s) into an untagged string. This was supported in styled-components v3, but is not longer supported in v4 as keyframes are now injected on-demand. Please wrap your string in the css\\`\\` helper which ensures the styles are injected correctly. See https://www.styled-components.com/docs/api#css\n\n",13:"%s is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details.\n\n",14:'ThemeProvider: "theme" prop is required.\n\n',15:"A stylis plugin has been supplied that is not named. We need a name for each plugin to be able to prevent styling collisions between different stylis configurations within the same app. Before you pass your plugin to `<StyleSheetManager stylisPlugins={[]}>`, please make sure each plugin is uniquely-named, e.g.\n\n```js\nObject.defineProperty(importedPlugin, 'name', { value: 'some-unique-name' });\n```\n\n",16:"Reached the limit of how many styled components may be created at group %s.\nYou may only create up to 1,073,741,824 components. If you're creating components dynamically,\nas for instance in your render method then you may be running into this limitation.\n\n",17:"CSSStyleSheet could not be found on HTMLStyleElement.\nHas styled-components' style tag been unmounted or altered by another script?\n"}:{};function D(){for(var e=arguments.length<=0?void 0:arguments[0],t=[],n=1,r=arguments.length;n<r;n+=1)t.push(n<0||arguments.length<=n?void 0:arguments[n]);return t.forEach((function(t){e=e.replace(/%[a-z]/,t)})),e}function j(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];throw"production"===process.env.NODE_ENV?new Error("An error occurred. See https://git.io/JUIaE#"+e+" for more information."+(n.length>0?" Args: "+n.join(", "):"")):new Error(D.apply(void 0,[R[e]].concat(n)).trim())}var T=function(){function e(e){this.groupSizes=new Uint32Array(512),this.length=512,this.tag=e}var t=e.prototype;return t.indexOfGroup=function(e){for(var t=0,n=0;n<e;n++)t+=this.groupSizes[n];return t},t.insertRules=function(e,t){if(e>=this.groupSizes.length){for(var n=this.groupSizes,r=n.length,o=r;e>=o;)(o<<=1)<0&&j(16,""+e);this.groupSizes=new Uint32Array(o),this.groupSizes.set(n),this.length=o;for(var s=r;s<o;s++)this.groupSizes[s]=0}for(var i=this.indexOfGroup(e+1),a=0,c=t.length;a<c;a++)this.tag.insertRule(i,t[a])&&(this.groupSizes[e]++,i++)},t.clearGroup=function(e){if(e<this.length){var t=this.groupSizes[e],n=this.indexOfGroup(e),r=n+t;this.groupSizes[e]=0;for(var o=n;o<r;o++)this.tag.deleteRule(n)}},t.getGroup=function(e){var t="";if(e>=this.length||0===this.groupSizes[e])return t;for(var n=this.groupSizes[e],r=this.indexOfGroup(e),o=r+n,s=r;s<o;s++)t+=this.tag.getRule(s)+"/*!sc*/\n";return t},e}(),x=new Map,k=new Map,V=1,B=function(e){if(x.has(e))return x.get(e);for(;k.has(V);)V++;var t=V++;return"production"!==process.env.NODE_ENV&&((0|t)<0||t>1<<30)&&j(16,""+t),x.set(e,t),k.set(t,e),t},z=function(e){return k.get(e)},M=function(e,t){t>=V&&(V=t+1),x.set(e,t),k.set(t,e)},G="style["+A+'][data-styled-version="5.3.3"]',L=new RegExp("^"+A+'\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)'),F=function(e,t,n){for(var r,o=n.split(","),s=0,i=o.length;s<i;s++)(r=o[s])&&e.registerName(t,r)},Y=function(e,t){for(var n=(t.textContent||"").split("/*!sc*/\n"),r=[],o=0,s=n.length;o<s;o++){var i=n[o].trim();if(i){var a=i.match(L);if(a){var c=0|parseInt(a[1],10),u=a[2];0!==c&&(M(u,c),F(e,u,a[3]),e.getTag().insertRules(c,r)),r.length=0}else r.push(i)}}},q=function(){return"undefined"!=typeof window&&void 0!==window.__webpack_nonce__?window.__webpack_nonce__:null},H=function(e){var t=document.head,n=e||t,r=document.createElement("style"),o=function(e){for(var t=e.childNodes,n=t.length;n>=0;n--){var r=t[n];if(r&&1===r.nodeType&&r.hasAttribute(A))return r}}(n),s=void 0!==o?o.nextSibling:null;r.setAttribute(A,"active"),r.setAttribute("data-styled-version","5.3.3");var i=q();return i&&r.setAttribute("nonce",i),n.insertBefore(r,s),r},$=function(){function e(e){var t=this.element=H(e);t.appendChild(document.createTextNode("")),this.sheet=function(e){if(e.sheet)return e.sheet;for(var t=document.styleSheets,n=0,r=t.length;n<r;n++){var o=t[n];if(o.ownerNode===e)return o}j(17)}(t),this.length=0}var t=e.prototype;return t.insertRule=function(e,t){try{return this.sheet.insertRule(t,e),this.length++,!0}catch(e){return!1}},t.deleteRule=function(e){this.sheet.deleteRule(e),this.length--},t.getRule=function(e){var t=this.sheet.cssRules[e];return void 0!==t&&"string"==typeof t.cssText?t.cssText:""},e}(),W=function(){function e(e){var t=this.element=H(e);this.nodes=t.childNodes,this.length=0}var t=e.prototype;return t.insertRule=function(e,t){if(e<=this.length&&e>=0){var n=document.createTextNode(t),r=this.nodes[e];return this.element.insertBefore(n,r||null),this.length++,!0}return!1},t.deleteRule=function(e){this.element.removeChild(this.nodes[e]),this.length--},t.getRule=function(e){return e<this.length?this.nodes[e].textContent:""},e}(),U=function(){function e(e){this.rules=[],this.length=0}var t=e.prototype;return t.insertRule=function(e,t){return e<=this.length&&(this.rules.splice(e,0,t),this.length++,!0)},t.deleteRule=function(e){this.rules.splice(e,1),this.length--},t.getRule=function(e){return e<this.length?this.rules[e]:""},e}(),J=I,X={isServer:!I,useCSSOMInjection:!P},Z=function(){function e(e,t,n){void 0===e&&(e=E),void 0===t&&(t={}),this.options=v({},X,{},e),this.gs=t,this.names=new Map(n),this.server=!!e.isServer,!this.server&&I&&J&&(J=!1,function(e){for(var t=document.querySelectorAll(G),n=0,r=t.length;n<r;n++){var o=t[n];o&&"active"!==o.getAttribute(A)&&(Y(e,o),o.parentNode&&o.parentNode.removeChild(o))}}(this))}e.registerId=function(e){return B(e)};var t=e.prototype;return t.reconstructWithOptions=function(t,n){return void 0===n&&(n=!0),new e(v({},this.options,{},t),this.gs,n&&this.names||void 0)},t.allocateGSInstance=function(e){return this.gs[e]=(this.gs[e]||0)+1},t.getTag=function(){return this.tag||(this.tag=(n=(t=this.options).isServer,r=t.useCSSOMInjection,o=t.target,e=n?new U(o):r?new $(o):new W(o),new T(e)));var e,t,n,r,o},t.hasNameForId=function(e,t){return this.names.has(e)&&this.names.get(e).has(t)},t.registerName=function(e,t){if(B(e),this.names.has(e))this.names.get(e).add(t);else{var n=new Set;n.add(t),this.names.set(e,n)}},t.insertRules=function(e,t,n){this.registerName(e,t),this.getTag().insertRules(B(e),n)},t.clearNames=function(e){this.names.has(e)&&this.names.get(e).clear()},t.clearRules=function(e){this.getTag().clearGroup(B(e)),this.clearNames(e)},t.clearTag=function(){this.tag=void 0},t.toString=function(){return function(e){for(var t=e.getTag(),n=t.length,r="",o=0;o<n;o++){var s=z(o);if(void 0!==s){var i=e.names.get(s),a=t.getGroup(o);if(i&&a&&i.size){var c=A+".g"+o+'[id="'+s+'"]',u="";void 0!==i&&i.forEach((function(e){e.length>0&&(u+=e+",")})),r+=""+a+c+'{content:"'+u+'"}/*!sc*/\n'}}}return r}(this)},e}(),K=/(a)(d)/gi,Q=function(e){return String.fromCharCode(e+(e>25?39:97))};function ee(e){var t,n="";for(t=Math.abs(e);t>52;t=t/52|0)n=Q(t%52)+n;return(Q(t%52)+n).replace(K,"$1-$2")}var te=function(e,t){for(var n=t.length;n;)e=33*e^t.charCodeAt(--n);return e},ne=function(e){return te(5381,e)};function re(e){for(var t=0;t<e.length;t+=1){var n=e[t];if(b(n)&&!N(n))return!1}return!0}var oe=ne("5.3.3"),se=function(){function e(e,t,n){this.rules=e,this.staticRulesId="",this.isStatic="production"===process.env.NODE_ENV&&(void 0===n||n.isStatic)&&re(e),this.componentId=t,this.baseHash=te(oe,t),this.baseStyle=n,Z.registerId(t)}return e.prototype.generateAndInjectStyles=function(e,t,n){var r=this.componentId,o=[];if(this.baseStyle&&o.push(this.baseStyle.generateAndInjectStyles(e,t,n)),this.isStatic&&!n.hash)if(this.staticRulesId&&t.hasNameForId(r,this.staticRulesId))o.push(this.staticRulesId);else{var s=Ne(this.rules,e,t,n).join(""),i=ee(te(this.baseHash,s)>>>0);if(!t.hasNameForId(r,i)){var a=n(s,"."+i,void 0,r);t.insertRules(r,i,a)}o.push(i),this.staticRulesId=i}else{for(var c=this.rules.length,u=te(this.baseHash,n.hash),l="",d=0;d<c;d++){var h=this.rules[d];if("string"==typeof h)l+=h,"production"!==process.env.NODE_ENV&&(u=te(u,h+d));else if(h){var p=Ne(h,e,t,n),f=Array.isArray(p)?p.join(""):p;u=te(u,f+d),l+=f}}if(l){var m=ee(u>>>0);if(!t.hasNameForId(r,m)){var y=n(l,"."+m,void 0,r);t.insertRules(r,m,y)}o.push(m)}}return o.join(" ")},e}(),ie=/^\s*\/\/.*$/gm,ae=[":","[",".","#"];function ce(e){var t,n,r,o,s=void 0===e?E:e,i=s.options,a=void 0===i?E:i,c=s.plugins,u=void 0===c?w:c,l=new _emotion_stylis__WEBPACK_IMPORTED_MODULE_3__["default"](a),d=[],h=function(e){function t(t){if(t)try{e(t+"}")}catch(e){}}return function(n,r,o,s,i,a,c,u,l,d){switch(n){case 1:if(0===l&&64===r.charCodeAt(0))return e(r+";"),"";break;case 2:if(0===u)return r+"/*|*/";break;case 3:switch(u){case 102:case 112:return e(o[0]+r),"";default:return r+(0===d?"/*|*/":"")}case-2:r.split("/*|*/}").forEach(t)}}}((function(e){d.push(e)})),f=function(e,r,s){return 0===r&&-1!==ae.indexOf(s[n.length])||s.match(o)?e:"."+t};function m(e,s,i,a){void 0===a&&(a="&");var c=e.replace(ie,""),u=s&&i?i+" "+s+" { "+c+" }":c;return t=a,n=s,r=new RegExp("\\"+n+"\\b","g"),o=new RegExp("(\\"+n+"\\b){2,}"),l(i||!s?"":s,u)}return l.use([].concat(u,[function(e,t,o){2===e&&o.length&&o[0].lastIndexOf(n)>0&&(o[0]=o[0].replace(r,f))},h,function(e){if(-2===e){var t=d;return d=[],t}}])),m.hash=u.length?u.reduce((function(e,t){return t.name||j(15),te(e,t.name)}),5381).toString():"",m}var ue=react__WEBPACK_IMPORTED_MODULE_1__.createContext(),le=ue.Consumer,de=react__WEBPACK_IMPORTED_MODULE_1__.createContext(),he=(de.Consumer,new Z),pe=ce();function fe(){return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ue)||he}function me(){return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(de)||pe}function ye(e){var t=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(e.stylisPlugins),n=t[0],s=t[1],c=fe(),u=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((function(){var t=c;return e.sheet?t=e.sheet:e.target&&(t=t.reconstructWithOptions({target:e.target},!1)),e.disableCSSOMInjection&&(t=t.reconstructWithOptions({useCSSOMInjection:!1})),t}),[e.disableCSSOMInjection,e.sheet,e.target]),l=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((function(){return ce({options:{prefix:!e.disableVendorPrefixes},plugins:n})}),[e.disableVendorPrefixes,n]);return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((function(){shallowequal__WEBPACK_IMPORTED_MODULE_2___default()(n,e.stylisPlugins)||s(e.stylisPlugins)}),[e.stylisPlugins]),react__WEBPACK_IMPORTED_MODULE_1__.createElement(ue.Provider,{value:u},react__WEBPACK_IMPORTED_MODULE_1__.createElement(de.Provider,{value:l},"production"!==process.env.NODE_ENV?react__WEBPACK_IMPORTED_MODULE_1__.Children.only(e.children):e.children))}var ve=function(){function e(e,t){var n=this;this.inject=function(e,t){void 0===t&&(t=pe);var r=n.name+t.hash;e.hasNameForId(n.id,r)||e.insertRules(n.id,r,t(n.rules,r,"@keyframes"))},this.toString=function(){return j(12,String(n.name))},this.name=e,this.id="sc-keyframes-"+e,this.rules=t}return e.prototype.getName=function(e){return void 0===e&&(e=pe),this.name+e.hash},e}(),ge=/([A-Z])/,Se=/([A-Z])/g,we=/^ms-/,Ee=function(e){return"-"+e.toLowerCase()};function be(e){return ge.test(e)?e.replace(Se,Ee).replace(we,"-ms-"):e}var _e=function(e){return null==e||!1===e||""===e};function Ne(e,n,r,o){if(Array.isArray(e)){for(var s,i=[],a=0,c=e.length;a<c;a+=1)""!==(s=Ne(e[a],n,r,o))&&(Array.isArray(s)?i.push.apply(i,s):i.push(s));return i}if(_e(e))return"";if(N(e))return"."+e.styledComponentId;if(b(e)){if("function"!=typeof(l=e)||l.prototype&&l.prototype.isReactComponent||!n)return e;var u=e(n);return"production"!==process.env.NODE_ENV&&(0,react_is__WEBPACK_IMPORTED_MODULE_0__.isElement)(u)&&console.warn(_(e)+" is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details."),Ne(u,n,r,o)}var l;return e instanceof ve?r?(e.inject(r,o),e.getName(o)):e:S(e)?function e(t,n){var r,o,s=[];for(var i in t)t.hasOwnProperty(i)&&!_e(t[i])&&(Array.isArray(t[i])&&t[i].isCss||b(t[i])?s.push(be(i)+":",t[i],";"):S(t[i])?s.push.apply(s,e(t[i],i)):s.push(be(i)+": "+(r=i,null==(o=t[i])||"boolean"==typeof o||""===o?"":"number"!=typeof o||0===o||r in _emotion_unitless__WEBPACK_IMPORTED_MODULE_4__["default"]?String(o).trim():o+"px")+";"));return n?[n+" {"].concat(s,["}"]):s}(e):e.toString()}var Ae=function(e){return Array.isArray(e)&&(e.isCss=!0),e};function Ce(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];return b(e)||S(e)?Ae(Ne(g(w,[e].concat(n)))):0===n.length&&1===e.length&&"string"==typeof e[0]?e:Ae(Ne(g(e,n)))}var Ie=/invalid hook call/i,Pe=new Set,Oe=function(e,t){if("production"!==process.env.NODE_ENV){var n="The component "+e+(t?' with the id of "'+t+'"':"")+" has been created dynamically.\nYou may see this warning because you've called styled inside another component.\nTo resolve this only create new StyledComponents outside of any render method and function component.",r=console.error;try{var o=!0;console.error=function(e){if(Ie.test(e))o=!1,Pe.delete(n);else{for(var t=arguments.length,s=new Array(t>1?t-1:0),i=1;i<t;i++)s[i-1]=arguments[i];r.apply(void 0,[e].concat(s))}},(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(),o&&!Pe.has(n)&&(console.warn(n),Pe.add(n))}catch(e){Ie.test(e.message)&&Pe.delete(n)}finally{console.error=r}}},Re=function(e,t,n){return void 0===n&&(n=E),e.theme!==n.theme&&e.theme||t||n.theme},De=/[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,je=/(^-|-$)/g;function Te(e){return e.replace(De,"-").replace(je,"")}var xe=function(e){return ee(ne(e)>>>0)};function ke(e){return"string"==typeof e&&("production"===process.env.NODE_ENV||e.charAt(0)===e.charAt(0).toLowerCase())}var Ve=function(e){return"function"==typeof e||"object"==typeof e&&null!==e&&!Array.isArray(e)},Be=function(e){return"__proto__"!==e&&"constructor"!==e&&"prototype"!==e};function ze(e,t,n){var r=e[n];Ve(t)&&Ve(r)?Me(r,t):e[n]=t}function Me(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];for(var o=0,s=n;o<s.length;o++){var i=s[o];if(Ve(i))for(var a in i)Be(a)&&ze(e,i[a],a)}return e}var Ge=react__WEBPACK_IMPORTED_MODULE_1__.createContext(),Le=Ge.Consumer;function Fe(e){var t=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Ge),n=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((function(){return function(e,t){if(!e)return j(14);if(b(e)){var n=e(t);return"production"===process.env.NODE_ENV||null!==n&&!Array.isArray(n)&&"object"==typeof n?n:j(7)}return Array.isArray(e)||"object"!=typeof e?j(8):t?v({},t,{},e):e}(e.theme,t)}),[e.theme,t]);return e.children?react__WEBPACK_IMPORTED_MODULE_1__.createElement(Ge.Provider,{value:n},e.children):null}var Ye={};function qe(e,t,n){var o=N(e),i=!ke(e),a=t.attrs,c=void 0===a?w:a,d=t.componentId,h=void 0===d?function(e,t){var n="string"!=typeof e?"sc":Te(e);Ye[n]=(Ye[n]||0)+1;var r=n+"-"+xe("5.3.3"+n+Ye[n]);return t?t+"-"+r:r}(t.displayName,t.parentComponentId):d,p=t.displayName,f=void 0===p?function(e){return ke(e)?"styled."+e:"Styled("+_(e)+")"}(e):p,g=t.displayName&&t.componentId?Te(t.displayName)+"-"+t.componentId:t.componentId||h,S=o&&e.attrs?Array.prototype.concat(e.attrs,c).filter(Boolean):c,A=t.shouldForwardProp;o&&e.shouldForwardProp&&(A=t.shouldForwardProp?function(n,r,o){return e.shouldForwardProp(n,r,o)&&t.shouldForwardProp(n,r,o)}:e.shouldForwardProp);var C,I=new se(n,g,o?e.componentStyle:void 0),P=I.isStatic&&0===c.length,O=function(e,t){return function(e,t,n,r){var o=e.attrs,i=e.componentStyle,a=e.defaultProps,c=e.foldedComponentIds,d=e.shouldForwardProp,h=e.styledComponentId,p=e.target;"production"!==process.env.NODE_ENV&&(0,react__WEBPACK_IMPORTED_MODULE_1__.useDebugValue)(h);var f=function(e,t,n){void 0===e&&(e=E);var r=v({},t,{theme:e}),o={};return n.forEach((function(e){var t,n,s,i=e;for(t in b(i)&&(i=i(r)),i)r[t]=o[t]="className"===t?(n=o[t],s=i[t],n&&s?n+" "+s:n||s):i[t]})),[r,o]}(Re(t,(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Ge),a)||E,t,o),y=f[0],g=f[1],S=function(e,t,n,r){var o=fe(),s=me(),i=t?e.generateAndInjectStyles(E,o,s):e.generateAndInjectStyles(n,o,s);return"production"!==process.env.NODE_ENV&&(0,react__WEBPACK_IMPORTED_MODULE_1__.useDebugValue)(i),"production"!==process.env.NODE_ENV&&!t&&r&&r(i),i}(i,r,y,"production"!==process.env.NODE_ENV?e.warnTooManyClasses:void 0),w=n,_=g.$as||t.$as||g.as||t.as||p,N=ke(_),A=g!==t?v({},t,{},g):t,C={};for(var I in A)"$"!==I[0]&&"as"!==I&&("forwardedAs"===I?C.as=A[I]:(d?d(I,_emotion_is_prop_valid__WEBPACK_IMPORTED_MODULE_5__["default"],_):!N||(0,_emotion_is_prop_valid__WEBPACK_IMPORTED_MODULE_5__["default"])(I))&&(C[I]=A[I]));return t.style&&g.style!==t.style&&(C.style=v({},t.style,{},g.style)),C.className=Array.prototype.concat(c,h,S!==h?S:null,t.className,g.className).filter(Boolean).join(" "),C.ref=w,(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(_,C)}(C,e,t,P)};return O.displayName=f,(C=react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(O)).attrs=S,C.componentStyle=I,C.displayName=f,C.shouldForwardProp=A,C.foldedComponentIds=o?Array.prototype.concat(e.foldedComponentIds,e.styledComponentId):w,C.styledComponentId=g,C.target=o?e.target:e,C.withComponent=function(e){var r=t.componentId,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(t,["componentId"]),s=r&&r+"-"+(ke(e)?e:Te(_(e)));return qe(e,v({},o,{attrs:S,componentId:s}),n)},Object.defineProperty(C,"defaultProps",{get:function(){return this._foldedDefaultProps},set:function(t){this._foldedDefaultProps=o?Me({},e.defaultProps,t):t}}),"production"!==process.env.NODE_ENV&&(Oe(f,g),C.warnTooManyClasses=function(e,t){var n={},r=!1;return function(o){if(!r&&(n[o]=!0,Object.keys(n).length>=200)){var s=t?' with the id of "'+t+'"':"";console.warn("Over 200 classes were generated for component "+e+s+".\nConsider using the attrs method, together with a style object for frequently changed styles.\nExample:\n  const Component = styled.div.attrs(props => ({\n    style: {\n      background: props.background,\n    },\n  }))`width: 100%;`\n\n  <Component />"),r=!0,n={}}}}(f,g)),C.toString=function(){return"."+C.styledComponentId},i&&hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_6___default()(C,e,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,shouldForwardProp:!0,styledComponentId:!0,target:!0,withComponent:!0}),C}var He=function(e){return function e(t,r,o){if(void 0===o&&(o=E),!(0,react_is__WEBPACK_IMPORTED_MODULE_0__.isValidElementType)(r))return j(1,String(r));var s=function(){return t(r,o,Ce.apply(void 0,arguments))};return s.withConfig=function(n){return e(t,r,v({},o,{},n))},s.attrs=function(n){return e(t,r,v({},o,{attrs:Array.prototype.concat(o.attrs,n).filter(Boolean)}))},s}(qe,e)};["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","marquee","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","marker","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","textPath","tspan"].forEach((function(e){He[e]=He(e)}));var $e=function(){function e(e,t){this.rules=e,this.componentId=t,this.isStatic=re(e),Z.registerId(this.componentId+1)}var t=e.prototype;return t.createStyles=function(e,t,n,r){var o=r(Ne(this.rules,t,n,r).join(""),""),s=this.componentId+e;n.insertRules(s,s,o)},t.removeStyles=function(e,t){t.clearRules(this.componentId+e)},t.renderStyles=function(e,t,n,r){e>2&&Z.registerId(this.componentId+e),this.removeStyles(e,n),this.createStyles(e,t,n,r)},e}();function We(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),o=1;o<t;o++)n[o-1]=arguments[o];var i=Ce.apply(void 0,[e].concat(n)),a="sc-global-"+xe(JSON.stringify(i)),u=new $e(i,a);function l(e){var t=fe(),n=me(),o=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Ge),l=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(t.allocateGSInstance(a)).current;return"production"!==process.env.NODE_ENV&&react__WEBPACK_IMPORTED_MODULE_1__.Children.count(e.children)&&console.warn("The global style component "+a+" was given child JSX. createGlobalStyle does not render children."),"production"!==process.env.NODE_ENV&&i.some((function(e){return"string"==typeof e&&-1!==e.indexOf("@import")}))&&console.warn("Please do not use @import CSS syntax in createGlobalStyle at this time, as the CSSOM APIs we use in production do not handle it well. Instead, we recommend using a library such as react-helmet to inject a typical <link> meta tag to the stylesheet, or simply embedding it manually in your index.html <head> section for a simpler app."),t.server&&h(l,e,t,o,n),(0,react__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)((function(){if(!t.server)return h(l,e,t,o,n),function(){return u.removeStyles(l,t)}}),[l,e,t,o,n]),null}function h(e,t,n,r,o){if(u.isStatic)u.renderStyles(e,O,n,o);else{var s=v({},t,{theme:Re(t,r,l.defaultProps)});u.renderStyles(e,s,n,o)}}return"production"!==process.env.NODE_ENV&&Oe(a),react__WEBPACK_IMPORTED_MODULE_1__.memo(l)}function Ue(e){"production"!==process.env.NODE_ENV&&"undefined"!=typeof navigator&&"ReactNative"===navigator.product&&console.warn("`keyframes` cannot be used on ReactNative, only on the web. To do animation in ReactNative please use Animated.");for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];var o=Ce.apply(void 0,[e].concat(n)).join(""),s=xe(o);return new ve(s,o)}var Je=function(){function e(){var e=this;this._emitSheetCSS=function(){var t=e.instance.toString();if(!t)return"";var n=q();return"<style "+[n&&'nonce="'+n+'"',A+'="true"','data-styled-version="5.3.3"'].filter(Boolean).join(" ")+">"+t+"</style>"},this.getStyleTags=function(){return e.sealed?j(2):e._emitSheetCSS()},this.getStyleElement=function(){var t;if(e.sealed)return j(2);var n=((t={})[A]="",t["data-styled-version"]="5.3.3",t.dangerouslySetInnerHTML={__html:e.instance.toString()},t),o=q();return o&&(n.nonce=o),[react__WEBPACK_IMPORTED_MODULE_1__.createElement("style",v({},n,{key:"sc-0-0"}))]},this.seal=function(){e.sealed=!0},this.instance=new Z({isServer:!0}),this.sealed=!1}var t=e.prototype;return t.collectStyles=function(e){return this.sealed?j(2):react__WEBPACK_IMPORTED_MODULE_1__.createElement(ye,{sheet:this.instance},e)},t.interleaveWithNodeStream=function(e){return j(3)},e}(),Xe=function(e){var t=react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((function(t,n){var o=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Ge),i=e.defaultProps,a=Re(t,o,i);return"production"!==process.env.NODE_ENV&&void 0===a&&console.warn('[withTheme] You are not using a ThemeProvider nor passing a theme prop or a theme in defaultProps in component class "'+_(e)+'"'),react__WEBPACK_IMPORTED_MODULE_1__.createElement(e,v({},t,{theme:a,ref:n}))}));return hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_6___default()(t,e),t.displayName="WithTheme("+_(e)+")",t},Ze=function(){return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Ge)},Ke={StyleSheet:Z,masterSheet:he};"production"!==process.env.NODE_ENV&&"undefined"!=typeof navigator&&"ReactNative"===navigator.product&&console.warn("It looks like you've imported 'styled-components' on React Native.\nPerhaps you're looking to import 'styled-components/native'?\nRead more about this at https://www.styled-components.com/docs/basics#react-native"),"production"!==process.env.NODE_ENV&&"test"!==process.env.NODE_ENV&&"undefined"!=typeof window&&(window["__styled-components-init__"]=window["__styled-components-init__"]||0,1===window["__styled-components-init__"]&&console.warn("It looks like there are several instances of 'styled-components' initialized in this application. This may cause dynamic styles to not render properly, errors during the rehydration process, a missing theme prop, and makes your application bigger without good reason.\n\nSee https://s-c.sh/2BAXzed for more info."),window["__styled-components-init__"]+=1);/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (He);
//# sourceMappingURL=styled-components.browser.esm.js.map


/***/ }),
/* 15 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (process.env.NODE_ENV === 'production') {
  module.exports = __webpack_require__(16);
} else {
  module.exports = __webpack_require__(17);
}


/***/ }),
/* 16 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var b="function"===typeof Symbol&&Symbol.for,c=b?Symbol.for("react.element"):60103,d=b?Symbol.for("react.portal"):60106,e=b?Symbol.for("react.fragment"):60107,f=b?Symbol.for("react.strict_mode"):60108,g=b?Symbol.for("react.profiler"):60114,h=b?Symbol.for("react.provider"):60109,k=b?Symbol.for("react.context"):60110,l=b?Symbol.for("react.async_mode"):60111,m=b?Symbol.for("react.concurrent_mode"):60111,n=b?Symbol.for("react.forward_ref"):60112,p=b?Symbol.for("react.suspense"):60113,q=b?
Symbol.for("react.suspense_list"):60120,r=b?Symbol.for("react.memo"):60115,t=b?Symbol.for("react.lazy"):60116,v=b?Symbol.for("react.block"):60121,w=b?Symbol.for("react.fundamental"):60117,x=b?Symbol.for("react.responder"):60118,y=b?Symbol.for("react.scope"):60119;
function z(a){if("object"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;
exports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return"object"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};
exports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};
exports.isValidElementType=function(a){return"string"===typeof a||"function"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||"object"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;


/***/ }),
/* 17 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (process.env.NODE_ENV !== "production") {
  (function() {
'use strict';

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;
var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
// (unstable) APIs that have been removed. Can we remove the symbols?

var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
}

function typeOf(object) {
  if (typeof object === 'object' && object !== null) {
    var $$typeof = object.$$typeof;

    switch ($$typeof) {
      case REACT_ELEMENT_TYPE:
        var type = object.type;

        switch (type) {
          case REACT_ASYNC_MODE_TYPE:
          case REACT_CONCURRENT_MODE_TYPE:
          case REACT_FRAGMENT_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_SUSPENSE_TYPE:
            return type;

          default:
            var $$typeofType = type && type.$$typeof;

            switch ($$typeofType) {
              case REACT_CONTEXT_TYPE:
              case REACT_FORWARD_REF_TYPE:
              case REACT_LAZY_TYPE:
              case REACT_MEMO_TYPE:
              case REACT_PROVIDER_TYPE:
                return $$typeofType;

              default:
                return $$typeof;
            }

        }

      case REACT_PORTAL_TYPE:
        return $$typeof;
    }
  }

  return undefined;
} // AsyncMode is deprecated along with isAsyncMode

var AsyncMode = REACT_ASYNC_MODE_TYPE;
var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
var ContextConsumer = REACT_CONTEXT_TYPE;
var ContextProvider = REACT_PROVIDER_TYPE;
var Element = REACT_ELEMENT_TYPE;
var ForwardRef = REACT_FORWARD_REF_TYPE;
var Fragment = REACT_FRAGMENT_TYPE;
var Lazy = REACT_LAZY_TYPE;
var Memo = REACT_MEMO_TYPE;
var Portal = REACT_PORTAL_TYPE;
var Profiler = REACT_PROFILER_TYPE;
var StrictMode = REACT_STRICT_MODE_TYPE;
var Suspense = REACT_SUSPENSE_TYPE;
var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

function isAsyncMode(object) {
  {
    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
    }
  }

  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
}
function isConcurrentMode(object) {
  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
}
function isContextConsumer(object) {
  return typeOf(object) === REACT_CONTEXT_TYPE;
}
function isContextProvider(object) {
  return typeOf(object) === REACT_PROVIDER_TYPE;
}
function isElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}
function isForwardRef(object) {
  return typeOf(object) === REACT_FORWARD_REF_TYPE;
}
function isFragment(object) {
  return typeOf(object) === REACT_FRAGMENT_TYPE;
}
function isLazy(object) {
  return typeOf(object) === REACT_LAZY_TYPE;
}
function isMemo(object) {
  return typeOf(object) === REACT_MEMO_TYPE;
}
function isPortal(object) {
  return typeOf(object) === REACT_PORTAL_TYPE;
}
function isProfiler(object) {
  return typeOf(object) === REACT_PROFILER_TYPE;
}
function isStrictMode(object) {
  return typeOf(object) === REACT_STRICT_MODE_TYPE;
}
function isSuspense(object) {
  return typeOf(object) === REACT_SUSPENSE_TYPE;
}

exports.AsyncMode = AsyncMode;
exports.ConcurrentMode = ConcurrentMode;
exports.ContextConsumer = ContextConsumer;
exports.ContextProvider = ContextProvider;
exports.Element = Element;
exports.ForwardRef = ForwardRef;
exports.Fragment = Fragment;
exports.Lazy = Lazy;
exports.Memo = Memo;
exports.Portal = Portal;
exports.Profiler = Profiler;
exports.StrictMode = StrictMode;
exports.Suspense = Suspense;
exports.isAsyncMode = isAsyncMode;
exports.isConcurrentMode = isConcurrentMode;
exports.isContextConsumer = isContextConsumer;
exports.isContextProvider = isContextProvider;
exports.isElement = isElement;
exports.isForwardRef = isForwardRef;
exports.isFragment = isFragment;
exports.isLazy = isLazy;
exports.isMemo = isMemo;
exports.isPortal = isPortal;
exports.isProfiler = isProfiler;
exports.isStrictMode = isStrictMode;
exports.isSuspense = isSuspense;
exports.isValidElementType = isValidElementType;
exports.typeOf = typeOf;
  })();
}


/***/ }),
/* 18 */
/***/ ((module) => {

//

module.exports = function shallowEqual(objA, objB, compare, compareContext) {
  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;

  if (ret !== void 0) {
    return !!ret;
  }

  if (objA === objB) {
    return true;
  }

  if (typeof objA !== "object" || !objA || typeof objB !== "object" || !objB) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);

  // Test for A's keys different from B.
  for (var idx = 0; idx < keysA.length; idx++) {
    var key = keysA[idx];

    if (!bHasOwnProperty(key)) {
      return false;
    }

    var valueA = objA[key];
    var valueB = objB[key];

    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;

    if (ret === false || (ret === void 0 && valueA !== valueB)) {
      return false;
    }
  }

  return true;
};


/***/ }),
/* 19 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function stylis_min (W) {
  function M(d, c, e, h, a) {
    for (var m = 0, b = 0, v = 0, n = 0, q, g, x = 0, K = 0, k, u = k = q = 0, l = 0, r = 0, I = 0, t = 0, B = e.length, J = B - 1, y, f = '', p = '', F = '', G = '', C; l < B;) {
      g = e.charCodeAt(l);
      l === J && 0 !== b + n + v + m && (0 !== b && (g = 47 === b ? 10 : 47), n = v = m = 0, B++, J++);

      if (0 === b + n + v + m) {
        if (l === J && (0 < r && (f = f.replace(N, '')), 0 < f.trim().length)) {
          switch (g) {
            case 32:
            case 9:
            case 59:
            case 13:
            case 10:
              break;

            default:
              f += e.charAt(l);
          }

          g = 59;
        }

        switch (g) {
          case 123:
            f = f.trim();
            q = f.charCodeAt(0);
            k = 1;

            for (t = ++l; l < B;) {
              switch (g = e.charCodeAt(l)) {
                case 123:
                  k++;
                  break;

                case 125:
                  k--;
                  break;

                case 47:
                  switch (g = e.charCodeAt(l + 1)) {
                    case 42:
                    case 47:
                      a: {
                        for (u = l + 1; u < J; ++u) {
                          switch (e.charCodeAt(u)) {
                            case 47:
                              if (42 === g && 42 === e.charCodeAt(u - 1) && l + 2 !== u) {
                                l = u + 1;
                                break a;
                              }

                              break;

                            case 10:
                              if (47 === g) {
                                l = u + 1;
                                break a;
                              }

                          }
                        }

                        l = u;
                      }

                  }

                  break;

                case 91:
                  g++;

                case 40:
                  g++;

                case 34:
                case 39:
                  for (; l++ < J && e.charCodeAt(l) !== g;) {
                  }

              }

              if (0 === k) break;
              l++;
            }

            k = e.substring(t, l);
            0 === q && (q = (f = f.replace(ca, '').trim()).charCodeAt(0));

            switch (q) {
              case 64:
                0 < r && (f = f.replace(N, ''));
                g = f.charCodeAt(1);

                switch (g) {
                  case 100:
                  case 109:
                  case 115:
                  case 45:
                    r = c;
                    break;

                  default:
                    r = O;
                }

                k = M(c, r, k, g, a + 1);
                t = k.length;
                0 < A && (r = X(O, f, I), C = H(3, k, r, c, D, z, t, g, a, h), f = r.join(''), void 0 !== C && 0 === (t = (k = C.trim()).length) && (g = 0, k = ''));
                if (0 < t) switch (g) {
                  case 115:
                    f = f.replace(da, ea);

                  case 100:
                  case 109:
                  case 45:
                    k = f + '{' + k + '}';
                    break;

                  case 107:
                    f = f.replace(fa, '$1 $2');
                    k = f + '{' + k + '}';
                    k = 1 === w || 2 === w && L('@' + k, 3) ? '@-webkit-' + k + '@' + k : '@' + k;
                    break;

                  default:
                    k = f + k, 112 === h && (k = (p += k, ''));
                } else k = '';
                break;

              default:
                k = M(c, X(c, f, I), k, h, a + 1);
            }

            F += k;
            k = I = r = u = q = 0;
            f = '';
            g = e.charCodeAt(++l);
            break;

          case 125:
          case 59:
            f = (0 < r ? f.replace(N, '') : f).trim();
            if (1 < (t = f.length)) switch (0 === u && (q = f.charCodeAt(0), 45 === q || 96 < q && 123 > q) && (t = (f = f.replace(' ', ':')).length), 0 < A && void 0 !== (C = H(1, f, c, d, D, z, p.length, h, a, h)) && 0 === (t = (f = C.trim()).length) && (f = '\x00\x00'), q = f.charCodeAt(0), g = f.charCodeAt(1), q) {
              case 0:
                break;

              case 64:
                if (105 === g || 99 === g) {
                  G += f + e.charAt(l);
                  break;
                }

              default:
                58 !== f.charCodeAt(t - 1) && (p += P(f, q, g, f.charCodeAt(2)));
            }
            I = r = u = q = 0;
            f = '';
            g = e.charCodeAt(++l);
        }
      }

      switch (g) {
        case 13:
        case 10:
          47 === b ? b = 0 : 0 === 1 + q && 107 !== h && 0 < f.length && (r = 1, f += '\x00');
          0 < A * Y && H(0, f, c, d, D, z, p.length, h, a, h);
          z = 1;
          D++;
          break;

        case 59:
        case 125:
          if (0 === b + n + v + m) {
            z++;
            break;
          }

        default:
          z++;
          y = e.charAt(l);

          switch (g) {
            case 9:
            case 32:
              if (0 === n + m + b) switch (x) {
                case 44:
                case 58:
                case 9:
                case 32:
                  y = '';
                  break;

                default:
                  32 !== g && (y = ' ');
              }
              break;

            case 0:
              y = '\\0';
              break;

            case 12:
              y = '\\f';
              break;

            case 11:
              y = '\\v';
              break;

            case 38:
              0 === n + b + m && (r = I = 1, y = '\f' + y);
              break;

            case 108:
              if (0 === n + b + m + E && 0 < u) switch (l - u) {
                case 2:
                  112 === x && 58 === e.charCodeAt(l - 3) && (E = x);

                case 8:
                  111 === K && (E = K);
              }
              break;

            case 58:
              0 === n + b + m && (u = l);
              break;

            case 44:
              0 === b + v + n + m && (r = 1, y += '\r');
              break;

            case 34:
            case 39:
              0 === b && (n = n === g ? 0 : 0 === n ? g : n);
              break;

            case 91:
              0 === n + b + v && m++;
              break;

            case 93:
              0 === n + b + v && m--;
              break;

            case 41:
              0 === n + b + m && v--;
              break;

            case 40:
              if (0 === n + b + m) {
                if (0 === q) switch (2 * x + 3 * K) {
                  case 533:
                    break;

                  default:
                    q = 1;
                }
                v++;
              }

              break;

            case 64:
              0 === b + v + n + m + u + k && (k = 1);
              break;

            case 42:
            case 47:
              if (!(0 < n + m + v)) switch (b) {
                case 0:
                  switch (2 * g + 3 * e.charCodeAt(l + 1)) {
                    case 235:
                      b = 47;
                      break;

                    case 220:
                      t = l, b = 42;
                  }

                  break;

                case 42:
                  47 === g && 42 === x && t + 2 !== l && (33 === e.charCodeAt(t + 2) && (p += e.substring(t, l + 1)), y = '', b = 0);
              }
          }

          0 === b && (f += y);
      }

      K = x;
      x = g;
      l++;
    }

    t = p.length;

    if (0 < t) {
      r = c;
      if (0 < A && (C = H(2, p, r, d, D, z, t, h, a, h), void 0 !== C && 0 === (p = C).length)) return G + p + F;
      p = r.join(',') + '{' + p + '}';

      if (0 !== w * E) {
        2 !== w || L(p, 2) || (E = 0);

        switch (E) {
          case 111:
            p = p.replace(ha, ':-moz-$1') + p;
            break;

          case 112:
            p = p.replace(Q, '::-webkit-input-$1') + p.replace(Q, '::-moz-$1') + p.replace(Q, ':-ms-input-$1') + p;
        }

        E = 0;
      }
    }

    return G + p + F;
  }

  function X(d, c, e) {
    var h = c.trim().split(ia);
    c = h;
    var a = h.length,
        m = d.length;

    switch (m) {
      case 0:
      case 1:
        var b = 0;

        for (d = 0 === m ? '' : d[0] + ' '; b < a; ++b) {
          c[b] = Z(d, c[b], e).trim();
        }

        break;

      default:
        var v = b = 0;

        for (c = []; b < a; ++b) {
          for (var n = 0; n < m; ++n) {
            c[v++] = Z(d[n] + ' ', h[b], e).trim();
          }
        }

    }

    return c;
  }

  function Z(d, c, e) {
    var h = c.charCodeAt(0);
    33 > h && (h = (c = c.trim()).charCodeAt(0));

    switch (h) {
      case 38:
        return c.replace(F, '$1' + d.trim());

      case 58:
        return d.trim() + c.replace(F, '$1' + d.trim());

      default:
        if (0 < 1 * e && 0 < c.indexOf('\f')) return c.replace(F, (58 === d.charCodeAt(0) ? '' : '$1') + d.trim());
    }

    return d + c;
  }

  function P(d, c, e, h) {
    var a = d + ';',
        m = 2 * c + 3 * e + 4 * h;

    if (944 === m) {
      d = a.indexOf(':', 9) + 1;
      var b = a.substring(d, a.length - 1).trim();
      b = a.substring(0, d).trim() + b + ';';
      return 1 === w || 2 === w && L(b, 1) ? '-webkit-' + b + b : b;
    }

    if (0 === w || 2 === w && !L(a, 1)) return a;

    switch (m) {
      case 1015:
        return 97 === a.charCodeAt(10) ? '-webkit-' + a + a : a;

      case 951:
        return 116 === a.charCodeAt(3) ? '-webkit-' + a + a : a;

      case 963:
        return 110 === a.charCodeAt(5) ? '-webkit-' + a + a : a;

      case 1009:
        if (100 !== a.charCodeAt(4)) break;

      case 969:
      case 942:
        return '-webkit-' + a + a;

      case 978:
        return '-webkit-' + a + '-moz-' + a + a;

      case 1019:
      case 983:
        return '-webkit-' + a + '-moz-' + a + '-ms-' + a + a;

      case 883:
        if (45 === a.charCodeAt(8)) return '-webkit-' + a + a;
        if (0 < a.indexOf('image-set(', 11)) return a.replace(ja, '$1-webkit-$2') + a;
        break;

      case 932:
        if (45 === a.charCodeAt(4)) switch (a.charCodeAt(5)) {
          case 103:
            return '-webkit-box-' + a.replace('-grow', '') + '-webkit-' + a + '-ms-' + a.replace('grow', 'positive') + a;

          case 115:
            return '-webkit-' + a + '-ms-' + a.replace('shrink', 'negative') + a;

          case 98:
            return '-webkit-' + a + '-ms-' + a.replace('basis', 'preferred-size') + a;
        }
        return '-webkit-' + a + '-ms-' + a + a;

      case 964:
        return '-webkit-' + a + '-ms-flex-' + a + a;

      case 1023:
        if (99 !== a.charCodeAt(8)) break;
        b = a.substring(a.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify');
        return '-webkit-box-pack' + b + '-webkit-' + a + '-ms-flex-pack' + b + a;

      case 1005:
        return ka.test(a) ? a.replace(aa, ':-webkit-') + a.replace(aa, ':-moz-') + a : a;

      case 1e3:
        b = a.substring(13).trim();
        c = b.indexOf('-') + 1;

        switch (b.charCodeAt(0) + b.charCodeAt(c)) {
          case 226:
            b = a.replace(G, 'tb');
            break;

          case 232:
            b = a.replace(G, 'tb-rl');
            break;

          case 220:
            b = a.replace(G, 'lr');
            break;

          default:
            return a;
        }

        return '-webkit-' + a + '-ms-' + b + a;

      case 1017:
        if (-1 === a.indexOf('sticky', 9)) break;

      case 975:
        c = (a = d).length - 10;
        b = (33 === a.charCodeAt(c) ? a.substring(0, c) : a).substring(d.indexOf(':', 7) + 1).trim();

        switch (m = b.charCodeAt(0) + (b.charCodeAt(7) | 0)) {
          case 203:
            if (111 > b.charCodeAt(8)) break;

          case 115:
            a = a.replace(b, '-webkit-' + b) + ';' + a;
            break;

          case 207:
          case 102:
            a = a.replace(b, '-webkit-' + (102 < m ? 'inline-' : '') + 'box') + ';' + a.replace(b, '-webkit-' + b) + ';' + a.replace(b, '-ms-' + b + 'box') + ';' + a;
        }

        return a + ';';

      case 938:
        if (45 === a.charCodeAt(5)) switch (a.charCodeAt(6)) {
          case 105:
            return b = a.replace('-items', ''), '-webkit-' + a + '-webkit-box-' + b + '-ms-flex-' + b + a;

          case 115:
            return '-webkit-' + a + '-ms-flex-item-' + a.replace(ba, '') + a;

          default:
            return '-webkit-' + a + '-ms-flex-line-pack' + a.replace('align-content', '').replace(ba, '') + a;
        }
        break;

      case 973:
      case 989:
        if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4)) break;

      case 931:
      case 953:
        if (!0 === la.test(d)) return 115 === (b = d.substring(d.indexOf(':') + 1)).charCodeAt(0) ? P(d.replace('stretch', 'fill-available'), c, e, h).replace(':fill-available', ':stretch') : a.replace(b, '-webkit-' + b) + a.replace(b, '-moz-' + b.replace('fill-', '')) + a;
        break;

      case 962:
        if (a = '-webkit-' + a + (102 === a.charCodeAt(5) ? '-ms-' + a : '') + a, 211 === e + h && 105 === a.charCodeAt(13) && 0 < a.indexOf('transform', 10)) return a.substring(0, a.indexOf(';', 27) + 1).replace(ma, '$1-webkit-$2') + a;
    }

    return a;
  }

  function L(d, c) {
    var e = d.indexOf(1 === c ? ':' : '{'),
        h = d.substring(0, 3 !== c ? e : 10);
    e = d.substring(e + 1, d.length - 1);
    return R(2 !== c ? h : h.replace(na, '$1'), e, c);
  }

  function ea(d, c) {
    var e = P(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));
    return e !== c + ';' ? e.replace(oa, ' or ($1)').substring(4) : '(' + c + ')';
  }

  function H(d, c, e, h, a, m, b, v, n, q) {
    for (var g = 0, x = c, w; g < A; ++g) {
      switch (w = S[g].call(B, d, x, e, h, a, m, b, v, n, q)) {
        case void 0:
        case !1:
        case !0:
        case null:
          break;

        default:
          x = w;
      }
    }

    if (x !== c) return x;
  }

  function T(d) {
    switch (d) {
      case void 0:
      case null:
        A = S.length = 0;
        break;

      default:
        if ('function' === typeof d) S[A++] = d;else if ('object' === typeof d) for (var c = 0, e = d.length; c < e; ++c) {
          T(d[c]);
        } else Y = !!d | 0;
    }

    return T;
  }

  function U(d) {
    d = d.prefix;
    void 0 !== d && (R = null, d ? 'function' !== typeof d ? w = 1 : (w = 2, R = d) : w = 0);
    return U;
  }

  function B(d, c) {
    var e = d;
    33 > e.charCodeAt(0) && (e = e.trim());
    V = e;
    e = [V];

    if (0 < A) {
      var h = H(-1, c, e, e, D, z, 0, 0, 0, 0);
      void 0 !== h && 'string' === typeof h && (c = h);
    }

    var a = M(O, e, c, 0, 0);
    0 < A && (h = H(-2, a, e, e, D, z, a.length, 0, 0, 0), void 0 !== h && (a = h));
    V = '';
    E = 0;
    z = D = 1;
    return a;
  }

  var ca = /^\0+/g,
      N = /[\0\r\f]/g,
      aa = /: */g,
      ka = /zoo|gra/,
      ma = /([,: ])(transform)/g,
      ia = /,\r+?/g,
      F = /([\t\r\n ])*\f?&/g,
      fa = /@(k\w+)\s*(\S*)\s*/,
      Q = /::(place)/g,
      ha = /:(read-only)/g,
      G = /[svh]\w+-[tblr]{2}/,
      da = /\(\s*(.*)\s*\)/g,
      oa = /([\s\S]*?);/g,
      ba = /-self|flex-/g,
      na = /[^]*?(:[rp][el]a[\w-]+)[^]*/,
      la = /stretch|:\s*\w+\-(?:conte|avail)/,
      ja = /([^-])(image-set\()/,
      z = 1,
      D = 1,
      E = 0,
      w = 1,
      O = [],
      S = [],
      A = 0,
      R = null,
      Y = 0,
      V = '';
  B.use = T;
  B.set = U;
  void 0 !== W && U(W);
  return B;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (stylis_min);


/***/ }),
/* 20 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var unitlessKeys = {
  animationIterationCount: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  // SVG-related properties
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (unitlessKeys);


/***/ }),
/* 21 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _emotion_memoize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(22);


var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23

var index = (0,_emotion_memoize__WEBPACK_IMPORTED_MODULE_0__["default"])(function (prop) {
  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111
  /* o */
  && prop.charCodeAt(1) === 110
  /* n */
  && prop.charCodeAt(2) < 91;
}
/* Z+1 */
);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (index);


/***/ }),
/* 22 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function memoize(fn) {
  var cache = {};
  return function (arg) {
    if (cache[arg] === undefined) cache[arg] = fn(arg);
    return cache[arg];
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (memoize);


/***/ }),
/* 23 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var reactIs = __webpack_require__(15);

/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */
var REACT_STATICS = {
  childContextTypes: true,
  contextType: true,
  contextTypes: true,
  defaultProps: true,
  displayName: true,
  getDefaultProps: true,
  getDerivedStateFromError: true,
  getDerivedStateFromProps: true,
  mixins: true,
  propTypes: true,
  type: true
};
var KNOWN_STATICS = {
  name: true,
  length: true,
  prototype: true,
  caller: true,
  callee: true,
  arguments: true,
  arity: true
};
var FORWARD_REF_STATICS = {
  '$$typeof': true,
  render: true,
  defaultProps: true,
  displayName: true,
  propTypes: true
};
var MEMO_STATICS = {
  '$$typeof': true,
  compare: true,
  defaultProps: true,
  displayName: true,
  propTypes: true,
  type: true
};
var TYPE_STATICS = {};
TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;

function getStatics(component) {
  // React v16.11 and below
  if (reactIs.isMemo(component)) {
    return MEMO_STATICS;
  } // React v16.12 and above


  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;
}

var defineProperty = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = Object.prototype;
function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
  if (typeof sourceComponent !== 'string') {
    // don't hoist over string (html) components
    if (objectPrototype) {
      var inheritedComponent = getPrototypeOf(sourceComponent);

      if (inheritedComponent && inheritedComponent !== objectPrototype) {
        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
      }
    }

    var keys = getOwnPropertyNames(sourceComponent);

    if (getOwnPropertySymbols) {
      keys = keys.concat(getOwnPropertySymbols(sourceComponent));
    }

    var targetStatics = getStatics(targetComponent);
    var sourceStatics = getStatics(sourceComponent);

    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];

      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);

        try {
          // Avoid failures from read-only properties
          defineProperty(targetComponent, key, descriptor);
        } catch (e) {}
      }
    }
  }

  return targetComponent;
}

module.exports = hoistNonReactStatics;


/***/ }),
/* 24 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);
/* harmony import */ var _common_Logo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(25);
/* harmony import */ var _common_Spinner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(36);
/* harmony import */ var _common_Text__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(37);
/* harmony import */ var _popup_Environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(38);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(8);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(14);







const RootContainer = styled_components__WEBPACK_IMPORTED_MODULE_6__["default"].div `
  min-width: 352px;
  min-height: 412px;

  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
`;
const LabelContainer = styled_components__WEBPACK_IMPORTED_MODULE_6__["default"].div `
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;

  margin-top: var(--s-168);
`;
const SpinnerContainer = styled_components__WEBPACK_IMPORTED_MODULE_6__["default"].div `
  margin-right: var(--s-12);
`;
function Loading() {
    (0,react__WEBPACK_IMPORTED_MODULE_5__.useEffect)(() => {
        const start = window.performance.now();
        return () => {
            if (!_popup_Environment__WEBPACK_IMPORTED_MODULE_4__["default"].IS_DEV)
                return;
            console.info("Showed loading for", window.performance.now() - start, "ms");
        };
    }, []);
    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(RootContainer, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_common_Logo__WEBPACK_IMPORTED_MODULE_1__["default"], {}, void 0), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(LabelContainer, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SpinnerContainer, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_common_Spinner__WEBPACK_IMPORTED_MODULE_2__["default"], { alternative: true }, void 0) }, void 0), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_common_Text__WEBPACK_IMPORTED_MODULE_3__["default"], { size: _common_Text__WEBPACK_IMPORTED_MODULE_3__.TextSizes.LARGE, height: _common_Text__WEBPACK_IMPORTED_MODULE_3__.TextHeights.LARGE, children: "Loading..." }, void 0)] }, void 0)] }, void 0));
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Loading);


/***/ }),
/* 25 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LogoSizes": () => (/* binding */ LogoSizes),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);
/* harmony import */ var _popup_components_common_Icon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(26);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(14);



const Root = styled_components__WEBPACK_IMPORTED_MODULE_2__["default"].div `
  background: var(--c-white);
  border-radius: 50%;

  ${(props) => props.clickable &&
    styled_components__WEBPACK_IMPORTED_MODULE_2__.css `
      cursor: pointer;
    `}

  ${(props) => styled_components__WEBPACK_IMPORTED_MODULE_2__.css `
    width: ${props.width};
    height: ${props.height};
  `}

  display: flex;
  justify-content: center;
  align-items: center;
`;
var LogoSizes;
(function (LogoSizes) {
    LogoSizes["SMALL"] = "small";
    LogoSizes["MEDIUM"] = "medium";
})(LogoSizes || (LogoSizes = {}));
const Sizes = {
    [LogoSizes.SMALL]: {
        name: _popup_components_common_Icon__WEBPACK_IMPORTED_MODULE_1__.IconNames.LOGO_SMALL,
        container: {
            width: "32px",
            height: "32px",
        },
        logo: {
            width: "20px",
            height: "16px",
        },
    },
    [LogoSizes.MEDIUM]: {
        name: _popup_components_common_Icon__WEBPACK_IMPORTED_MODULE_1__.IconNames.LOGO,
        container: {
            width: "80px",
            height: "80px",
        },
        logo: {
            width: "46px",
            height: "40px",
        },
    },
};
Logo.defaultProps = {
    clickable: false,
    size: LogoSizes.MEDIUM,
};
function Logo(props) {
    const { size, ...otherProps } = props;
    const { name, logo, container } = Sizes[size];
    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Root, { ...container, ...otherProps, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_popup_components_common_Icon__WEBPACK_IMPORTED_MODULE_1__["default"], { name: name, ...logo }, void 0) }, void 0));
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Logo);


/***/ }),
/* 26 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "IconNames": () => (/* binding */ IconNames),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);
/* harmony import */ var _assets_fractal_full_logo_svg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(27);
/* harmony import */ var _assets_logo_name_svg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(28);
/* harmony import */ var _assets_logo_small_svg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(29);
/* harmony import */ var _assets_logo_svg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(30);
/* harmony import */ var _assets_protocol_setup_failure_svg__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(31);
/* harmony import */ var _assets_protocol_setup_pending_svg__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(32);
/* harmony import */ var _assets_protocol_setup_success_svg__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(33);
/* harmony import */ var _assets_protocol_svg__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(34);
/* harmony import */ var _assets_welcome_svg__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(35);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(14);











const Root = styled_components__WEBPACK_IMPORTED_MODULE_10__["default"].div `
  ${(props) => props.clickable &&
    styled_components__WEBPACK_IMPORTED_MODULE_10__.css `
      cursor: pointer;
    `}
`;
var IconNames;
(function (IconNames) {
    IconNames["LOGO"] = "logo";
    IconNames["LOGO_SMALL"] = "logo-small";
    IconNames["LOGO_NAME"] = "logo-name";
    IconNames["FRACTAL_FULL_LOGO"] = "fractal-full-logo";
    IconNames["WELCOME"] = "welcome";
    IconNames["PROTOCOL"] = "protocol";
    IconNames["PROTOCOL_SETUP_SUCCESS"] = "protocol-setup-success";
    IconNames["PROTOCOL_SETUP_FAILURE"] = "protocol-setup-failure";
    IconNames["PROTOCOL_SETUP_PENDING"] = "protocol-setup-pending";
})(IconNames || (IconNames = {}));
const Icons = {
    [IconNames.LOGO_NAME]: _assets_logo_name_svg__WEBPACK_IMPORTED_MODULE_2__["default"],
    [IconNames.LOGO]: _assets_logo_svg__WEBPACK_IMPORTED_MODULE_4__["default"],
    [IconNames.LOGO_SMALL]: _assets_logo_small_svg__WEBPACK_IMPORTED_MODULE_3__["default"],
    [IconNames.FRACTAL_FULL_LOGO]: _assets_fractal_full_logo_svg__WEBPACK_IMPORTED_MODULE_1__["default"],
    [IconNames.WELCOME]: _assets_welcome_svg__WEBPACK_IMPORTED_MODULE_9__["default"],
    [IconNames.PROTOCOL]: _assets_protocol_svg__WEBPACK_IMPORTED_MODULE_8__["default"],
    [IconNames.PROTOCOL_SETUP_SUCCESS]: _assets_protocol_setup_success_svg__WEBPACK_IMPORTED_MODULE_7__["default"],
    [IconNames.PROTOCOL_SETUP_FAILURE]: _assets_protocol_setup_failure_svg__WEBPACK_IMPORTED_MODULE_5__["default"],
    [IconNames.PROTOCOL_SETUP_PENDING]: _assets_protocol_setup_pending_svg__WEBPACK_IMPORTED_MODULE_6__["default"],
};
Icon.defaultProps = {
    clickable: false,
};
function Icon(props) {
    const { name, clickable, onClick, ...otherProps } = props;
    const SVG = Icons[name];
    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Root, { clickable: clickable, onClick: onClick, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SVG, { alt: name, ...otherProps }, void 0) }, void 0));
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Icon);


/***/ }),
/* 27 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8);
var _rect, _g, _defs;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }



var SvgFractalFullLogo = function SvgFractalFullLogo(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    width: 107,
    height: 40,
    viewBox: "0 0 107 40",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), _rect || (_rect = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("rect", {
    width: 106.881,
    height: 40,
    rx: 12,
    fill: "white"
  })), _g || (_g = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    clipPath: "url(#clip0)"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M33.7788 7.663C33.7788 7.663 27.7965 9.30965 25.534 9.95086C23.2714 10.5921 21.8685 15.4206 21.8535 15.4628L15.217 17.3202C15.217 17.3202 12.8032 17.7988 12.8032 20.2887C12.8032 22.6518 15.217 21.7637 15.217 21.7637C15.217 21.7637 16.3724 21.4627 18.629 20.8155C20.8855 20.1683 21.8478 15.5082 21.8539 15.4661L33.7792 12.1547C33.7792 12.1547 36.1929 11.6397 36.1929 9.14437C36.2044 6.77498 33.7788 7.663 33.7788 7.663Z",
    fill: "#FF671D"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M9.93137 32.3357L18.6257 29.8883C20.8731 29.2501 21.8414 24.581 21.8536 24.5359L28.4905 22.6785C28.4905 22.6785 30.9042 22.1998 30.9042 19.7103C30.9042 17.3501 28.4727 18.1871 28.4727 18.1871C28.4727 18.1871 27.3203 18.4881 25.0637 19.1353C22.8072 19.7824 21.8448 24.4937 21.8358 24.5359L9.91327 27.8473C9.91327 27.8473 7.49951 28.3651 7.49951 30.8577C7.50618 33.2268 9.93137 32.3357 9.93137 32.3357Z",
    fill: "#FF671D"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M41.0435 15.752H46.1418V16.4714H41.8367V19.4969H45.8399V20.2164H41.8367V24.2472H41.0435V15.752Z",
    fill: "#4D4D4D"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M49.1855 15.752H51.8765C52.0869 15.763 52.2964 15.7872 52.5038 15.8242C52.7375 15.8672 52.9668 15.9317 53.1886 16.0169C53.4197 16.104 53.6317 16.2348 53.8131 16.4022C54.0067 16.5814 54.1626 16.7973 54.2716 17.0374C54.4003 17.3323 54.4622 17.652 54.4526 17.9736C54.4648 18.3208 54.3923 18.6659 54.2414 18.979C54.1139 19.2334 53.9328 19.4573 53.7105 19.6353C53.5002 19.7982 53.262 19.9217 53.0075 19.9997C52.7687 20.0776 52.5234 20.134 52.2744 20.1683L54.7515 24.2471H53.8463L51.454 20.2163H49.976V24.2471H49.1855V15.752ZM49.979 19.4968H51.6623C52.0079 19.5087 52.3527 19.4555 52.6786 19.3402C52.9055 19.2573 53.1115 19.1258 53.282 18.9549C53.422 18.819 53.5257 18.6503 53.5838 18.4643C53.6336 18.3095 53.6601 18.1482 53.6622 17.9856C53.6601 17.8221 53.6337 17.6598 53.5838 17.504C53.5244 17.3185 53.4209 17.1501 53.282 17.0133C53.1107 16.8434 52.9049 16.7121 52.6786 16.628C52.3523 16.5141 52.0078 16.461 51.6623 16.4714H49.979V19.4968Z",
    fill: "#4D4D4D"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M60.3781 15.752H61.196L64.7769 24.2471H63.8717L62.9486 21.9924H58.4233L57.461 24.2471H56.6313L60.3781 15.752ZM60.7522 16.6249L58.7672 21.2819H62.689L60.7522 16.6249Z",
    fill: "#4D4D4D"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M74.4725 22.9164C74.1112 23.4287 73.6226 23.8385 73.0546 24.1055C72.5052 24.3463 71.911 24.4683 71.3109 24.4637C70.6995 24.4719 70.0926 24.3593 69.525 24.1326C69.003 23.9255 68.5303 23.6117 68.1372 23.2114C67.7431 22.8042 67.4353 22.3218 67.2321 21.7932C66.7976 20.6384 66.7976 19.3656 67.2321 18.2109C67.4367 17.6858 67.7445 17.2068 68.1372 16.802C68.5298 16.3989 69.0025 16.0821 69.5249 15.8718C70.0921 15.6431 70.6991 15.5285 71.3108 15.5347C71.8644 15.5283 72.4138 15.6306 72.9278 15.8358C73.4546 16.0561 73.9129 16.4126 74.2557 16.8685L73.6041 17.4073C73.3568 17.0238 73.0039 16.7196 72.5877 16.5313C72.1895 16.3511 71.7573 16.2577 71.32 16.2574C70.8016 16.2517 70.2877 16.3543 69.8114 16.5584C69.3814 16.7408 68.994 17.0104 68.674 17.3502C68.3553 17.6994 68.1101 18.1089 67.953 18.5545C67.6151 19.51 67.6151 20.5521 67.953 21.5077C68.1112 21.9473 68.3564 22.3506 68.674 22.6937C68.9924 23.0353 69.3802 23.3052 69.8114 23.4855C70.2877 23.6897 70.8016 23.7922 71.32 23.7866C71.5464 23.7849 71.772 23.7587 71.9927 23.7083C72.2279 23.6556 72.4558 23.5747 72.6715 23.4674C72.897 23.3557 73.1095 23.2194 73.305 23.061C73.5107 22.8883 73.6887 22.6852 73.833 22.4589L74.4725 22.9164Z",
    fill: "#4D4D4D"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M79.2719 16.4714H76.3667V15.752H82.9734V16.4714H80.0652V24.2471H79.2718L79.2719 16.4714Z",
    fill: "#4D4D4D"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M87.529 15.752H88.3468L91.9309 24.2471H91.0257L90.0996 21.9924H85.6074L84.6451 24.2471H83.8154L87.529 15.752ZM87.9061 16.6249L85.9211 21.2819H89.8427L87.9061 16.6249Z",
    fill: "#4D4D4D"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M94.6152 15.752H95.4087V23.5276H99.3787V24.2471H94.6152V15.752Z",
    fill: "#4D4D4D"
  }))), _defs || (_defs = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("defs", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("clipPath", {
    id: "clip0"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("rect", {
    x: 7.5,
    y: 7.5,
    width: 91.879,
    height: 25,
    rx: 12,
    fill: "white"
  })))));
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SvgFractalFullLogo);

/***/ }),
/* 28 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8);
var _g, _defs;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }



var SvgLogoName = function SvgLogoName(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    width: 148,
    height: 40,
    viewBox: "0 0 148 40",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), _g || (_g = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    clipPath: "url(#clip0)"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M42.0467 0.260798C42.0467 0.260798 32.475 2.89543 28.8549 3.92137C25.2348 4.94731 22.9902 12.673 22.9661 12.7404L12.3477 15.7123C12.3477 15.7123 8.48572 16.4781 8.48572 20.4619C8.48572 24.2429 12.3477 22.822 12.3477 22.822C12.3477 22.822 14.1964 22.3402 17.8069 21.3048C21.4174 20.2694 22.9571 12.8132 22.9667 12.7458L42.0472 7.44758C42.0472 7.44758 45.9092 6.62358 45.9092 2.63099C45.9275 -1.16003 42.0467 0.260798 42.0467 0.260798Z",
    fill: "#FF671D"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M3.89049 39.7371L17.8013 35.8212C21.3973 34.8001 22.9465 27.3296 22.966 27.2573L33.585 24.2855C33.585 24.2855 37.447 23.5197 37.447 19.5363C37.447 15.7601 33.5566 17.0992 33.5566 17.0992C33.5566 17.0992 31.7127 17.5809 28.1022 18.6164C24.4918 19.6518 22.952 27.1899 22.9376 27.2573L3.86152 32.5556C3.86152 32.5556 -0.000488281 33.3841 -0.000488281 37.3722C0.0101831 41.1628 3.89049 39.7371 3.89049 39.7371Z",
    fill: "#FF671D"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M53.6697 13.2031H61.827V14.3543H54.9388V19.195H61.344V20.3462H54.9388V26.7955H53.6697V13.2031Z",
    fill: "#4D4D4D"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M66.6973 13.2031H71.0028C71.3394 13.2208 71.6746 13.2595 72.0064 13.3187C72.3804 13.3874 72.7472 13.4907 73.1021 13.627C73.4719 13.7663 73.8112 13.9757 74.1013 14.2435C74.4111 14.5302 74.6606 14.8757 74.8349 15.2598C75.0409 15.7317 75.1398 16.2432 75.1246 16.7577C75.1441 17.3133 75.0281 17.8654 74.7867 18.3664C74.5827 18.7735 74.2929 19.1317 73.9371 19.4164C73.6007 19.6771 73.2196 19.8747 72.8125 19.9996C72.4303 20.1241 72.0377 20.2144 71.6395 20.2693L75.6028 26.7954H74.1545L70.3268 20.346H67.9619V26.7954H66.6973V13.2031ZM67.9668 19.1949H70.66C71.213 19.2138 71.7646 19.1289 72.2861 18.9444C72.6493 18.8118 72.9788 18.6013 73.2516 18.3279C73.4755 18.1104 73.6414 17.8405 73.7344 17.5428C73.8142 17.2952 73.8565 17.0371 73.8599 16.777C73.8566 16.5153 73.8143 16.2556 73.7344 16.0064C73.6394 15.7096 73.4738 15.4402 73.2516 15.2213C72.9775 14.9495 72.6483 14.7393 72.2861 14.6048C71.7641 14.4226 71.2129 14.3377 70.66 14.3543H67.9668V19.1949Z",
    fill: "#4D4D4D"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M84.605 13.2031H85.9135L91.643 26.7954H90.1947L88.7178 23.1878H81.4773L79.9375 26.7954H78.6101L84.605 13.2031ZM85.2035 14.5999L82.0275 22.0511H88.3023L85.2035 14.5999Z",
    fill: "#4D4D4D"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M107.156 24.6661C106.578 25.4859 105.796 26.1415 104.887 26.5686C104.008 26.9539 103.058 27.1492 102.098 27.1418C101.119 27.1549 100.148 26.9748 99.24 26.612C98.4049 26.2807 97.6486 25.7787 97.0196 25.1382C96.389 24.4865 95.8965 23.7148 95.5714 22.869C94.8763 21.0214 94.8763 18.9849 95.5714 17.1373C95.8988 16.2971 96.3912 15.5307 97.0196 14.8831C97.6478 14.2382 98.404 13.7313 99.2399 13.3948C100.147 13.0288 101.119 12.8455 102.097 12.8554C102.983 12.8453 103.862 13.0089 104.685 13.3371C105.527 13.6897 106.261 14.2601 106.809 14.9896L105.767 15.8516C105.371 15.238 104.806 14.7513 104.14 14.4501C103.503 14.1616 102.812 14.0122 102.112 14.0117C101.283 14.0027 100.46 14.1667 99.6982 14.4934C99.0102 14.7852 98.3905 15.2166 97.8785 15.7602C97.3685 16.3189 96.9762 16.9742 96.7249 17.6871C96.1842 19.2159 96.1842 20.8833 96.7249 22.4121C96.978 23.1155 97.3703 23.7609 97.8785 24.3099C98.388 24.8564 99.0083 25.2883 99.6982 25.5767C100.46 25.9033 101.283 26.0674 102.112 26.0584C102.474 26.0558 102.835 26.0138 103.188 25.9331C103.565 25.8488 103.929 25.7194 104.274 25.5478C104.635 25.369 104.975 25.1509 105.288 24.8976C105.617 24.6212 105.902 24.2963 106.133 23.9341L107.156 24.6661Z",
    fill: "#4D4D4D"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M114.836 14.3543H110.187V13.2031H120.758V14.3543H116.105V26.7954H114.835L114.836 14.3543Z",
    fill: "#4D4D4D"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M128.046 13.2031H129.355L135.089 26.7954H133.641L132.159 23.1878H124.972L123.432 26.7954H122.105L128.046 13.2031ZM128.65 14.5999L125.474 22.0511H131.748L128.65 14.5999Z",
    fill: "#4D4D4D"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M139.385 13.2031H140.654V25.6442H147.006V26.7954H139.385V13.2031Z",
    fill: "#4D4D4D"
  }))), _defs || (_defs = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("defs", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("clipPath", {
    id: "clip0"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("rect", {
    width: 147.006,
    height: 40,
    fill: "white"
  })))));
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SvgLogoName);

/***/ }),
/* 29 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8);
var _path, _path2;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }



var SvgLogoSmall = function SvgLogoSmall(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    width: 20,
    height: 16,
    viewBox: "0 0 20 16",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), _path || (_path = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M17.6187 0.104319C17.6187 0.104319 13.79 1.15817 12.342 1.56855C10.8939 1.97893 9.9961 5.06919 9.98644 5.09617L5.73909 6.28491C5.73909 6.28491 4.19429 6.59123 4.19429 8.18477C4.19429 9.69717 5.73909 9.12879 5.73909 9.12879C5.73909 9.12879 6.47857 8.9361 7.92276 8.52192C9.36694 8.10774 9.98283 5.12528 9.9867 5.0983L17.6189 2.97903C17.6189 2.97903 19.1637 2.64943 19.1637 1.0524C19.171 -0.464011 17.6187 0.104319 17.6187 0.104319Z",
    fill: "#FF671D"
  })), _path2 || (_path2 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M2.35619 15.8949L7.92054 14.3286C9.35893 13.9201 9.97858 10.9319 9.98641 10.903L14.234 9.71429C14.234 9.71429 15.7788 9.40796 15.7788 7.81463C15.7788 6.30415 14.2226 6.83978 14.2226 6.83978C14.2226 6.83978 13.4851 7.03247 12.0409 7.44665C10.5967 7.86082 9.98082 10.876 9.97502 10.903L2.34461 13.0223C2.34461 13.0223 0.799805 13.3537 0.799805 14.949C0.804073 16.4652 2.35619 15.8949 2.35619 15.8949Z",
    fill: "#FF671D"
  })));
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SvgLogoSmall);

/***/ }),
/* 30 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8);
var _path, _path2;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }



var SvgLogo = function SvgLogo(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    width: 46,
    height: 40,
    viewBox: "0 0 46 40",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), _path || (_path = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M42.0467 0.260798C42.0467 0.260798 32.475 2.89543 28.8549 3.92137C25.2348 4.94731 22.9902 12.673 22.9661 12.7404L12.3477 15.7123C12.3477 15.7123 8.48572 16.4781 8.48572 20.4619C8.48572 24.2429 12.3477 22.822 12.3477 22.822C12.3477 22.822 14.1964 22.3402 17.8069 21.3048C21.4174 20.2694 22.9571 12.8132 22.9667 12.7458L42.0472 7.44758C42.0472 7.44758 45.9092 6.62358 45.9092 2.63099C45.9275 -1.16003 42.0467 0.260798 42.0467 0.260798Z",
    fill: "#FF671D"
  })), _path2 || (_path2 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M3.89049 39.7373L17.8013 35.8214C21.3973 34.8003 22.9465 27.3298 22.966 27.2576L33.585 24.2857C33.585 24.2857 37.447 23.5199 37.447 19.5366C37.447 15.7604 33.5566 17.0994 33.5566 17.0994C33.5566 17.0994 31.7127 17.5812 28.1022 18.6166C24.4918 19.6521 22.952 27.1901 22.9376 27.2576L3.86152 32.5559C3.86152 32.5559 -0.000488281 33.3843 -0.000488281 37.3724C0.0101831 41.1631 3.89049 39.7373 3.89049 39.7373Z",
    fill: "#FF671D"
  })));
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SvgLogo);

/***/ }),
/* 31 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8);
var _circle, _g, _defs;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }



var SvgProtocolSetupFailure = function SvgProtocolSetupFailure(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    width: 64,
    height: 64,
    viewBox: "0 0 64 64",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), _circle || (_circle = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
    opacity: 0.4,
    cx: 32,
    cy: 32,
    r: 32,
    fill: "url(#paint0_linear)"
  })), _g || (_g = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    filter: "url(#filter0_d)"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
    cx: 32,
    cy: 32,
    r: 12,
    fill: "#29DBB0"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M37.4638 27.2628L29.7614 34.8504L26.546 31.6829C26.3761 31.5156 26.1458 31.4216 25.9056 31.4216C25.6654 31.4216 25.4351 31.5156 25.2652 31.6829C25.0954 31.8502 25 32.0771 25 32.3137C25 32.4309 25.0234 32.5469 25.0689 32.6551C25.1144 32.7633 25.1812 32.8617 25.2652 32.9445L29.1165 36.7383C29.4707 37.0872 30.0429 37.0872 30.3972 36.7383L38.7355 28.5244C38.8201 28.4407 38.8871 28.3413 38.9325 28.232C38.9779 28.1226 39.0008 28.0055 39 27.8873C38.9991 27.7692 38.9745 27.6523 38.9276 27.5436C38.8806 27.4349 38.8122 27.3364 38.7264 27.2539C38.3903 26.9139 37.8181 26.9139 37.4638 27.2628Z",
    fill: "white"
  }))), _defs || (_defs = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("defs", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("filter", {
    id: "filter0_d",
    x: 8,
    y: 16,
    width: 48,
    height: 48,
    filterUnits: "userSpaceOnUse",
    colorInterpolationFilters: "sRGB"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("feFlood", {
    floodOpacity: 0,
    result: "BackgroundImageFix"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    type: "matrix",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("feOffset", {
    dy: 8
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("feGaussianBlur", {
    stdDeviation: 6
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("feColorMatrix", {
    type: "matrix",
    values: "0 0 0 0 0.0745098 0 0 0 0 0.172549 0 0 0 0 0.32549 0 0 0 1 0"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("feBlend", {
    mode: "normal",
    in2: "BackgroundImageFix",
    result: "effect1_dropShadow"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("feBlend", {
    mode: "normal",
    "in": "SourceGraphic",
    in2: "effect1_dropShadow",
    result: "shape"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("linearGradient", {
    id: "paint0_linear",
    x1: 32,
    y1: 0,
    x2: 32,
    y2: 64,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "white"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 1,
    stopColor: "white",
    stopOpacity: 0
  })))));
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SvgProtocolSetupFailure);

/***/ }),
/* 32 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8);
var _circle, _g, _defs;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }



var SvgProtocolSetupPending = function SvgProtocolSetupPending(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    width: 64,
    height: 64,
    viewBox: "0 0 64 64",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), _circle || (_circle = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
    opacity: 0.4,
    cx: 32,
    cy: 32,
    r: 32,
    fill: "url(#paint0_linear)"
  })), _g || (_g = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    filter: "url(#filter0_d)"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
    cx: 32,
    cy: 32,
    r: 12,
    fill: "#29DBB0"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M37.4638 27.2628L29.7614 34.8504L26.546 31.6829C26.3761 31.5156 26.1458 31.4216 25.9056 31.4216C25.6654 31.4216 25.4351 31.5156 25.2652 31.6829C25.0954 31.8502 25 32.0771 25 32.3137C25 32.4309 25.0234 32.5469 25.0689 32.6551C25.1144 32.7633 25.1812 32.8617 25.2652 32.9445L29.1165 36.7383C29.4707 37.0872 30.0429 37.0872 30.3972 36.7383L38.7355 28.5244C38.8201 28.4407 38.8871 28.3413 38.9325 28.232C38.9779 28.1226 39.0008 28.0055 39 27.8873C38.9991 27.7692 38.9745 27.6523 38.9276 27.5436C38.8806 27.4349 38.8122 27.3364 38.7264 27.2539C38.3903 26.9139 37.8181 26.9139 37.4638 27.2628Z",
    fill: "white"
  }))), _defs || (_defs = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("defs", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("filter", {
    id: "filter0_d",
    x: 8,
    y: 16,
    width: 48,
    height: 48,
    filterUnits: "userSpaceOnUse",
    colorInterpolationFilters: "sRGB"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("feFlood", {
    floodOpacity: 0,
    result: "BackgroundImageFix"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    type: "matrix",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("feOffset", {
    dy: 8
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("feGaussianBlur", {
    stdDeviation: 6
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("feColorMatrix", {
    type: "matrix",
    values: "0 0 0 0 0.0745098 0 0 0 0 0.172549 0 0 0 0 0.32549 0 0 0 1 0"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("feBlend", {
    mode: "normal",
    in2: "BackgroundImageFix",
    result: "effect1_dropShadow"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("feBlend", {
    mode: "normal",
    "in": "SourceGraphic",
    in2: "effect1_dropShadow",
    result: "shape"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("linearGradient", {
    id: "paint0_linear",
    x1: 32,
    y1: 0,
    x2: 32,
    y2: 64,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "white"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 1,
    stopColor: "white",
    stopOpacity: 0
  })))));
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SvgProtocolSetupPending);

/***/ }),
/* 33 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8);
var _circle, _g, _defs;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }



var SvgProtocolSetupSuccess = function SvgProtocolSetupSuccess(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    width: 64,
    height: 64,
    viewBox: "0 0 64 64",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), _circle || (_circle = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
    opacity: 0.4,
    cx: 32,
    cy: 32,
    r: 32,
    fill: "url(#paint0_linear)"
  })), _g || (_g = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    filter: "url(#filter0_d)"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
    cx: 32,
    cy: 32,
    r: 12,
    fill: "#29DBB0"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M37.4638 27.2628L29.7614 34.8504L26.546 31.6829C26.3761 31.5156 26.1458 31.4216 25.9056 31.4216C25.6654 31.4216 25.4351 31.5156 25.2652 31.6829C25.0954 31.8502 25 32.0771 25 32.3137C25 32.4309 25.0234 32.5469 25.0689 32.6551C25.1144 32.7633 25.1812 32.8617 25.2652 32.9445L29.1165 36.7383C29.4707 37.0872 30.0429 37.0872 30.3972 36.7383L38.7355 28.5244C38.8201 28.4407 38.8871 28.3413 38.9325 28.232C38.9779 28.1226 39.0008 28.0055 39 27.8873C38.9991 27.7692 38.9745 27.6523 38.9276 27.5436C38.8806 27.4349 38.8122 27.3364 38.7264 27.2539C38.3903 26.9139 37.8181 26.9139 37.4638 27.2628Z",
    fill: "white"
  }))), _defs || (_defs = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("defs", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("filter", {
    id: "filter0_d",
    x: 8,
    y: 16,
    width: 48,
    height: 48,
    filterUnits: "userSpaceOnUse",
    colorInterpolationFilters: "sRGB"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("feFlood", {
    floodOpacity: 0,
    result: "BackgroundImageFix"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    type: "matrix",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("feOffset", {
    dy: 8
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("feGaussianBlur", {
    stdDeviation: 6
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("feColorMatrix", {
    type: "matrix",
    values: "0 0 0 0 0.0745098 0 0 0 0 0.172549 0 0 0 0 0.32549 0 0 0 1 0"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("feBlend", {
    mode: "normal",
    in2: "BackgroundImageFix",
    result: "effect1_dropShadow"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("feBlend", {
    mode: "normal",
    "in": "SourceGraphic",
    in2: "effect1_dropShadow",
    result: "shape"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("linearGradient", {
    id: "paint0_linear",
    x1: 32,
    y1: 0,
    x2: 32,
    y2: 64,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "white"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 1,
    stopColor: "white",
    stopOpacity: 0
  })))));
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SvgProtocolSetupSuccess);

/***/ }),
/* 34 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8);
var _g, _circle, _circle2, _circle3, _circle4, _circle5, _circle6, _circle7, _path, _path2, _defs;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }



var SvgProtocol = function SvgProtocol(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    width: 170,
    height: 81,
    viewBox: "0 0 170 81",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), _g || (_g = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    filter: "url(#filter0_d)"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
    cx: 113.5,
    cy: 20.5,
    r: 16.5,
    fill: "url(#paint0_radial)"
  }))), _circle || (_circle = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
    opacity: 0.4,
    cx: 168,
    cy: 41,
    r: 2,
    fill: "url(#paint1_linear)"
  })), _circle2 || (_circle2 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
    opacity: 0.4,
    cx: 149,
    cy: 41,
    r: 2,
    fill: "url(#paint2_linear)"
  })), _circle3 || (_circle3 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
    opacity: 0.4,
    cx: 130,
    cy: 41,
    r: 2,
    fill: "url(#paint3_linear)"
  })), _circle4 || (_circle4 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
    opacity: 0.4,
    cx: 40,
    cy: 41,
    r: 2,
    fill: "url(#paint4_linear)"
  })), _circle5 || (_circle5 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
    opacity: 0.4,
    cx: 21,
    cy: 41,
    r: 2,
    fill: "url(#paint5_linear)"
  })), _circle6 || (_circle6 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
    opacity: 0.4,
    cx: 2,
    cy: 41,
    r: 2,
    fill: "url(#paint6_linear)"
  })), _circle7 || (_circle7 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
    cx: 85,
    cy: 41,
    r: 40,
    fill: "url(#paint7_linear)"
  })), _path || (_path = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M100.638 23.2086C100.638 23.2086 92.9805 25.3163 90.0844 26.1371C87.1883 26.9578 85.3926 33.1384 85.3733 33.1923L76.8787 35.5698C76.8787 35.5698 73.7891 36.1824 73.7891 39.3695C73.7891 42.3943 76.8787 41.2575 76.8787 41.2575C76.8787 41.2575 78.3576 40.8722 81.246 40.0438C84.1343 39.2154 85.3661 33.2505 85.3738 33.1966L100.638 28.958C100.638 28.958 103.728 28.2989 103.728 25.1048C103.742 22.072 100.638 23.2086 100.638 23.2086Z",
    fill: "#FF671D"
  })), _path2 || (_path2 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M70.1128 54.7898L81.2414 51.6571C84.1182 50.8402 85.3575 44.8638 85.3732 44.806L93.8683 42.4286C93.8683 42.4286 96.9579 41.8159 96.9579 38.6293C96.9579 35.6083 93.8456 36.6796 93.8456 36.6796C93.8456 36.6796 92.3705 37.0649 89.4821 37.8933C86.5938 38.7216 85.362 44.7521 85.3504 44.806L70.0896 49.0447C70.0896 49.0447 67 49.7074 67 52.8979C67.0085 55.9304 70.1128 54.7898 70.1128 54.7898Z",
    fill: "#FF671D"
  })), _defs || (_defs = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("defs", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("filter", {
    id: "filter0_d",
    x: 89,
    y: 0,
    width: 49,
    height: 49,
    filterUnits: "userSpaceOnUse",
    colorInterpolationFilters: "sRGB"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("feFlood", {
    floodOpacity: 0,
    result: "BackgroundImageFix"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("feColorMatrix", {
    "in": "SourceAlpha",
    type: "matrix",
    values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
    result: "hardAlpha"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("feOffset", {
    dy: 4
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("feGaussianBlur", {
    stdDeviation: 4
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("feColorMatrix", {
    type: "matrix",
    values: "0 0 0 0 1 0 0 0 0 0.770206 0 0 0 0 0.658333 0 0 0 1 0"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("feBlend", {
    mode: "normal",
    in2: "BackgroundImageFix",
    result: "effect1_dropShadow"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("feBlend", {
    mode: "normal",
    "in": "SourceGraphic",
    in2: "effect1_dropShadow",
    result: "shape"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("radialGradient", {
    id: "paint0_radial",
    cx: 0,
    cy: 0,
    r: 1,
    gradientUnits: "userSpaceOnUse",
    gradientTransform: "translate(104.734 9.15625) rotate(49.9392) scale(29.6428 23.8995)"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 0.100448,
    stopColor: "#FFEADF"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 0.44346,
    stopColor: "#FFC6AA"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 0.875,
    stopColor: "#FF671D"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 1,
    stopColor: "#E14A00"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("linearGradient", {
    id: "paint1_linear",
    x1: 168,
    y1: 39,
    x2: 168,
    y2: 43,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "white"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 1,
    stopColor: "white",
    stopOpacity: 0
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("linearGradient", {
    id: "paint2_linear",
    x1: 149,
    y1: 39,
    x2: 149,
    y2: 43,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "white"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 1,
    stopColor: "white",
    stopOpacity: 0
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("linearGradient", {
    id: "paint3_linear",
    x1: 130,
    y1: 39,
    x2: 130,
    y2: 43,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "white"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 1,
    stopColor: "white",
    stopOpacity: 0
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("linearGradient", {
    id: "paint4_linear",
    x1: 40,
    y1: 39,
    x2: 40,
    y2: 43,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "white"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 1,
    stopColor: "white",
    stopOpacity: 0
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("linearGradient", {
    id: "paint5_linear",
    x1: 21,
    y1: 39,
    x2: 21,
    y2: 43,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "white"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 1,
    stopColor: "white",
    stopOpacity: 0
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("linearGradient", {
    id: "paint6_linear",
    x1: 2,
    y1: 39,
    x2: 2,
    y2: 43,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "white"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 1,
    stopColor: "white",
    stopOpacity: 0
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("linearGradient", {
    id: "paint7_linear",
    x1: 85,
    y1: 16,
    x2: 85,
    y2: 81,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "white"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 1,
    stopColor: "white",
    stopOpacity: 0.4
  })))));
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SvgProtocol);

/***/ }),
/* 35 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8);
var _circle, _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _defs;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }



var SvgWelcome = function SvgWelcome(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    width: 64,
    height: 64,
    viewBox: "0 0 64 64",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props), _circle || (_circle = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
    opacity: 0.4,
    cx: 32,
    cy: 32,
    r: 32,
    fill: "url(#paint0_linear)"
  })), _path || (_path = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M20.075 44.3749C19.7 44.2999 19.4 44.2249 19.025 44.0749C18.65 43.9249 18.35 43.8499 18.05 43.6999C17.375 43.3999 16.775 43.0249 16.175 42.5749C14.975 41.7499 14 40.6249 13.25 39.2749C12.5 37.9999 12.05 36.4999 11.975 35.0749C11.9 34.3249 11.975 33.6499 12.05 32.8999C12.125 32.5249 12.2 32.2249 12.275 31.8499C12.35 31.4749 12.5 31.1749 12.575 30.7999L12.65 31.8499C12.65 32.2249 12.725 32.5249 12.8 32.8999C12.875 33.5749 13.025 34.2499 13.175 34.8499C13.475 36.1249 13.925 37.3249 14.6 38.4499C15.275 39.5749 16.025 40.6249 17 41.5999C17.45 42.0499 17.975 42.4999 18.5 42.9499C18.725 43.1749 19.025 43.3999 19.325 43.6249L20.075 44.3749Z",
    fill: "#FF671D"
  })), _path2 || (_path2 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M19.85 47.0749C19.625 47.2249 19.325 47.2999 19.025 47.3749C18.725 47.4499 18.5 47.5249 18.2 47.5249C17.675 47.5999 17.075 47.6749 16.475 47.5999C15.35 47.5249 14.15 47.2249 13.175 46.6999C12.125 46.1749 11.225 45.3499 10.625 44.3749C10.325 43.9249 10.025 43.3999 9.8 42.8749C9.725 42.6499 9.65 42.3499 9.575 42.0499C9.575 41.8249 9.5 41.5999 9.5 41.2999C9.725 41.5249 9.875 41.6749 10.025 41.8999C10.25 42.1249 10.4 42.3499 10.55 42.4999C10.925 42.8749 11.225 43.2499 11.6 43.5499C12.35 44.2249 13.1 44.8249 14 45.2749C14.825 45.7249 15.8 46.0999 16.7 46.3999C17.15 46.5499 17.675 46.6249 18.2 46.7749C18.425 46.8499 18.725 46.8499 18.95 46.9249C19.325 46.9999 19.55 46.9999 19.85 47.0749",
    fill: "#FF671D"
  })), _path3 || (_path3 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M36.8 10.625C37.175 10.7 37.475 10.85 37.85 11C38.225 11.15 38.525 11.3 38.825 11.45C39.5 11.825 40.1 12.2 40.7 12.65C41.9 13.55 42.875 14.75 43.55 16.1C44.225 17.45 44.6 18.95 44.6 20.375C44.6 21.125 44.525 21.8 44.375 22.55C44.3 22.925 44.225 23.225 44.075 23.6C43.925 23.975 43.85 24.275 43.7 24.575L43.625 23.525C43.625 23.15 43.625 22.85 43.55 22.475L43.325 20.45C43.1 19.175 42.65 17.9 42.05 16.7C41.45 15.5 40.7 14.45 39.8 13.475C39.35 12.95 38.825 12.5 38.375 11.975C38.15 11.75 37.85 11.525 37.55 11.3L36.8 10.625",
    fill: "#FF671D"
  })), _path4 || (_path4 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M43.325 10.325C43.625 10.4 43.85 10.475 44.075 10.625C44.3 10.7 44.6 10.85 44.825 11C45.275 11.3 45.725 11.6 46.175 11.975C47 12.725 47.675 13.625 48.05 14.675C48.5 15.725 48.65 16.85 48.5 17.975C48.425 18.5 48.275 19.025 48.125 19.55C48.05 19.775 47.9 20.075 47.825 20.3C47.675 20.525 47.6 20.75 47.375 20.975V19.475C47.375 18.95 47.3 18.5 47.3 18.05C47.15 17.075 47 16.175 46.625 15.35C46.25 14.45 45.8 13.7 45.275 12.875C44.975 12.5 44.675 12.05 44.375 11.675C44.225 11.45 44.075 11.3 43.85 11.075C43.7 10.7 43.475 10.475 43.325 10.325",
    fill: "#FF671D"
  })), _path5 || (_path5 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M25.8002 36.2808L17.825 19.625C17.075 18.05 17.75 16.1 19.325 15.35C20.7598 14.6668 22.5059 15.2284 23.3723 16.5246L22.7 15.125C21.95 13.55 22.625 11.6 24.2 10.85C25.775 10.025 27.725 10.775 28.475 12.35L29.2811 14.0281C28.9968 12.6571 29.6757 11.2622 30.95 10.625C32.525 9.87503 34.325 10.55 35.075 12.05L43.8423 30.3153C45.2635 29.3999 45.6005 28.2602 46.3685 25.6628C46.4488 25.3916 46.5337 25.1044 46.625 24.8C48.275 19.4 51.575 17.675 53.6 19.25C54.7197 20.138 53.8915 22.5764 52.773 25.8693C51.7189 28.973 50.4069 32.8357 50.225 36.875C49.55 51.2 34.475 57.125 28.025 51.575C24.1625 48.3119 21.7191 41.6782 21.22 40.2323L14.15 25.475C13.475 23.975 14 22.175 15.5 21.5C17 20.75 18.725 21.425 19.4 22.925L25.78 36.2927C25.7867 36.2887 25.7935 36.2848 25.8002 36.2808Z",
    fill: "url(#paint1_linear)"
  })), _path6 || (_path6 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M31.025 10.55C30.875 10.625 30.725 10.7 30.575 10.85C32 10.475 33.5 11.15 34.175 12.5L44.975 35L45.95 34.55L35.15 12.05C34.4 10.475 32.6 9.80004 31.025 10.55",
    fill: "url(#paint2_linear)"
  })), _path7 || (_path7 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M19.325 15.4251C19.175 15.5001 19.025 15.5751 18.875 15.7251C20.3 15.3501 21.95 16.0251 22.625 17.4501L29.45 31.7751L31.1 32.7501L23.6 17.0001C22.85 15.3501 20.975 14.6751 19.325 15.4251",
    fill: "url(#paint3_linear)"
  })), _path8 || (_path8 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M24.2 10.775C24.05 10.85 23.9 11 23.75 11.075C25.175 10.7 26.825 11.375 27.5 12.8L35.225 29L36.875 29.975L28.475 12.35C27.725 10.7 25.775 10.025 24.2 10.775",
    fill: "url(#paint4_linear)"
  })), _path9 || (_path9 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M15.5 21.5C15.35 21.575 15.2 21.65 15.05 21.8C16.4 21.425 17.825 22.1 18.425 23.45L24.05 35.225L25.7 36.2L19.4 23C18.725 21.425 17 20.75 15.5 21.5Z",
    fill: "url(#paint5_linear)"
  })), _path10 || (_path10 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M53.6 19.25C53.225 18.95 52.775 18.8 52.325 18.725C52.4 18.8 52.55 18.8 52.625 18.875C54.875 20.6 52.55 24.575 51.275 28.175C50.225 31.025 49.325 33.95 49.475 36.8C50.075 49.25 37.55 55.175 30.05 52.925C37.4 56 51.05 50.15 50.45 37.175C50.3 34.325 51.125 31.55 52.25 28.55C53.45 24.95 55.775 20.975 53.6 19.25",
    fill: "url(#paint6_linear)"
  })), _path11 || (_path11 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M43.625 30.5C38.975 31.025 32.15 37.7 36.95 44.975C33.425 37.625 39.2 32.675 42.875 30.95C43.25 30.65 43.625 30.5 43.625 30.5",
    fill: "url(#paint7_linear)"
  })), _defs || (_defs = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("defs", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("linearGradient", {
    id: "paint0_linear",
    x1: 32,
    y1: 0,
    x2: 32,
    y2: 64,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "white"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 1,
    stopColor: "white",
    stopOpacity: 0
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("linearGradient", {
    id: "paint1_linear",
    x1: 23,
    y1: 27.125,
    x2: 47.8247,
    y2: 42.9867,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "white"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 0.571852,
    stopColor: "white",
    stopOpacity: 0.6
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 1,
    stopColor: "white",
    stopOpacity: 0.4
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("linearGradient", {
    id: "paint2_linear",
    x1: 38.2625,
    y1: 10.2437,
    x2: 38.2625,
    y2: 35,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "#DFE4EC"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 1,
    stopColor: "#132C53"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("linearGradient", {
    id: "paint3_linear",
    x1: 24.9875,
    y1: 15.1202,
    x2: 24.9875,
    y2: 32.7501,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "#DFE4EC"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 1,
    stopColor: "#132C53"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("linearGradient", {
    id: "paint4_linear",
    x1: 30.3125,
    y1: 10.4702,
    x2: 30.3125,
    y2: 29.975,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "#DFE4EC"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 1,
    stopColor: "#132C53"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("linearGradient", {
    id: "paint5_linear",
    x1: 20.375,
    y1: 21.1936,
    x2: 20.375,
    y2: 36.2,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "#DFE4EC"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 1,
    stopColor: "#132C53"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("linearGradient", {
    id: "paint6_linear",
    x1: 42.2722,
    y1: 18.725,
    x2: 42.2722,
    y2: 53.729,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "#DFE4EC"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 1,
    stopColor: "#132C53"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("linearGradient", {
    id: "paint7_linear",
    x1: 36.5,
    y1: 44.75,
    x2: 44,
    y2: 30.5,
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "#585F6B",
    stopOpacity: 0
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 1,
    stopColor: "#132C53"
  })))));
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SvgWelcome);

/***/ }),
/* 36 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(14);


const rotation = styled_components__WEBPACK_IMPORTED_MODULE_1__.keyframes `
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
`;
const Root = styled_components__WEBPACK_IMPORTED_MODULE_1__["default"].p `
  width: var(--s-16);
  height: var(--s-16);
  border-radius: 50%;
  background: var(--c-white);
  background: linear-gradient(
    to right,
    var(--c-white) 10%,
    var(--c-transparent) 42%
  );

  ${(props) => props.alternative &&
    styled_components__WEBPACK_IMPORTED_MODULE_1__.css `
      background: var(--c-orange);
      background: linear-gradient(
        to right,
        var(--c-orange) 10%,
        var(--c-transparent) 42%
      );
    `}

  position: relative;
  -webkit-animation: ${rotation} 1.4s infinite linear;
  animation: ${rotation} 1.4s infinite linear;
  -webkit-transform: translateZ(0);
  -ms-transform: translateZ(0);
  transform: translateZ(0);

  :before {
    width: 50%;
    height: 50%;
    background: var(--c-white);
    ${(props) => props.alternative &&
    styled_components__WEBPACK_IMPORTED_MODULE_1__.css `
        background: var(--c-orange);
      `}
    border-radius: 100% 0 0 0;
    position: absolute;
    top: 0;
    left: 0;
    content: "";
  }

  :after {
    background: var(--c-orange);
    ${(props) => props.alternative &&
    styled_components__WEBPACK_IMPORTED_MODULE_1__.css `
        background: var(--c-dark-blue);
      `}
    width: 75%;
    height: 75%;
    border-radius: 50%;
    content: "";
    margin: auto;
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
  }
`;
Spinner.defaultProps = {
    alternative: false,
};
function Spinner(props) {
    const { children, ...otherProps } = props;
    return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Root, { ...otherProps, children: children }, void 0);
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Spinner);


/***/ }),
/* 37 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TextSizes": () => (/* binding */ TextSizes),
/* harmony export */   "TextHeights": () => (/* binding */ TextHeights),
/* harmony export */   "TextWeights": () => (/* binding */ TextWeights),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(14);


var TextSizes;
(function (TextSizes) {
    TextSizes["SMALL"] = "var(--s-12)";
    TextSizes["MEDIUM"] = "var(--s-16)";
    TextSizes["LARGE"] = "var(--s-20)";
})(TextSizes || (TextSizes = {}));
var TextHeights;
(function (TextHeights) {
    TextHeights["SMALL"] = "var(--s-168)";
    TextHeights["MEDIUM"] = "var(--s-1875)";
    TextHeights["LARGE"] = "var(--s-23)";
    TextHeights["EXTRA_LARGE"] = "var(--s-26)";
})(TextHeights || (TextHeights = {}));
var TextWeights;
(function (TextWeights) {
    TextWeights["NORMAL"] = "normal";
    TextWeights["SEMIBOLD"] = "500";
    TextWeights["BOLD"] = "bold";
})(TextWeights || (TextWeights = {}));
const RootParagraph = styled_components__WEBPACK_IMPORTED_MODULE_1__["default"].p `
  ${(props) => styled_components__WEBPACK_IMPORTED_MODULE_1__.css `
      font-size: ${props.size};
      line-height: ${props.height};
      font-weight: ${props.weight};
      text-align: ${props.center ? "center" : "inherit"};
    `}
`;
const RootSpan = styled_components__WEBPACK_IMPORTED_MODULE_1__["default"].span `
  ${(props) => styled_components__WEBPACK_IMPORTED_MODULE_1__.css `
      font-size: ${props.size};
      line-height: ${props.height};
      font-weight: ${props.weight};
      text-align: ${props.center ? "center" : "inherit"};
    `}
`;
Text.defaultProps = {
    size: TextSizes.MEDIUM,
    height: TextHeights.MEDIUM,
    weight: TextWeights.NORMAL,
    span: false,
};
function Text(props) {
    const { children, span, ...otherProps } = props;
    if (span) {
        return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(RootSpan, { ...otherProps, children: children }, void 0);
    }
    return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(RootParagraph, { ...otherProps, children: children }, void 0);
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Text);


/***/ }),
/* 38 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const FRACTAL_WEBSITE_URL = 
//   process.env.REACT_APP_FRACTAL_WEBSITE_URL ||
'https://staging.sandbox.fractal.id';
const PROTOCOL_RPC_ENDPOINT = 
//   process.env.REACT_APP_PROTOCOL_RPC_ENDPOINT ||
'wss://nodes.testnet.fractalprotocol.com';
const PROTOCOL_CURRENCY = 
// process.env.REACT_APP_PROTOCOL_CURRENCY ||
'FCL';
const NODE_ENV = 
// process.env.NODE_ENV ||
'development';
const environment = {
    FRACTAL_WEBSITE_URL,
    IS_DEV: NODE_ENV === 'development',
    PROTOCOL_RPC_ENDPOINT,
    PROTOCOL_CURRENCY,
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (environment);


/***/ }),
/* 39 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OptInForm": () => (/* binding */ OptInForm)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);
/* harmony import */ var _components_Common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(40);
/* harmony import */ var _popup_Environment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(38);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(14);




const List = styled_components__WEBPACK_IMPORTED_MODULE_3__["default"].ul `
  list-style: none;

  li {
    display: grid;
    grid-template-columns: 0 1fr;
    grid-gap: var(--s-24);
    align-items: start;
    font-size: var(--s-16);
    line-height: var(--s-24);
    text-align: start;

    &:not(:last-child) {
      margin-bottom: var(--s-24);
    }

    &::before {
      content: "🚀";
    }
  }
`;
function OptInForm({ onOptIn }) {
    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_components_Common__WEBPACK_IMPORTED_MODULE_1__.VerticalSequence, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_Common__WEBPACK_IMPORTED_MODULE_1__.Icon, { name: _components_Common__WEBPACK_IMPORTED_MODULE_1__.IconNames.PROTOCOL }, void 0), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_Common__WEBPACK_IMPORTED_MODULE_1__.BoldText, { children: "Get ready for controlling and monetizing your own browsing data." }, void 0), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_Common__WEBPACK_IMPORTED_MODULE_1__.Subtitle, { uppercase: true, children: "Wallet functionality" }, void 0), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(List, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li", { children: "Tracks and stores your browsing data." }, void 0), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li", { children: "The data is only stored on your local device. " }, void 0), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li", { children: "Publishes a proof of your data provisioning activity on chain" }, void 0), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("li", { children: ["You get rewards in ", _popup_Environment__WEBPACK_IMPORTED_MODULE_2__["default"].PROTOCOL_CURRENCY, " for storing your data."] }, void 0)] }, void 0), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_components_Common__WEBPACK_IMPORTED_MODULE_1__.Subsubtitle, { uppercase: true, center: true, children: ["By clicking \u201CJoin the Protocol\u201D you agree to our", " ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("a", { href: `${_popup_Environment__WEBPACK_IMPORTED_MODULE_2__["default"].FRACTAL_WEBSITE_URL}/documents/mainnet-launch-special-user-agreement`, target: "_blank", rel: "noreferrer", children: "Special Mainnet Launch User Agreement." }, void 0)] }, void 0), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_Common__WEBPACK_IMPORTED_MODULE_1__.Cta, { onClick: onOptIn, children: "Join the Protocol" }, void 0)] }, void 0));
}


/***/ }),
/* 40 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Text": () => (/* reexport safe */ _common_Text__WEBPACK_IMPORTED_MODULE_3__["default"]),
/* harmony export */   "Subtitle": () => (/* reexport safe */ _common_Subtitle__WEBPACK_IMPORTED_MODULE_2__["default"]),
/* harmony export */   "Subsubtitle": () => (/* reexport safe */ _common_Subtitle__WEBPACK_IMPORTED_MODULE_2__.Subsubtitle),
/* harmony export */   "Icon": () => (/* reexport safe */ _common_Icon__WEBPACK_IMPORTED_MODULE_4__["default"]),
/* harmony export */   "IconNames": () => (/* reexport safe */ _common_Icon__WEBPACK_IMPORTED_MODULE_4__.IconNames),
/* harmony export */   "Input": () => (/* reexport safe */ _common_Input__WEBPACK_IMPORTED_MODULE_5__["default"]),
/* harmony export */   "Title": () => (/* reexport safe */ _common_Title__WEBPACK_IMPORTED_MODULE_6__["default"]),
/* harmony export */   "ClickableText": () => (/* binding */ ClickableText),
/* harmony export */   "VerticalSequence": () => (/* binding */ VerticalSequence),
/* harmony export */   "Cta": () => (/* binding */ Cta),
/* harmony export */   "BoldText": () => (/* binding */ BoldText)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);
/* harmony import */ var _common_Button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(41);
/* harmony import */ var _common_Subtitle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(42);
/* harmony import */ var _common_Text__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(37);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(14);
/* harmony import */ var _common_Icon__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(26);
/* harmony import */ var _common_Input__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(43);
/* harmony import */ var _common_Title__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(44);










const Container = styled_components__WEBPACK_IMPORTED_MODULE_7__["default"].div `
  width: 100%;
  height: 100%;

  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;

  > *:not(:last-child) {
    margin-bottom: var(--s-16);
  }
`;
const Link = styled_components__WEBPACK_IMPORTED_MODULE_7__["default"].a `
  cursor: pointer;
  color: var(--c-orange);
  text-decoration: underline;
`;
const ClickableText = styled_components__WEBPACK_IMPORTED_MODULE_7__["default"].button `
  outline: none;
  background: none;
  margin: 0;
  padding: 0;
  color: inherit;
`;
function VerticalSequence(props) {
    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Container, { children: [props.children, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_common_Subtitle__WEBPACK_IMPORTED_MODULE_2__.Subsubtitle, { center: true, style: { alignSelf: "flex-end" }, children: ["If you need help on anything related to Fractal ID Wallet, please contact us at", " ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Link, { href: "mailto:support@fractal.id", children: "support@fractal.id" }, void 0)] }, void 0)] }, void 0));
}
Cta.defaultProps = {
    loading: false,
    alternative: false,
};
function Cta(props) {
    const { children, ...other } = props;
    return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_common_Button__WEBPACK_IMPORTED_MODULE_1__["default"], { ...other, children: children }, void 0);
}
function BoldText({ children, center, }) {
    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_common_Text__WEBPACK_IMPORTED_MODULE_3__["default"], { weight: _common_Text__WEBPACK_IMPORTED_MODULE_3__.TextWeights.BOLD, center: center, children: children }, void 0));
}


/***/ }),
/* 41 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Button": () => (/* binding */ Button),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);
/* harmony import */ var _popup_components_common_Spinner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(36);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(14);



const Root = styled_components__WEBPACK_IMPORTED_MODULE_2__["default"].button `
  color: var(--c-white);
  background: var(--c-orange);
  border-radius: var(--s-12);
  padding: var(--s-14) var(--s-35);
  font-weight: bold;
  transition: color 0.2s ease-in-out, background-color 0.2s ease-in-out;

  display: flex;
  flex-direction: row;

  align-items: center;
  justify-content: center;

  min-width: var(--s-48);

  ${(props) => props.disabled &&
    styled_components__WEBPACK_IMPORTED_MODULE_2__.css `
      opacity: 0.6;
      cursor: default;
    `}

  ${(props) => !props.disabled &&
    styled_components__WEBPACK_IMPORTED_MODULE_2__.css `
      :hover {
        background: var(--c-dark-orange);
      }
    `}

  ${(props) => props.alternative &&
    styled_components__WEBPACK_IMPORTED_MODULE_2__.css `
      color: var(--c-orange);
      background: var(--c-transparent);
      border: 1px solid var(--c-orange);
    `}

    ${(props) => props.alternative &&
    !props.disabled &&
    styled_components__WEBPACK_IMPORTED_MODULE_2__.css `
      :hover {
        background: var(--c-orange);
        color: var(--c-white);
      }
    `}
`;
const LeftIconContainer = styled_components__WEBPACK_IMPORTED_MODULE_2__["default"].div `
  margin-right: var(--s-12);
  display: flex;
`;
const RightIconContainer = styled_components__WEBPACK_IMPORTED_MODULE_2__["default"].div `
  margin-left: var(--s-12);
  display: flex;
`;
Button.defaultProps = {
    loading: false,
    alternative: false,
};
function Button(props) {
    const { loading, disabled, children, leftIcon, rightIcon, ...otherProps } = props;
    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Root, { disabled: disabled || loading, ...otherProps, children: [loading && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(LeftIconContainer, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_popup_components_common_Spinner__WEBPACK_IMPORTED_MODULE_1__["default"], { alternative: otherProps.alternative }, void 0) }, void 0)), leftIcon !== undefined && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(LeftIconContainer, { children: leftIcon }, void 0)), children, rightIcon !== undefined && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(RightIconContainer, { children: rightIcon }, void 0))] }, void 0));
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Button);


/***/ }),
/* 42 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Subsubtitle": () => (/* binding */ Subsubtitle),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(14);


const Root = styled_components__WEBPACK_IMPORTED_MODULE_1__["default"].h3 `
  font-size: ${(props) => props.fontSize || "var(--s-16)"};
  font-variant: ${(props) => (props.uppercase ? "small-caps" : "normal")};
  line-height: ${(props) => props.lineHeight || "var(--s-24)"};
  text-transform: ${(props) => (props.uppercase ? "uppercase" : "none")};
  text-decoration: ${(props) => (props.underline ? "underline" : "none")};
  text-align: ${(props) => (props.center ? "center" : "inherit")};

  color: var(--c-white);
  opacity: 0.6;

  * {
    color: var(--c-white);
  }
`;
function Subtitle(props) {
    const { children, underline, uppercase, center } = props;
    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Root, { underline: underline, uppercase: uppercase, center: center, children: children }, void 0));
}
function Subsubtitle(props) {
    const { children, underline, uppercase, center } = props;
    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Root, { fontSize: "var(--s-12)", lineHeight: "var(--s-16)", underline: underline, uppercase: uppercase, center: center, style: props.style, children: children }, void 0));
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Subtitle);


/***/ }),
/* 43 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(14);
/* harmony import */ var _popup_components_common_Text__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(37);



const Root = styled_components__WEBPACK_IMPORTED_MODULE_2__["default"].div `
  position: relative;
`;
const InputContainer = styled_components__WEBPACK_IMPORTED_MODULE_2__["default"].input `
  color: var(--c-white);
  background-color: var(--c-dark-blue);
  font-size var(--s-16);
  line-height var(--s-19);
  border: 0;
  outline: none;
  padding: 0;
  padding-top: calc(var(--s-19) + var(--s-5));

  width: 100%;

  ::placeholder {
    color: var(--c-white);
    opacity: 0.6;
  }
`;
const LabelContainer = styled_components__WEBPACK_IMPORTED_MODULE_2__["default"].div `
  position: absolute;
  pointer-events: none;
  opacity: 0.6;

  top: calc(var(--s-19) + var(--s-5));
  z-index: 10;
  transition: top 0.2s ease-in-out, font-size 0.2s ease-in-out,
    text-transform 0.2s ease-in-out;

  ${(props) => props.active &&
    styled_components__WEBPACK_IMPORTED_MODULE_2__.css `
      top: 0;
      text-transform: uppercase;
    `}
`;
const HintContainer = styled_components__WEBPACK_IMPORTED_MODULE_2__["default"].div `
  margin-top: var(--s-12);
`;
const ErrorContainer = styled_components__WEBPACK_IMPORTED_MODULE_2__["default"].div `
  margin-top: var(--s-12);
  color: var(--c-red);
`;
const LineContainer = styled_components__WEBPACK_IMPORTED_MODULE_2__["default"].hr `
  border: 0;
  height: 1px;
  background: var(--c-white);
  margin-top: var(--s-12);
  transition: opacity 0.2s ease-in-out;

  ${(props) => props.active &&
    styled_components__WEBPACK_IMPORTED_MODULE_2__.css `
      opacity: 0.2;
    `}

  ${(props) => props.error &&
    styled_components__WEBPACK_IMPORTED_MODULE_2__.css `
      background: var(--c-red);
      opacity: 1;
    `}
`;
Input.defaultProps = {
    underlined: true,
    onEnter: () => { },
};
function Input(props) {
    const { error, disabled, label, hint, children, value, underlined, onEnter, ...otherProps } = props;
    const active = value !== undefined && value.toString().length > 0;
    const hasError = error !== undefined && error.length > 0;
    const hasLabel = label !== undefined && label.length > 0;
    const hasHint = hint !== undefined && hint.length > 0;
    const handleKeyDown = (event) => {
        if (event.key === "Enter") {
            if (disabled || onEnter === undefined) {
                return;
            }
            onEnter();
        }
    };
    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Root, { style: otherProps.style, children: [hasLabel && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(LabelContainer, { active: active, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_popup_components_common_Text__WEBPACK_IMPORTED_MODULE_1__["default"], { size: active ? _popup_components_common_Text__WEBPACK_IMPORTED_MODULE_1__.TextSizes.SMALL : _popup_components_common_Text__WEBPACK_IMPORTED_MODULE_1__.TextSizes.MEDIUM, height: active ? _popup_components_common_Text__WEBPACK_IMPORTED_MODULE_1__.TextHeights.SMALL : _popup_components_common_Text__WEBPACK_IMPORTED_MODULE_1__.TextHeights.MEDIUM, children: label }, void 0) }, void 0)), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(InputContainer, { value: value, disabled: disabled, onKeyDown: handleKeyDown, ...otherProps, children: children }, void 0), underlined && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(LineContainer, { active: active, error: hasError }, void 0), hasError ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ErrorContainer, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_popup_components_common_Text__WEBPACK_IMPORTED_MODULE_1__["default"], { size: _popup_components_common_Text__WEBPACK_IMPORTED_MODULE_1__.TextSizes.SMALL, height: _popup_components_common_Text__WEBPACK_IMPORTED_MODULE_1__.TextHeights.SMALL, children: error }, void 0) }, void 0)) : hasHint ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(HintContainer, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_popup_components_common_Text__WEBPACK_IMPORTED_MODULE_1__["default"], { size: _popup_components_common_Text__WEBPACK_IMPORTED_MODULE_1__.TextSizes.SMALL, height: _popup_components_common_Text__WEBPACK_IMPORTED_MODULE_1__.TextHeights.SMALL, children: hint }, void 0) }, void 0)) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {}, void 0))] }, void 0));
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Input);


/***/ }),
/* 44 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(14);


const Root = styled_components__WEBPACK_IMPORTED_MODULE_1__["default"].h2 `
  font-size: var(--s-20);
  line-height: var(--s-23);
  font-weight: bold;
  margin-bottom: var(--s-12);
  text-align: center;
`;
function Title(props) {
    const { children } = props;
    return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Root, { children: children }, void 0);
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Title);


/***/ }),
/* 45 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SetupSuccess": () => (/* binding */ SetupSuccess),
/* harmony export */   "SetupError": () => (/* binding */ SetupError),
/* harmony export */   "SetupInProgress": () => (/* binding */ SetupInProgress)
/* harmony export */ });
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);
/* harmony import */ var _components_Common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(40);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(8);



function SetupSuccess({ onContinue, mnemonic, }) {
    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_components_Common__WEBPACK_IMPORTED_MODULE_1__.VerticalSequence, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_Common__WEBPACK_IMPORTED_MODULE_1__.Icon, { name: _components_Common__WEBPACK_IMPORTED_MODULE_1__.IconNames.PROTOCOL_SETUP_SUCCESS }, void 0), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_Common__WEBPACK_IMPORTED_MODULE_1__.Title, { children: "You joined the Fractal Protocol!" }, void 0), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_Common__WEBPACK_IMPORTED_MODULE_1__.Subtitle, { children: "This is your private key:" }, void 0), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_Common__WEBPACK_IMPORTED_MODULE_1__.Subtitle, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("strong", { children: mnemonic }, void 0) }, void 0), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_Common__WEBPACK_IMPORTED_MODULE_1__.Subtitle, { children: "Store it somewhere safe. You will need it to recover your funds." }, void 0), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_components_Common__WEBPACK_IMPORTED_MODULE_1__.Subtitle, { children: ["You will ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("strong", { children: "never" }, void 0), " need to share it with anyone."] }, void 0), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_Common__WEBPACK_IMPORTED_MODULE_1__.Cta, { onClick: onContinue, children: "Continue" }, void 0)] }, void 0));
}
function SetupError({ onRetry }) {
    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_components_Common__WEBPACK_IMPORTED_MODULE_1__.VerticalSequence, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_Common__WEBPACK_IMPORTED_MODULE_1__.Icon, { name: _components_Common__WEBPACK_IMPORTED_MODULE_1__.IconNames.PROTOCOL_SETUP_FAILURE }, void 0), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_Common__WEBPACK_IMPORTED_MODULE_1__.Title, { children: "Something went wrong" }, void 0), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_Common__WEBPACK_IMPORTED_MODULE_1__.Cta, { onClick: onRetry, children: "Retry" }, void 0)] }, void 0));
}
function SetupInProgress({ onRetry }) {
    const [showButton, setShowButton] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)();
    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(() => {
        const timeout = setTimeout(() => setShowButton(true), 30000);
        return () => {
            clearTimeout(timeout);
        };
    }, []);
    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_components_Common__WEBPACK_IMPORTED_MODULE_1__.VerticalSequence, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_Common__WEBPACK_IMPORTED_MODULE_1__.Icon, { name: _components_Common__WEBPACK_IMPORTED_MODULE_1__.IconNames.PROTOCOL_SETUP_PENDING }, void 0), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_Common__WEBPACK_IMPORTED_MODULE_1__.Title, { children: "Setting things up" }, void 0), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_Common__WEBPACK_IMPORTED_MODULE_1__.Subtitle, { children: "This may take some time" }, void 0), showButton && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_Common__WEBPACK_IMPORTED_MODULE_1__.Cta, { onClick: onRetry, children: "Retry" }, void 0)] }, void 0));
}


/***/ }),
/* 46 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getStorageService": () => (/* binding */ getStorageService),
/* harmony export */   "getDataHost": () => (/* binding */ getDataHost),
/* harmony export */   "getProtocolService": () => (/* binding */ getProtocolService),
/* harmony export */   "getProtocolOptIn": () => (/* binding */ getProtocolOptIn),
/* harmony export */   "getFractalAccountConnector": () => (/* binding */ getFractalAccountConnector),
/* harmony export */   "getMultiContext": () => (/* binding */ getMultiContext),
/* harmony export */   "getValueCache": () => (/* binding */ getValueCache)
/* harmony export */ });
/* harmony import */ var _polkadot_api__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(283);
/* harmony import */ var _polkadot_api__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(296);
/* harmony import */ var _popup_Environment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(38);
/* harmony import */ var _services_DataHost__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(47);
/* harmony import */ var _services_FractalAccount__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(49);
/* harmony import */ var _services_Protocol__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(72);
/* harmony import */ var _services_ProtocolOptIn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(279);
/* harmony import */ var _services_StorageService__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(280);
/* harmony import */ var _utils_MultiContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(50);
/* harmony import */ var _utils_ReactHooks__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(282);









const types = {
    FractalId: 'u64',
    MerkleTree: 'Raw',
};
let storageService;
function getStorageService() {
    if (storageService === undefined) {
        storageService = new _services_StorageService__WEBPACK_IMPORTED_MODULE_5__.StorageService();
    }
    return storageService;
}
let dataHost;
function getDataHost() {
    if (dataHost === undefined) {
        dataHost = new _services_DataHost__WEBPACK_IMPORTED_MODULE_1__.DataHost(storageService, storageService);
    }
    return dataHost;
}
async function getApi() {
    try {
        const url = 'wss://nodes.testnet.fractalprotocol.com'; //TODO(melatron): get the mainnet url
        const provider = new _polkadot_api__WEBPACK_IMPORTED_MODULE_8__.WsProvider(url);
        return await _polkadot_api__WEBPACK_IMPORTED_MODULE_9__.ApiPromise.create({ provider, types });
    }
    catch (e) {
        console.error(e);
        const provider = new _polkadot_api__WEBPACK_IMPORTED_MODULE_8__.WsProvider(_popup_Environment__WEBPACK_IMPORTED_MODULE_0__["default"].PROTOCOL_RPC_ENDPOINT);
        return await _polkadot_api__WEBPACK_IMPORTED_MODULE_9__.ApiPromise.create({ provider, types });
    }
}
let protocol;
function getProtocolService(mnemonic) {
    if (protocol === undefined) {
        const signer = mnemonic
            ? _services_Protocol__WEBPACK_IMPORTED_MODULE_3__.ProtocolService.signerFromMnemonic(mnemonic)
            : null;
        protocol = new _services_Protocol__WEBPACK_IMPORTED_MODULE_3__.ProtocolService(getApi(), signer, getDataHost());
        getProtocolOptIn()
            .getMnemonic()
            .then(async (mnemonic) => {
            if (mnemonic) {
                getProtocolService().signer =
                    _services_Protocol__WEBPACK_IMPORTED_MODULE_3__.ProtocolService.signerFromMnemonic(mnemonic);
            }
        });
    }
    return protocol;
}
let protocolOptIn;
function getProtocolOptIn() {
    if (protocolOptIn === undefined) {
        protocolOptIn = new _services_ProtocolOptIn__WEBPACK_IMPORTED_MODULE_4__.ProtocolOptIn(getStorageService(), getProtocolService());
        protocolOptIn.postOptInCallbacks.push(async () => {
            await getDataHost().enable();
        });
        protocolOptIn.postOptInCallbacks.push(async (mnemonic) => {
            getProtocolService().signer =
                _services_Protocol__WEBPACK_IMPORTED_MODULE_3__.ProtocolService.signerFromMnemonic(mnemonic);
        });
    }
    return protocolOptIn;
}
let fractalAccountConnector;
function getFractalAccountConnector() {
    if (fractalAccountConnector == null) {
        fractalAccountConnector = new _services_FractalAccount__WEBPACK_IMPORTED_MODULE_2__.FractalAccountConnector(getStorageService());
    }
    return fractalAccountConnector;
}
let multiContext;
function getMultiContext() {
    if (multiContext == null) {
        multiContext = new _utils_MultiContext__WEBPACK_IMPORTED_MODULE_6__.AggregateMultiContext([getFractalAccountConnector()]);
    }
    return multiContext;
}
let valueCache;
function getValueCache() {
    if (valueCache == null) {
        valueCache = new _utils_ReactHooks__WEBPACK_IMPORTED_MODULE_7__.ValueCache(getStorageService());
    }
    return valueCache;
}


/***/ }),
/* 47 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DataHost": () => (/* binding */ DataHost)
/* harmony export */ });
/* harmony import */ var _utils_StorageArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(48);

class DataHost {
    metadata;
    sensitive;
    build;
    extend_multiple;
    prune_balanced;
    strict_extension_proof;
    constructor(metadata, sensitive) {
        this.metadata = metadata;
        this.sensitive = sensitive;
    }
    key(key) {
        return `data_host/${key}`;
    }
    async init() {
        const { build, extend_multiple, prune_balanced, strict_extension_proof, } = await __webpack_require__.e(/* import() */ 1).then(__webpack_require__.bind(__webpack_require__, 921));
        this.build = build;
        this.extend_multiple = extend_multiple;
        this.prune_balanced = prune_balanced;
        this.strict_extension_proof = strict_extension_proof;
    }
    async enable() {
        await this.metadata.setItem(this.key('enabled'), 'true');
    }
    async disable() {
        await this.metadata.setItem(this.key('enabled'), 'false');
    }
    async isEnabled() {
        const value = await this.metadata.getItem(this.key('enabled'));
        return value === 'true';
    }
    async storeFact(fact) {
        if (!(await this.isEnabled()))
            return;
        this.array().push(fact);
    }
    array() {
        return new _utils_StorageArray__WEBPACK_IMPORTED_MODULE_0__.StorageArray(this.sensitive, this.key('facts'));
    }
    iter() {
        return this.array().iter();
    }
    iterBack() {
        return this.array().iterBack();
    }
    async extensionProof(latestProof) {
        const currentTree = await this.currentTree();
        if (currentTree == null)
            return;
        if (latestProof == null) {
            return hexPrefix(this.prune_balanced(currentTree));
        }
        else {
            const previousTree = latestProof.includes('x')
                ? latestProof.split('x')[1]
                : latestProof;
            const proof = this.strict_extension_proof(currentTree, previousTree);
            return proof && hexPrefix(proof);
        }
    }
    async currentTree() {
        const allItems = [];
        for await (const item of this.array().iter()) {
            allItems.push(item);
        }
        if (allItems.length === 0)
            return;
        return this.buildTree(allItems.map((i) => JSON.stringify(i)));
    }
    buildTree(items) {
        const begin = this.build(items[0]);
        return this.extend_multiple(begin, items.slice(1));
    }
}
function hexPrefix(s) {
    return `0x${s}`;
}


/***/ }),
/* 48 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StorageArray": () => (/* binding */ StorageArray),
/* harmony export */   "withLock": () => (/* binding */ withLock)
/* harmony export */ });
class PrefixStorage {
    base;
    prefix;
    constructor(base, prefix) {
        this.base = base;
        this.prefix = prefix;
    }
    key(key) {
        return `${this.prefix}/${key}`;
    }
    async setItem(key, value) {
        await this.base.setItem(this.key(key), value);
    }
    async getItem(key) {
        return await this.base.getItem(this.key(key));
    }
    async hasItem(key) {
        return await this.base.hasItem(this.key(key));
    }
    async removeItem(key) {
        await this.base.removeItem(this.key(key));
    }
}
class StringifyStorage {
    base;
    constructor(base) {
        this.base = base;
    }
    async setItem(key, value) {
        await this.base.setItem(key, JSON.stringify(value));
    }
    async getItem(key) {
        const value = await this.base.getItem(key);
        if (value == null)
            return null;
        return JSON.parse(value);
    }
    async hasItem(key) {
        return this.base.hasItem(key);
    }
    async removeItem(key) {
        await this.base.removeItem(key);
    }
}
class StorageArray {
    base;
    constructor(rootStorage, prefix) {
        this.base = new StringifyStorage(new PrefixStorage(rootStorage, prefix));
    }
    async push(item) {
        return await withLock(this.base, '$lock', async () => {
            const length = await this.length();
            await this.base.setItem('length', length + 1);
            await this.base.setItem(length.toString(), item);
            return length;
        });
    }
    async length() {
        const value = await this.base.getItem('length');
        return value || 0;
    }
    async get(index) {
        return this.base.getItem(index.toString());
    }
    iter() {
        // eslint-disable-next-line @typescript-eslint/no-this-alias
        const storage = this;
        return {
            [Symbol.asyncIterator]() {
                return {
                    i: 0,
                    async next() {
                        if (this.i >= (await storage.length())) {
                            return { done: true };
                        }
                        const value = await storage.get(this.i++);
                        return { value, done: false };
                    },
                };
            },
        };
    }
    iterBack() {
        // eslint-disable-next-line @typescript-eslint/no-this-alias
        const storage = this;
        return {
            [Symbol.asyncIterator]() {
                return {
                    i: (async () => await storage.length())(),
                    async next() {
                        const i = (await this.i) - 1;
                        if (i < 0) {
                            return { done: true };
                        }
                        const value = await storage.get(i);
                        this.i = (async () => (await this.i) - 1)();
                        return { value, done: false };
                    },
                };
            },
        };
    }
}
// Uses Lamport's first fast lock to acquire a lock on the entirety of the
// underlying storage.
//
// https://www.cs.rochester.edu/research/synchronization/pseudocode/fastlock.html
async function withLock(storage, key, callback) {
    const MAX_WAIT_MS = 2;
    const id = Math.random().toString().split('.')[1];
    const acquiring_lock = `${key}/acquiring_lock`;
    const holding_lock = `${key}/holding_lock`;
    do {
        await storage.setItem(acquiring_lock, id);
        if ((await storage.getItem(holding_lock)) != null)
            continue;
        await storage.setItem(holding_lock, id);
        if ((await storage.getItem(acquiring_lock)) !== id) {
            await new Promise((resolve) => setTimeout(resolve, Math.random() * MAX_WAIT_MS));
            if ((await storage.getItem(holding_lock)) !== id)
                continue;
        }
        // eslint-disable-next-line no-constant-condition
    } while (false);
    try {
        const result = await callback();
        await storage.removeItem(holding_lock);
        return result;
    }
    catch (e) {
        await storage.removeItem(holding_lock);
        throw e;
    }
}


/***/ }),
/* 49 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NotConnectedError": () => (/* binding */ NotConnectedError),
/* harmony export */   "FractalAccountConnector": () => (/* binding */ FractalAccountConnector)
/* harmony export */ });
/* harmony import */ var _popup_Environment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(38);
/* harmony import */ var _utils_MultiContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(50);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(51);



class NotConnectedError extends Error {
    constructor(message) {
        super(message);
        this.name = 'NotConnectedError';
    }
}
const NEXT_TOKENS_KEY = 'fractal-account-connector/will-accept-next-tokens';
const TOKENS_KEY = 'fractal-account-connector/tokens';
class FractalAccountConnector extends _utils_MultiContext__WEBPACK_IMPORTED_MODULE_1__.MultiContext {
    storage;
    tokens = null;
    connectedAccount$ = new rxjs__WEBPACK_IMPORTED_MODULE_2__.ReplaySubject(1);
    constructor(storage) {
        super();
        this.storage = storage;
        this.getTokens().then((tokens) => {
            this.tokens = tokens;
            this.connectedAccount$.next(tokens != null);
        });
    }
    hasConnectedAccount() {
        return this.tokens != null;
    }
    async doConnect(urlOverride) {
        await this.storage.setItem(NEXT_TOKENS_KEY, 'true');
        chrome.tabs.create({ url: urlOverride || _popup_Environment__WEBPACK_IMPORTED_MODULE_0__["default"].FRACTAL_WEBSITE_URL });
    }
    async willAcceptNextTokens() {
        const stored = await this.storage.getItem(NEXT_TOKENS_KEY);
        return stored === 'true';
    }
    async setTokens(tokens) {
        console.log('Storing session tokens', tokens);
        await this.storage.setItem(TOKENS_KEY, JSON.stringify(tokens));
        await this.storage.setItem(NEXT_TOKENS_KEY, 'false');
        // TODO(shelbyd): Show user a notification that the process completed.
    }
    async getTokens() {
        const stored = await this.storage.getItem(TOKENS_KEY);
        if (stored == null)
            return null;
        return JSON.parse(stored);
    }
    async requireTokens() {
        const t = await this.getTokens();
        if (t == null)
            throw new NotConnectedError();
        return t;
    }
    async getCatfishToken() {
        return (await this.requireTokens()).catfish;
    }
    async getScopes() {
        return (await this.requireTokens()).scopes;
    }
    async clearTokens() {
        await this.storage.removeItem(TOKENS_KEY);
        this.tokens = null;
        this.connectedAccount$.next(false);
    }
}


/***/ }),
/* 50 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MultiContext": () => (/* binding */ MultiContext),
/* harmony export */   "AggregateMultiContext": () => (/* binding */ AggregateMultiContext)
/* harmony export */ });
class MultiContext {
    // eslint-disable-next-line @typescript-eslint/no-empty-function
    inInjectedScript() { }
    // eslint-disable-next-line @typescript-eslint/no-empty-function
    inBackground() { }
    // eslint-disable-next-line @typescript-eslint/no-empty-function
    inPopup() { }
}
class AggregateMultiContext extends MultiContext {
    delegates;
    constructor(delegates) {
        super();
        this.delegates = delegates;
    }
    inInjectedScript() {
        this.delegates.forEach((d) => d.inInjectedScript());
    }
    inBackground() {
        this.delegates.forEach((d) => d.inBackground());
    }
    inPopup() {
        this.delegates.forEach((d) => d.inPopup());
    }
}


/***/ }),
/* 51 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ReplaySubject": () => (/* binding */ ReplaySubject)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52);
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(54);
/* harmony import */ var _scheduler_dateTimestampProvider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(53);



var ReplaySubject = (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(ReplaySubject, _super);
    function ReplaySubject(_bufferSize, _windowTime, _timestampProvider) {
        if (_bufferSize === void 0) { _bufferSize = Infinity; }
        if (_windowTime === void 0) { _windowTime = Infinity; }
        if (_timestampProvider === void 0) { _timestampProvider = _scheduler_dateTimestampProvider__WEBPACK_IMPORTED_MODULE_1__.dateTimestampProvider; }
        var _this = _super.call(this) || this;
        _this._bufferSize = _bufferSize;
        _this._windowTime = _windowTime;
        _this._timestampProvider = _timestampProvider;
        _this._buffer = [];
        _this._infiniteTimeWindow = true;
        _this._infiniteTimeWindow = _windowTime === Infinity;
        _this._bufferSize = Math.max(1, _bufferSize);
        _this._windowTime = Math.max(1, _windowTime);
        return _this;
    }
    ReplaySubject.prototype.next = function (value) {
        var _a = this, isStopped = _a.isStopped, _buffer = _a._buffer, _infiniteTimeWindow = _a._infiniteTimeWindow, _timestampProvider = _a._timestampProvider, _windowTime = _a._windowTime;
        if (!isStopped) {
            _buffer.push(value);
            !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);
        }
        this._trimBuffer();
        _super.prototype.next.call(this, value);
    };
    ReplaySubject.prototype._subscribe = function (subscriber) {
        this._throwIfClosed();
        this._trimBuffer();
        var subscription = this._innerSubscribe(subscriber);
        var _a = this, _infiniteTimeWindow = _a._infiniteTimeWindow, _buffer = _a._buffer;
        var copy = _buffer.slice();
        for (var i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {
            subscriber.next(copy[i]);
        }
        this._checkFinalizedStatuses(subscriber);
        return subscription;
    };
    ReplaySubject.prototype._trimBuffer = function () {
        var _a = this, _bufferSize = _a._bufferSize, _timestampProvider = _a._timestampProvider, _buffer = _a._buffer, _infiniteTimeWindow = _a._infiniteTimeWindow;
        var adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;
        _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);
        if (!_infiniteTimeWindow) {
            var now = _timestampProvider.now();
            var last = 0;
            for (var i = 1; i < _buffer.length && _buffer[i] <= now; i += 2) {
                last = i;
            }
            last && _buffer.splice(0, last + 1);
        }
    };
    return ReplaySubject;
}(_Subject__WEBPACK_IMPORTED_MODULE_2__.Subject));

//# sourceMappingURL=ReplaySubject.js.map

/***/ }),
/* 52 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": () => (/* binding */ __extends),
/* harmony export */   "__assign": () => (/* binding */ __assign),
/* harmony export */   "__rest": () => (/* binding */ __rest),
/* harmony export */   "__decorate": () => (/* binding */ __decorate),
/* harmony export */   "__param": () => (/* binding */ __param),
/* harmony export */   "__metadata": () => (/* binding */ __metadata),
/* harmony export */   "__awaiter": () => (/* binding */ __awaiter),
/* harmony export */   "__generator": () => (/* binding */ __generator),
/* harmony export */   "__createBinding": () => (/* binding */ __createBinding),
/* harmony export */   "__exportStar": () => (/* binding */ __exportStar),
/* harmony export */   "__values": () => (/* binding */ __values),
/* harmony export */   "__read": () => (/* binding */ __read),
/* harmony export */   "__spread": () => (/* binding */ __spread),
/* harmony export */   "__spreadArrays": () => (/* binding */ __spreadArrays),
/* harmony export */   "__spreadArray": () => (/* binding */ __spreadArray),
/* harmony export */   "__await": () => (/* binding */ __await),
/* harmony export */   "__asyncGenerator": () => (/* binding */ __asyncGenerator),
/* harmony export */   "__asyncDelegator": () => (/* binding */ __asyncDelegator),
/* harmony export */   "__asyncValues": () => (/* binding */ __asyncValues),
/* harmony export */   "__makeTemplateObject": () => (/* binding */ __makeTemplateObject),
/* harmony export */   "__importStar": () => (/* binding */ __importStar),
/* harmony export */   "__importDefault": () => (/* binding */ __importDefault),
/* harmony export */   "__classPrivateFieldGet": () => (/* binding */ __classPrivateFieldGet),
/* harmony export */   "__classPrivateFieldSet": () => (/* binding */ __classPrivateFieldSet)
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    if (typeof b !== "function" && b !== null)
        throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

var __createBinding = Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});

function __exportStar(m, o) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

/** @deprecated */
function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

/** @deprecated */
function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
}

function __spreadArray(to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
}

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

var __setModuleDefault = Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),
/* 53 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "dateTimestampProvider": () => (/* binding */ dateTimestampProvider)
/* harmony export */ });
var dateTimestampProvider = {
    now: function () {
        return (dateTimestampProvider.delegate || Date).now();
    },
    delegate: undefined,
};
//# sourceMappingURL=dateTimestampProvider.js.map

/***/ }),
/* 54 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Subject": () => (/* binding */ Subject),
/* harmony export */   "AnonymousSubject": () => (/* binding */ AnonymousSubject)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52);
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(63);
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(59);
/* harmony import */ var _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(55);
/* harmony import */ var _util_arrRemove__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(62);
/* harmony import */ var _util_errorContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(57);






var Subject = (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(Subject, _super);
    function Subject() {
        var _this = _super.call(this) || this;
        _this.closed = false;
        _this.observers = [];
        _this.isStopped = false;
        _this.hasError = false;
        _this.thrownError = null;
        return _this;
    }
    Subject.prototype.lift = function (operator) {
        var subject = new AnonymousSubject(this, this);
        subject.operator = operator;
        return subject;
    };
    Subject.prototype._throwIfClosed = function () {
        if (this.closed) {
            throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_1__.ObjectUnsubscribedError();
        }
    };
    Subject.prototype.next = function (value) {
        var _this = this;
        (0,_util_errorContext__WEBPACK_IMPORTED_MODULE_2__.errorContext)(function () {
            var e_1, _a;
            _this._throwIfClosed();
            if (!_this.isStopped) {
                var copy = _this.observers.slice();
                try {
                    for (var copy_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__values)(copy), copy_1_1 = copy_1.next(); !copy_1_1.done; copy_1_1 = copy_1.next()) {
                        var observer = copy_1_1.value;
                        observer.next(value);
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (copy_1_1 && !copy_1_1.done && (_a = copy_1.return)) _a.call(copy_1);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
            }
        });
    };
    Subject.prototype.error = function (err) {
        var _this = this;
        (0,_util_errorContext__WEBPACK_IMPORTED_MODULE_2__.errorContext)(function () {
            _this._throwIfClosed();
            if (!_this.isStopped) {
                _this.hasError = _this.isStopped = true;
                _this.thrownError = err;
                var observers = _this.observers;
                while (observers.length) {
                    observers.shift().error(err);
                }
            }
        });
    };
    Subject.prototype.complete = function () {
        var _this = this;
        (0,_util_errorContext__WEBPACK_IMPORTED_MODULE_2__.errorContext)(function () {
            _this._throwIfClosed();
            if (!_this.isStopped) {
                _this.isStopped = true;
                var observers = _this.observers;
                while (observers.length) {
                    observers.shift().complete();
                }
            }
        });
    };
    Subject.prototype.unsubscribe = function () {
        this.isStopped = this.closed = true;
        this.observers = null;
    };
    Object.defineProperty(Subject.prototype, "observed", {
        get: function () {
            var _a;
            return ((_a = this.observers) === null || _a === void 0 ? void 0 : _a.length) > 0;
        },
        enumerable: false,
        configurable: true
    });
    Subject.prototype._trySubscribe = function (subscriber) {
        this._throwIfClosed();
        return _super.prototype._trySubscribe.call(this, subscriber);
    };
    Subject.prototype._subscribe = function (subscriber) {
        this._throwIfClosed();
        this._checkFinalizedStatuses(subscriber);
        return this._innerSubscribe(subscriber);
    };
    Subject.prototype._innerSubscribe = function (subscriber) {
        var _a = this, hasError = _a.hasError, isStopped = _a.isStopped, observers = _a.observers;
        return hasError || isStopped
            ? _Subscription__WEBPACK_IMPORTED_MODULE_3__.EMPTY_SUBSCRIPTION
            : (observers.push(subscriber), new _Subscription__WEBPACK_IMPORTED_MODULE_3__.Subscription(function () { return (0,_util_arrRemove__WEBPACK_IMPORTED_MODULE_4__.arrRemove)(observers, subscriber); }));
    };
    Subject.prototype._checkFinalizedStatuses = function (subscriber) {
        var _a = this, hasError = _a.hasError, thrownError = _a.thrownError, isStopped = _a.isStopped;
        if (hasError) {
            subscriber.error(thrownError);
        }
        else if (isStopped) {
            subscriber.complete();
        }
    };
    Subject.prototype.asObservable = function () {
        var observable = new _Observable__WEBPACK_IMPORTED_MODULE_5__.Observable();
        observable.source = this;
        return observable;
    };
    Subject.create = function (destination, source) {
        return new AnonymousSubject(destination, source);
    };
    return Subject;
}(_Observable__WEBPACK_IMPORTED_MODULE_5__.Observable));

var AnonymousSubject = (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(AnonymousSubject, _super);
    function AnonymousSubject(destination, source) {
        var _this = _super.call(this) || this;
        _this.destination = destination;
        _this.source = source;
        return _this;
    }
    AnonymousSubject.prototype.next = function (value) {
        var _a, _b;
        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.next) === null || _b === void 0 ? void 0 : _b.call(_a, value);
    };
    AnonymousSubject.prototype.error = function (err) {
        var _a, _b;
        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, err);
    };
    AnonymousSubject.prototype.complete = function () {
        var _a, _b;
        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.complete) === null || _b === void 0 ? void 0 : _b.call(_a);
    };
    AnonymousSubject.prototype._subscribe = function (subscriber) {
        var _a, _b;
        return (_b = (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber)) !== null && _b !== void 0 ? _b : _Subscription__WEBPACK_IMPORTED_MODULE_3__.EMPTY_SUBSCRIPTION;
    };
    return AnonymousSubject;
}(Subject));

//# sourceMappingURL=Subject.js.map

/***/ }),
/* 55 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ObjectUnsubscribedError": () => (/* binding */ ObjectUnsubscribedError)
/* harmony export */ });
/* harmony import */ var _createErrorClass__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(56);

var ObjectUnsubscribedError = (0,_createErrorClass__WEBPACK_IMPORTED_MODULE_0__.createErrorClass)(function (_super) {
    return function ObjectUnsubscribedErrorImpl() {
        _super(this);
        this.name = 'ObjectUnsubscribedError';
        this.message = 'object unsubscribed';
    };
});
//# sourceMappingURL=ObjectUnsubscribedError.js.map

/***/ }),
/* 56 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createErrorClass": () => (/* binding */ createErrorClass)
/* harmony export */ });
function createErrorClass(createImpl) {
    var _super = function (instance) {
        Error.call(instance);
        instance.stack = new Error().stack;
    };
    var ctorFunc = createImpl(_super);
    ctorFunc.prototype = Object.create(Error.prototype);
    ctorFunc.prototype.constructor = ctorFunc;
    return ctorFunc;
}
//# sourceMappingURL=createErrorClass.js.map

/***/ }),
/* 57 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "errorContext": () => (/* binding */ errorContext),
/* harmony export */   "captureError": () => (/* binding */ captureError)
/* harmony export */ });
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(58);

var context = null;
function errorContext(cb) {
    if (_config__WEBPACK_IMPORTED_MODULE_0__.config.useDeprecatedSynchronousErrorHandling) {
        var isRoot = !context;
        if (isRoot) {
            context = { errorThrown: false, error: null };
        }
        cb();
        if (isRoot) {
            var _a = context, errorThrown = _a.errorThrown, error = _a.error;
            context = null;
            if (errorThrown) {
                throw error;
            }
        }
    }
    else {
        cb();
    }
}
function captureError(err) {
    if (_config__WEBPACK_IMPORTED_MODULE_0__.config.useDeprecatedSynchronousErrorHandling && context) {
        context.errorThrown = true;
        context.error = err;
    }
}
//# sourceMappingURL=errorContext.js.map

/***/ }),
/* 58 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "config": () => (/* binding */ config)
/* harmony export */ });
var config = {
    onUnhandledError: null,
    onStoppedNotification: null,
    Promise: undefined,
    useDeprecatedSynchronousErrorHandling: false,
    useDeprecatedNextContext: false,
};
//# sourceMappingURL=config.js.map

/***/ }),
/* 59 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Subscription": () => (/* binding */ Subscription),
/* harmony export */   "EMPTY_SUBSCRIPTION": () => (/* binding */ EMPTY_SUBSCRIPTION),
/* harmony export */   "isSubscription": () => (/* binding */ isSubscription)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52);
/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60);
/* harmony import */ var _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(61);
/* harmony import */ var _util_arrRemove__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(62);




var Subscription = (function () {
    function Subscription(initialTeardown) {
        this.initialTeardown = initialTeardown;
        this.closed = false;
        this._parentage = null;
        this._teardowns = null;
    }
    Subscription.prototype.unsubscribe = function () {
        var e_1, _a, e_2, _b;
        var errors;
        if (!this.closed) {
            this.closed = true;
            var _parentage = this._parentage;
            if (_parentage) {
                this._parentage = null;
                if (Array.isArray(_parentage)) {
                    try {
                        for (var _parentage_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__values)(_parentage), _parentage_1_1 = _parentage_1.next(); !_parentage_1_1.done; _parentage_1_1 = _parentage_1.next()) {
                            var parent_1 = _parentage_1_1.value;
                            parent_1.remove(this);
                        }
                    }
                    catch (e_1_1) { e_1 = { error: e_1_1 }; }
                    finally {
                        try {
                            if (_parentage_1_1 && !_parentage_1_1.done && (_a = _parentage_1.return)) _a.call(_parentage_1);
                        }
                        finally { if (e_1) throw e_1.error; }
                    }
                }
                else {
                    _parentage.remove(this);
                }
            }
            var initialTeardown = this.initialTeardown;
            if ((0,_util_isFunction__WEBPACK_IMPORTED_MODULE_1__.isFunction)(initialTeardown)) {
                try {
                    initialTeardown();
                }
                catch (e) {
                    errors = e instanceof _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_2__.UnsubscriptionError ? e.errors : [e];
                }
            }
            var _teardowns = this._teardowns;
            if (_teardowns) {
                this._teardowns = null;
                try {
                    for (var _teardowns_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__values)(_teardowns), _teardowns_1_1 = _teardowns_1.next(); !_teardowns_1_1.done; _teardowns_1_1 = _teardowns_1.next()) {
                        var teardown_1 = _teardowns_1_1.value;
                        try {
                            execTeardown(teardown_1);
                        }
                        catch (err) {
                            errors = errors !== null && errors !== void 0 ? errors : [];
                            if (err instanceof _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_2__.UnsubscriptionError) {
                                errors = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__spreadArray)([], (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__read)(errors)), (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__read)(err.errors));
                            }
                            else {
                                errors.push(err);
                            }
                        }
                    }
                }
                catch (e_2_1) { e_2 = { error: e_2_1 }; }
                finally {
                    try {
                        if (_teardowns_1_1 && !_teardowns_1_1.done && (_b = _teardowns_1.return)) _b.call(_teardowns_1);
                    }
                    finally { if (e_2) throw e_2.error; }
                }
            }
            if (errors) {
                throw new _util_UnsubscriptionError__WEBPACK_IMPORTED_MODULE_2__.UnsubscriptionError(errors);
            }
        }
    };
    Subscription.prototype.add = function (teardown) {
        var _a;
        if (teardown && teardown !== this) {
            if (this.closed) {
                execTeardown(teardown);
            }
            else {
                if (teardown instanceof Subscription) {
                    if (teardown.closed || teardown._hasParent(this)) {
                        return;
                    }
                    teardown._addParent(this);
                }
                (this._teardowns = (_a = this._teardowns) !== null && _a !== void 0 ? _a : []).push(teardown);
            }
        }
    };
    Subscription.prototype._hasParent = function (parent) {
        var _parentage = this._parentage;
        return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));
    };
    Subscription.prototype._addParent = function (parent) {
        var _parentage = this._parentage;
        this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;
    };
    Subscription.prototype._removeParent = function (parent) {
        var _parentage = this._parentage;
        if (_parentage === parent) {
            this._parentage = null;
        }
        else if (Array.isArray(_parentage)) {
            (0,_util_arrRemove__WEBPACK_IMPORTED_MODULE_3__.arrRemove)(_parentage, parent);
        }
    };
    Subscription.prototype.remove = function (teardown) {
        var _teardowns = this._teardowns;
        _teardowns && (0,_util_arrRemove__WEBPACK_IMPORTED_MODULE_3__.arrRemove)(_teardowns, teardown);
        if (teardown instanceof Subscription) {
            teardown._removeParent(this);
        }
    };
    Subscription.EMPTY = (function () {
        var empty = new Subscription();
        empty.closed = true;
        return empty;
    })();
    return Subscription;
}());

var EMPTY_SUBSCRIPTION = Subscription.EMPTY;
function isSubscription(value) {
    return (value instanceof Subscription ||
        (value && 'closed' in value && (0,_util_isFunction__WEBPACK_IMPORTED_MODULE_1__.isFunction)(value.remove) && (0,_util_isFunction__WEBPACK_IMPORTED_MODULE_1__.isFunction)(value.add) && (0,_util_isFunction__WEBPACK_IMPORTED_MODULE_1__.isFunction)(value.unsubscribe)));
}
function execTeardown(teardown) {
    if ((0,_util_isFunction__WEBPACK_IMPORTED_MODULE_1__.isFunction)(teardown)) {
        teardown();
    }
    else {
        teardown.unsubscribe();
    }
}
//# sourceMappingURL=Subscription.js.map

/***/ }),
/* 60 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isFunction": () => (/* binding */ isFunction)
/* harmony export */ });
function isFunction(value) {
    return typeof value === 'function';
}
//# sourceMappingURL=isFunction.js.map

/***/ }),
/* 61 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UnsubscriptionError": () => (/* binding */ UnsubscriptionError)
/* harmony export */ });
/* harmony import */ var _createErrorClass__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(56);

var UnsubscriptionError = (0,_createErrorClass__WEBPACK_IMPORTED_MODULE_0__.createErrorClass)(function (_super) {
    return function UnsubscriptionErrorImpl(errors) {
        _super(this);
        this.message = errors
            ? errors.length + " errors occurred during unsubscription:\n" + errors.map(function (err, i) { return i + 1 + ") " + err.toString(); }).join('\n  ')
            : '';
        this.name = 'UnsubscriptionError';
        this.errors = errors;
    };
});
//# sourceMappingURL=UnsubscriptionError.js.map

/***/ }),
/* 62 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "arrRemove": () => (/* binding */ arrRemove)
/* harmony export */ });
function arrRemove(arr, item) {
    if (arr) {
        var index = arr.indexOf(item);
        0 <= index && arr.splice(index, 1);
    }
}
//# sourceMappingURL=arrRemove.js.map

/***/ }),
/* 63 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Observable": () => (/* binding */ Observable)
/* harmony export */ });
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(64);
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(59);
/* harmony import */ var _symbol_observable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(69);
/* harmony import */ var _util_pipe__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(70);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(58);
/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(60);
/* harmony import */ var _util_errorContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(57);







var Observable = (function () {
    function Observable(subscribe) {
        if (subscribe) {
            this._subscribe = subscribe;
        }
    }
    Observable.prototype.lift = function (operator) {
        var observable = new Observable();
        observable.source = this;
        observable.operator = operator;
        return observable;
    };
    Observable.prototype.subscribe = function (observerOrNext, error, complete) {
        var _this = this;
        var subscriber = isSubscriber(observerOrNext) ? observerOrNext : new _Subscriber__WEBPACK_IMPORTED_MODULE_0__.SafeSubscriber(observerOrNext, error, complete);
        (0,_util_errorContext__WEBPACK_IMPORTED_MODULE_1__.errorContext)(function () {
            var _a = _this, operator = _a.operator, source = _a.source;
            subscriber.add(operator
                ?
                    operator.call(subscriber, source)
                : source
                    ?
                        _this._subscribe(subscriber)
                    :
                        _this._trySubscribe(subscriber));
        });
        return subscriber;
    };
    Observable.prototype._trySubscribe = function (sink) {
        try {
            return this._subscribe(sink);
        }
        catch (err) {
            sink.error(err);
        }
    };
    Observable.prototype.forEach = function (next, promiseCtor) {
        var _this = this;
        promiseCtor = getPromiseCtor(promiseCtor);
        return new promiseCtor(function (resolve, reject) {
            var subscription;
            subscription = _this.subscribe(function (value) {
                try {
                    next(value);
                }
                catch (err) {
                    reject(err);
                    subscription === null || subscription === void 0 ? void 0 : subscription.unsubscribe();
                }
            }, reject, resolve);
        });
    };
    Observable.prototype._subscribe = function (subscriber) {
        var _a;
        return (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber);
    };
    Observable.prototype[_symbol_observable__WEBPACK_IMPORTED_MODULE_2__.observable] = function () {
        return this;
    };
    Observable.prototype.pipe = function () {
        var operations = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            operations[_i] = arguments[_i];
        }
        return (0,_util_pipe__WEBPACK_IMPORTED_MODULE_3__.pipeFromArray)(operations)(this);
    };
    Observable.prototype.toPromise = function (promiseCtor) {
        var _this = this;
        promiseCtor = getPromiseCtor(promiseCtor);
        return new promiseCtor(function (resolve, reject) {
            var value;
            _this.subscribe(function (x) { return (value = x); }, function (err) { return reject(err); }, function () { return resolve(value); });
        });
    };
    Observable.create = function (subscribe) {
        return new Observable(subscribe);
    };
    return Observable;
}());

function getPromiseCtor(promiseCtor) {
    var _a;
    return (_a = promiseCtor !== null && promiseCtor !== void 0 ? promiseCtor : _config__WEBPACK_IMPORTED_MODULE_4__.config.Promise) !== null && _a !== void 0 ? _a : Promise;
}
function isObserver(value) {
    return value && (0,_util_isFunction__WEBPACK_IMPORTED_MODULE_5__.isFunction)(value.next) && (0,_util_isFunction__WEBPACK_IMPORTED_MODULE_5__.isFunction)(value.error) && (0,_util_isFunction__WEBPACK_IMPORTED_MODULE_5__.isFunction)(value.complete);
}
function isSubscriber(value) {
    return (value && value instanceof _Subscriber__WEBPACK_IMPORTED_MODULE_0__.Subscriber) || (isObserver(value) && (0,_Subscription__WEBPACK_IMPORTED_MODULE_6__.isSubscription)(value));
}
//# sourceMappingURL=Observable.js.map

/***/ }),
/* 64 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Subscriber": () => (/* binding */ Subscriber),
/* harmony export */   "SafeSubscriber": () => (/* binding */ SafeSubscriber),
/* harmony export */   "EMPTY_OBSERVER": () => (/* binding */ EMPTY_OBSERVER)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52);
/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(60);
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(59);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(58);
/* harmony import */ var _util_reportUnhandledError__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(67);
/* harmony import */ var _util_noop__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(66);
/* harmony import */ var _NotificationFactories__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(65);
/* harmony import */ var _scheduler_timeoutProvider__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(68);
/* harmony import */ var _util_errorContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(57);









var Subscriber = (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(Subscriber, _super);
    function Subscriber(destination) {
        var _this = _super.call(this) || this;
        _this.isStopped = false;
        if (destination) {
            _this.destination = destination;
            if ((0,_Subscription__WEBPACK_IMPORTED_MODULE_1__.isSubscription)(destination)) {
                destination.add(_this);
            }
        }
        else {
            _this.destination = EMPTY_OBSERVER;
        }
        return _this;
    }
    Subscriber.create = function (next, error, complete) {
        return new SafeSubscriber(next, error, complete);
    };
    Subscriber.prototype.next = function (value) {
        if (this.isStopped) {
            handleStoppedNotification((0,_NotificationFactories__WEBPACK_IMPORTED_MODULE_2__.nextNotification)(value), this);
        }
        else {
            this._next(value);
        }
    };
    Subscriber.prototype.error = function (err) {
        if (this.isStopped) {
            handleStoppedNotification((0,_NotificationFactories__WEBPACK_IMPORTED_MODULE_2__.errorNotification)(err), this);
        }
        else {
            this.isStopped = true;
            this._error(err);
        }
    };
    Subscriber.prototype.complete = function () {
        if (this.isStopped) {
            handleStoppedNotification(_NotificationFactories__WEBPACK_IMPORTED_MODULE_2__.COMPLETE_NOTIFICATION, this);
        }
        else {
            this.isStopped = true;
            this._complete();
        }
    };
    Subscriber.prototype.unsubscribe = function () {
        if (!this.closed) {
            this.isStopped = true;
            _super.prototype.unsubscribe.call(this);
            this.destination = null;
        }
    };
    Subscriber.prototype._next = function (value) {
        this.destination.next(value);
    };
    Subscriber.prototype._error = function (err) {
        try {
            this.destination.error(err);
        }
        finally {
            this.unsubscribe();
        }
    };
    Subscriber.prototype._complete = function () {
        try {
            this.destination.complete();
        }
        finally {
            this.unsubscribe();
        }
    };
    return Subscriber;
}(_Subscription__WEBPACK_IMPORTED_MODULE_1__.Subscription));

var SafeSubscriber = (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(SafeSubscriber, _super);
    function SafeSubscriber(observerOrNext, error, complete) {
        var _this = _super.call(this) || this;
        var next;
        if ((0,_util_isFunction__WEBPACK_IMPORTED_MODULE_3__.isFunction)(observerOrNext)) {
            next = observerOrNext;
        }
        else if (observerOrNext) {
            (next = observerOrNext.next, error = observerOrNext.error, complete = observerOrNext.complete);
            var context_1;
            if (_this && _config__WEBPACK_IMPORTED_MODULE_4__.config.useDeprecatedNextContext) {
                context_1 = Object.create(observerOrNext);
                context_1.unsubscribe = function () { return _this.unsubscribe(); };
            }
            else {
                context_1 = observerOrNext;
            }
            next = next === null || next === void 0 ? void 0 : next.bind(context_1);
            error = error === null || error === void 0 ? void 0 : error.bind(context_1);
            complete = complete === null || complete === void 0 ? void 0 : complete.bind(context_1);
        }
        _this.destination = {
            next: next ? wrapForErrorHandling(next, _this) : _util_noop__WEBPACK_IMPORTED_MODULE_5__.noop,
            error: wrapForErrorHandling(error !== null && error !== void 0 ? error : defaultErrorHandler, _this),
            complete: complete ? wrapForErrorHandling(complete, _this) : _util_noop__WEBPACK_IMPORTED_MODULE_5__.noop,
        };
        return _this;
    }
    return SafeSubscriber;
}(Subscriber));

function wrapForErrorHandling(handler, instance) {
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        try {
            handler.apply(void 0, (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__spreadArray)([], (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__read)(args)));
        }
        catch (err) {
            if (_config__WEBPACK_IMPORTED_MODULE_4__.config.useDeprecatedSynchronousErrorHandling) {
                (0,_util_errorContext__WEBPACK_IMPORTED_MODULE_6__.captureError)(err);
            }
            else {
                (0,_util_reportUnhandledError__WEBPACK_IMPORTED_MODULE_7__.reportUnhandledError)(err);
            }
        }
    };
}
function defaultErrorHandler(err) {
    throw err;
}
function handleStoppedNotification(notification, subscriber) {
    var onStoppedNotification = _config__WEBPACK_IMPORTED_MODULE_4__.config.onStoppedNotification;
    onStoppedNotification && _scheduler_timeoutProvider__WEBPACK_IMPORTED_MODULE_8__.timeoutProvider.setTimeout(function () { return onStoppedNotification(notification, subscriber); });
}
var EMPTY_OBSERVER = {
    closed: true,
    next: _util_noop__WEBPACK_IMPORTED_MODULE_5__.noop,
    error: defaultErrorHandler,
    complete: _util_noop__WEBPACK_IMPORTED_MODULE_5__.noop,
};
//# sourceMappingURL=Subscriber.js.map

/***/ }),
/* 65 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "COMPLETE_NOTIFICATION": () => (/* binding */ COMPLETE_NOTIFICATION),
/* harmony export */   "errorNotification": () => (/* binding */ errorNotification),
/* harmony export */   "nextNotification": () => (/* binding */ nextNotification),
/* harmony export */   "createNotification": () => (/* binding */ createNotification)
/* harmony export */ });
var COMPLETE_NOTIFICATION = (function () { return createNotification('C', undefined, undefined); })();
function errorNotification(error) {
    return createNotification('E', undefined, error);
}
function nextNotification(value) {
    return createNotification('N', value, undefined);
}
function createNotification(kind, value, error) {
    return {
        kind: kind,
        value: value,
        error: error,
    };
}
//# sourceMappingURL=NotificationFactories.js.map

/***/ }),
/* 66 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "noop": () => (/* binding */ noop)
/* harmony export */ });
function noop() { }
//# sourceMappingURL=noop.js.map

/***/ }),
/* 67 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "reportUnhandledError": () => (/* binding */ reportUnhandledError)
/* harmony export */ });
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(58);
/* harmony import */ var _scheduler_timeoutProvider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(68);


function reportUnhandledError(err) {
    _scheduler_timeoutProvider__WEBPACK_IMPORTED_MODULE_0__.timeoutProvider.setTimeout(function () {
        var onUnhandledError = _config__WEBPACK_IMPORTED_MODULE_1__.config.onUnhandledError;
        if (onUnhandledError) {
            onUnhandledError(err);
        }
        else {
            throw err;
        }
    });
}
//# sourceMappingURL=reportUnhandledError.js.map

/***/ }),
/* 68 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "timeoutProvider": () => (/* binding */ timeoutProvider)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52);

var timeoutProvider = {
    setTimeout: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var delegate = timeoutProvider.delegate;
        return ((delegate === null || delegate === void 0 ? void 0 : delegate.setTimeout) || setTimeout).apply(void 0, (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__spreadArray)([], (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__read)(args)));
    },
    clearTimeout: function (handle) {
        var delegate = timeoutProvider.delegate;
        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearTimeout) || clearTimeout)(handle);
    },
    delegate: undefined,
};
//# sourceMappingURL=timeoutProvider.js.map

/***/ }),
/* 69 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "observable": () => (/* binding */ observable)
/* harmony export */ });
var observable = (function () { return (typeof Symbol === 'function' && Symbol.observable) || '@@observable'; })();
//# sourceMappingURL=observable.js.map

/***/ }),
/* 70 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "pipe": () => (/* binding */ pipe),
/* harmony export */   "pipeFromArray": () => (/* binding */ pipeFromArray)
/* harmony export */ });
/* harmony import */ var _identity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(71);

function pipe() {
    var fns = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        fns[_i] = arguments[_i];
    }
    return pipeFromArray(fns);
}
function pipeFromArray(fns) {
    if (fns.length === 0) {
        return _identity__WEBPACK_IMPORTED_MODULE_0__.identity;
    }
    if (fns.length === 1) {
        return fns[0];
    }
    return function piped(input) {
        return fns.reduce(function (prev, fn) { return fn(prev); }, input);
    };
}
//# sourceMappingURL=pipe.js.map

/***/ }),
/* 71 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "identity": () => (/* binding */ identity)
/* harmony export */ });
function identity(x) {
    return x;
}
//# sourceMappingURL=identity.js.map

/***/ }),
/* 72 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "IdentityRegistrationFailed": () => (/* binding */ IdentityRegistrationFailed),
/* harmony export */   "CannotExtendDataset": () => (/* binding */ CannotExtendDataset),
/* harmony export */   "MintingRegistrationFailed": () => (/* binding */ MintingRegistrationFailed),
/* harmony export */   "CannotExtend": () => (/* binding */ CannotExtend),
/* harmony export */   "ProtocolService": () => (/* binding */ ProtocolService)
/* harmony export */ });
/* harmony import */ var _polkadot_keyring__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(76);
/* harmony import */ var _trustfractal_polkadot_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(73);
/* harmony import */ var _trustfractal_polkadot_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_trustfractal_polkadot_utils__WEBPACK_IMPORTED_MODULE_0__);


class IdentityRegistrationFailed extends Error {
    constructor(message) {
        super(message);
        this.name = 'IdentityRegistrationFailed';
    }
}
class CannotExtendDataset extends Error {
    constructor(message) {
        super(message);
        this.name = 'CannotExtendDataset';
    }
}
class MintingRegistrationFailed extends Error {
    constructor(message) {
        super(message);
        this.name = 'MintingRegistrationFailed';
    }
}
class CannotExtend extends Error {
    proof;
    constructor(proof) {
        super(`Cannot extend existing proof`);
        this.proof = proof;
        this.name = 'CannotExtend';
    }
}
const MINTING_PERIOD_LENGTH = 14400;
class ProtocolService {
    api;
    signer;
    dataHost;
    fractalIdCache = null;
    constructor(api, signer, dataHost) {
        this.api = api;
        this.signer = signer;
        this.dataHost = dataHost;
    }
    async registerForMinting() {
        const latestProof = await this.latestExtensionProof();
        console.log(`Latest proof from chain ${latestProof}`);
        const extensionProof = await this.dataHost.extensionProof(latestProof);
        if (extensionProof == null)
            throw new CannotExtendDataset(`Current tree: ${await this.dataHost.currentTree()}`);
        const hash = await this.submitMintingExtrinsic(extensionProof);
        if (!(await this.isRegisteredForMinting())) {
            throw new MintingRegistrationFailed();
        }
        return hash;
    }
    async latestExtensionProof() {
        const fractalId = await this.registeredFractalId();
        if (fractalId == null)
            return null;
        // Blue-green strategy handling migration of blockchain storage.
        try {
            // Will be long-term code.
            const dataset = await (await this.api).query.fractalMinting.accountIdDatasets(this.address(), fractalId);
            return dataset.toHuman();
        }
        catch (e) {
            // TODO(shelbyd): Delete this after rollout of storage change.
            const dataset = await (await this.api).query.fractalMinting.idDatasets(fractalId);
            return dataset.toHuman();
        }
    }
    async submitMintingExtrinsic(proof) {
        console.log(`Submitting proof ${proof}`);
        const txn = (await this.api).tx.fractalMinting.registerForMinting(null, proof);
        const { hash } = await _trustfractal_polkadot_utils__WEBPACK_IMPORTED_MODULE_0__.TxnWatcher.signAndSend(txn, this.requireSigner()).inBlock();
        return hash;
    }
    requireSigner() {
        if (this.signer == null) {
            throw new Error('Method requires signer to be defined');
        }
        else {
            return this.signer;
        }
    }
    async isRegisteredForMinting(id) {
        const fractalId = await this.registeredFractalId();
        if (fractalId == null)
            return false;
        const api = await this.api;
        const rewards = api.query.fractalMinting.nextMintingRewards;
        const storage = id == null
            ? (await rewards(fractalId))
            : (await rewards.at(await this.hash(id), fractalId));
        return !storage.isEmpty;
    }
    async registeredFractalId() {
        if (this.fractalIdCache != null)
            return this.fractalIdCache;
        const keys = await this.withApi((api) => api.query.fractalMinting.accountIds.keys(this.address()));
        if (keys.length !== 1)
            return null;
        const fractalId = keys[0].args[1];
        this.fractalIdCache = fractalId;
        return fractalId;
    }
    async ensureIdentityRegistered() {
        if (await this.isIdentityRegistered())
            return;
        console.log('Identity is not registered, trying to register');
        if (await this.isIdentityRegistered()) {
            console.log('Identity successfully registered');
        }
        else {
            throw new IdentityRegistrationFailed();
        }
    }
    async isIdentityRegistered() {
        const fractalId = await this.registeredFractalId();
        return fractalId != null;
    }
    address() {
        return this.requireSigner().address;
    }
    async getBalance(address) {
        return await this.withApi(async (api) => {
            return (await api.query.system.account(address)).data;
        });
    }
    async watchBalance(cb) {
        const unsub = await this.withApi((api) => {
            return api.query.system.account(this.address(), ({ data }) => {
                cb(data);
            });
        });
        return unsub;
    }
    addressForMnemonic(mnemonic) {
        const keyring = new _polkadot_keyring__WEBPACK_IMPORTED_MODULE_1__.Keyring({ type: 'sr25519' });
        const signer = keyring.addFromUri(mnemonic);
        return signer.address;
    }
    async saveSigner(storage) {
        await storage.setItem('protocol/signer', JSON.stringify(this.requireSigner().toJson()));
    }
    static signerFromMnemonic(mnemonic) {
        const keyring = new _polkadot_keyring__WEBPACK_IMPORTED_MODULE_1__.Keyring({ type: 'sr25519' });
        return keyring.addFromUri(mnemonic);
    }
    static async saveSignerMnemonic(storage, mnemonic) {
        await storage.setItem('protocol/signer', JSON.stringify(ProtocolService.signerFromMnemonic(mnemonic).toJson()));
    }
    static async signerFromStorage(storage) {
        const maybeSigner = await storage.getItem('protocol/signer');
        if (maybeSigner == null)
            throw new Error('No signer in the provided storage');
        const parsedSigner = JSON.parse(maybeSigner);
        const keyring = new _polkadot_keyring__WEBPACK_IMPORTED_MODULE_1__.Keyring({ type: 'sr25519' });
        const signer = keyring.addFromJson(parsedSigner);
        signer.unlock();
        return signer;
    }
    async sendToAddress(address, amount) {
        const api = await this.api;
        const txn = api.tx.balances.transfer(address, amount);
        const watcher = _trustfractal_polkadot_utils__WEBPACK_IMPORTED_MODULE_0__.TxnWatcher.signAndSend(txn, this.requireSigner());
        const { hash } = await watcher.inBlock();
        return hash;
    }
    createSigner(mnemonic) {
        const keyring = new _polkadot_keyring__WEBPACK_IMPORTED_MODULE_1__.Keyring({ type: 'sr25519' });
        const signer = keyring.addFromUri(mnemonic);
        return signer;
    }
    async sweepFromMnemonic(mnemonic) {
        return await this.withApi(async (api) => {
            const signer = this.createSigner(mnemonic);
            const balance = (await this.getBalance(signer.address)).free.toBigInt();
            const fee = (await api.tx.balances
                .transfer(this.address(), balance)
                .paymentInfo(signer)).partialFee;
            const txn = api.tx.balances.transfer(this.address(), balance - fee.toBigInt());
            const { hash } = await _trustfractal_polkadot_utils__WEBPACK_IMPORTED_MODULE_0__.TxnWatcher.signAndSend(txn, signer, {
                fee,
            }).inBlock();
            return hash;
        });
    }
    // `MintingHistoryEvent`s in order from most recent to oldest. Capped at
    // `numEvents` and last 7 periods worth of blocks.
    async mintingHistory(numEvents) {
        const latestHeader = await this.withApi((api) => api.rpc.chain.getHeader());
        const latestNumber = latestHeader.number.toNumber();
        const promises = Array.from({ length: 7 }, (_, i) => i).map((i) => this.mintingEventForPeriod(latestNumber - i * MINTING_PERIOD_LENGTH));
        const result = [];
        while (result.length < numEvents) {
            const firstPromise = promises.shift();
            if (firstPromise == null)
                break;
            const event = await firstPromise;
            if (event != null)
                result.push(event);
        }
        return result.slice(0, numEvents);
    }
    // Returns the most relevant minting event for the user that occured in the
    // period containing the provided block.
    async mintingEventForPeriod(blockNum) {
        if (blockNum <= 0)
            return null;
        const periodNumber = Math.floor(blockNum / MINTING_PERIOD_LENGTH);
        const beginningOfPeriod = periodNumber * MINTING_PERIOD_LENGTH + 1;
        const endOfPeriod = (periodNumber + 1) * MINTING_PERIOD_LENGTH;
        const received = await this.mintingReceived(endOfPeriod);
        if (received != null)
            return received;
        try {
            return await this.mintingRegistration(beginningOfPeriod, endOfPeriod);
        }
        catch (e) {
            if (e instanceof BlockNumberOutsideRange)
                return await this.mintingRegistration(beginningOfPeriod, blockNum);
            throw e;
        }
    }
    async mintingReceived(end) {
        // Since minting occurs in the on_finalize hook, users don't show up as
        // registered on the exact block minting occurs.
        try {
            const wasRegistered = await this.isRegisteredForMinting(end - 1);
            if (!wasRegistered)
                return null;
        }
        catch (e) {
            if (e instanceof BlockNumberOutsideRange)
                return null;
            throw e;
        }
        const endHash = await this.hash(end);
        const events = (await this.withApi((api) => api.query.system.events.at(endHash))).map((e) => e.event);
        const minting = events.find((e) => e.method === 'Minted' && e.section === 'fractalMinting');
        // Testnet has the minting event with 2 arguments instead of the mainnet's
        // 4. The 2 argument case can be removed once the testnet is using the
        // latest runtime.
        const amount = minting.data.length === 2
            ? minting.data[0].toNumber() /
                minting.data[1].toNumber()
            : minting.data[1].toNumber();
        return {
            kind: 'received',
            at: await this.timestampForBlock(end),
            amount,
        };
    }
    async mintingRegistration(start, end) {
        const registeredAt = await binarySearch(start, end, async (n) => {
            return await this.isRegisteredForMinting(n);
        });
        if (registeredAt == null)
            return null;
        return {
            kind: 'registered',
            at: await this.timestampForBlock(registeredAt),
        };
    }
    async withApi(f) {
        return await f(await this.api);
    }
    async hash(n) {
        const hash = await this.withApi((api) => api.rpc.chain.getBlockHash(n));
        if (hash.isEmpty)
            throw new BlockNumberOutsideRange(n);
        return hash;
    }
    async timestampForBlock(n) {
        const hash = await this.hash(n);
        const timestamp = await this.withApi((api) => api.query.timestamp.now.at(hash));
        return new Date(timestamp.toNumber());
    }
}
class BlockNumberOutsideRange extends Error {
    constructor(n) {
        super(`Block number ${n} not found`);
        this.name = 'BlockNumberOutsideRange';
    }
}
// Returns the smallest integer where the provided function returns true or null
// if the `minTrue` argument is false or if the `maxFalse` argument is true.
async function binarySearch(maxFalse, minTrue, f) {
    if (!(await f(minTrue)))
        return null;
    if (await f(maxFalse))
        return null;
    while (minTrue - maxFalse > 1) {
        const mid = Math.floor(minTrue / 2 + maxFalse / 2);
        if (await f(mid)) {
            minTrue = mid;
        }
        else {
            maxFalse = mid;
        }
    }
    return minTrue;
}


/***/ }),
/* 73 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(74), exports);
__exportStar(__webpack_require__(75), exports);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsZ0RBQThCO0FBQzlCLGdEQUE4QiJ9

/***/ }),
/* 74 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TxnBatcher = void 0;
const watcher_1 = __webpack_require__(75);
class TxnBatcher {
    constructor(api) {
        this.api = api;
        this.nextNonces = new Map();
        this.api;
    }
    signAndSend(txn, signer, watcher = new watcher_1.TxnWatcher()) {
        (() => __awaiter(this, void 0, void 0, function* () {
            const retry = () => {
                console.warn('Retrying nonce', nonce);
                this.clearNextNonce(signer);
                this.signAndSend(txn, signer, watcher);
            };
            const nonce = yield this.nextNonce(signer);
            try {
                yield watcher.signAndSend(txn, signer, { nonce });
                watcher.handleInvalid = retry;
                yield watcher.ready();
            }
            catch (e) {
                if (!(e instanceof Error)) {
                    throw e;
                }
                const retryable = [
                    'Priority is too low',
                    'Transaction is outdated',
                ].some((m) => e.message.includes(m));
                if (retryable) {
                    retry();
                }
                else {
                    console.log('Throwing unhandled error', e);
                    throw e;
                }
            }
        }))();
        return watcher;
    }
    nextNonce(signer) {
        return __awaiter(this, void 0, void 0, function* () {
            const address = signer.address;
            /*eslint no-constant-condition: ["error", { "checkLoops": false }]*/
            while (true) {
                const already = this.nextNonces.get(address);
                if (already instanceof Promise) {
                    yield already;
                }
                else if (already == null) {
                    const promise = this.api.rpc.system
                        .accountNextIndex(address)
                        .then((n) => n.toNumber());
                    this.nextNonces.set(address, promise);
                    const nonce = yield promise;
                    this.nextNonces.set(address, nonce + 1);
                    return nonce;
                }
                else {
                    this.nextNonces.set(address, already + 1);
                    return already;
                }
            }
        });
    }
    clearNextNonce(signer) {
        const already = this.nextNonces.get(signer.address);
        if (typeof already === 'number') {
            this.nextNonces.delete(signer.address);
        }
    }
}
exports.TxnBatcher = TxnBatcher;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmF0Y2hlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvYmF0Y2hlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFJQSx1Q0FBdUM7QUFFdkMsTUFBYSxVQUFVO0lBR3JCLFlBQTZCLEdBQWU7UUFBZixRQUFHLEdBQUgsR0FBRyxDQUFZO1FBRjNCLGVBQVUsR0FBRyxJQUFJLEdBQUcsRUFBb0MsQ0FBQztRQUd4RSxJQUFJLENBQUMsR0FBRyxDQUFDO0lBQ1gsQ0FBQztJQUVELFdBQVcsQ0FDVCxHQUFvQyxFQUNwQyxNQUFtQixFQUNuQixPQUFPLEdBQUcsSUFBSSxvQkFBVSxFQUFFO1FBRTFCLENBQUMsR0FBUyxFQUFFO1lBQ1YsTUFBTSxLQUFLLEdBQUcsR0FBRyxFQUFFO2dCQUNqQixPQUFPLENBQUMsSUFBSSxDQUFDLGdCQUFnQixFQUFFLEtBQUssQ0FBQyxDQUFDO2dCQUN0QyxJQUFJLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxDQUFDO2dCQUM1QixJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsRUFBRSxNQUFNLEVBQUUsT0FBTyxDQUFDLENBQUM7WUFDekMsQ0FBQyxDQUFDO1lBRUYsTUFBTSxLQUFLLEdBQUcsTUFBTSxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQzNDLElBQUk7Z0JBQ0YsTUFBTSxPQUFPLENBQUMsV0FBVyxDQUFDLEdBQUcsRUFBRSxNQUFNLEVBQUUsRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDO2dCQUNsRCxPQUFPLENBQUMsYUFBYSxHQUFHLEtBQUssQ0FBQztnQkFDOUIsTUFBTSxPQUFPLENBQUMsS0FBSyxFQUFFLENBQUM7YUFDdkI7WUFBQyxPQUFPLENBQUMsRUFBRTtnQkFDVixJQUFJLENBQUMsQ0FBQyxDQUFDLFlBQVksS0FBSyxDQUFDLEVBQUU7b0JBQ3pCLE1BQU0sQ0FBQyxDQUFDO2lCQUNUO2dCQUVELE1BQU0sU0FBUyxHQUFHO29CQUNoQixxQkFBcUI7b0JBQ3JCLHlCQUF5QjtpQkFDMUIsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFFLENBQVcsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ2hELElBQUksU0FBUyxFQUFFO29CQUNiLEtBQUssRUFBRSxDQUFDO2lCQUNUO3FCQUFNO29CQUNMLE9BQU8sQ0FBQyxHQUFHLENBQUMsMEJBQTBCLEVBQUUsQ0FBQyxDQUFDLENBQUM7b0JBQzNDLE1BQU0sQ0FBQyxDQUFDO2lCQUNUO2FBQ0Y7UUFDSCxDQUFDLENBQUEsQ0FBQyxFQUFFLENBQUM7UUFFTCxPQUFPLE9BQU8sQ0FBQztJQUNqQixDQUFDO0lBRWEsU0FBUyxDQUFDLE1BQW1COztZQUN6QyxNQUFNLE9BQU8sR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDO1lBQy9CLG9FQUFvRTtZQUNwRSxPQUFPLElBQUksRUFBRTtnQkFDWCxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztnQkFDN0MsSUFBSSxPQUFPLFlBQVksT0FBTyxFQUFFO29CQUM5QixNQUFNLE9BQU8sQ0FBQztpQkFDZjtxQkFBTSxJQUFJLE9BQU8sSUFBSSxJQUFJLEVBQUU7b0JBQzFCLE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLE1BQU07eUJBQ2hDLGdCQUFnQixDQUFDLE9BQU8sQ0FBQzt5QkFDekIsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztvQkFDN0IsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO29CQUN0QyxNQUFNLEtBQUssR0FBRyxNQUFNLE9BQU8sQ0FBQztvQkFDNUIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQztvQkFDeEMsT0FBTyxLQUFLLENBQUM7aUJBQ2Q7cUJBQU07b0JBQ0wsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLE9BQU8sR0FBRyxDQUFDLENBQUMsQ0FBQztvQkFDMUMsT0FBTyxPQUFPLENBQUM7aUJBQ2hCO2FBQ0Y7UUFDSCxDQUFDO0tBQUE7SUFFTyxjQUFjLENBQUMsTUFBbUI7UUFDeEMsTUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3BELElBQUksT0FBTyxPQUFPLEtBQUssUUFBUSxFQUFFO1lBQy9CLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztTQUN4QztJQUNILENBQUM7Q0FDRjtBQXpFRCxnQ0F5RUMifQ==

/***/ }),
/* 75 */
/***/ (function(__unused_webpack_module, exports) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TxnWatcher = void 0;
class TxnWatcher {
    constructor() {
        // eslint-disable-next-line @typescript-eslint/no-empty-function
        this.unsub = () => { };
        this.status = 'Unsubmitted';
        this.onReady = new MultiCallback();
        this.onInBlock = new OnceMultiCallback('onInBlock');
        this.onFinalized = new OnceMultiCallback('onFinalized');
        this.onUnhandledError = new OnceMultiCallback('onUnhandledError');
        // eslint-disable-next-line @typescript-eslint/no-empty-function
        this.handleInvalid = () => { };
    }
    signAndSendCb() {
        return (result) => {
            if (result.dispatchError) {
                this.status = 'Error';
                this.onError(result.dispatchError.toHuman());
                return;
            }
            if (this.extrinsicEventsError(result)) {
                return;
            }
            if (result.status.isReady) {
                this.status = 'Ready';
                this.onReady.callAll({ hash: this.hash });
            }
            else if (result.status.isBroadcast) {
                // Nothing to do when breadcasted, but not handling will trigger the
                // unhandled case below.
            }
            else if (result.status.isInBlock) {
                this.status = 'InBlock';
                this.onInBlock.callAll({
                    block: result.status.asInBlock.toHex(),
                    hash: this.hash,
                });
            }
            else if (result.status.isFinalized) {
                this.onInBlock.callIfUncalled({
                    block: result.status.asFinalized.toHex(),
                    hash: this.hash,
                });
                this.status = 'Finalized';
                this.onFinalized.callAll({
                    includedInBlock: result.status.asFinalized.toHex(),
                    hash: this.hash,
                });
                this.unsub();
            }
            else if (result.status.isFuture) {
                this.status = 'Future';
                // Future means we submitted a TXN with too high of a nonce. Since
                // we probably submitted the previous nonce about the same time, this
                // doesn't end up being a problem.
            }
            else if (result.status.isInvalid && this.handleInvalid != null) {
                console.log('Handling invalid with callback');
                this.handleInvalid();
            }
            else {
                this.status = result.status.toHuman();
                const error = new Error(`Unhandled status: ${result.status.toHuman()}`);
                this.onError(error);
            }
        };
    }
    onError(error) {
        console.error(error);
        this.onUnhandledError.callAll(error);
        this.unsub();
    }
    extrinsicEventsError(result) {
        const events = result.events;
        if (events.length === 0)
            return false;
        for (const { event } of events) {
            if (event.section !== 'system')
                continue;
            if (event.method === 'ExtrinsicSuccess') {
                return false;
            }
            if (event.method === 'ExtrinsicFailed') {
                this.status = 'ExtrinsicFailed';
                this.onError(event.data);
                return true;
            }
        }
        const error = new Error(`No extrinsic event found for extrinsic: ${this.hash} in state ${result.status.toHuman()}`);
        this.onError(error);
        throw error;
    }
    ready() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.promise((resolve) => {
                this.onReady.push(resolve);
            });
        });
    }
    promise(withResolve) {
        return new Promise((resolve, reject) => {
            withResolve(resolve);
            this.onUnhandledError.push(reject);
        });
    }
    inBlock() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.promise((resolve) => {
                this.onInBlock.push(resolve);
            });
        });
    }
    finalized() {
        return __awaiter(this, void 0, void 0, function* () {
            return this.promise((resolve) => {
                this.onFinalized.push(resolve);
            });
        });
    }
    signAndSend(txn, signer, options) {
        return __awaiter(this, void 0, void 0, function* () {
            const unsub = yield txn.signAndSend(signer, options || {}, this.signAndSendCb());
            this.hash = txn.hash.toHex();
            this.unsub = unsub;
        });
    }
    static signAndSend(txn, signer, options) {
        const watcher = new TxnWatcher();
        (() => __awaiter(this, void 0, void 0, function* () {
            try {
                yield watcher.signAndSend(txn, signer, options);
            }
            catch (e) {
                watcher.onError(e);
            }
        }))();
        return watcher;
    }
}
exports.TxnWatcher = TxnWatcher;
class MultiCallback {
    constructor() {
        this.willBeCalled = [];
    }
    push(callback) {
        this.willBeCalled.push(callback);
    }
    callAll(t) {
        for (const cb of this.willBeCalled) {
            cb(t);
        }
    }
}
// Container for multiple callbacks that will only be called once.
// Will call new callbacks with the value if added after callAll.
class OnceMultiCallback {
    constructor(name) {
        this.name = name;
        this.willBeCalled = [];
    }
    push(callback) {
        if (this.willBeCalled == null) {
            callback(this.value);
        }
        else {
            this.willBeCalled.push(callback);
        }
    }
    callAll(t) {
        this.value = t;
        if (this.willBeCalled == null) {
            throw new Error(`Called callAll(${this.name}) more than once`);
        }
        else {
            const toCall = this.willBeCalled;
            this.willBeCalled = null;
            for (const cb of toCall) {
                cb(t);
            }
        }
    }
    hasBeenCalled() {
        return this.willBeCalled == null;
    }
    callIfUncalled(t) {
        if (this.hasBeenCalled())
            return;
        console.warn('Calling uncalled callbacks');
        this.callAll(t);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2F0Y2hlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvd2F0Y2hlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUF1QkEsTUFBYSxVQUFVO0lBQXZCO1FBQ0UsZ0VBQWdFO1FBQ2hFLFVBQUssR0FBZSxHQUFHLEVBQUUsR0FBRSxDQUFDLENBQUM7UUFFdEIsV0FBTSxHQUFxQixhQUFhLENBQUM7UUFHeEMsWUFBTyxHQUFHLElBQUksYUFBYSxFQUFZLENBQUM7UUFDeEMsY0FBUyxHQUFHLElBQUksaUJBQWlCLENBQWEsV0FBVyxDQUFDLENBQUM7UUFDM0QsZ0JBQVcsR0FBRyxJQUFJLGlCQUFpQixDQUFlLGFBQWEsQ0FBQyxDQUFDO1FBRWpFLHFCQUFnQixHQUFHLElBQUksaUJBQWlCLENBQzlDLGtCQUFrQixDQUNuQixDQUFDO1FBRUYsZ0VBQWdFO1FBQ2hFLGtCQUFhLEdBQWUsR0FBRyxFQUFFLEdBQUUsQ0FBQyxDQUFDO0lBMEl2QyxDQUFDO0lBeElDLGFBQWE7UUFDWCxPQUFPLENBQUMsTUFBMEIsRUFBRSxFQUFFO1lBQ3BDLElBQUksTUFBTSxDQUFDLGFBQWEsRUFBRTtnQkFDeEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxPQUFPLENBQUM7Z0JBQ3RCLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO2dCQUM3QyxPQUFPO2FBQ1I7WUFFRCxJQUFJLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxNQUFNLENBQUMsRUFBRTtnQkFDckMsT0FBTzthQUNSO1lBRUQsSUFBSSxNQUFNLENBQUMsTUFBTSxDQUFDLE9BQU8sRUFBRTtnQkFDekIsSUFBSSxDQUFDLE1BQU0sR0FBRyxPQUFPLENBQUM7Z0JBQ3RCLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFLLEVBQUUsQ0FBQyxDQUFDO2FB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

/***/ }),
/* 76 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Keyring": () => (/* binding */ Keyring)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(82);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(126);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(167);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(170);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(79);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(134);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(165);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(180);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(198);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(202);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(256);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(265);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(266);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(273);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(275);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(241);
/* harmony import */ var _defaults_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(264);
/* harmony import */ var _pair_index_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(204);
/* harmony import */ var _pairs_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(203);


// Copyright 2017-2021 @polkadot/keyring authors & contributors
// SPDX-License-Identifier: Apache-2.0





const PairFromSeed = {
  ecdsa: seed => (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_2__.secp256k1PairFromSeed)(seed),
  ed25519: seed => (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_3__.ed25519PairFromSeed)(seed),
  ethereum: seed => (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_2__.secp256k1PairFromSeed)(seed),
  sr25519: seed => (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_4__.sr25519PairFromSeed)(seed)
};

function pairToPublic({
  publicKey
}) {
  return publicKey;
}
/**
 * # @polkadot/keyring
 *
 * ## Overview
 *
 * @name Keyring
 * @summary Keyring management of user accounts
 * @description Allows generation of keyring pairs from a variety of input combinations, such as
 * json object containing account address or public key, account metadata, and account encoded using
 * `addFromJson`, or by providing those values as arguments separately to `addFromAddress`,
 * or by providing the mnemonic (seed phrase) and account metadata as arguments to `addFromMnemonic`.
 * Stores the keyring pairs in a keyring pair dictionary. Removal of the keyring pairs from the keyring pair
 * dictionary is achieved using `removePair`. Retrieval of all the stored pairs via `getPairs` or perform
 * lookup of a pair for a given account address or public key using `getPair`. JSON metadata associated with
 * an account may be obtained using `toJson` accompanied by the account passphrase.
 */


var _pairs = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("pairs");

var _type = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("type");

var _ss = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("ss58");

class Keyring {
  constructor(options = {}) {
    Object.defineProperty(this, _pairs, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _type, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _ss, {
      writable: true,
      value: void 0
    });
    this.decodeAddress = _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_5__.decodeAddress;

    this.encodeAddress = (address, ss58Format) => {
      return this.type === 'ethereum' ? (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_6__.ethereumEncode)(address) : (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_7__.encodeAddress)(address, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_8__.isUndefined)(ss58Format) ? (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _ss)[_ss] : ss58Format);
    };

    options.type = options.type || 'ed25519';
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.assert)(['ecdsa', 'ethereum', 'ed25519', 'sr25519'].includes(options.type || 'undefined'), () => `Expected a keyring type of either 'ed25519', 'sr25519', 'ethereum' or 'ecdsa', found '${options.type || 'unknown'}`);
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _pairs)[_pairs] = new _pairs_js__WEBPACK_IMPORTED_MODULE_10__.Pairs();
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _ss)[_ss] = options.ss58Format;
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _type)[_type] = options.type;
  }
  /**
   * @description retrieve the pairs (alias for getPairs)
   */


  get pairs() {
    return this.getPairs();
  }
  /**
   * @description retrieve the publicKeys (alias for getPublicKeys)
   */


  get publicKeys() {
    return this.getPublicKeys();
  }
  /**
   * @description Returns the type of the keyring, ed25519, sr25519 or ecdsa
   */


  get type() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _type)[_type];
  }
  /**
   * @name addPair
   * @summary Stores an account, given a keyring pair, as a Key/Value (public key, pair) in Keyring Pair Dictionary
   */


  addPair(pair) {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _pairs)[_pairs].add(pair);
  }
  /**
   * @name addFromAddress
   * @summary Stores an account, given an account address, as a Key/Value (public key, pair) in Keyring Pair Dictionary
   * @description Allows user to explicitly provide separate inputs including account address or public key, and optionally
   * the associated account metadata, and the default encoded value as arguments (that may be obtained from the json file
   * of an account backup), and then generates a keyring pair from them that it passes to
   * `addPair` to stores in a keyring pair dictionary the public key of the generated pair as a key and the pair as the associated value.
   */


  addFromAddress(address, meta = {}, encoded = null, type = this.type, ignoreChecksum, encType) {
    const publicKey = this.decodeAddress(address, ignoreChecksum);
    return this.addPair((0,_pair_index_js__WEBPACK_IMPORTED_MODULE_11__.createPair)({
      toSS58: this.encodeAddress,
      type
    }, {
      publicKey,
      secretKey: new Uint8Array()
    }, meta, encoded, encType));
  }
  /**
   * @name addFromJson
   * @summary Stores an account, given JSON data, as a Key/Value (public key, pair) in Keyring Pair Dictionary
   * @description Allows user to provide a json object argument that contains account information (that may be obtained from the json file
   * of an account backup), and then generates a keyring pair from it that it passes to
   * `addPair` to stores in a keyring pair dictionary the public key of the generated pair as a key and the pair as the associated value.
   */


  addFromJson(json, ignoreChecksum) {
    return this.addPair(this.createFromJson(json, ignoreChecksum));
  }
  /**
   * @name addFromMnemonic
   * @summary Stores an account, given a mnemonic, as a Key/Value (public key, pair) in Keyring Pair Dictionary
   * @description Allows user to provide a mnemonic (seed phrase that is provided when account is originally created)
   * argument and a metadata argument that contains account information (that may be obtained from the json file
   * of an account backup), and then generates a keyring pair from it that it passes to
   * `addPair` to stores in a keyring pair dictionary the public key of the generated pair as a key and the pair as the associated value.
   */


  addFromMnemonic(mnemonic, meta = {}, type = this.type) {
    return this.addFromUri(mnemonic, meta, type);
  }
  /**
   * @name addFromPair
   * @summary Stores an account created from an explicit publicKey/secreteKey combination
   */


  addFromPair(pair, meta = {}, type = this.type) {
    return this.addPair(this.createFromPair(pair, meta, type));
  }
  /**
   * @name addFromSeed
   * @summary Stores an account, given seed data, as a Key/Value (public key, pair) in Keyring Pair Dictionary
   * @description Stores in a keyring pair dictionary the public key of the pair as a key and the pair as the associated value.
   * Allows user to provide the account seed as an argument, and then generates a keyring pair from it that it passes to
   * `addPair` to store in a keyring pair dictionary the public key of the generated pair as a key and the pair as the associated value.
   */


  addFromSeed(seed, meta = {}, type = this.type) {
    return this.addPair((0,_pair_index_js__WEBPACK_IMPORTED_MODULE_11__.createPair)({
      toSS58: this.encodeAddress,
      type
    }, PairFromSeed[type](seed), meta, null));
  }
  /**
   * @name addFromUri
   * @summary Creates an account via an suri
   * @description Extracts the phrase, path and password from a SURI format for specifying secret keys `<secret>/<soft-key>//<hard-key>///<password>` (the `///password` may be omitted, and `/<soft-key>` and `//<hard-key>` maybe repeated and mixed). The secret can be a hex string, mnemonic phrase or a string (to be padded)
   */


  addFromUri(suri, meta = {}, type = this.type) {
    return this.addPair(this.createFromUri(suri, meta, type));
  }
  /**
   * @name createFromJson
   * @description Creates a pair from a JSON keyfile
   */


  createFromJson({
    address,
    encoded,
    encoding: {
      content,
      type,
      version
    },
    meta
  }, ignoreChecksum) {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.assert)(version !== '3' || content[0] === 'pkcs8', () => `Unable to decode non-pkcs8 type, [${content.join(',')}] found}`);
    const cryptoType = version === '0' || !Array.isArray(content) ? this.type : content[1];
    const encType = !Array.isArray(type) ? [type] : type;
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.assert)(['ed25519', 'sr25519', 'ecdsa', 'ethereum'].includes(cryptoType), () => `Unknown crypto type ${cryptoType}`); // Here the address and publicKey are 32 bytes and isomorphic. This is why the address field needs to be the public key for ethereum type pairs

    const publicKey = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_12__.isHex)(address) ? (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_13__.hexToU8a)(address) : this.decodeAddress(address, ignoreChecksum);
    const decoded = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_12__.isHex)(encoded) ? (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_13__.hexToU8a)(encoded) : (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_14__.base64Decode)(encoded);
    return (0,_pair_index_js__WEBPACK_IMPORTED_MODULE_11__.createPair)({
      toSS58: this.encodeAddress,
      type: cryptoType
    }, {
      publicKey,
      secretKey: new Uint8Array()
    }, meta, decoded, encType);
  }
  /**
   * @name createFromPair
   * @summary Creates a pair from an explicit publicKey/secreteKey combination
   */


  createFromPair(pair, meta = {}, type = this.type) {
    return (0,_pair_index_js__WEBPACK_IMPORTED_MODULE_11__.createPair)({
      toSS58: this.encodeAddress,
      type
    }, pair, meta, null);
  }
  /**
   * @name createFromUri
   * @summary Creates a Keypair from an suri
   * @description This creates a pair from the suri, but does not add it to the keyring
   */


  createFromUri(_suri, meta = {}, type = this.type) {
    // here we only aut-add the dev phrase if we have a hard-derived path
    const suri = _suri.startsWith('//') ? `${_defaults_js__WEBPACK_IMPORTED_MODULE_15__.DEV_PHRASE}${_suri}` : _suri;
    const {
      derivePath,
      password,
      path,
      phrase
    } = (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_16__.keyExtractSuri)(suri);
    let seed;
    const isPhraseHex = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_12__.isHex)(phrase, 256);

    if (isPhraseHex) {
      seed = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_13__.hexToU8a)(phrase);
    } else {
      const parts = phrase.split(' ');

      if ([12, 15, 18, 21, 24].includes(parts.length)) {
        seed = type === 'ethereum' ? (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_17__.mnemonicToLegacySeed)(phrase, '', false, 64) : (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_18__.mnemonicToMiniSecret)(phrase, password);
      } else {
        (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.assert)(phrase.length <= 32, 'specified phrase is not a valid mnemonic and is invalid as a raw seed at > 32 bytes');
        seed = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_19__.stringToU8a)(phrase.padEnd(32));
      }
    }

    const derived = type === 'ethereum' ? isPhraseHex ? PairFromSeed[type](seed) // for eth, if the private key is provided as suri, it must be derived only once
    : (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_20__.hdEthereum)(seed, derivePath.substring(1)) : (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_21__.keyFromPath)(PairFromSeed[type](seed), path, type);
    return (0,_pair_index_js__WEBPACK_IMPORTED_MODULE_11__.createPair)({
      toSS58: this.encodeAddress,
      type
    }, derived, meta, null);
  }
  /**
   * @name encodeAddress
   * @description Encodes the input into an ss58 representation
   */


  /**
   * @name getPair
   * @summary Retrieves an account keyring pair from the Keyring Pair Dictionary, given an account address
   * @description Returns a keyring pair value from the keyring pair dictionary by performing
   * a key lookup using the provided account address or public key (after decoding it).
   */
  getPair(address) {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _pairs)[_pairs].get(address);
  }
  /**
   * @name getPairs
   * @summary Retrieves all account keyring pairs from the Keyring Pair Dictionary
   * @description Returns an array list of all the keyring pair values that are stored in the keyring pair dictionary.
   */


  getPairs() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _pairs)[_pairs].all();
  }
  /**
   * @name getPublicKeys
   * @summary Retrieves Public Keys of all Keyring Pairs stored in the Keyring Pair Dictionary
   * @description Returns an array list of all the public keys associated with each of the keyring pair values that are stored in the keyring pair dictionary.
   */


  getPublicKeys() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _pairs)[_pairs].all().map(pairToPublic);
  }
  /**
   * @name removePair
   * @description Deletes the provided input address or public key from the stored Keyring Pair Dictionary.
   */


  removePair(address) {
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _pairs)[_pairs].remove(address);
  }
  /**
   * @name setSS58Format;
   * @description Sets the ss58 format for the keyring
   */


  setSS58Format(ss58) {
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _ss)[_ss] = ss58;
  }
  /**
   * @name toJson
   * @summary Returns a JSON object associated with the input argument that contains metadata assocated with an account
   * @description Returns a JSON object containing the metadata associated with an account
   * when valid address or public key and when the account passphrase is provided if the account secret
   * is not already unlocked and available in memory. Note that in [Polkadot-JS Apps](https://github.com/polkadot-js/apps) the user
   * may backup their account to a JSON file that contains this information.
   */


  toJson(address, passphrase) {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _pairs)[_pairs].get(address).toJson(passphrase);
  }

}

/***/ }),
/* 77 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _classPrivateFieldBase)
/* harmony export */ });
function _classPrivateFieldBase(receiver, privateKey) {
  if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {
    throw new TypeError("attempted to use private field on non-instance");
  }

  return receiver;
}

/***/ }),
/* 78 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _classPrivateFieldKey)
/* harmony export */ });
var id = 0;
function _classPrivateFieldKey(name) {
  return "__private_" + id++ + "_" + name;
}

/***/ }),
/* 79 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "secp256k1PairFromSeed": () => (/* binding */ secp256k1PairFromSeed)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(121);
/* harmony import */ var _bn_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(133);
/* harmony import */ var _secp256k1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(84);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0



/**
 * @name secp256k1PairFromSeed
 * @description Returns a object containing a `publicKey` & `secretKey` generated from the supplied seed.
 */

function secp256k1PairFromSeed(seed) {
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)(seed.length === 32, 'Expected valid 32-byte private key as a seed');
  const key = _secp256k1_js__WEBPACK_IMPORTED_MODULE_1__.secp256k1.keyFromPrivate(seed);
  return {
    publicKey: new Uint8Array(key.getPublic().encodeCompressed()),
    secretKey: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.bnToU8a)(key.getPrivate(), _bn_js__WEBPACK_IMPORTED_MODULE_3__.BN_BE_256_OPTS)
  };
}

/***/ }),
/* 80 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "assert": () => (/* binding */ assert),
/* harmony export */   "assertReturn": () => (/* binding */ assertReturn)
/* harmony export */ });
/* harmony import */ var _is_function_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(81);
/* harmony import */ var _is_null_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(83);
/* harmony import */ var _is_undefined_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(82);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0




/**
 * @name assert
 * @summary Checks for a valid test, if not Error is thrown.
 * @description
 * Checks that `test` is a truthy value. If value is falsy (`null`, `undefined`, `false`, ...), it throws an Error with the supplied `message`. When `test` passes, `true` is returned.
 * @example
 * <BR>
 *
 * ```javascript
 * const { assert } from '@polkadot/util';
 *
 * assert(true, 'True should be true'); // passes
 * assert(false, 'False should not be true'); // Error thrown
 * assert(false, () => 'message'); // Error with 'message'
 * ```
 */
function assert(condition, message) {
  if (!condition) {
    throw new Error((0,_is_function_js__WEBPACK_IMPORTED_MODULE_0__.isFunction)(message) ? message() : message);
  }
}
/**
 * @name assertReturn
 * @description Returns when the value is not undefined/null, otherwise throws assertion error
 */

function assertReturn(value, message) {
  assert(!(0,_is_undefined_js__WEBPACK_IMPORTED_MODULE_1__.isUndefined)(value) && !(0,_is_null_js__WEBPACK_IMPORTED_MODULE_2__.isNull)(value), message);
  return value;
}

/***/ }),
/* 81 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isFunction": () => (/* binding */ isFunction)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
// eslint-disable-next-line @typescript-eslint/ban-types

/**
 * @name isFunction
 * @summary Tests for a `function`.
 * @description
 * Checks to see if the input value is a JavaScript function.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isFunction } from '@polkadot/util';
 *
 * isFunction(() => false); // => true
 * ```
 */
function isFunction(value) {
  return typeof value === 'function';
}

/***/ }),
/* 82 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isUndefined": () => (/* binding */ isUndefined)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isUndefined
 * @summary Tests for a `undefined` values.
 * @description
 * Checks to see if the input value is `undefined`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isUndefined } from '@polkadot/util';
 *
 * console.log('isUndefined', isUndefined(void(0))); // => true
 * ```
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function isUndefined(value) {
  return typeof value === 'undefined';
}

/***/ }),
/* 83 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isNull": () => (/* binding */ isNull)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isNull
 * @summary Tests for a `null` values.
 * @description
 * Checks to see if the input value is `null`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isNull } from '@polkadot/util';
 *
 * console.log('isNull', isNull(null)); // => true
 * ```
 */
function isNull(value) {
  return value === null;
}

/***/ }),
/* 84 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "secp256k1": () => (/* binding */ secp256k1)
/* harmony export */ });
/* harmony import */ var elliptic__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(85);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
 // eslint-disable-next-line new-cap

const secp256k1 = new elliptic__WEBPACK_IMPORTED_MODULE_0__.ec('secp256k1');

/***/ }),
/* 85 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var elliptic = exports;

elliptic.version = (__webpack_require__(86).version);
elliptic.utils = __webpack_require__(87);
elliptic.rand = __webpack_require__(92);
elliptic.curve = __webpack_require__(94);
elliptic.curves = __webpack_require__(100);

// Protocols
elliptic.ec = __webpack_require__(114);
elliptic.eddsa = __webpack_require__(118);


/***/ }),
/* 86 */
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"name":"elliptic","version":"6.5.4","description":"EC cryptography","main":"lib/elliptic.js","files":["lib"],"scripts":{"lint":"eslint lib test","lint:fix":"npm run lint -- --fix","unit":"istanbul test _mocha --reporter=spec test/index.js","test":"npm run lint && npm run unit","version":"grunt dist && git add dist/"},"repository":{"type":"git","url":"git@github.com:indutny/elliptic"},"keywords":["EC","Elliptic","curve","Cryptography"],"author":"Fedor Indutny <fedor@indutny.com>","license":"MIT","bugs":{"url":"https://github.com/indutny/elliptic/issues"},"homepage":"https://github.com/indutny/elliptic","devDependencies":{"brfs":"^2.0.2","coveralls":"^3.1.0","eslint":"^7.6.0","grunt":"^1.2.1","grunt-browserify":"^5.3.0","grunt-cli":"^1.3.2","grunt-contrib-connect":"^3.0.0","grunt-contrib-copy":"^1.0.0","grunt-contrib-uglify":"^5.0.0","grunt-mocha-istanbul":"^5.0.2","grunt-saucelabs":"^9.0.1","istanbul":"^0.4.5","mocha":"^8.0.1"},"dependencies":{"bn.js":"^4.11.9","brorand":"^1.1.0","hash.js":"^1.0.0","hmac-drbg":"^1.0.1","inherits":"^2.0.4","minimalistic-assert":"^1.0.1","minimalistic-crypto-utils":"^1.0.1"}}');

/***/ }),
/* 87 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var utils = exports;
var BN = __webpack_require__(88);
var minAssert = __webpack_require__(90);
var minUtils = __webpack_require__(91);

utils.assert = minAssert;
utils.toArray = minUtils.toArray;
utils.zero2 = minUtils.zero2;
utils.toHex = minUtils.toHex;
utils.encode = minUtils.encode;

// Represent num in a w-NAF form
function getNAF(num, w, bits) {
  var naf = new Array(Math.max(num.bitLength(), bits) + 1);
  naf.fill(0);

  var ws = 1 << (w + 1);
  var k = num.clone();

  for (var i = 0; i < naf.length; i++) {
    var z;
    var mod = k.andln(ws - 1);
    if (k.isOdd()) {
      if (mod > (ws >> 1) - 1)
        z = (ws >> 1) - mod;
      else
        z = mod;
      k.isubn(z);
    } else {
      z = 0;
    }

    naf[i] = z;
    k.iushrn(1);
  }

  return naf;
}
utils.getNAF = getNAF;

// Represent k1, k2 in a Joint Sparse Form
function getJSF(k1, k2) {
  var jsf = [
    [],
    [],
  ];

  k1 = k1.clone();
  k2 = k2.clone();
  var d1 = 0;
  var d2 = 0;
  var m8;
  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {
    // First phase
    var m14 = (k1.andln(3) + d1) & 3;
    var m24 = (k2.andln(3) + d2) & 3;
    if (m14 === 3)
      m14 = -1;
    if (m24 === 3)
      m24 = -1;
    var u1;
    if ((m14 & 1) === 0) {
      u1 = 0;
    } else {
      m8 = (k1.andln(7) + d1) & 7;
      if ((m8 === 3 || m8 === 5) && m24 === 2)
        u1 = -m14;
      else
        u1 = m14;
    }
    jsf[0].push(u1);

    var u2;
    if ((m24 & 1) === 0) {
      u2 = 0;
    } else {
      m8 = (k2.andln(7) + d2) & 7;
      if ((m8 === 3 || m8 === 5) && m14 === 2)
        u2 = -m24;
      else
        u2 = m24;
    }
    jsf[1].push(u2);

    // Second phase
    if (2 * d1 === u1 + 1)
      d1 = 1 - d1;
    if (2 * d2 === u2 + 1)
      d2 = 1 - d2;
    k1.iushrn(1);
    k2.iushrn(1);
  }

  return jsf;
}
utils.getJSF = getJSF;

function cachedProperty(obj, name, computer) {
  var key = '_' + name;
  obj.prototype[name] = function cachedProperty() {
    return this[key] !== undefined ? this[key] :
      this[key] = computer.call(this);
  };
}
utils.cachedProperty = cachedProperty;

function parseBytes(bytes) {
  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :
    bytes;
}
utils.parseBytes = parseBytes;

function intFromLE(bytes) {
  return new BN(bytes, 'hex', 'le');
}
utils.intFromLE = intFromLE;



/***/ }),
/* 88 */
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
(function (module, exports) {
  'use strict';

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {
      Buffer = window.Buffer;
    } else {
      Buffer = (__webpack_require__(89).Buffer);
    }
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    if (num instanceof BN) {
      return true;
    }

    return num !== null && typeof num === 'object' &&
      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
      this.negative = 1;
    }

    if (start < number.length) {
      if (base === 16) {
        this._parseHex(number, start, endian);
      } else {
        this._parseBase(number, base, start);
        if (endian === 'le') {
          this._initArray(this.toArray(), base, endian);
        }
      }
    }
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [ number & 0x3ffffff ];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [ 0 ];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this.strip();
  };

  function parseHex4Bits (string, index) {
    var c = string.charCodeAt(index);
    // 'A' - 'F'
    if (c >= 65 && c <= 70) {
      return c - 55;
    // 'a' - 'f'
    } else if (c >= 97 && c <= 102) {
      return c - 87;
    // '0' - '9'
    } else {
      return (c - 48) & 0xf;
    }
  }

  function parseHexByte (string, lowerBound, index) {
    var r = parseHex4Bits(string, index);
    if (index - 1 >= lowerBound) {
      r |= parseHex4Bits(string, index - 1) << 4;
    }
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start, endian) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    // 24-bits chunks
    var off = 0;
    var j = 0;

    var w;
    if (endian === 'be') {
      for (i = number.length - 1; i >= start; i -= 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    } else {
      var parseLength = number.length - start;
      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    }

    this.strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        r += c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        r += c - 17 + 0xa;

      // '0' - '9'
      } else {
        r += c;
      }
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [ 0 ];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    this.strip();
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype.strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  BN.prototype.inspect = function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  };

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var ret = this.words[0];
    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16);
  };

  BN.prototype.toBuffer = function toBuffer (endian, length) {
    assert(typeof Buffer !== 'undefined');
    return this.toArrayLike(Buffer, endian, length);
  };

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    this.strip();
    var littleEndian = endian === 'le';
    var res = new ArrayType(reqLength);

    var b, i;
    var q = this.clone();
    if (!littleEndian) {
      // Assume big-endian
      for (i = 0; i < reqLength - byteLength; i++) {
        res[i] = 0;
      }

      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[reqLength - i - 1] = b;
      }
    } else {
      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[i] = b;
      }

      for (; i < reqLength; i++) {
        res[i] = 0;
      }
    }

    return res;
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this.strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this.strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this.strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this.strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this.strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this.strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out.strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = (mid + Math.imul(ah0, bl0)) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = (mid + Math.imul(ah1, bl0)) | 0;
    hi = Math.imul(ah1, bh0);
    lo = (lo + Math.imul(al0, bl1)) | 0;
    mid = (mid + Math.imul(al0, bh1)) | 0;
    mid = (mid + Math.imul(ah0, bl1)) | 0;
    hi = (hi + Math.imul(ah0, bh1)) | 0;
    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = (mid + Math.imul(ah2, bl0)) | 0;
    hi = Math.imul(ah2, bh0);
    lo = (lo + Math.imul(al1, bl1)) | 0;
    mid = (mid + Math.imul(al1, bh1)) | 0;
    mid = (mid + Math.imul(ah1, bl1)) | 0;
    hi = (hi + Math.imul(ah1, bh1)) | 0;
    lo = (lo + Math.imul(al0, bl2)) | 0;
    mid = (mid + Math.imul(al0, bh2)) | 0;
    mid = (mid + Math.imul(ah0, bl2)) | 0;
    hi = (hi + Math.imul(ah0, bh2)) | 0;
    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = (mid + Math.imul(ah3, bl0)) | 0;
    hi = Math.imul(ah3, bh0);
    lo = (lo + Math.imul(al2, bl1)) | 0;
    mid = (mid + Math.imul(al2, bh1)) | 0;
    mid = (mid + Math.imul(ah2, bl1)) | 0;
    hi = (hi + Math.imul(ah2, bh1)) | 0;
    lo = (lo + Math.imul(al1, bl2)) | 0;
    mid = (mid + Math.imul(al1, bh2)) | 0;
    mid = (mid + Math.imul(ah1, bl2)) | 0;
    hi = (hi + Math.imul(ah1, bh2)) | 0;
    lo = (lo + Math.imul(al0, bl3)) | 0;
    mid = (mid + Math.imul(al0, bh3)) | 0;
    mid = (mid + Math.imul(ah0, bl3)) | 0;
    hi = (hi + Math.imul(ah0, bh3)) | 0;
    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = (mid + Math.imul(ah4, bl0)) | 0;
    hi = Math.imul(ah4, bh0);
    lo = (lo + Math.imul(al3, bl1)) | 0;
    mid = (mid + Math.imul(al3, bh1)) | 0;
    mid = (mid + Math.imul(ah3, bl1)) | 0;
    hi = (hi + Math.imul(ah3, bh1)) | 0;
    lo = (lo + Math.imul(al2, bl2)) | 0;
    mid = (mid + Math.imul(al2, bh2)) | 0;
    mid = (mid + Math.imul(ah2, bl2)) | 0;
    hi = (hi + Math.imul(ah2, bh2)) | 0;
    lo = (lo + Math.imul(al1, bl3)) | 0;
    mid = (mid + Math.imul(al1, bh3)) | 0;
    mid = (mid + Math.imul(ah1, bl3)) | 0;
    hi = (hi + Math.imul(ah1, bh3)) | 0;
    lo = (lo + Math.imul(al0, bl4)) | 0;
    mid = (mid + Math.imul(al0, bh4)) | 0;
    mid = (mid + Math.imul(ah0, bl4)) | 0;
    hi = (hi + Math.imul(ah0, bh4)) | 0;
    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = (mid + Math.imul(ah5, bl0)) | 0;
    hi = Math.imul(ah5, bh0);
    lo = (lo + Math.imul(al4, bl1)) | 0;
    mid = (mid + Math.imul(al4, bh1)) | 0;
    mid = (mid + Math.imul(ah4, bl1)) | 0;
    hi = (hi + Math.imul(ah4, bh1)) | 0;
    lo = (lo + Math.imul(al3, bl2)) | 0;
    mid = (mid + Math.imul(al3, bh2)) | 0;
    mid = (mid + Math.imul(ah3, bl2)) | 0;
    hi = (hi + Math.imul(ah3, bh2)) | 0;
    lo = (lo + Math.imul(al2, bl3)) | 0;
    mid = (mid + Math.imul(al2, bh3)) | 0;
    mid = (mid + Math.imul(ah2, bl3)) | 0;
    hi = (hi + Math.imul(ah2, bh3)) | 0;
    lo = (lo + Math.imul(al1, bl4)) | 0;
    mid = (mid + Math.imul(al1, bh4)) | 0;
    mid = (mid + Math.imul(ah1, bl4)) | 0;
    hi = (hi + Math.imul(ah1, bh4)) | 0;
    lo = (lo + Math.imul(al0, bl5)) | 0;
    mid = (mid + Math.imul(al0, bh5)) | 0;
    mid = (mid + Math.imul(ah0, bl5)) | 0;
    hi = (hi + Math.imul(ah0, bh5)) | 0;
    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = (mid + Math.imul(ah6, bl0)) | 0;
    hi = Math.imul(ah6, bh0);
    lo = (lo + Math.imul(al5, bl1)) | 0;
    mid = (mid + Math.imul(al5, bh1)) | 0;
    mid = (mid + Math.imul(ah5, bl1)) | 0;
    hi = (hi + Math.imul(ah5, bh1)) | 0;
    lo = (lo + Math.imul(al4, bl2)) | 0;
    mid = (mid + Math.imul(al4, bh2)) | 0;
    mid = (mid + Math.imul(ah4, bl2)) | 0;
    hi = (hi + Math.imul(ah4, bh2)) | 0;
    lo = (lo + Math.imul(al3, bl3)) | 0;
    mid = (mid + Math.imul(al3, bh3)) | 0;
    mid = (mid + Math.imul(ah3, bl3)) | 0;
    hi = (hi + Math.imul(ah3, bh3)) | 0;
    lo = (lo + Math.imul(al2, bl4)) | 0;
    mid = (mid + Math.imul(al2, bh4)) | 0;
    mid = (mid + Math.imul(ah2, bl4)) | 0;
    hi = (hi + Math.imul(ah2, bh4)) | 0;
    lo = (lo + Math.imul(al1, bl5)) | 0;
    mid = (mid + Math.imul(al1, bh5)) | 0;
    mid = (mid + Math.imul(ah1, bl5)) | 0;
    hi = (hi + Math.imul(ah1, bh5)) | 0;
    lo = (lo + Math.imul(al0, bl6)) | 0;
    mid = (mid + Math.imul(al0, bh6)) | 0;
    mid = (mid + Math.imul(ah0, bl6)) | 0;
    hi = (hi + Math.imul(ah0, bh6)) | 0;
    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = (mid + Math.imul(ah7, bl0)) | 0;
    hi = Math.imul(ah7, bh0);
    lo = (lo + Math.imul(al6, bl1)) | 0;
    mid = (mid + Math.imul(al6, bh1)) | 0;
    mid = (mid + Math.imul(ah6, bl1)) | 0;
    hi = (hi + Math.imul(ah6, bh1)) | 0;
    lo = (lo + Math.imul(al5, bl2)) | 0;
    mid = (mid + Math.imul(al5, bh2)) | 0;
    mid = (mid + Math.imul(ah5, bl2)) | 0;
    hi = (hi + Math.imul(ah5, bh2)) | 0;
    lo = (lo + Math.imul(al4, bl3)) | 0;
    mid = (mid + Math.imul(al4, bh3)) | 0;
    mid = (mid + Math.imul(ah4, bl3)) | 0;
    hi = (hi + Math.imul(ah4, bh3)) | 0;
    lo = (lo + Math.imul(al3, bl4)) | 0;
    mid = (mid + Math.imul(al3, bh4)) | 0;
    mid = (mid + Math.imul(ah3, bl4)) | 0;
    hi = (hi + Math.imul(ah3, bh4)) | 0;
    lo = (lo + Math.imul(al2, bl5)) | 0;
    mid = (mid + Math.imul(al2, bh5)) | 0;
    mid = (mid + Math.imul(ah2, bl5)) | 0;
    hi = (hi + Math.imul(ah2, bh5)) | 0;
    lo = (lo + Math.imul(al1, bl6)) | 0;
    mid = (mid + Math.imul(al1, bh6)) | 0;
    mid = (mid + Math.imul(ah1, bl6)) | 0;
    hi = (hi + Math.imul(ah1, bh6)) | 0;
    lo = (lo + Math.imul(al0, bl7)) | 0;
    mid = (mid + Math.imul(al0, bh7)) | 0;
    mid = (mid + Math.imul(ah0, bl7)) | 0;
    hi = (hi + Math.imul(ah0, bh7)) | 0;
    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = (mid + Math.imul(ah8, bl0)) | 0;
    hi = Math.imul(ah8, bh0);
    lo = (lo + Math.imul(al7, bl1)) | 0;
    mid = (mid + Math.imul(al7, bh1)) | 0;
    mid = (mid + Math.imul(ah7, bl1)) | 0;
    hi = (hi + Math.imul(ah7, bh1)) | 0;
    lo = (lo + Math.imul(al6, bl2)) | 0;
    mid = (mid + Math.imul(al6, bh2)) | 0;
    mid = (mid + Math.imul(ah6, bl2)) | 0;
    hi = (hi + Math.imul(ah6, bh2)) | 0;
    lo = (lo + Math.imul(al5, bl3)) | 0;
    mid = (mid + Math.imul(al5, bh3)) | 0;
    mid = (mid + Math.imul(ah5, bl3)) | 0;
    hi = (hi + Math.imul(ah5, bh3)) | 0;
    lo = (lo + Math.imul(al4, bl4)) | 0;
    mid = (mid + Math.imul(al4, bh4)) | 0;
    mid = (mid + Math.imul(ah4, bl4)) | 0;
    hi = (hi + Math.imul(ah4, bh4)) | 0;
    lo = (lo + Math.imul(al3, bl5)) | 0;
    mid = (mid + Math.imul(al3, bh5)) | 0;
    mid = (mid + Math.imul(ah3, bl5)) | 0;
    hi = (hi + Math.imul(ah3, bh5)) | 0;
    lo = (lo + Math.imul(al2, bl6)) | 0;
    mid = (mid + Math.imul(al2, bh6)) | 0;
    mid = (mid + Math.imul(ah2, bl6)) | 0;
    hi = (hi + Math.imul(ah2, bh6)) | 0;
    lo = (lo + Math.imul(al1, bl7)) | 0;
    mid = (mid + Math.imul(al1, bh7)) | 0;
    mid = (mid + Math.imul(ah1, bl7)) | 0;
    hi = (hi + Math.imul(ah1, bh7)) | 0;
    lo = (lo + Math.imul(al0, bl8)) | 0;
    mid = (mid + Math.imul(al0, bh8)) | 0;
    mid = (mid + Math.imul(ah0, bl8)) | 0;
    hi = (hi + Math.imul(ah0, bh8)) | 0;
    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = (mid + Math.imul(ah9, bl0)) | 0;
    hi = Math.imul(ah9, bh0);
    lo = (lo + Math.imul(al8, bl1)) | 0;
    mid = (mid + Math.imul(al8, bh1)) | 0;
    mid = (mid + Math.imul(ah8, bl1)) | 0;
    hi = (hi + Math.imul(ah8, bh1)) | 0;
    lo = (lo + Math.imul(al7, bl2)) | 0;
    mid = (mid + Math.imul(al7, bh2)) | 0;
    mid = (mid + Math.imul(ah7, bl2)) | 0;
    hi = (hi + Math.imul(ah7, bh2)) | 0;
    lo = (lo + Math.imul(al6, bl3)) | 0;
    mid = (mid + Math.imul(al6, bh3)) | 0;
    mid = (mid + Math.imul(ah6, bl3)) | 0;
    hi = (hi + Math.imul(ah6, bh3)) | 0;
    lo = (lo + Math.imul(al5, bl4)) | 0;
    mid = (mid + Math.imul(al5, bh4)) | 0;
    mid = (mid + Math.imul(ah5, bl4)) | 0;
    hi = (hi + Math.imul(ah5, bh4)) | 0;
    lo = (lo + Math.imul(al4, bl5)) | 0;
    mid = (mid + Math.imul(al4, bh5)) | 0;
    mid = (mid + Math.imul(ah4, bl5)) | 0;
    hi = (hi + Math.imul(ah4, bh5)) | 0;
    lo = (lo + Math.imul(al3, bl6)) | 0;
    mid = (mid + Math.imul(al3, bh6)) | 0;
    mid = (mid + Math.imul(ah3, bl6)) | 0;
    hi = (hi + Math.imul(ah3, bh6)) | 0;
    lo = (lo + Math.imul(al2, bl7)) | 0;
    mid = (mid + Math.imul(al2, bh7)) | 0;
    mid = (mid + Math.imul(ah2, bl7)) | 0;
    hi = (hi + Math.imul(ah2, bh7)) | 0;
    lo = (lo + Math.imul(al1, bl8)) | 0;
    mid = (mid + Math.imul(al1, bh8)) | 0;
    mid = (mid + Math.imul(ah1, bl8)) | 0;
    hi = (hi + Math.imul(ah1, bh8)) | 0;
    lo = (lo + Math.imul(al0, bl9)) | 0;
    mid = (mid + Math.imul(al0, bh9)) | 0;
    mid = (mid + Math.imul(ah0, bl9)) | 0;
    hi = (hi + Math.imul(ah0, bh9)) | 0;
    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = (mid + Math.imul(ah9, bl1)) | 0;
    hi = Math.imul(ah9, bh1);
    lo = (lo + Math.imul(al8, bl2)) | 0;
    mid = (mid + Math.imul(al8, bh2)) | 0;
    mid = (mid + Math.imul(ah8, bl2)) | 0;
    hi = (hi + Math.imul(ah8, bh2)) | 0;
    lo = (lo + Math.imul(al7, bl3)) | 0;
    mid = (mid + Math.imul(al7, bh3)) | 0;
    mid = (mid + Math.imul(ah7, bl3)) | 0;
    hi = (hi + Math.imul(ah7, bh3)) | 0;
    lo = (lo + Math.imul(al6, bl4)) | 0;
    mid = (mid + Math.imul(al6, bh4)) | 0;
    mid = (mid + Math.imul(ah6, bl4)) | 0;
    hi = (hi + Math.imul(ah6, bh4)) | 0;
    lo = (lo + Math.imul(al5, bl5)) | 0;
    mid = (mid + Math.imul(al5, bh5)) | 0;
    mid = (mid + Math.imul(ah5, bl5)) | 0;
    hi = (hi + Math.imul(ah5, bh5)) | 0;
    lo = (lo + Math.imul(al4, bl6)) | 0;
    mid = (mid + Math.imul(al4, bh6)) | 0;
    mid = (mid + Math.imul(ah4, bl6)) | 0;
    hi = (hi + Math.imul(ah4, bh6)) | 0;
    lo = (lo + Math.imul(al3, bl7)) | 0;
    mid = (mid + Math.imul(al3, bh7)) | 0;
    mid = (mid + Math.imul(ah3, bl7)) | 0;
    hi = (hi + Math.imul(ah3, bh7)) | 0;
    lo = (lo + Math.imul(al2, bl8)) | 0;
    mid = (mid + Math.imul(al2, bh8)) | 0;
    mid = (mid + Math.imul(ah2, bl8)) | 0;
    hi = (hi + Math.imul(ah2, bh8)) | 0;
    lo = (lo + Math.imul(al1, bl9)) | 0;
    mid = (mid + Math.imul(al1, bh9)) | 0;
    mid = (mid + Math.imul(ah1, bl9)) | 0;
    hi = (hi + Math.imul(ah1, bh9)) | 0;
    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = (mid + Math.imul(ah9, bl2)) | 0;
    hi = Math.imul(ah9, bh2);
    lo = (lo + Math.imul(al8, bl3)) | 0;
    mid = (mid + Math.imul(al8, bh3)) | 0;
    mid = (mid + Math.imul(ah8, bl3)) | 0;
    hi = (hi + Math.imul(ah8, bh3)) | 0;
    lo = (lo + Math.imul(al7, bl4)) | 0;
    mid = (mid + Math.imul(al7, bh4)) | 0;
    mid = (mid + Math.imul(ah7, bl4)) | 0;
    hi = (hi + Math.imul(ah7, bh4)) | 0;
    lo = (lo + Math.imul(al6, bl5)) | 0;
    mid = (mid + Math.imul(al6, bh5)) | 0;
    mid = (mid + Math.imul(ah6, bl5)) | 0;
    hi = (hi + Math.imul(ah6, bh5)) | 0;
    lo = (lo + Math.imul(al5, bl6)) | 0;
    mid = (mid + Math.imul(al5, bh6)) | 0;
    mid = (mid + Math.imul(ah5, bl6)) | 0;
    hi = (hi + Math.imul(ah5, bh6)) | 0;
    lo = (lo + Math.imul(al4, bl7)) | 0;
    mid = (mid + Math.imul(al4, bh7)) | 0;
    mid = (mid + Math.imul(ah4, bl7)) | 0;
    hi = (hi + Math.imul(ah4, bh7)) | 0;
    lo = (lo + Math.imul(al3, bl8)) | 0;
    mid = (mid + Math.imul(al3, bh8)) | 0;
    mid = (mid + Math.imul(ah3, bl8)) | 0;
    hi = (hi + Math.imul(ah3, bh8)) | 0;
    lo = (lo + Math.imul(al2, bl9)) | 0;
    mid = (mid + Math.imul(al2, bh9)) | 0;
    mid = (mid + Math.imul(ah2, bl9)) | 0;
    hi = (hi + Math.imul(ah2, bh9)) | 0;
    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = (mid + Math.imul(ah9, bl3)) | 0;
    hi = Math.imul(ah9, bh3);
    lo = (lo + Math.imul(al8, bl4)) | 0;
    mid = (mid + Math.imul(al8, bh4)) | 0;
    mid = (mid + Math.imul(ah8, bl4)) | 0;
    hi = (hi + Math.imul(ah8, bh4)) | 0;
    lo = (lo + Math.imul(al7, bl5)) | 0;
    mid = (mid + Math.imul(al7, bh5)) | 0;
    mid = (mid + Math.imul(ah7, bl5)) | 0;
    hi = (hi + Math.imul(ah7, bh5)) | 0;
    lo = (lo + Math.imul(al6, bl6)) | 0;
    mid = (mid + Math.imul(al6, bh6)) | 0;
    mid = (mid + Math.imul(ah6, bl6)) | 0;
    hi = (hi + Math.imul(ah6, bh6)) | 0;
    lo = (lo + Math.imul(al5, bl7)) | 0;
    mid = (mid + Math.imul(al5, bh7)) | 0;
    mid = (mid + Math.imul(ah5, bl7)) | 0;
    hi = (hi + Math.imul(ah5, bh7)) | 0;
    lo = (lo + Math.imul(al4, bl8)) | 0;
    mid = (mid + Math.imul(al4, bh8)) | 0;
    mid = (mid + Math.imul(ah4, bl8)) | 0;
    hi = (hi + Math.imul(ah4, bh8)) | 0;
    lo = (lo + Math.imul(al3, bl9)) | 0;
    mid = (mid + Math.imul(al3, bh9)) | 0;
    mid = (mid + Math.imul(ah3, bl9)) | 0;
    hi = (hi + Math.imul(ah3, bh9)) | 0;
    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = (mid + Math.imul(ah9, bl4)) | 0;
    hi = Math.imul(ah9, bh4);
    lo = (lo + Math.imul(al8, bl5)) | 0;
    mid = (mid + Math.imul(al8, bh5)) | 0;
    mid = (mid + Math.imul(ah8, bl5)) | 0;
    hi = (hi + Math.imul(ah8, bh5)) | 0;
    lo = (lo + Math.imul(al7, bl6)) | 0;
    mid = (mid + Math.imul(al7, bh6)) | 0;
    mid = (mid + Math.imul(ah7, bl6)) | 0;
    hi = (hi + Math.imul(ah7, bh6)) | 0;
    lo = (lo + Math.imul(al6, bl7)) | 0;
    mid = (mid + Math.imul(al6, bh7)) | 0;
    mid = (mid + Math.imul(ah6, bl7)) | 0;
    hi = (hi + Math.imul(ah6, bh7)) | 0;
    lo = (lo + Math.imul(al5, bl8)) | 0;
    mid = (mid + Math.imul(al5, bh8)) | 0;
    mid = (mid + Math.imul(ah5, bl8)) | 0;
    hi = (hi + Math.imul(ah5, bh8)) | 0;
    lo = (lo + Math.imul(al4, bl9)) | 0;
    mid = (mid + Math.imul(al4, bh9)) | 0;
    mid = (mid + Math.imul(ah4, bl9)) | 0;
    hi = (hi + Math.imul(ah4, bh9)) | 0;
    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = (mid + Math.imul(ah9, bl5)) | 0;
    hi = Math.imul(ah9, bh5);
    lo = (lo + Math.imul(al8, bl6)) | 0;
    mid = (mid + Math.imul(al8, bh6)) | 0;
    mid = (mid + Math.imul(ah8, bl6)) | 0;
    hi = (hi + Math.imul(ah8, bh6)) | 0;
    lo = (lo + Math.imul(al7, bl7)) | 0;
    mid = (mid + Math.imul(al7, bh7)) | 0;
    mid = (mid + Math.imul(ah7, bl7)) | 0;
    hi = (hi + Math.imul(ah7, bh7)) | 0;
    lo = (lo + Math.imul(al6, bl8)) | 0;
    mid = (mid + Math.imul(al6, bh8)) | 0;
    mid = (mid + Math.imul(ah6, bl8)) | 0;
    hi = (hi + Math.imul(ah6, bh8)) | 0;
    lo = (lo + Math.imul(al5, bl9)) | 0;
    mid = (mid + Math.imul(al5, bh9)) | 0;
    mid = (mid + Math.imul(ah5, bl9)) | 0;
    hi = (hi + Math.imul(ah5, bh9)) | 0;
    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = (mid + Math.imul(ah9, bl6)) | 0;
    hi = Math.imul(ah9, bh6);
    lo = (lo + Math.imul(al8, bl7)) | 0;
    mid = (mid + Math.imul(al8, bh7)) | 0;
    mid = (mid + Math.imul(ah8, bl7)) | 0;
    hi = (hi + Math.imul(ah8, bh7)) | 0;
    lo = (lo + Math.imul(al7, bl8)) | 0;
    mid = (mid + Math.imul(al7, bh8)) | 0;
    mid = (mid + Math.imul(ah7, bl8)) | 0;
    hi = (hi + Math.imul(ah7, bh8)) | 0;
    lo = (lo + Math.imul(al6, bl9)) | 0;
    mid = (mid + Math.imul(al6, bh9)) | 0;
    mid = (mid + Math.imul(ah6, bl9)) | 0;
    hi = (hi + Math.imul(ah6, bh9)) | 0;
    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = (mid + Math.imul(ah9, bl7)) | 0;
    hi = Math.imul(ah9, bh7);
    lo = (lo + Math.imul(al8, bl8)) | 0;
    mid = (mid + Math.imul(al8, bh8)) | 0;
    mid = (mid + Math.imul(ah8, bl8)) | 0;
    hi = (hi + Math.imul(ah8, bh8)) | 0;
    lo = (lo + Math.imul(al7, bl9)) | 0;
    mid = (mid + Math.imul(al7, bh9)) | 0;
    mid = (mid + Math.imul(ah7, bl9)) | 0;
    hi = (hi + Math.imul(ah7, bh9)) | 0;
    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = (mid + Math.imul(ah9, bl8)) | 0;
    hi = Math.imul(ah9, bh8);
    lo = (lo + Math.imul(al8, bl9)) | 0;
    mid = (mid + Math.imul(al8, bh9)) | 0;
    mid = (mid + Math.imul(ah8, bl9)) | 0;
    hi = (hi + Math.imul(ah8, bh9)) | 0;
    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = (mid + Math.imul(ah9, bl9)) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out.strip();
  }

  function jumboMulTo (self, num, out) {
    var fftm = new FFTM();
    return fftm.mulp(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out.strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this.strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) {
      // No-op, we should not move anything at all
    } else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this.strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (this.length <= s) {
      return this;
    }

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this.strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) < num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this.strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this.strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this.strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q.strip();
    }
    a.strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modn = function modn (num) {
    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return acc;
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    return this.strip();
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this.strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      if (r.strip !== undefined) {
        // r is BN v4 instance
        r.strip();
      } else {
        // r is BN v5 instance
        r._strip();
      }
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);
    return a.umod(this.m)._forceRed(this);
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1).toRed(this);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})( false || module, this);


/***/ }),
/* 89 */
/***/ (() => {

/* (ignored) */

/***/ }),
/* 90 */
/***/ ((module) => {

module.exports = assert;

function assert(val, msg) {
  if (!val)
    throw new Error(msg || 'Assertion failed');
}

assert.equal = function assertEqual(l, r, msg) {
  if (l != r)
    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));
};


/***/ }),
/* 91 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";


var utils = exports;

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg !== 'string') {
    for (var i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
    return res;
  }
  if (enc === 'hex') {
    msg = msg.replace(/[^a-z0-9]+/ig, '');
    if (msg.length % 2 !== 0)
      msg = '0' + msg;
    for (var i = 0; i < msg.length; i += 2)
      res.push(parseInt(msg[i] + msg[i + 1], 16));
  } else {
    for (var i = 0; i < msg.length; i++) {
      var c = msg.charCodeAt(i);
      var hi = c >> 8;
      var lo = c & 0xff;
      if (hi)
        res.push(hi, lo);
      else
        res.push(lo);
    }
  }
  return res;
}
utils.toArray = toArray;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
utils.zero2 = zero2;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
utils.toHex = toHex;

utils.encode = function encode(arr, enc) {
  if (enc === 'hex')
    return toHex(arr);
  else
    return arr;
};


/***/ }),
/* 92 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var r;

module.exports = function rand(len) {
  if (!r)
    r = new Rand(null);

  return r.generate(len);
};

function Rand(rand) {
  this.rand = rand;
}
module.exports.Rand = Rand;

Rand.prototype.generate = function generate(len) {
  return this._rand(len);
};

// Emulate crypto API using randy
Rand.prototype._rand = function _rand(n) {
  if (this.rand.getBytes)
    return this.rand.getBytes(n);

  var res = new Uint8Array(n);
  for (var i = 0; i < res.length; i++)
    res[i] = this.rand.getByte();
  return res;
};

if (typeof self === 'object') {
  if (self.crypto && self.crypto.getRandomValues) {
    // Modern browsers
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.crypto.getRandomValues(arr);
      return arr;
    };
  } else if (self.msCrypto && self.msCrypto.getRandomValues) {
    // IE
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.msCrypto.getRandomValues(arr);
      return arr;
    };

  // Safari's WebWorkers do not have `crypto`
  } else if (typeof window === 'object') {
    // Old junk
    Rand.prototype._rand = function() {
      throw new Error('Not implemented yet');
    };
  }
} else {
  // Node.js or Web worker with no crypto support
  try {
    var crypto = __webpack_require__(93);
    if (typeof crypto.randomBytes !== 'function')
      throw new Error('Not supported');

    Rand.prototype._rand = function _rand(n) {
      return crypto.randomBytes(n);
    };
  } catch (e) {
  }
}


/***/ }),
/* 93 */
/***/ (() => {

/* (ignored) */

/***/ }),
/* 94 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var curve = exports;

curve.base = __webpack_require__(95);
curve.short = __webpack_require__(96);
curve.mont = __webpack_require__(98);
curve.edwards = __webpack_require__(99);


/***/ }),
/* 95 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var BN = __webpack_require__(88);
var utils = __webpack_require__(87);
var getNAF = utils.getNAF;
var getJSF = utils.getJSF;
var assert = utils.assert;

function BaseCurve(type, conf) {
  this.type = type;
  this.p = new BN(conf.p, 16);

  // Use Montgomery, when there is no fast reduction for the prime
  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);

  // Useful for many curves
  this.zero = new BN(0).toRed(this.red);
  this.one = new BN(1).toRed(this.red);
  this.two = new BN(2).toRed(this.red);

  // Curve configuration, optional
  this.n = conf.n && new BN(conf.n, 16);
  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);

  // Temporary arrays
  this._wnafT1 = new Array(4);
  this._wnafT2 = new Array(4);
  this._wnafT3 = new Array(4);
  this._wnafT4 = new Array(4);

  this._bitLength = this.n ? this.n.bitLength() : 0;

  // Generalized Greg Maxwell's trick
  var adjustCount = this.n && this.p.div(this.n);
  if (!adjustCount || adjustCount.cmpn(100) > 0) {
    this.redN = null;
  } else {
    this._maxwellTrick = true;
    this.redN = this.n.toRed(this.red);
  }
}
module.exports = BaseCurve;

BaseCurve.prototype.point = function point() {
  throw new Error('Not implemented');
};

BaseCurve.prototype.validate = function validate() {
  throw new Error('Not implemented');
};

BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
  assert(p.precomputed);
  var doubles = p._getDoubles();

  var naf = getNAF(k, 1, this._bitLength);
  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);
  I /= 3;

  // Translate into more windowed form
  var repr = [];
  var j;
  var nafW;
  for (j = 0; j < naf.length; j += doubles.step) {
    nafW = 0;
    for (var l = j + doubles.step - 1; l >= j; l--)
      nafW = (nafW << 1) + naf[l];
    repr.push(nafW);
  }

  var a = this.jpoint(null, null, null);
  var b = this.jpoint(null, null, null);
  for (var i = I; i > 0; i--) {
    for (j = 0; j < repr.length; j++) {
      nafW = repr[j];
      if (nafW === i)
        b = b.mixedAdd(doubles.points[j]);
      else if (nafW === -i)
        b = b.mixedAdd(doubles.points[j].neg());
    }
    a = a.add(b);
  }
  return a.toP();
};

BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
  var w = 4;

  // Precompute window
  var nafPoints = p._getNAFPoints(w);
  w = nafPoints.wnd;
  var wnd = nafPoints.points;

  // Get NAF form
  var naf = getNAF(k, w, this._bitLength);

  // Add `this`*(N+1) for every w-NAF index
  var acc = this.jpoint(null, null, null);
  for (var i = naf.length - 1; i >= 0; i--) {
    // Count zeroes
    for (var l = 0; i >= 0 && naf[i] === 0; i--)
      l++;
    if (i >= 0)
      l++;
    acc = acc.dblp(l);

    if (i < 0)
      break;
    var z = naf[i];
    assert(z !== 0);
    if (p.type === 'affine') {
      // J +- P
      if (z > 0)
        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);
      else
        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());
    } else {
      // J +- J
      if (z > 0)
        acc = acc.add(wnd[(z - 1) >> 1]);
      else
        acc = acc.add(wnd[(-z - 1) >> 1].neg());
    }
  }
  return p.type === 'affine' ? acc.toP() : acc;
};

BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,
  points,
  coeffs,
  len,
  jacobianResult) {
  var wndWidth = this._wnafT1;
  var wnd = this._wnafT2;
  var naf = this._wnafT3;

  // Fill all arrays
  var max = 0;
  var i;
  var j;
  var p;
  for (i = 0; i < len; i++) {
    p = points[i];
    var nafPoints = p._getNAFPoints(defW);
    wndWidth[i] = nafPoints.wnd;
    wnd[i] = nafPoints.points;
  }

  // Comb small window NAFs
  for (i = len - 1; i >= 1; i -= 2) {
    var a = i - 1;
    var b = i;
    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);
      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);
      max = Math.max(naf[a].length, max);
      max = Math.max(naf[b].length, max);
      continue;
    }

    var comb = [
      points[a], /* 1 */
      null, /* 3 */
      null, /* 5 */
      points[b], /* 7 */
    ];

    // Try to avoid Projective points, if possible
    if (points[a].y.cmp(points[b].y) === 0) {
      comb[1] = points[a].add(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].add(points[b].neg());
    } else {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    }

    var index = [
      -3, /* -1 -1 */
      -1, /* -1 0 */
      -5, /* -1 1 */
      -7, /* 0 -1 */
      0, /* 0 0 */
      7, /* 0 1 */
      5, /* 1 -1 */
      1, /* 1 0 */
      3,  /* 1 1 */
    ];

    var jsf = getJSF(coeffs[a], coeffs[b]);
    max = Math.max(jsf[0].length, max);
    naf[a] = new Array(max);
    naf[b] = new Array(max);
    for (j = 0; j < max; j++) {
      var ja = jsf[0][j] | 0;
      var jb = jsf[1][j] | 0;

      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
      naf[b][j] = 0;
      wnd[a] = comb;
    }
  }

  var acc = this.jpoint(null, null, null);
  var tmp = this._wnafT4;
  for (i = max; i >= 0; i--) {
    var k = 0;

    while (i >= 0) {
      var zero = true;
      for (j = 0; j < len; j++) {
        tmp[j] = naf[j][i] | 0;
        if (tmp[j] !== 0)
          zero = false;
      }
      if (!zero)
        break;
      k++;
      i--;
    }
    if (i >= 0)
      k++;
    acc = acc.dblp(k);
    if (i < 0)
      break;

    for (j = 0; j < len; j++) {
      var z = tmp[j];
      p;
      if (z === 0)
        continue;
      else if (z > 0)
        p = wnd[j][(z - 1) >> 1];
      else if (z < 0)
        p = wnd[j][(-z - 1) >> 1].neg();

      if (p.type === 'affine')
        acc = acc.mixedAdd(p);
      else
        acc = acc.add(p);
    }
  }
  // Zeroify references
  for (i = 0; i < len; i++)
    wnd[i] = null;

  if (jacobianResult)
    return acc;
  else
    return acc.toP();
};

function BasePoint(curve, type) {
  this.curve = curve;
  this.type = type;
  this.precomputed = null;
}
BaseCurve.BasePoint = BasePoint;

BasePoint.prototype.eq = function eq(/*other*/) {
  throw new Error('Not implemented');
};

BasePoint.prototype.validate = function validate() {
  return this.curve.validate(this);
};

BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  bytes = utils.toArray(bytes, enc);

  var len = this.p.byteLength();

  // uncompressed, hybrid-odd, hybrid-even
  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&
      bytes.length - 1 === 2 * len) {
    if (bytes[0] === 0x06)
      assert(bytes[bytes.length - 1] % 2 === 0);
    else if (bytes[0] === 0x07)
      assert(bytes[bytes.length - 1] % 2 === 1);

    var res =  this.point(bytes.slice(1, 1 + len),
      bytes.slice(1 + len, 1 + 2 * len));

    return res;
  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&
              bytes.length - 1 === len) {
    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);
  }
  throw new Error('Unknown point format');
};

BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
  return this.encode(enc, true);
};

BasePoint.prototype._encode = function _encode(compact) {
  var len = this.curve.p.byteLength();
  var x = this.getX().toArray('be', len);

  if (compact)
    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);

  return [ 0x04 ].concat(x, this.getY().toArray('be', len));
};

BasePoint.prototype.encode = function encode(enc, compact) {
  return utils.encode(this._encode(compact), enc);
};

BasePoint.prototype.precompute = function precompute(power) {
  if (this.precomputed)
    return this;

  var precomputed = {
    doubles: null,
    naf: null,
    beta: null,
  };
  precomputed.naf = this._getNAFPoints(8);
  precomputed.doubles = this._getDoubles(4, power);
  precomputed.beta = this._getBeta();
  this.precomputed = precomputed;

  return this;
};

BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
  if (!this.precomputed)
    return false;

  var doubles = this.precomputed.doubles;
  if (!doubles)
    return false;

  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
};

BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
  if (this.precomputed && this.precomputed.doubles)
    return this.precomputed.doubles;

  var doubles = [ this ];
  var acc = this;
  for (var i = 0; i < power; i += step) {
    for (var j = 0; j < step; j++)
      acc = acc.dbl();
    doubles.push(acc);
  }
  return {
    step: step,
    points: doubles,
  };
};

BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
  if (this.precomputed && this.precomputed.naf)
    return this.precomputed.naf;

  var res = [ this ];
  var max = (1 << wnd) - 1;
  var dbl = max === 1 ? null : this.dbl();
  for (var i = 1; i < max; i++)
    res[i] = res[i - 1].add(dbl);
  return {
    wnd: wnd,
    points: res,
  };
};

BasePoint.prototype._getBeta = function _getBeta() {
  return null;
};

BasePoint.prototype.dblp = function dblp(k) {
  var r = this;
  for (var i = 0; i < k; i++)
    r = r.dbl();
  return r;
};


/***/ }),
/* 96 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(87);
var BN = __webpack_require__(88);
var inherits = __webpack_require__(97);
var Base = __webpack_require__(95);

var assert = utils.assert;

function ShortCurve(conf) {
  Base.call(this, 'short', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.tinv = this.two.redInvm();

  this.zeroA = this.a.fromRed().cmpn(0) === 0;
  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;

  // If the curve is endomorphic, precalculate beta and lambda
  this.endo = this._getEndomorphism(conf);
  this._endoWnafT1 = new Array(4);
  this._endoWnafT2 = new Array(4);
}
inherits(ShortCurve, Base);
module.exports = ShortCurve;

ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
  // No efficient endomorphism
  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
    return;

  // Compute beta and lambda, that lambda * P = (beta * Px; Py)
  var beta;
  var lambda;
  if (conf.beta) {
    beta = new BN(conf.beta, 16).toRed(this.red);
  } else {
    var betas = this._getEndoRoots(this.p);
    // Choose the smallest beta
    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
    beta = beta.toRed(this.red);
  }
  if (conf.lambda) {
    lambda = new BN(conf.lambda, 16);
  } else {
    // Choose the lambda that is matching selected beta
    var lambdas = this._getEndoRoots(this.n);
    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
      lambda = lambdas[0];
    } else {
      lambda = lambdas[1];
      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
    }
  }

  // Get basis vectors, used for balanced length-two representation
  var basis;
  if (conf.basis) {
    basis = conf.basis.map(function(vec) {
      return {
        a: new BN(vec.a, 16),
        b: new BN(vec.b, 16),
      };
    });
  } else {
    basis = this._getEndoBasis(lambda);
  }

  return {
    beta: beta,
    lambda: lambda,
    basis: basis,
  };
};

ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
  // Find roots of for x^2 + x + 1 in F
  // Root = (-1 +- Sqrt(-3)) / 2
  //
  var red = num === this.p ? this.red : BN.mont(num);
  var tinv = new BN(2).toRed(red).redInvm();
  var ntinv = tinv.redNeg();

  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);

  var l1 = ntinv.redAdd(s).fromRed();
  var l2 = ntinv.redSub(s).fromRed();
  return [ l1, l2 ];
};

ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
  // aprxSqrt >= sqrt(this.n)
  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));

  // 3.74
  // Run EGCD, until r(L + 1) < aprxSqrt
  var u = lambda;
  var v = this.n.clone();
  var x1 = new BN(1);
  var y1 = new BN(0);
  var x2 = new BN(0);
  var y2 = new BN(1);

  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
  var a0;
  var b0;
  // First vector
  var a1;
  var b1;
  // Second vector
  var a2;
  var b2;

  var prevR;
  var i = 0;
  var r;
  var x;
  while (u.cmpn(0) !== 0) {
    var q = v.div(u);
    r = v.sub(q.mul(u));
    x = x2.sub(q.mul(x1));
    var y = y2.sub(q.mul(y1));

    if (!a1 && r.cmp(aprxSqrt) < 0) {
      a0 = prevR.neg();
      b0 = x1;
      a1 = r.neg();
      b1 = x;
    } else if (a1 && ++i === 2) {
      break;
    }
    prevR = r;

    v = u;
    u = r;
    x2 = x1;
    x1 = x;
    y2 = y1;
    y1 = y;
  }
  a2 = r.neg();
  b2 = x;

  var len1 = a1.sqr().add(b1.sqr());
  var len2 = a2.sqr().add(b2.sqr());
  if (len2.cmp(len1) >= 0) {
    a2 = a0;
    b2 = b0;
  }

  // Normalize signs
  if (a1.negative) {
    a1 = a1.neg();
    b1 = b1.neg();
  }
  if (a2.negative) {
    a2 = a2.neg();
    b2 = b2.neg();
  }

  return [
    { a: a1, b: b1 },
    { a: a2, b: b2 },
  ];
};

ShortCurve.prototype._endoSplit = function _endoSplit(k) {
  var basis = this.endo.basis;
  var v1 = basis[0];
  var v2 = basis[1];

  var c1 = v2.b.mul(k).divRound(this.n);
  var c2 = v1.b.neg().mul(k).divRound(this.n);

  var p1 = c1.mul(v1.a);
  var p2 = c2.mul(v2.a);
  var q1 = c1.mul(v1.b);
  var q2 = c2.mul(v2.b);

  // Calculate answer
  var k1 = k.sub(p1).sub(p2);
  var k2 = q1.add(q2).neg();
  return { k1: k1, k2: k2 };
};

ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  // XXX Is there any way to tell if the number is odd without converting it
  // to non-red form?
  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

ShortCurve.prototype.validate = function validate(point) {
  if (point.inf)
    return true;

  var x = point.x;
  var y = point.y;

  var ax = this.a.redMul(x);
  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
  return y.redSqr().redISub(rhs).cmpn(0) === 0;
};

ShortCurve.prototype._endoWnafMulAdd =
    function _endoWnafMulAdd(points, coeffs, jacobianResult) {
      var npoints = this._endoWnafT1;
      var ncoeffs = this._endoWnafT2;
      for (var i = 0; i < points.length; i++) {
        var split = this._endoSplit(coeffs[i]);
        var p = points[i];
        var beta = p._getBeta();

        if (split.k1.negative) {
          split.k1.ineg();
          p = p.neg(true);
        }
        if (split.k2.negative) {
          split.k2.ineg();
          beta = beta.neg(true);
        }

        npoints[i * 2] = p;
        npoints[i * 2 + 1] = beta;
        ncoeffs[i * 2] = split.k1;
        ncoeffs[i * 2 + 1] = split.k2;
      }
      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);

      // Clean-up references to points and coefficients
      for (var j = 0; j < i * 2; j++) {
        npoints[j] = null;
        ncoeffs[j] = null;
      }
      return res;
    };

function Point(curve, x, y, isRed) {
  Base.BasePoint.call(this, curve, 'affine');
  if (x === null && y === null) {
    this.x = null;
    this.y = null;
    this.inf = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    // Force redgomery representation when loading from JSON
    if (isRed) {
      this.x.forceRed(this.curve.red);
      this.y.forceRed(this.curve.red);
    }
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    this.inf = false;
  }
}
inherits(Point, Base.BasePoint);

ShortCurve.prototype.point = function point(x, y, isRed) {
  return new Point(this, x, y, isRed);
};

ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
  return Point.fromJSON(this, obj, red);
};

Point.prototype._getBeta = function _getBeta() {
  if (!this.curve.endo)
    return;

  var pre = this.precomputed;
  if (pre && pre.beta)
    return pre.beta;

  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
  if (pre) {
    var curve = this.curve;
    var endoMul = function(p) {
      return curve.point(p.x.redMul(curve.endo.beta), p.y);
    };
    pre.beta = beta;
    beta.precomputed = {
      beta: null,
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(endoMul),
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(endoMul),
      },
    };
  }
  return beta;
};

Point.prototype.toJSON = function toJSON() {
  if (!this.precomputed)
    return [ this.x, this.y ];

  return [ this.x, this.y, this.precomputed && {
    doubles: this.precomputed.doubles && {
      step: this.precomputed.doubles.step,
      points: this.precomputed.doubles.points.slice(1),
    },
    naf: this.precomputed.naf && {
      wnd: this.precomputed.naf.wnd,
      points: this.precomputed.naf.points.slice(1),
    },
  } ];
};

Point.fromJSON = function fromJSON(curve, obj, red) {
  if (typeof obj === 'string')
    obj = JSON.parse(obj);
  var res = curve.point(obj[0], obj[1], red);
  if (!obj[2])
    return res;

  function obj2point(obj) {
    return curve.point(obj[0], obj[1], red);
  }

  var pre = obj[2];
  res.precomputed = {
    beta: null,
    doubles: pre.doubles && {
      step: pre.doubles.step,
      points: [ res ].concat(pre.doubles.points.map(obj2point)),
    },
    naf: pre.naf && {
      wnd: pre.naf.wnd,
      points: [ res ].concat(pre.naf.points.map(obj2point)),
    },
  };
  return res;
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  return this.inf;
};

Point.prototype.add = function add(p) {
  // O + P = P
  if (this.inf)
    return p;

  // P + O = P
  if (p.inf)
    return this;

  // P + P = 2P
  if (this.eq(p))
    return this.dbl();

  // P + (-P) = O
  if (this.neg().eq(p))
    return this.curve.point(null, null);

  // P + Q = O
  if (this.x.cmp(p.x) === 0)
    return this.curve.point(null, null);

  var c = this.y.redSub(p.y);
  if (c.cmpn(0) !== 0)
    c = c.redMul(this.x.redSub(p.x).redInvm());
  var nx = c.redSqr().redISub(this.x).redISub(p.x);
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.dbl = function dbl() {
  if (this.inf)
    return this;

  // 2P = O
  var ys1 = this.y.redAdd(this.y);
  if (ys1.cmpn(0) === 0)
    return this.curve.point(null, null);

  var a = this.curve.a;

  var x2 = this.x.redSqr();
  var dyinv = ys1.redInvm();
  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);

  var nx = c.redSqr().redISub(this.x.redAdd(this.x));
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.getX = function getX() {
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  return this.y.fromRed();
};

Point.prototype.mul = function mul(k) {
  k = new BN(k, 16);
  if (this.isInfinity())
    return this;
  else if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else if (this.curve.endo)
    return this.curve._endoWnafMulAdd([ this ], [ k ]);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs, true);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
};

Point.prototype.eq = function eq(p) {
  return this === p ||
         this.inf === p.inf &&
             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
};

Point.prototype.neg = function neg(_precompute) {
  if (this.inf)
    return this;

  var res = this.curve.point(this.x, this.y.redNeg());
  if (_precompute && this.precomputed) {
    var pre = this.precomputed;
    var negate = function(p) {
      return p.neg();
    };
    res.precomputed = {
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(negate),
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(negate),
      },
    };
  }
  return res;
};

Point.prototype.toJ = function toJ() {
  if (this.inf)
    return this.curve.jpoint(null, null, null);

  var res = this.curve.jpoint(this.x, this.y, this.curve.one);
  return res;
};

function JPoint(curve, x, y, z) {
  Base.BasePoint.call(this, curve, 'jacobian');
  if (x === null && y === null && z === null) {
    this.x = this.curve.one;
    this.y = this.curve.one;
    this.z = new BN(0);
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = new BN(z, 16);
  }
  if (!this.x.red)
    this.x = this.x.toRed(this.curve.red);
  if (!this.y.red)
    this.y = this.y.toRed(this.curve.red);
  if (!this.z.red)
    this.z = this.z.toRed(this.curve.red);

  this.zOne = this.z === this.curve.one;
}
inherits(JPoint, Base.BasePoint);

ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
  return new JPoint(this, x, y, z);
};

JPoint.prototype.toP = function toP() {
  if (this.isInfinity())
    return this.curve.point(null, null);

  var zinv = this.z.redInvm();
  var zinv2 = zinv.redSqr();
  var ax = this.x.redMul(zinv2);
  var ay = this.y.redMul(zinv2).redMul(zinv);

  return this.curve.point(ax, ay);
};

JPoint.prototype.neg = function neg() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};

JPoint.prototype.add = function add(p) {
  // O + P = P
  if (this.isInfinity())
    return p;

  // P + O = P
  if (p.isInfinity())
    return this;

  // 12M + 4S + 7A
  var pz2 = p.z.redSqr();
  var z2 = this.z.redSqr();
  var u1 = this.x.redMul(pz2);
  var u2 = p.x.redMul(z2);
  var s1 = this.y.redMul(pz2.redMul(p.z));
  var s2 = p.y.redMul(z2.redMul(this.z));

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(p.z).redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mixedAdd = function mixedAdd(p) {
  // O + P = P
  if (this.isInfinity())
    return p.toJ();

  // P + O = P
  if (p.isInfinity())
    return this;

  // 8M + 3S + 7A
  var z2 = this.z.redSqr();
  var u1 = this.x;
  var u2 = p.x.redMul(z2);
  var s1 = this.y;
  var s2 = p.y.redMul(z2).redMul(this.z);

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.dblp = function dblp(pow) {
  if (pow === 0)
    return this;
  if (this.isInfinity())
    return this;
  if (!pow)
    return this.dbl();

  var i;
  if (this.curve.zeroA || this.curve.threeA) {
    var r = this;
    for (i = 0; i < pow; i++)
      r = r.dbl();
    return r;
  }

  // 1M + 2S + 1A + N * (4S + 5M + 8A)
  // N = 1 => 6M + 6S + 9A
  var a = this.curve.a;
  var tinv = this.curve.tinv;

  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  // Reuse results
  var jyd = jy.redAdd(jy);
  for (i = 0; i < pow; i++) {
    var jx2 = jx.redSqr();
    var jyd2 = jyd.redSqr();
    var jyd4 = jyd2.redSqr();
    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

    var t1 = jx.redMul(jyd2);
    var nx = c.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var dny = c.redMul(t2);
    dny = dny.redIAdd(dny).redISub(jyd4);
    var nz = jyd.redMul(jz);
    if (i + 1 < pow)
      jz4 = jz4.redMul(jyd4);

    jx = nx;
    jz = nz;
    jyd = dny;
  }

  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
};

JPoint.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  if (this.curve.zeroA)
    return this._zeroDbl();
  else if (this.curve.threeA)
    return this._threeDbl();
  else
    return this._dbl();
};

JPoint.prototype._zeroDbl = function _zeroDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 14A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a; a = 0
    var m = xx.redAdd(xx).redIAdd(xx);
    // T = M ^ 2 - 2*S
    var t = m.redSqr().redISub(s).redISub(s);

    // 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);

    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2*Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-dbl-2009-l
    // 2M + 5S + 13A

    // A = X1^2
    var a = this.x.redSqr();
    // B = Y1^2
    var b = this.y.redSqr();
    // C = B^2
    var c = b.redSqr();
    // D = 2 * ((X1 + B)^2 - A - C)
    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
    d = d.redIAdd(d);
    // E = 3 * A
    var e = a.redAdd(a).redIAdd(a);
    // F = E^2
    var f = e.redSqr();

    // 8 * C
    var c8 = c.redIAdd(c);
    c8 = c8.redIAdd(c8);
    c8 = c8.redIAdd(c8);

    // X3 = F - 2 * D
    nx = f.redISub(d).redISub(d);
    // Y3 = E * (D - X3) - 8 * C
    ny = e.redMul(d.redISub(nx)).redISub(c8);
    // Z3 = 2 * Y1 * Z1
    nz = this.y.redMul(this.z);
    nz = nz.redIAdd(nz);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._threeDbl = function _threeDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 15A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a
    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
    // T = M^2 - 2 * S
    var t = m.redSqr().redISub(s).redISub(s);
    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2 * Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
    // 3M + 5S

    // delta = Z1^2
    var delta = this.z.redSqr();
    // gamma = Y1^2
    var gamma = this.y.redSqr();
    // beta = X1 * gamma
    var beta = this.x.redMul(gamma);
    // alpha = 3 * (X1 - delta) * (X1 + delta)
    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
    alpha = alpha.redAdd(alpha).redIAdd(alpha);
    // X3 = alpha^2 - 8 * beta
    var beta4 = beta.redIAdd(beta);
    beta4 = beta4.redIAdd(beta4);
    var beta8 = beta4.redAdd(beta4);
    nx = alpha.redSqr().redISub(beta8);
    // Z3 = (Y1 + Z1)^2 - gamma - delta
    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
    var ggamma8 = gamma.redSqr();
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._dbl = function _dbl() {
  var a = this.curve.a;

  // 4M + 6S + 10A
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  var jx2 = jx.redSqr();
  var jy2 = jy.redSqr();

  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

  var jxd4 = jx.redAdd(jx);
  jxd4 = jxd4.redIAdd(jxd4);
  var t1 = jxd4.redMul(jy2);
  var nx = c.redSqr().redISub(t1.redAdd(t1));
  var t2 = t1.redISub(nx);

  var jyd8 = jy2.redSqr();
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  var ny = c.redMul(t2).redISub(jyd8);
  var nz = jy.redAdd(jy).redMul(jz);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.trpl = function trpl() {
  if (!this.curve.zeroA)
    return this.dbl().add(this);

  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
  // 5M + 10S + ...

  // XX = X1^2
  var xx = this.x.redSqr();
  // YY = Y1^2
  var yy = this.y.redSqr();
  // ZZ = Z1^2
  var zz = this.z.redSqr();
  // YYYY = YY^2
  var yyyy = yy.redSqr();
  // M = 3 * XX + a * ZZ2; a = 0
  var m = xx.redAdd(xx).redIAdd(xx);
  // MM = M^2
  var mm = m.redSqr();
  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
  e = e.redIAdd(e);
  e = e.redAdd(e).redIAdd(e);
  e = e.redISub(mm);
  // EE = E^2
  var ee = e.redSqr();
  // T = 16*YYYY
  var t = yyyy.redIAdd(yyyy);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  // U = (M + E)^2 - MM - EE - T
  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
  // X3 = 4 * (X1 * EE - 4 * YY * U)
  var yyu4 = yy.redMul(u);
  yyu4 = yyu4.redIAdd(yyu4);
  yyu4 = yyu4.redIAdd(yyu4);
  var nx = this.x.redMul(ee).redISub(yyu4);
  nx = nx.redIAdd(nx);
  nx = nx.redIAdd(nx);
  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)
  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  // Z3 = (Z1 + E)^2 - ZZ - EE
  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mul = function mul(k, kbase) {
  k = new BN(k, kbase);

  return this.curve._wnafMul(this, k);
};

JPoint.prototype.eq = function eq(p) {
  if (p.type === 'affine')
    return this.eq(p.toJ());

  if (this === p)
    return true;

  // x1 * z2^2 == x2 * z1^2
  var z2 = this.z.redSqr();
  var pz2 = p.z.redSqr();
  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
    return false;

  // y1 * z2^3 == y2 * z1^3
  var z3 = z2.redMul(this.z);
  var pz3 = pz2.redMul(p.z);
  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
};

JPoint.prototype.eqXToP = function eqXToP(x) {
  var zs = this.z.redSqr();
  var rx = x.toRed(this.curve.red).redMul(zs);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(zs);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
};

JPoint.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC JPoint Infinity>';
  return '<EC JPoint x: ' + this.x.toString(16, 2) +
      ' y: ' + this.y.toString(16, 2) +
      ' z: ' + this.z.toString(16, 2) + '>';
};

JPoint.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};


/***/ }),
/* 97 */
/***/ ((module) => {

if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      ctor.prototype = Object.create(superCtor.prototype, {
        constructor: {
          value: ctor,
          enumerable: false,
          writable: true,
          configurable: true
        }
      })
    }
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      var TempCtor = function () {}
      TempCtor.prototype = superCtor.prototype
      ctor.prototype = new TempCtor()
      ctor.prototype.constructor = ctor
    }
  }
}


/***/ }),
/* 98 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var BN = __webpack_require__(88);
var inherits = __webpack_require__(97);
var Base = __webpack_require__(95);

var utils = __webpack_require__(87);

function MontCurve(conf) {
  Base.call(this, 'mont', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.i4 = new BN(4).toRed(this.red).redInvm();
  this.two = new BN(2).toRed(this.red);
  this.a24 = this.i4.redMul(this.a.redAdd(this.two));
}
inherits(MontCurve, Base);
module.exports = MontCurve;

MontCurve.prototype.validate = function validate(point) {
  var x = point.normalize().x;
  var x2 = x.redSqr();
  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
  var y = rhs.redSqrt();

  return y.redSqr().cmp(rhs) === 0;
};

function Point(curve, x, z) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && z === null) {
    this.x = this.curve.one;
    this.z = this.curve.zero;
  } else {
    this.x = new BN(x, 16);
    this.z = new BN(z, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
  }
}
inherits(Point, Base.BasePoint);

MontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  return this.point(utils.toArray(bytes, enc), 1);
};

MontCurve.prototype.point = function point(x, z) {
  return new Point(this, x, z);
};

MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

Point.prototype.precompute = function precompute() {
  // No-op
};

Point.prototype._encode = function _encode() {
  return this.getX().toArray('be', this.curve.p.byteLength());
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1] || curve.one);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

Point.prototype.dbl = function dbl() {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3
  // 2M + 2S + 4A

  // A = X1 + Z1
  var a = this.x.redAdd(this.z);
  // AA = A^2
  var aa = a.redSqr();
  // B = X1 - Z1
  var b = this.x.redSub(this.z);
  // BB = B^2
  var bb = b.redSqr();
  // C = AA - BB
  var c = aa.redSub(bb);
  // X3 = AA * BB
  var nx = aa.redMul(bb);
  // Z3 = C * (BB + A24 * C)
  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
  return this.curve.point(nx, nz);
};

Point.prototype.add = function add() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.diffAdd = function diffAdd(p, diff) {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3
  // 4M + 2S + 6A

  // A = X2 + Z2
  var a = this.x.redAdd(this.z);
  // B = X2 - Z2
  var b = this.x.redSub(this.z);
  // C = X3 + Z3
  var c = p.x.redAdd(p.z);
  // D = X3 - Z3
  var d = p.x.redSub(p.z);
  // DA = D * A
  var da = d.redMul(a);
  // CB = C * B
  var cb = c.redMul(b);
  // X5 = Z1 * (DA + CB)^2
  var nx = diff.z.redMul(da.redAdd(cb).redSqr());
  // Z5 = X1 * (DA - CB)^2
  var nz = diff.x.redMul(da.redISub(cb).redSqr());
  return this.curve.point(nx, nz);
};

Point.prototype.mul = function mul(k) {
  var t = k.clone();
  var a = this; // (N / 2) * Q + Q
  var b = this.curve.point(null, null); // (N / 2) * Q
  var c = this; // Q

  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))
    bits.push(t.andln(1));

  for (var i = bits.length - 1; i >= 0; i--) {
    if (bits[i] === 0) {
      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q
      a = a.diffAdd(b, c);
      // N * Q = 2 * ((N / 2) * Q + Q))
      b = b.dbl();
    } else {
      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)
      b = a.diffAdd(b, c);
      // N * Q + Q = 2 * ((N / 2) * Q + Q)
      a = a.dbl();
    }
  }
  return b;
};

Point.prototype.mulAdd = function mulAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.jumlAdd = function jumlAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.eq = function eq(other) {
  return this.getX().cmp(other.getX()) === 0;
};

Point.prototype.normalize = function normalize() {
  this.x = this.x.redMul(this.z.redInvm());
  this.z = this.curve.one;
  return this;
};

Point.prototype.getX = function getX() {
  // Normalize coordinates
  this.normalize();

  return this.x.fromRed();
};


/***/ }),
/* 99 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(87);
var BN = __webpack_require__(88);
var inherits = __webpack_require__(97);
var Base = __webpack_require__(95);

var assert = utils.assert;

function EdwardsCurve(conf) {
  // NOTE: Important as we are creating point in Base.call()
  this.twisted = (conf.a | 0) !== 1;
  this.mOneA = this.twisted && (conf.a | 0) === -1;
  this.extended = this.mOneA;

  Base.call(this, 'edwards', conf);

  this.a = new BN(conf.a, 16).umod(this.red.m);
  this.a = this.a.toRed(this.red);
  this.c = new BN(conf.c, 16).toRed(this.red);
  this.c2 = this.c.redSqr();
  this.d = new BN(conf.d, 16).toRed(this.red);
  this.dd = this.d.redAdd(this.d);

  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);
  this.oneC = (conf.c | 0) === 1;
}
inherits(EdwardsCurve, Base);
module.exports = EdwardsCurve;

EdwardsCurve.prototype._mulA = function _mulA(num) {
  if (this.mOneA)
    return num.redNeg();
  else
    return this.a.redMul(num);
};

EdwardsCurve.prototype._mulC = function _mulC(num) {
  if (this.oneC)
    return num;
  else
    return this.c.redMul(num);
};

// Just for compatibility with Short curve
EdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {
  return this.point(x, y, z, t);
};

EdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var x2 = x.redSqr();
  var rhs = this.c2.redSub(this.a.redMul(x2));
  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));

  var y2 = rhs.redMul(lhs.redInvm());
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {
  y = new BN(y, 16);
  if (!y.red)
    y = y.toRed(this.red);

  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)
  var y2 = y.redSqr();
  var lhs = y2.redSub(this.c2);
  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);
  var x2 = lhs.redMul(rhs.redInvm());

  if (x2.cmp(this.zero) === 0) {
    if (odd)
      throw new Error('invalid point');
    else
      return this.point(this.zero, y);
  }

  var x = x2.redSqrt();
  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  if (x.fromRed().isOdd() !== odd)
    x = x.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.validate = function validate(point) {
  if (point.isInfinity())
    return true;

  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)
  point.normalize();

  var x2 = point.x.redSqr();
  var y2 = point.y.redSqr();
  var lhs = x2.redMul(this.a).redAdd(y2);
  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));

  return lhs.cmp(rhs) === 0;
};

function Point(curve, x, y, z, t) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && y === null && z === null) {
    this.x = this.curve.zero;
    this.y = this.curve.one;
    this.z = this.curve.one;
    this.t = this.curve.zero;
    this.zOne = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = z ? new BN(z, 16) : this.curve.one;
    this.t = t && new BN(t, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
    if (this.t && !this.t.red)
      this.t = this.t.toRed(this.curve.red);
    this.zOne = this.z === this.curve.one;

    // Use extended coordinates
    if (this.curve.extended && !this.t) {
      this.t = this.x.redMul(this.y);
      if (!this.zOne)
        this.t = this.t.redMul(this.z.redInvm());
    }
  }
}
inherits(Point, Base.BasePoint);

EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

EdwardsCurve.prototype.point = function point(x, y, z, t) {
  return new Point(this, x, y, z, t);
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1], obj[2]);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.x.cmpn(0) === 0 &&
    (this.y.cmp(this.z) === 0 ||
    (this.zOne && this.y.cmp(this.curve.c) === 0));
};

Point.prototype._extDbl = function _extDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #doubling-dbl-2008-hwcd
  // 4M + 4S

  // A = X1^2
  var a = this.x.redSqr();
  // B = Y1^2
  var b = this.y.redSqr();
  // C = 2 * Z1^2
  var c = this.z.redSqr();
  c = c.redIAdd(c);
  // D = a * A
  var d = this.curve._mulA(a);
  // E = (X1 + Y1)^2 - A - B
  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);
  // G = D + B
  var g = d.redAdd(b);
  // F = G - C
  var f = g.redSub(c);
  // H = D - B
  var h = d.redSub(b);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projDbl = function _projDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #doubling-dbl-2008-bbjlp
  //     #doubling-dbl-2007-bl
  // and others
  // Generally 3M + 4S or 2M + 4S

  // B = (X1 + Y1)^2
  var b = this.x.redAdd(this.y).redSqr();
  // C = X1^2
  var c = this.x.redSqr();
  // D = Y1^2
  var d = this.y.redSqr();

  var nx;
  var ny;
  var nz;
  var e;
  var h;
  var j;
  if (this.curve.twisted) {
    // E = a * C
    e = this.curve._mulA(c);
    // F = E + D
    var f = e.redAdd(d);
    if (this.zOne) {
      // X3 = (B - C - D) * (F - 2)
      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F^2 - 2 * F
      nz = f.redSqr().redSub(f).redSub(f);
    } else {
      // H = Z1^2
      h = this.z.redSqr();
      // J = F - 2 * H
      j = f.redSub(h).redISub(h);
      // X3 = (B-C-D)*J
      nx = b.redSub(c).redISub(d).redMul(j);
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F * J
      nz = f.redMul(j);
    }
  } else {
    // E = C + D
    e = c.redAdd(d);
    // H = (c * Z1)^2
    h = this.curve._mulC(this.z).redSqr();
    // J = E - 2 * H
    j = e.redSub(h).redSub(h);
    // X3 = c * (B - E) * J
    nx = this.curve._mulC(b.redISub(e)).redMul(j);
    // Y3 = c * E * (C - D)
    ny = this.curve._mulC(e).redMul(c.redISub(d));
    // Z3 = E * J
    nz = e.redMul(j);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  // Double in extended coordinates
  if (this.curve.extended)
    return this._extDbl();
  else
    return this._projDbl();
};

Point.prototype._extAdd = function _extAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #addition-add-2008-hwcd-3
  // 8M

  // A = (Y1 - X1) * (Y2 - X2)
  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));
  // B = (Y1 + X1) * (Y2 + X2)
  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));
  // C = T1 * k * T2
  var c = this.t.redMul(this.curve.dd).redMul(p.t);
  // D = Z1 * 2 * Z2
  var d = this.z.redMul(p.z.redAdd(p.z));
  // E = B - A
  var e = b.redSub(a);
  // F = D - C
  var f = d.redSub(c);
  // G = D + C
  var g = d.redAdd(c);
  // H = B + A
  var h = b.redAdd(a);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projAdd = function _projAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #addition-add-2008-bbjlp
  //     #addition-add-2007-bl
  // 10M + 1S

  // A = Z1 * Z2
  var a = this.z.redMul(p.z);
  // B = A^2
  var b = a.redSqr();
  // C = X1 * X2
  var c = this.x.redMul(p.x);
  // D = Y1 * Y2
  var d = this.y.redMul(p.y);
  // E = d * C * D
  var e = this.curve.d.redMul(c).redMul(d);
  // F = B - E
  var f = b.redSub(e);
  // G = B + E
  var g = b.redAdd(e);
  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)
  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);
  var nx = a.redMul(f).redMul(tmp);
  var ny;
  var nz;
  if (this.curve.twisted) {
    // Y3 = A * G * (D - a * C)
    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));
    // Z3 = F * G
    nz = f.redMul(g);
  } else {
    // Y3 = A * G * (D - C)
    ny = a.redMul(g).redMul(d.redSub(c));
    // Z3 = c * F * G
    nz = this.curve._mulC(f).redMul(g);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.add = function add(p) {
  if (this.isInfinity())
    return p;
  if (p.isInfinity())
    return this;

  if (this.curve.extended)
    return this._extAdd(p);
  else
    return this._projAdd(p);
};

Point.prototype.mul = function mul(k) {
  if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);
};

Point.prototype.normalize = function normalize() {
  if (this.zOne)
    return this;

  // Normalize coordinates
  var zi = this.z.redInvm();
  this.x = this.x.redMul(zi);
  this.y = this.y.redMul(zi);
  if (this.t)
    this.t = this.t.redMul(zi);
  this.z = this.curve.one;
  this.zOne = true;
  return this;
};

Point.prototype.neg = function neg() {
  return this.curve.point(this.x.redNeg(),
    this.y,
    this.z,
    this.t && this.t.redNeg());
};

Point.prototype.getX = function getX() {
  this.normalize();
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  this.normalize();
  return this.y.fromRed();
};

Point.prototype.eq = function eq(other) {
  return this === other ||
         this.getX().cmp(other.getX()) === 0 &&
         this.getY().cmp(other.getY()) === 0;
};

Point.prototype.eqXToP = function eqXToP(x) {
  var rx = x.toRed(this.curve.red).redMul(this.z);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(this.z);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
};

// Compatibility with BaseCurve
Point.prototype.toP = Point.prototype.normalize;
Point.prototype.mixedAdd = Point.prototype.add;


/***/ }),
/* 100 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var curves = exports;

var hash = __webpack_require__(101);
var curve = __webpack_require__(94);
var utils = __webpack_require__(87);

var assert = utils.assert;

function PresetCurve(options) {
  if (options.type === 'short')
    this.curve = new curve.short(options);
  else if (options.type === 'edwards')
    this.curve = new curve.edwards(options);
  else
    this.curve = new curve.mont(options);
  this.g = this.curve.g;
  this.n = this.curve.n;
  this.hash = options.hash;

  assert(this.g.validate(), 'Invalid curve');
  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
}
curves.PresetCurve = PresetCurve;

function defineCurve(name, options) {
  Object.defineProperty(curves, name, {
    configurable: true,
    enumerable: true,
    get: function() {
      var curve = new PresetCurve(options);
      Object.defineProperty(curves, name, {
        configurable: true,
        enumerable: true,
        value: curve,
      });
      return curve;
    },
  });
}

defineCurve('p192', {
  type: 'short',
  prime: 'p192',
  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
  hash: hash.sha256,
  gRed: false,
  g: [
    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',
    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',
  ],
});

defineCurve('p224', {
  type: 'short',
  prime: 'p224',
  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
  hash: hash.sha256,
  gRed: false,
  g: [
    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',
    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',
  ],
});

defineCurve('p256', {
  type: 'short',
  prime: null,
  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
  hash: hash.sha256,
  gRed: false,
  g: [
    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',
    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',
  ],
});

defineCurve('p384', {
  type: 'short',
  prime: null,
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 ffffffff',
  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 fffffffc',
  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +
     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',
  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +
     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',
  hash: hash.sha384,
  gRed: false,
  g: [
    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +
    '5502f25d bf55296c 3a545e38 72760ab7',
    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +
    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',
  ],
});

defineCurve('p521', {
  type: 'short',
  prime: null,
  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff',
  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff fffffffc',
  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +
     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +
     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',
  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +
     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',
  hash: hash.sha512,
  gRed: false,
  g: [
    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +
    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +
    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',
    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +
    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +
    '3fad0761 353c7086 a272c240 88be9476 9fd16650',
  ],
});

defineCurve('curve25519', {
  type: 'mont',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '76d06',
  b: '1',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '9',
  ],
});

defineCurve('ed25519', {
  type: 'edwards',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '-1',
  c: '1',
  // -121665 * (121666^(-1)) (mod P)
  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',

    // 4/5
    '6666666666666666666666666666666666666666666666666666666666666658',
  ],
});

var pre;
try {
  pre = __webpack_require__(113);
} catch (e) {
  pre = undefined;
}

defineCurve('secp256k1', {
  type: 'short',
  prime: 'k256',
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
  a: '0',
  b: '7',
  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
  h: '1',
  hash: hash.sha256,

  // Precomputed endomorphism
  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
  basis: [
    {
      a: '3086d221a7d46bcde86c90e49284eb15',
      b: '-e4437ed6010e88286f547fa90abfe4c3',
    },
    {
      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
      b: '3086d221a7d46bcde86c90e49284eb15',
    },
  ],

  gRed: false,
  g: [
    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',
    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',
    pre,
  ],
});


/***/ }),
/* 101 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var hash = exports;

hash.utils = __webpack_require__(102);
hash.common = __webpack_require__(103);
hash.sha = __webpack_require__(104);
hash.ripemd = __webpack_require__(111);
hash.hmac = __webpack_require__(112);

// Proxy hash functions to the main object
hash.sha1 = hash.sha.sha1;
hash.sha256 = hash.sha.sha256;
hash.sha224 = hash.sha.sha224;
hash.sha384 = hash.sha.sha384;
hash.sha512 = hash.sha.sha512;
hash.ripemd160 = hash.ripemd.ripemd160;


/***/ }),
/* 102 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var assert = __webpack_require__(90);
var inherits = __webpack_require__(97);

exports.inherits = inherits;

function isSurrogatePair(msg, i) {
  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {
    return false;
  }
  if (i < 0 || i + 1 >= msg.length) {
    return false;
  }
  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;
}

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg === 'string') {
    if (!enc) {
      // Inspired by stringToUtf8ByteArray() in closure-library by Google
      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143
      // Apache License 2.0
      // https://github.com/google/closure-library/blob/master/LICENSE
      var p = 0;
      for (var i = 0; i < msg.length; i++) {
        var c = msg.charCodeAt(i);
        if (c < 128) {
          res[p++] = c;
        } else if (c < 2048) {
          res[p++] = (c >> 6) | 192;
          res[p++] = (c & 63) | 128;
        } else if (isSurrogatePair(msg, i)) {
          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);
          res[p++] = (c >> 18) | 240;
          res[p++] = ((c >> 12) & 63) | 128;
          res[p++] = ((c >> 6) & 63) | 128;
          res[p++] = (c & 63) | 128;
        } else {
          res[p++] = (c >> 12) | 224;
          res[p++] = ((c >> 6) & 63) | 128;
          res[p++] = (c & 63) | 128;
        }
      }
    } else if (enc === 'hex') {
      msg = msg.replace(/[^a-z0-9]+/ig, '');
      if (msg.length % 2 !== 0)
        msg = '0' + msg;
      for (i = 0; i < msg.length; i += 2)
        res.push(parseInt(msg[i] + msg[i + 1], 16));
    }
  } else {
    for (i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
  }
  return res;
}
exports.toArray = toArray;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
exports.toHex = toHex;

function htonl(w) {
  var res = (w >>> 24) |
            ((w >>> 8) & 0xff00) |
            ((w << 8) & 0xff0000) |
            ((w & 0xff) << 24);
  return res >>> 0;
}
exports.htonl = htonl;

function toHex32(msg, endian) {
  var res = '';
  for (var i = 0; i < msg.length; i++) {
    var w = msg[i];
    if (endian === 'little')
      w = htonl(w);
    res += zero8(w.toString(16));
  }
  return res;
}
exports.toHex32 = toHex32;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
exports.zero2 = zero2;

function zero8(word) {
  if (word.length === 7)
    return '0' + word;
  else if (word.length === 6)
    return '00' + word;
  else if (word.length === 5)
    return '000' + word;
  else if (word.length === 4)
    return '0000' + word;
  else if (word.length === 3)
    return '00000' + word;
  else if (word.length === 2)
    return '000000' + word;
  else if (word.length === 1)
    return '0000000' + word;
  else
    return word;
}
exports.zero8 = zero8;

function join32(msg, start, end, endian) {
  var len = end - start;
  assert(len % 4 === 0);
  var res = new Array(len / 4);
  for (var i = 0, k = start; i < res.length; i++, k += 4) {
    var w;
    if (endian === 'big')
      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];
    else
      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];
    res[i] = w >>> 0;
  }
  return res;
}
exports.join32 = join32;

function split32(msg, endian) {
  var res = new Array(msg.length * 4);
  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
    var m = msg[i];
    if (endian === 'big') {
      res[k] = m >>> 24;
      res[k + 1] = (m >>> 16) & 0xff;
      res[k + 2] = (m >>> 8) & 0xff;
      res[k + 3] = m & 0xff;
    } else {
      res[k + 3] = m >>> 24;
      res[k + 2] = (m >>> 16) & 0xff;
      res[k + 1] = (m >>> 8) & 0xff;
      res[k] = m & 0xff;
    }
  }
  return res;
}
exports.split32 = split32;

function rotr32(w, b) {
  return (w >>> b) | (w << (32 - b));
}
exports.rotr32 = rotr32;

function rotl32(w, b) {
  return (w << b) | (w >>> (32 - b));
}
exports.rotl32 = rotl32;

function sum32(a, b) {
  return (a + b) >>> 0;
}
exports.sum32 = sum32;

function sum32_3(a, b, c) {
  return (a + b + c) >>> 0;
}
exports.sum32_3 = sum32_3;

function sum32_4(a, b, c, d) {
  return (a + b + c + d) >>> 0;
}
exports.sum32_4 = sum32_4;

function sum32_5(a, b, c, d, e) {
  return (a + b + c + d + e) >>> 0;
}
exports.sum32_5 = sum32_5;

function sum64(buf, pos, ah, al) {
  var bh = buf[pos];
  var bl = buf[pos + 1];

  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  buf[pos] = hi >>> 0;
  buf[pos + 1] = lo;
}
exports.sum64 = sum64;

function sum64_hi(ah, al, bh, bl) {
  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  return hi >>> 0;
}
exports.sum64_hi = sum64_hi;

function sum64_lo(ah, al, bh, bl) {
  var lo = al + bl;
  return lo >>> 0;
}
exports.sum64_lo = sum64_lo;

function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;

  var hi = ah + bh + ch + dh + carry;
  return hi >>> 0;
}
exports.sum64_4_hi = sum64_4_hi;

function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
  var lo = al + bl + cl + dl;
  return lo >>> 0;
}
exports.sum64_4_lo = sum64_4_lo;

function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;
  lo = (lo + el) >>> 0;
  carry += lo < el ? 1 : 0;

  var hi = ah + bh + ch + dh + eh + carry;
  return hi >>> 0;
}
exports.sum64_5_hi = sum64_5_hi;

function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var lo = al + bl + cl + dl + el;

  return lo >>> 0;
}
exports.sum64_5_lo = sum64_5_lo;

function rotr64_hi(ah, al, num) {
  var r = (al << (32 - num)) | (ah >>> num);
  return r >>> 0;
}
exports.rotr64_hi = rotr64_hi;

function rotr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.rotr64_lo = rotr64_lo;

function shr64_hi(ah, al, num) {
  return ah >>> num;
}
exports.shr64_hi = shr64_hi;

function shr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.shr64_lo = shr64_lo;


/***/ }),
/* 103 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(102);
var assert = __webpack_require__(90);

function BlockHash() {
  this.pending = null;
  this.pendingTotal = 0;
  this.blockSize = this.constructor.blockSize;
  this.outSize = this.constructor.outSize;
  this.hmacStrength = this.constructor.hmacStrength;
  this.padLength = this.constructor.padLength / 8;
  this.endian = 'big';

  this._delta8 = this.blockSize / 8;
  this._delta32 = this.blockSize / 32;
}
exports.BlockHash = BlockHash;

BlockHash.prototype.update = function update(msg, enc) {
  // Convert message to array, pad it, and join into 32bit blocks
  msg = utils.toArray(msg, enc);
  if (!this.pending)
    this.pending = msg;
  else
    this.pending = this.pending.concat(msg);
  this.pendingTotal += msg.length;

  // Enough data, try updating
  if (this.pending.length >= this._delta8) {
    msg = this.pending;

    // Process pending data in blocks
    var r = msg.length % this._delta8;
    this.pending = msg.slice(msg.length - r, msg.length);
    if (this.pending.length === 0)
      this.pending = null;

    msg = utils.join32(msg, 0, msg.length - r, this.endian);
    for (var i = 0; i < msg.length; i += this._delta32)
      this._update(msg, i, i + this._delta32);
  }

  return this;
};

BlockHash.prototype.digest = function digest(enc) {
  this.update(this._pad());
  assert(this.pending === null);

  return this._digest(enc);
};

BlockHash.prototype._pad = function pad() {
  var len = this.pendingTotal;
  var bytes = this._delta8;
  var k = bytes - ((len + this.padLength) % bytes);
  var res = new Array(k + this.padLength);
  res[0] = 0x80;
  for (var i = 1; i < k; i++)
    res[i] = 0;

  // Append length
  len <<= 3;
  if (this.endian === 'big') {
    for (var t = 8; t < this.padLength; t++)
      res[i++] = 0;

    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = len & 0xff;
  } else {
    res[i++] = len & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;

    for (t = 8; t < this.padLength; t++)
      res[i++] = 0;
  }

  return res;
};


/***/ }),
/* 104 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


exports.sha1 = __webpack_require__(105);
exports.sha224 = __webpack_require__(107);
exports.sha256 = __webpack_require__(108);
exports.sha384 = __webpack_require__(109);
exports.sha512 = __webpack_require__(110);


/***/ }),
/* 105 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(102);
var common = __webpack_require__(103);
var shaCommon = __webpack_require__(106);

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_5 = utils.sum32_5;
var ft_1 = shaCommon.ft_1;
var BlockHash = common.BlockHash;

var sha1_K = [
  0x5A827999, 0x6ED9EBA1,
  0x8F1BBCDC, 0xCA62C1D6
];

function SHA1() {
  if (!(this instanceof SHA1))
    return new SHA1();

  BlockHash.call(this);
  this.h = [
    0x67452301, 0xefcdab89, 0x98badcfe,
    0x10325476, 0xc3d2e1f0 ];
  this.W = new Array(80);
}

utils.inherits(SHA1, BlockHash);
module.exports = SHA1;

SHA1.blockSize = 512;
SHA1.outSize = 160;
SHA1.hmacStrength = 80;
SHA1.padLength = 64;

SHA1.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];

  for(; i < W.length; i++)
    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];

  for (i = 0; i < W.length; i++) {
    var s = ~~(i / 20);
    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
    e = d;
    d = c;
    c = rotl32(b, 30);
    b = a;
    a = t;
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
};

SHA1.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};


/***/ }),
/* 106 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(102);
var rotr32 = utils.rotr32;

function ft_1(s, x, y, z) {
  if (s === 0)
    return ch32(x, y, z);
  if (s === 1 || s === 3)
    return p32(x, y, z);
  if (s === 2)
    return maj32(x, y, z);
}
exports.ft_1 = ft_1;

function ch32(x, y, z) {
  return (x & y) ^ ((~x) & z);
}
exports.ch32 = ch32;

function maj32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}
exports.maj32 = maj32;

function p32(x, y, z) {
  return x ^ y ^ z;
}
exports.p32 = p32;

function s0_256(x) {
  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
}
exports.s0_256 = s0_256;

function s1_256(x) {
  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
}
exports.s1_256 = s1_256;

function g0_256(x) {
  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);
}
exports.g0_256 = g0_256;

function g1_256(x) {
  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);
}
exports.g1_256 = g1_256;


/***/ }),
/* 107 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(102);
var SHA256 = __webpack_require__(108);

function SHA224() {
  if (!(this instanceof SHA224))
    return new SHA224();

  SHA256.call(this);
  this.h = [
    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,
    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];
}
utils.inherits(SHA224, SHA256);
module.exports = SHA224;

SHA224.blockSize = 512;
SHA224.outSize = 224;
SHA224.hmacStrength = 192;
SHA224.padLength = 64;

SHA224.prototype._digest = function digest(enc) {
  // Just truncate output
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 7), 'big');
  else
    return utils.split32(this.h.slice(0, 7), 'big');
};



/***/ }),
/* 108 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(102);
var common = __webpack_require__(103);
var shaCommon = __webpack_require__(106);
var assert = __webpack_require__(90);

var sum32 = utils.sum32;
var sum32_4 = utils.sum32_4;
var sum32_5 = utils.sum32_5;
var ch32 = shaCommon.ch32;
var maj32 = shaCommon.maj32;
var s0_256 = shaCommon.s0_256;
var s1_256 = shaCommon.s1_256;
var g0_256 = shaCommon.g0_256;
var g1_256 = shaCommon.g1_256;

var BlockHash = common.BlockHash;

var sha256_K = [
  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,
  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,
  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,
  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,
  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,
  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
];

function SHA256() {
  if (!(this instanceof SHA256))
    return new SHA256();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,
    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19
  ];
  this.k = sha256_K;
  this.W = new Array(64);
}
utils.inherits(SHA256, BlockHash);
module.exports = SHA256;

SHA256.blockSize = 512;
SHA256.outSize = 256;
SHA256.hmacStrength = 192;
SHA256.padLength = 64;

SHA256.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i++)
    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];
  var f = this.h[5];
  var g = this.h[6];
  var h = this.h[7];

  assert(this.k.length === W.length);
  for (i = 0; i < W.length; i++) {
    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
    var T2 = sum32(s0_256(a), maj32(a, b, c));
    h = g;
    g = f;
    f = e;
    e = sum32(d, T1);
    d = c;
    c = b;
    b = a;
    a = sum32(T1, T2);
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
  this.h[5] = sum32(this.h[5], f);
  this.h[6] = sum32(this.h[6], g);
  this.h[7] = sum32(this.h[7], h);
};

SHA256.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};


/***/ }),
/* 109 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(102);

var SHA512 = __webpack_require__(110);

function SHA384() {
  if (!(this instanceof SHA384))
    return new SHA384();

  SHA512.call(this);
  this.h = [
    0xcbbb9d5d, 0xc1059ed8,
    0x629a292a, 0x367cd507,
    0x9159015a, 0x3070dd17,
    0x152fecd8, 0xf70e5939,
    0x67332667, 0xffc00b31,
    0x8eb44a87, 0x68581511,
    0xdb0c2e0d, 0x64f98fa7,
    0x47b5481d, 0xbefa4fa4 ];
}
utils.inherits(SHA384, SHA512);
module.exports = SHA384;

SHA384.blockSize = 1024;
SHA384.outSize = 384;
SHA384.hmacStrength = 192;
SHA384.padLength = 128;

SHA384.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 12), 'big');
  else
    return utils.split32(this.h.slice(0, 12), 'big');
};


/***/ }),
/* 110 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(102);
var common = __webpack_require__(103);
var assert = __webpack_require__(90);

var rotr64_hi = utils.rotr64_hi;
var rotr64_lo = utils.rotr64_lo;
var shr64_hi = utils.shr64_hi;
var shr64_lo = utils.shr64_lo;
var sum64 = utils.sum64;
var sum64_hi = utils.sum64_hi;
var sum64_lo = utils.sum64_lo;
var sum64_4_hi = utils.sum64_4_hi;
var sum64_4_lo = utils.sum64_4_lo;
var sum64_5_hi = utils.sum64_5_hi;
var sum64_5_lo = utils.sum64_5_lo;

var BlockHash = common.BlockHash;

var sha512_K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
];

function SHA512() {
  if (!(this instanceof SHA512))
    return new SHA512();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xf3bcc908,
    0xbb67ae85, 0x84caa73b,
    0x3c6ef372, 0xfe94f82b,
    0xa54ff53a, 0x5f1d36f1,
    0x510e527f, 0xade682d1,
    0x9b05688c, 0x2b3e6c1f,
    0x1f83d9ab, 0xfb41bd6b,
    0x5be0cd19, 0x137e2179 ];
  this.k = sha512_K;
  this.W = new Array(160);
}
utils.inherits(SHA512, BlockHash);
module.exports = SHA512;

SHA512.blockSize = 1024;
SHA512.outSize = 512;
SHA512.hmacStrength = 192;
SHA512.padLength = 128;

SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
  var W = this.W;

  // 32 x 32bit words
  for (var i = 0; i < 32; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i += 2) {
    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2
    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
    var c1_hi = W[i - 14];  // i - 7
    var c1_lo = W[i - 13];
    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15
    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
    var c3_hi = W[i - 32];  // i - 16
    var c3_lo = W[i - 31];

    W[i] = sum64_4_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
    W[i + 1] = sum64_4_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
  }
};

SHA512.prototype._update = function _update(msg, start) {
  this._prepareBlock(msg, start);

  var W = this.W;

  var ah = this.h[0];
  var al = this.h[1];
  var bh = this.h[2];
  var bl = this.h[3];
  var ch = this.h[4];
  var cl = this.h[5];
  var dh = this.h[6];
  var dl = this.h[7];
  var eh = this.h[8];
  var el = this.h[9];
  var fh = this.h[10];
  var fl = this.h[11];
  var gh = this.h[12];
  var gl = this.h[13];
  var hh = this.h[14];
  var hl = this.h[15];

  assert(this.k.length === W.length);
  for (var i = 0; i < W.length; i += 2) {
    var c0_hi = hh;
    var c0_lo = hl;
    var c1_hi = s1_512_hi(eh, el);
    var c1_lo = s1_512_lo(eh, el);
    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
    var c3_hi = this.k[i];
    var c3_lo = this.k[i + 1];
    var c4_hi = W[i];
    var c4_lo = W[i + 1];

    var T1_hi = sum64_5_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);
    var T1_lo = sum64_5_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);

    c0_hi = s0_512_hi(ah, al);
    c0_lo = s0_512_lo(ah, al);
    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);

    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);

    hh = gh;
    hl = gl;

    gh = fh;
    gl = fl;

    fh = eh;
    fl = el;

    eh = sum64_hi(dh, dl, T1_hi, T1_lo);
    el = sum64_lo(dl, dl, T1_hi, T1_lo);

    dh = ch;
    dl = cl;

    ch = bh;
    cl = bl;

    bh = ah;
    bl = al;

    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
  }

  sum64(this.h, 0, ah, al);
  sum64(this.h, 2, bh, bl);
  sum64(this.h, 4, ch, cl);
  sum64(this.h, 6, dh, dl);
  sum64(this.h, 8, eh, el);
  sum64(this.h, 10, fh, fl);
  sum64(this.h, 12, gh, gl);
  sum64(this.h, 14, hh, hl);
};

SHA512.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

function ch64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ ((~xh) & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function ch64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ ((~xl) & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 28);
  var c1_hi = rotr64_hi(xl, xh, 2);  // 34
  var c2_hi = rotr64_hi(xl, xh, 7);  // 39

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 28);
  var c1_lo = rotr64_lo(xl, xh, 2);  // 34
  var c2_lo = rotr64_lo(xl, xh, 7);  // 39

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 14);
  var c1_hi = rotr64_hi(xh, xl, 18);
  var c2_hi = rotr64_hi(xl, xh, 9);  // 41

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 14);
  var c1_lo = rotr64_lo(xh, xl, 18);
  var c2_lo = rotr64_lo(xl, xh, 9);  // 41

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 1);
  var c1_hi = rotr64_hi(xh, xl, 8);
  var c2_hi = shr64_hi(xh, xl, 7);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 1);
  var c1_lo = rotr64_lo(xh, xl, 8);
  var c2_lo = shr64_lo(xh, xl, 7);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 19);
  var c1_hi = rotr64_hi(xl, xh, 29);  // 61
  var c2_hi = shr64_hi(xh, xl, 6);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 19);
  var c1_lo = rotr64_lo(xl, xh, 29);  // 61
  var c2_lo = shr64_lo(xh, xl, 6);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}


/***/ }),
/* 111 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(102);
var common = __webpack_require__(103);

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_3 = utils.sum32_3;
var sum32_4 = utils.sum32_4;
var BlockHash = common.BlockHash;

function RIPEMD160() {
  if (!(this instanceof RIPEMD160))
    return new RIPEMD160();

  BlockHash.call(this);

  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];
  this.endian = 'little';
}
utils.inherits(RIPEMD160, BlockHash);
exports.ripemd160 = RIPEMD160;

RIPEMD160.blockSize = 512;
RIPEMD160.outSize = 160;
RIPEMD160.hmacStrength = 192;
RIPEMD160.padLength = 64;

RIPEMD160.prototype._update = function update(msg, start) {
  var A = this.h[0];
  var B = this.h[1];
  var C = this.h[2];
  var D = this.h[3];
  var E = this.h[4];
  var Ah = A;
  var Bh = B;
  var Ch = C;
  var Dh = D;
  var Eh = E;
  for (var j = 0; j < 80; j++) {
    var T = sum32(
      rotl32(
        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),
        s[j]),
      E);
    A = E;
    E = D;
    D = rotl32(C, 10);
    C = B;
    B = T;
    T = sum32(
      rotl32(
        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),
        sh[j]),
      Eh);
    Ah = Eh;
    Eh = Dh;
    Dh = rotl32(Ch, 10);
    Ch = Bh;
    Bh = T;
  }
  T = sum32_3(this.h[1], C, Dh);
  this.h[1] = sum32_3(this.h[2], D, Eh);
  this.h[2] = sum32_3(this.h[3], E, Ah);
  this.h[3] = sum32_3(this.h[4], A, Bh);
  this.h[4] = sum32_3(this.h[0], B, Ch);
  this.h[0] = T;
};

RIPEMD160.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'little');
  else
    return utils.split32(this.h, 'little');
};

function f(j, x, y, z) {
  if (j <= 15)
    return x ^ y ^ z;
  else if (j <= 31)
    return (x & y) | ((~x) & z);
  else if (j <= 47)
    return (x | (~y)) ^ z;
  else if (j <= 63)
    return (x & z) | (y & (~z));
  else
    return x ^ (y | (~z));
}

function K(j) {
  if (j <= 15)
    return 0x00000000;
  else if (j <= 31)
    return 0x5a827999;
  else if (j <= 47)
    return 0x6ed9eba1;
  else if (j <= 63)
    return 0x8f1bbcdc;
  else
    return 0xa953fd4e;
}

function Kh(j) {
  if (j <= 15)
    return 0x50a28be6;
  else if (j <= 31)
    return 0x5c4dd124;
  else if (j <= 47)
    return 0x6d703ef3;
  else if (j <= 63)
    return 0x7a6d76e9;
  else
    return 0x00000000;
}

var r = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
];

var rh = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
];

var s = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
];

var sh = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
];


/***/ }),
/* 112 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(102);
var assert = __webpack_require__(90);

function Hmac(hash, key, enc) {
  if (!(this instanceof Hmac))
    return new Hmac(hash, key, enc);
  this.Hash = hash;
  this.blockSize = hash.blockSize / 8;
  this.outSize = hash.outSize / 8;
  this.inner = null;
  this.outer = null;

  this._init(utils.toArray(key, enc));
}
module.exports = Hmac;

Hmac.prototype._init = function init(key) {
  // Shorten key, if needed
  if (key.length > this.blockSize)
    key = new this.Hash().update(key).digest();
  assert(key.length <= this.blockSize);

  // Add padding to key
  for (var i = key.length; i < this.blockSize; i++)
    key.push(0);

  for (i = 0; i < key.length; i++)
    key[i] ^= 0x36;
  this.inner = new this.Hash().update(key);

  // 0x36 ^ 0x5c = 0x6a
  for (i = 0; i < key.length; i++)
    key[i] ^= 0x6a;
  this.outer = new this.Hash().update(key);
};

Hmac.prototype.update = function update(msg, enc) {
  this.inner.update(msg, enc);
  return this;
};

Hmac.prototype.digest = function digest(enc) {
  this.outer.update(this.inner.digest());
  return this.outer.digest(enc);
};


/***/ }),
/* 113 */
/***/ ((module) => {

module.exports = {
  doubles: {
    step: 4,
    points: [
      [
        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',
        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821',
      ],
      [
        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',
        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf',
      ],
      [
        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',
        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695',
      ],
      [
        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',
        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9',
      ],
      [
        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',
        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36',
      ],
      [
        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',
        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f',
      ],
      [
        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',
        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999',
      ],
      [
        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',
        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09',
      ],
      [
        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',
        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d',
      ],
      [
        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',
        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088',
      ],
      [
        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',
        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d',
      ],
      [
        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',
        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8',
      ],
      [
        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',
        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a',
      ],
      [
        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',
        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453',
      ],
      [
        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',
        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160',
      ],
      [
        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',
        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0',
      ],
      [
        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',
        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6',
      ],
      [
        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',
        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589',
      ],
      [
        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',
        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17',
      ],
      [
        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',
        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda',
      ],
      [
        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',
        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd',
      ],
      [
        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',
        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2',
      ],
      [
        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',
        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6',
      ],
      [
        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',
        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f',
      ],
      [
        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',
        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01',
      ],
      [
        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',
        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3',
      ],
      [
        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',
        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f',
      ],
      [
        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',
        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7',
      ],
      [
        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',
        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78',
      ],
      [
        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',
        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1',
      ],
      [
        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',
        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150',
      ],
      [
        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',
        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82',
      ],
      [
        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',
        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc',
      ],
      [
        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',
        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b',
      ],
      [
        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',
        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51',
      ],
      [
        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',
        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45',
      ],
      [
        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',
        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120',
      ],
      [
        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',
        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84',
      ],
      [
        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',
        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d',
      ],
      [
        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',
        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d',
      ],
      [
        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',
        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8',
      ],
      [
        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',
        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8',
      ],
      [
        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',
        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac',
      ],
      [
        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',
        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f',
      ],
      [
        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',
        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962',
      ],
      [
        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',
        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907',
      ],
      [
        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',
        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec',
      ],
      [
        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',
        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d',
      ],
      [
        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',
        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414',
      ],
      [
        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',
        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd',
      ],
      [
        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',
        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0',
      ],
      [
        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',
        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811',
      ],
      [
        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',
        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1',
      ],
      [
        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',
        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c',
      ],
      [
        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',
        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73',
      ],
      [
        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',
        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd',
      ],
      [
        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',
        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405',
      ],
      [
        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',
        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589',
      ],
      [
        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',
        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e',
      ],
      [
        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',
        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27',
      ],
      [
        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',
        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1',
      ],
      [
        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',
        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482',
      ],
      [
        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',
        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945',
      ],
      [
        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',
        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573',
      ],
      [
        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',
        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82',
      ],
    ],
  },
  naf: {
    wnd: 7,
    points: [
      [
        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',
        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672',
      ],
      [
        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',
        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6',
      ],
      [
        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',
        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da',
      ],
      [
        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',
        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37',
      ],
      [
        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',
        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b',
      ],
      [
        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',
        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81',
      ],
      [
        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',
        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58',
      ],
      [
        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',
        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77',
      ],
      [
        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',
        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a',
      ],
      [
        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',
        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c',
      ],
      [
        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',
        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67',
      ],
      [
        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',
        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402',
      ],
      [
        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',
        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55',
      ],
      [
        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',
        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482',
      ],
      [
        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',
        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82',
      ],
      [
        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',
        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396',
      ],
      [
        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',
        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49',
      ],
      [
        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',
        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf',
      ],
      [
        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',
        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a',
      ],
      [
        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',
        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7',
      ],
      [
        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',
        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933',
      ],
      [
        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',
        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a',
      ],
      [
        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',
        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6',
      ],
      [
        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',
        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37',
      ],
      [
        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',
        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e',
      ],
      [
        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',
        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6',
      ],
      [
        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',
        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476',
      ],
      [
        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',
        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40',
      ],
      [
        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',
        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61',
      ],
      [
        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',
        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683',
      ],
      [
        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',
        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5',
      ],
      [
        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',
        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b',
      ],
      [
        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',
        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417',
      ],
      [
        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',
        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868',
      ],
      [
        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',
        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a',
      ],
      [
        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',
        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6',
      ],
      [
        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',
        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996',
      ],
      [
        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',
        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e',
      ],
      [
        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',
        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d',
      ],
      [
        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',
        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2',
      ],
      [
        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',
        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e',
      ],
      [
        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',
        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437',
      ],
      [
        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',
        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311',
      ],
      [
        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',
        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4',
      ],
      [
        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',
        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575',
      ],
      [
        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',
        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d',
      ],
      [
        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',
        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d',
      ],
      [
        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',
        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629',
      ],
      [
        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',
        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06',
      ],
      [
        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',
        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374',
      ],
      [
        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',
        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee',
      ],
      [
        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',
        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1',
      ],
      [
        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',
        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b',
      ],
      [
        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',
        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661',
      ],
      [
        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',
        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6',
      ],
      [
        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',
        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e',
      ],
      [
        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',
        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d',
      ],
      [
        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',
        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc',
      ],
      [
        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',
        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4',
      ],
      [
        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',
        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c',
      ],
      [
        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',
        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b',
      ],
      [
        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',
        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913',
      ],
      [
        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',
        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154',
      ],
      [
        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',
        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865',
      ],
      [
        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',
        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc',
      ],
      [
        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',
        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224',
      ],
      [
        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',
        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e',
      ],
      [
        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',
        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6',
      ],
      [
        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',
        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511',
      ],
      [
        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',
        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b',
      ],
      [
        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',
        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2',
      ],
      [
        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',
        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c',
      ],
      [
        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',
        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3',
      ],
      [
        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',
        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d',
      ],
      [
        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',
        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700',
      ],
      [
        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',
        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4',
      ],
      [
        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',
        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196',
      ],
      [
        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',
        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4',
      ],
      [
        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',
        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257',
      ],
      [
        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',
        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13',
      ],
      [
        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',
        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096',
      ],
      [
        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',
        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38',
      ],
      [
        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',
        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f',
      ],
      [
        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',
        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448',
      ],
      [
        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',
        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a',
      ],
      [
        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',
        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4',
      ],
      [
        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',
        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437',
      ],
      [
        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',
        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7',
      ],
      [
        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',
        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d',
      ],
      [
        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',
        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a',
      ],
      [
        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',
        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54',
      ],
      [
        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',
        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77',
      ],
      [
        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',
        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517',
      ],
      [
        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',
        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10',
      ],
      [
        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',
        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125',
      ],
      [
        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',
        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e',
      ],
      [
        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',
        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1',
      ],
      [
        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',
        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2',
      ],
      [
        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',
        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423',
      ],
      [
        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',
        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8',
      ],
      [
        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',
        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758',
      ],
      [
        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',
        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375',
      ],
      [
        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',
        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d',
      ],
      [
        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',
        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec',
      ],
      [
        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',
        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0',
      ],
      [
        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',
        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c',
      ],
      [
        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',
        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4',
      ],
      [
        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',
        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f',
      ],
      [
        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',
        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649',
      ],
      [
        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',
        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826',
      ],
      [
        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',
        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5',
      ],
      [
        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',
        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87',
      ],
      [
        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',
        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b',
      ],
      [
        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',
        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc',
      ],
      [
        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',
        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c',
      ],
      [
        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',
        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f',
      ],
      [
        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',
        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a',
      ],
      [
        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',
        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46',
      ],
      [
        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',
        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f',
      ],
      [
        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',
        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03',
      ],
      [
        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',
        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08',
      ],
      [
        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',
        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8',
      ],
      [
        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',
        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373',
      ],
      [
        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',
        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3',
      ],
      [
        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',
        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8',
      ],
      [
        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',
        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1',
      ],
      [
        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',
        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9',
      ],
    ],
  },
};


/***/ }),
/* 114 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var BN = __webpack_require__(88);
var HmacDRBG = __webpack_require__(115);
var utils = __webpack_require__(87);
var curves = __webpack_require__(100);
var rand = __webpack_require__(92);
var assert = utils.assert;

var KeyPair = __webpack_require__(116);
var Signature = __webpack_require__(117);

function EC(options) {
  if (!(this instanceof EC))
    return new EC(options);

  // Shortcut `elliptic.ec(curve-name)`
  if (typeof options === 'string') {
    assert(Object.prototype.hasOwnProperty.call(curves, options),
      'Unknown curve ' + options);

    options = curves[options];
  }

  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`
  if (options instanceof curves.PresetCurve)
    options = { curve: options };

  this.curve = options.curve.curve;
  this.n = this.curve.n;
  this.nh = this.n.ushrn(1);
  this.g = this.curve.g;

  // Point on curve
  this.g = options.curve.g;
  this.g.precompute(options.curve.n.bitLength() + 1);

  // Hash for function for DRBG
  this.hash = options.hash || options.curve.hash;
}
module.exports = EC;

EC.prototype.keyPair = function keyPair(options) {
  return new KeyPair(this, options);
};

EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
  return KeyPair.fromPrivate(this, priv, enc);
};

EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
  return KeyPair.fromPublic(this, pub, enc);
};

EC.prototype.genKeyPair = function genKeyPair(options) {
  if (!options)
    options = {};

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8',
    entropy: options.entropy || rand(this.hash.hmacStrength),
    entropyEnc: options.entropy && options.entropyEnc || 'utf8',
    nonce: this.n.toArray(),
  });

  var bytes = this.n.byteLength();
  var ns2 = this.n.sub(new BN(2));
  for (;;) {
    var priv = new BN(drbg.generate(bytes));
    if (priv.cmp(ns2) > 0)
      continue;

    priv.iaddn(1);
    return this.keyFromPrivate(priv);
  }
};

EC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {
  var delta = msg.byteLength() * 8 - this.n.bitLength();
  if (delta > 0)
    msg = msg.ushrn(delta);
  if (!truncOnly && msg.cmp(this.n) >= 0)
    return msg.sub(this.n);
  else
    return msg;
};

EC.prototype.sign = function sign(msg, key, enc, options) {
  if (typeof enc === 'object') {
    options = enc;
    enc = null;
  }
  if (!options)
    options = {};

  key = this.keyFromPrivate(key, enc);
  msg = this._truncateToN(new BN(msg, 16));

  // Zero-extend key to provide enough entropy
  var bytes = this.n.byteLength();
  var bkey = key.getPrivate().toArray('be', bytes);

  // Zero-extend nonce to have the same byte size as N
  var nonce = msg.toArray('be', bytes);

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    entropy: bkey,
    nonce: nonce,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8',
  });

  // Number of bytes to generate
  var ns1 = this.n.sub(new BN(1));

  for (var iter = 0; ; iter++) {
    var k = options.k ?
      options.k(iter) :
      new BN(drbg.generate(this.n.byteLength()));
    k = this._truncateToN(k, true);
    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
      continue;

    var kp = this.g.mul(k);
    if (kp.isInfinity())
      continue;

    var kpX = kp.getX();
    var r = kpX.umod(this.n);
    if (r.cmpn(0) === 0)
      continue;

    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
    s = s.umod(this.n);
    if (s.cmpn(0) === 0)
      continue;

    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |
                        (kpX.cmp(r) !== 0 ? 2 : 0);

    // Use complement of `s`, if it is > `n / 2`
    if (options.canonical && s.cmp(this.nh) > 0) {
      s = this.n.sub(s);
      recoveryParam ^= 1;
    }

    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });
  }
};

EC.prototype.verify = function verify(msg, signature, key, enc) {
  msg = this._truncateToN(new BN(msg, 16));
  key = this.keyFromPublic(key, enc);
  signature = new Signature(signature, 'hex');

  // Perform primitive values validation
  var r = signature.r;
  var s = signature.s;
  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)
    return false;
  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
    return false;

  // Validate signature
  var sinv = s.invm(this.n);
  var u1 = sinv.mul(msg).umod(this.n);
  var u2 = sinv.mul(r).umod(this.n);
  var p;

  if (!this.curve._maxwellTrick) {
    p = this.g.mulAdd(u1, key.getPublic(), u2);
    if (p.isInfinity())
      return false;

    return p.getX().umod(this.n).cmp(r) === 0;
  }

  // NOTE: Greg Maxwell's trick, inspired by:
  // https://git.io/vad3K

  p = this.g.jmulAdd(u1, key.getPublic(), u2);
  if (p.isInfinity())
    return false;

  // Compare `p.x` of Jacobian point with `r`,
  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the
  // inverse of `p.z^2`
  return p.eqXToP(r);
};

EC.prototype.recoverPubKey = function(msg, signature, j, enc) {
  assert((3 & j) === j, 'The recovery param is more than two bits');
  signature = new Signature(signature, enc);

  var n = this.n;
  var e = new BN(msg);
  var r = signature.r;
  var s = signature.s;

  // A set LSB signifies that the y-coordinate is odd
  var isYOdd = j & 1;
  var isSecondKey = j >> 1;
  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
    throw new Error('Unable to find sencond key candinate');

  // 1.1. Let x = r + jn.
  if (isSecondKey)
    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
  else
    r = this.curve.pointFromX(r, isYOdd);

  var rInv = signature.r.invm(n);
  var s1 = n.sub(e).mul(rInv).umod(n);
  var s2 = s.mul(rInv).umod(n);

  // 1.6.1 Compute Q = r^-1 (sR -  eG)
  //               Q = r^-1 (sR + -eG)
  return this.g.mulAdd(s1, r, s2);
};

EC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {
  signature = new Signature(signature, enc);
  if (signature.recoveryParam !== null)
    return signature.recoveryParam;

  for (var i = 0; i < 4; i++) {
    var Qprime;
    try {
      Qprime = this.recoverPubKey(e, signature, i);
    } catch (e) {
      continue;
    }

    if (Qprime.eq(Q))
      return i;
  }
  throw new Error('Unable to find valid recovery factor');
};


/***/ }),
/* 115 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var hash = __webpack_require__(101);
var utils = __webpack_require__(91);
var assert = __webpack_require__(90);

function HmacDRBG(options) {
  if (!(this instanceof HmacDRBG))
    return new HmacDRBG(options);
  this.hash = options.hash;
  this.predResist = !!options.predResist;

  this.outLen = this.hash.outSize;
  this.minEntropy = options.minEntropy || this.hash.hmacStrength;

  this._reseed = null;
  this.reseedInterval = null;
  this.K = null;
  this.V = null;

  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');
  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');
  var pers = utils.toArray(options.pers, options.persEnc || 'hex');
  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
  this._init(entropy, nonce, pers);
}
module.exports = HmacDRBG;

HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
  var seed = entropy.concat(nonce).concat(pers);

  this.K = new Array(this.outLen / 8);
  this.V = new Array(this.outLen / 8);
  for (var i = 0; i < this.V.length; i++) {
    this.K[i] = 0x00;
    this.V[i] = 0x01;
  }

  this._update(seed);
  this._reseed = 1;
  this.reseedInterval = 0x1000000000000;  // 2^48
};

HmacDRBG.prototype._hmac = function hmac() {
  return new hash.hmac(this.hash, this.K);
};

HmacDRBG.prototype._update = function update(seed) {
  var kmac = this._hmac()
                 .update(this.V)
                 .update([ 0x00 ]);
  if (seed)
    kmac = kmac.update(seed);
  this.K = kmac.digest();
  this.V = this._hmac().update(this.V).digest();
  if (!seed)
    return;

  this.K = this._hmac()
               .update(this.V)
               .update([ 0x01 ])
               .update(seed)
               .digest();
  this.V = this._hmac().update(this.V).digest();
};

HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
  // Optional entropy enc
  if (typeof entropyEnc !== 'string') {
    addEnc = add;
    add = entropyEnc;
    entropyEnc = null;
  }

  entropy = utils.toArray(entropy, entropyEnc);
  add = utils.toArray(add, addEnc);

  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');

  this._update(entropy.concat(add || []));
  this._reseed = 1;
};

HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
  if (this._reseed > this.reseedInterval)
    throw new Error('Reseed is required');

  // Optional encoding
  if (typeof enc !== 'string') {
    addEnc = add;
    add = enc;
    enc = null;
  }

  // Optional additional data
  if (add) {
    add = utils.toArray(add, addEnc || 'hex');
    this._update(add);
  }

  var temp = [];
  while (temp.length < len) {
    this.V = this._hmac().update(this.V).digest();
    temp = temp.concat(this.V);
  }

  var res = temp.slice(0, len);
  this._update(add);
  this._reseed++;
  return utils.encode(res, enc);
};


/***/ }),
/* 116 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var BN = __webpack_require__(88);
var utils = __webpack_require__(87);
var assert = utils.assert;

function KeyPair(ec, options) {
  this.ec = ec;
  this.priv = null;
  this.pub = null;

  // KeyPair(ec, { priv: ..., pub: ... })
  if (options.priv)
    this._importPrivate(options.priv, options.privEnc);
  if (options.pub)
    this._importPublic(options.pub, options.pubEnc);
}
module.exports = KeyPair;

KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
  if (pub instanceof KeyPair)
    return pub;

  return new KeyPair(ec, {
    pub: pub,
    pubEnc: enc,
  });
};

KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
  if (priv instanceof KeyPair)
    return priv;

  return new KeyPair(ec, {
    priv: priv,
    privEnc: enc,
  });
};

KeyPair.prototype.validate = function validate() {
  var pub = this.getPublic();

  if (pub.isInfinity())
    return { result: false, reason: 'Invalid public key' };
  if (!pub.validate())
    return { result: false, reason: 'Public key is not a point' };
  if (!pub.mul(this.ec.curve.n).isInfinity())
    return { result: false, reason: 'Public key * N != O' };

  return { result: true, reason: null };
};

KeyPair.prototype.getPublic = function getPublic(compact, enc) {
  // compact is optional argument
  if (typeof compact === 'string') {
    enc = compact;
    compact = null;
  }

  if (!this.pub)
    this.pub = this.ec.g.mul(this.priv);

  if (!enc)
    return this.pub;

  return this.pub.encode(enc, compact);
};

KeyPair.prototype.getPrivate = function getPrivate(enc) {
  if (enc === 'hex')
    return this.priv.toString(16, 2);
  else
    return this.priv;
};

KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
  this.priv = new BN(key, enc || 16);

  // Ensure that the priv won't be bigger than n, otherwise we may fail
  // in fixed multiplication method
  this.priv = this.priv.umod(this.ec.curve.n);
};

KeyPair.prototype._importPublic = function _importPublic(key, enc) {
  if (key.x || key.y) {
    // Montgomery points only have an `x` coordinate.
    // Weierstrass/Edwards points on the other hand have both `x` and
    // `y` coordinates.
    if (this.ec.curve.type === 'mont') {
      assert(key.x, 'Need x coordinate');
    } else if (this.ec.curve.type === 'short' ||
               this.ec.curve.type === 'edwards') {
      assert(key.x && key.y, 'Need both x and y coordinate');
    }
    this.pub = this.ec.curve.point(key.x, key.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(key, enc);
};

// ECDH
KeyPair.prototype.derive = function derive(pub) {
  if(!pub.validate()) {
    assert(pub.validate(), 'public point not validated');
  }
  return pub.mul(this.priv).getX();
};

// ECDSA
KeyPair.prototype.sign = function sign(msg, enc, options) {
  return this.ec.sign(msg, this, enc, options);
};

KeyPair.prototype.verify = function verify(msg, signature) {
  return this.ec.verify(msg, signature, this);
};

KeyPair.prototype.inspect = function inspect() {
  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +
         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';
};


/***/ }),
/* 117 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var BN = __webpack_require__(88);

var utils = __webpack_require__(87);
var assert = utils.assert;

function Signature(options, enc) {
  if (options instanceof Signature)
    return options;

  if (this._importDER(options, enc))
    return;

  assert(options.r && options.s, 'Signature without r or s');
  this.r = new BN(options.r, 16);
  this.s = new BN(options.s, 16);
  if (options.recoveryParam === undefined)
    this.recoveryParam = null;
  else
    this.recoveryParam = options.recoveryParam;
}
module.exports = Signature;

function Position() {
  this.place = 0;
}

function getLength(buf, p) {
  var initial = buf[p.place++];
  if (!(initial & 0x80)) {
    return initial;
  }
  var octetLen = initial & 0xf;

  // Indefinite length or overflow
  if (octetLen === 0 || octetLen > 4) {
    return false;
  }

  var val = 0;
  for (var i = 0, off = p.place; i < octetLen; i++, off++) {
    val <<= 8;
    val |= buf[off];
    val >>>= 0;
  }

  // Leading zeroes
  if (val <= 0x7f) {
    return false;
  }

  p.place = off;
  return val;
}

function rmPadding(buf) {
  var i = 0;
  var len = buf.length - 1;
  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {
    i++;
  }
  if (i === 0) {
    return buf;
  }
  return buf.slice(i);
}

Signature.prototype._importDER = function _importDER(data, enc) {
  data = utils.toArray(data, enc);
  var p = new Position();
  if (data[p.place++] !== 0x30) {
    return false;
  }
  var len = getLength(data, p);
  if (len === false) {
    return false;
  }
  if ((len + p.place) !== data.length) {
    return false;
  }
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var rlen = getLength(data, p);
  if (rlen === false) {
    return false;
  }
  var r = data.slice(p.place, rlen + p.place);
  p.place += rlen;
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var slen = getLength(data, p);
  if (slen === false) {
    return false;
  }
  if (data.length !== slen + p.place) {
    return false;
  }
  var s = data.slice(p.place, slen + p.place);
  if (r[0] === 0) {
    if (r[1] & 0x80) {
      r = r.slice(1);
    } else {
      // Leading zeroes
      return false;
    }
  }
  if (s[0] === 0) {
    if (s[1] & 0x80) {
      s = s.slice(1);
    } else {
      // Leading zeroes
      return false;
    }
  }

  this.r = new BN(r);
  this.s = new BN(s);
  this.recoveryParam = null;

  return true;
};

function constructLength(arr, len) {
  if (len < 0x80) {
    arr.push(len);
    return;
  }
  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
  arr.push(octets | 0x80);
  while (--octets) {
    arr.push((len >>> (octets << 3)) & 0xff);
  }
  arr.push(len);
}

Signature.prototype.toDER = function toDER(enc) {
  var r = this.r.toArray();
  var s = this.s.toArray();

  // Pad values
  if (r[0] & 0x80)
    r = [ 0 ].concat(r);
  // Pad values
  if (s[0] & 0x80)
    s = [ 0 ].concat(s);

  r = rmPadding(r);
  s = rmPadding(s);

  while (!s[0] && !(s[1] & 0x80)) {
    s = s.slice(1);
  }
  var arr = [ 0x02 ];
  constructLength(arr, r.length);
  arr = arr.concat(r);
  arr.push(0x02);
  constructLength(arr, s.length);
  var backHalf = arr.concat(s);
  var res = [ 0x30 ];
  constructLength(res, backHalf.length);
  res = res.concat(backHalf);
  return utils.encode(res, enc);
};


/***/ }),
/* 118 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var hash = __webpack_require__(101);
var curves = __webpack_require__(100);
var utils = __webpack_require__(87);
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var KeyPair = __webpack_require__(119);
var Signature = __webpack_require__(120);

function EDDSA(curve) {
  assert(curve === 'ed25519', 'only tested with ed25519 so far');

  if (!(this instanceof EDDSA))
    return new EDDSA(curve);

  curve = curves[curve].curve;
  this.curve = curve;
  this.g = curve.g;
  this.g.precompute(curve.n.bitLength() + 1);

  this.pointClass = curve.point().constructor;
  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);
  this.hash = hash.sha512;
}

module.exports = EDDSA;

/**
* @param {Array|String} message - message bytes
* @param {Array|String|KeyPair} secret - secret bytes or a keypair
* @returns {Signature} - signature
*/
EDDSA.prototype.sign = function sign(message, secret) {
  message = parseBytes(message);
  var key = this.keyFromSecret(secret);
  var r = this.hashInt(key.messagePrefix(), message);
  var R = this.g.mul(r);
  var Rencoded = this.encodePoint(R);
  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)
    .mul(key.priv());
  var S = r.add(s_).umod(this.curve.n);
  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });
};

/**
* @param {Array} message - message bytes
* @param {Array|String|Signature} sig - sig bytes
* @param {Array|String|Point|KeyPair} pub - public key
* @returns {Boolean} - true if public key matches sig of message
*/
EDDSA.prototype.verify = function verify(message, sig, pub) {
  message = parseBytes(message);
  sig = this.makeSignature(sig);
  var key = this.keyFromPublic(pub);
  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);
  var SG = this.g.mul(sig.S());
  var RplusAh = sig.R().add(key.pub().mul(h));
  return RplusAh.eq(SG);
};

EDDSA.prototype.hashInt = function hashInt() {
  var hash = this.hash();
  for (var i = 0; i < arguments.length; i++)
    hash.update(arguments[i]);
  return utils.intFromLE(hash.digest()).umod(this.curve.n);
};

EDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {
  return KeyPair.fromPublic(this, pub);
};

EDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {
  return KeyPair.fromSecret(this, secret);
};

EDDSA.prototype.makeSignature = function makeSignature(sig) {
  if (sig instanceof Signature)
    return sig;
  return new Signature(this, sig);
};

/**
* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2
*
* EDDSA defines methods for encoding and decoding points and integers. These are
* helper convenience methods, that pass along to utility functions implied
* parameters.
*
*/
EDDSA.prototype.encodePoint = function encodePoint(point) {
  var enc = point.getY().toArray('le', this.encodingLength);
  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;
  return enc;
};

EDDSA.prototype.decodePoint = function decodePoint(bytes) {
  bytes = utils.parseBytes(bytes);

  var lastIx = bytes.length - 1;
  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);
  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;

  var y = utils.intFromLE(normed);
  return this.curve.pointFromY(y, xIsOdd);
};

EDDSA.prototype.encodeInt = function encodeInt(num) {
  return num.toArray('le', this.encodingLength);
};

EDDSA.prototype.decodeInt = function decodeInt(bytes) {
  return utils.intFromLE(bytes);
};

EDDSA.prototype.isPoint = function isPoint(val) {
  return val instanceof this.pointClass;
};


/***/ }),
/* 119 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(87);
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var cachedProperty = utils.cachedProperty;

/**
* @param {EDDSA} eddsa - instance
* @param {Object} params - public/private key parameters
*
* @param {Array<Byte>} [params.secret] - secret seed bytes
* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)
* @param {Array<Byte>} [params.pub] - public key point encoded as bytes
*
*/
function KeyPair(eddsa, params) {
  this.eddsa = eddsa;
  this._secret = parseBytes(params.secret);
  if (eddsa.isPoint(params.pub))
    this._pub = params.pub;
  else
    this._pubBytes = parseBytes(params.pub);
}

KeyPair.fromPublic = function fromPublic(eddsa, pub) {
  if (pub instanceof KeyPair)
    return pub;
  return new KeyPair(eddsa, { pub: pub });
};

KeyPair.fromSecret = function fromSecret(eddsa, secret) {
  if (secret instanceof KeyPair)
    return secret;
  return new KeyPair(eddsa, { secret: secret });
};

KeyPair.prototype.secret = function secret() {
  return this._secret;
};

cachedProperty(KeyPair, 'pubBytes', function pubBytes() {
  return this.eddsa.encodePoint(this.pub());
});

cachedProperty(KeyPair, 'pub', function pub() {
  if (this._pubBytes)
    return this.eddsa.decodePoint(this._pubBytes);
  return this.eddsa.g.mul(this.priv());
});

cachedProperty(KeyPair, 'privBytes', function privBytes() {
  var eddsa = this.eddsa;
  var hash = this.hash();
  var lastIx = eddsa.encodingLength - 1;

  var a = hash.slice(0, eddsa.encodingLength);
  a[0] &= 248;
  a[lastIx] &= 127;
  a[lastIx] |= 64;

  return a;
});

cachedProperty(KeyPair, 'priv', function priv() {
  return this.eddsa.decodeInt(this.privBytes());
});

cachedProperty(KeyPair, 'hash', function hash() {
  return this.eddsa.hash().update(this.secret()).digest();
});

cachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {
  return this.hash().slice(this.eddsa.encodingLength);
});

KeyPair.prototype.sign = function sign(message) {
  assert(this._secret, 'KeyPair can only verify');
  return this.eddsa.sign(message, this);
};

KeyPair.prototype.verify = function verify(message, sig) {
  return this.eddsa.verify(message, sig, this);
};

KeyPair.prototype.getSecret = function getSecret(enc) {
  assert(this._secret, 'KeyPair is public only');
  return utils.encode(this.secret(), enc);
};

KeyPair.prototype.getPublic = function getPublic(enc) {
  return utils.encode(this.pubBytes(), enc);
};

module.exports = KeyPair;


/***/ }),
/* 120 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var BN = __webpack_require__(88);
var utils = __webpack_require__(87);
var assert = utils.assert;
var cachedProperty = utils.cachedProperty;
var parseBytes = utils.parseBytes;

/**
* @param {EDDSA} eddsa - eddsa instance
* @param {Array<Bytes>|Object} sig -
* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes
* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes
* @param {Array<Bytes>} [sig.Rencoded] - R point encoded
* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded
*/
function Signature(eddsa, sig) {
  this.eddsa = eddsa;

  if (typeof sig !== 'object')
    sig = parseBytes(sig);

  if (Array.isArray(sig)) {
    sig = {
      R: sig.slice(0, eddsa.encodingLength),
      S: sig.slice(eddsa.encodingLength),
    };
  }

  assert(sig.R && sig.S, 'Signature without R or S');

  if (eddsa.isPoint(sig.R))
    this._R = sig.R;
  if (sig.S instanceof BN)
    this._S = sig.S;

  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;
  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;
}

cachedProperty(Signature, 'S', function S() {
  return this.eddsa.decodeInt(this.Sencoded());
});

cachedProperty(Signature, 'R', function R() {
  return this.eddsa.decodePoint(this.Rencoded());
});

cachedProperty(Signature, 'Rencoded', function Rencoded() {
  return this.eddsa.encodePoint(this.R());
});

cachedProperty(Signature, 'Sencoded', function Sencoded() {
  return this.eddsa.encodeInt(this.S());
});

Signature.prototype.toBytes = function toBytes() {
  return this.Rencoded().concat(this.Sencoded());
};

Signature.prototype.toHex = function toHex() {
  return utils.encode(this.toBytes(), 'hex').toUpperCase();
};

module.exports = Signature;


/***/ }),
/* 121 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "bnToU8a": () => (/* binding */ bnToU8a)
/* harmony export */ });
/* harmony import */ var _is_number_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(124);
/* harmony import */ var _object_spread_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(122);
/* harmony import */ var _toBn_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(125);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0



const DEFAULT_OPTS = {
  bitLength: -1,
  isLe: true,
  isNegative: false
};

function createEmpty(byteLength, options) {
  return options.bitLength === -1 ? new Uint8Array() : new Uint8Array(byteLength);
}

function createValue(valueBn, byteLength, {
  isLe,
  isNegative
}) {
  const output = new Uint8Array(byteLength);
  const bn = isNegative ? valueBn.toTwos(byteLength * 8) : valueBn;
  output.set(bn.toArray(isLe ? 'le' : 'be', byteLength), 0);
  return output;
}
/**
 * @name bnToU8a
 * @summary Creates a Uint8Array object from a BN.
 * @description
 * `null`/`undefined`/`NaN` inputs returns an empty `Uint8Array` result. `BN` input values return the actual bytes value converted to a `Uint8Array`. Optionally convert using little-endian format if `isLE` is set.
 * @example
 * <BR>
 *
 * ```javascript
 * import { bnToU8a } from '@polkadot/util';
 *
 * bnToU8a(new BN(0x1234)); // => [0x12, 0x34]
 * ```
 */


function bnToU8a(value, arg1 = DEFAULT_OPTS, arg2) {
  const options = (0,_object_spread_js__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({
    bitLength: -1,
    isLe: true,
    isNegative: false
  }, (0,_is_number_js__WEBPACK_IMPORTED_MODULE_1__.isNumber)(arg1) ? {
    bitLength: arg1,
    isLe: arg2
  } : arg1);
  const valueBn = (0,_toBn_js__WEBPACK_IMPORTED_MODULE_2__.bnToBn)(value);
  const byteLength = options.bitLength === -1 ? Math.ceil(valueBn.bitLength() / 8) : Math.ceil((options.bitLength || 0) / 8);
  return value ? createValue(valueBn, byteLength, options) : createEmpty(byteLength, options);
}



/***/ }),
/* 122 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "objectSpread": () => (/* binding */ objectSpread)
/* harmony export */ });
/* harmony import */ var _keys_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(123);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name objectSpread
 * @summary Concats all sources into the destination
 */

function objectSpread(dest, ...sources) {
  for (let i = 0; i < sources.length; i++) {
    const src = sources[i];

    if (src) {
      const keys = (0,_keys_js__WEBPACK_IMPORTED_MODULE_0__.objectKeys)(src);

      for (let j = 0; j < keys.length; j++) {
        const key = keys[j];
        dest[key] = src[key];
      }
    }
  }

  return dest;
}

/***/ }),
/* 123 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "objectKeys": () => (/* binding */ objectKeys)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name objectKeys
 * @summary A version of Object.keys that is typed for TS
 */
function objectKeys(value) {
  return Object.keys(value);
}

/***/ }),
/* 124 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isNumber": () => (/* binding */ isNumber)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isNumber
 * @summary Tests for a JavaScript number.
 * @description
 * Checks to see if the input value is a valid number.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isNumber } from '@polkadot/util';
 *
 * console.log('isNumber', isNumber(1234)); // => true
 * ```
 */
function isNumber(value) {
  return typeof value === 'number';
}

/***/ }),
/* 125 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "bnToBn": () => (/* binding */ bnToBn)
/* harmony export */ });
/* harmony import */ var _hex_toBn_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(127);
/* harmony import */ var _is_bigInt_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(130);
/* harmony import */ var _is_hex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(126);
/* harmony import */ var _is_toBigInt_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(132);
/* harmony import */ var _is_toBn_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(131);
/* harmony import */ var _bn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(88);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0






/**
 * @name bnToBn
 * @summary Creates a BN value from a BN, bigint, string (base 10 or hex) or number input.
 * @description
 * `null` inputs returns a `0x0` result, BN values returns the value, numbers returns a BN representation.
 * @example
 * <BR>
 *
 * ```javascript
 * import BN from 'bn.js';
 * import { bnToBn } from '@polkadot/util';
 *
 * bnToBn(0x1234); // => BN(0x1234)
 * bnToBn(new BN(0x1234)); // => BN(0x1234)
 * ```
 */

function bnToBn(value) {
  return _bn_js__WEBPACK_IMPORTED_MODULE_0__.isBN(value) ? value : !value ? new _bn_js__WEBPACK_IMPORTED_MODULE_0__(0) : (0,_is_hex_js__WEBPACK_IMPORTED_MODULE_1__.isHex)(value) ? (0,_hex_toBn_js__WEBPACK_IMPORTED_MODULE_2__.hexToBn)(value.toString()) : (0,_is_bigInt_js__WEBPACK_IMPORTED_MODULE_3__.isBigInt)(value) ? new _bn_js__WEBPACK_IMPORTED_MODULE_0__(value.toString()) : (0,_is_toBn_js__WEBPACK_IMPORTED_MODULE_4__.isToBn)(value) ? value.toBn() : (0,_is_toBigInt_js__WEBPACK_IMPORTED_MODULE_5__.isToBigInt)(value) ? new _bn_js__WEBPACK_IMPORTED_MODULE_0__(value.toBigInt().toString()) : new _bn_js__WEBPACK_IMPORTED_MODULE_0__(value);
}

/***/ }),
/* 126 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "REGEX_HEX_PREFIXED": () => (/* binding */ REGEX_HEX_PREFIXED),
/* harmony export */   "REGEX_HEX_NOPREFIX": () => (/* binding */ REGEX_HEX_NOPREFIX),
/* harmony export */   "isHex": () => (/* binding */ isHex)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
const REGEX_HEX_PREFIXED = /^0x[\da-fA-F]+$/;
const REGEX_HEX_NOPREFIX = /^[\da-fA-F]+$/;
/**
 * @name isHex
 * @summary Tests for a hex string.
 * @description
 * Checks to see if the input value is a `0x` prefixed hex string. Optionally (`bitLength` !== -1) checks to see if the bitLength is correct.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isHex } from '@polkadot/util';
 *
 * isHex('0x1234'); // => true
 * isHex('0x1234', 8); // => false
 * ```
 */

function isHex(value, bitLength = -1, ignoreLength = false) {
  return typeof value === 'string' && (value === '0x' || REGEX_HEX_PREFIXED.test(value)) ? bitLength === -1 ? ignoreLength ? true : value.length % 2 === 0 : value.length === 2 + Math.ceil(bitLength / 4) : false;
}

/***/ }),
/* 127 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "hexToBn": () => (/* binding */ hexToBn)
/* harmony export */ });
/* harmony import */ var _bn_bn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(88);
/* harmony import */ var _is_boolean_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(128);
/* harmony import */ var _object_spread_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(122);
/* harmony import */ var _stripPrefix_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(129);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0




const DEFAULT_OPTS = {
  isLe: false,
  isNegative: false
};
/**
 * @name hexToBn
 * @summary Creates a BN.js object from a hex string.
 * @description
 * `null` inputs returns a `BN(0)` result. Hex input values return the actual value converted to a BN. Anything that is not a hex string (including the `0x` prefix) throws an error.
 * @param _value The value to convert
 * @param _options Options to pass while converting
 * @param _options.isLe Convert using Little Endian
 * @param _options.isNegative Convert using two's complement
 * @example
 * <BR>
 *
 * ```javascript
 * import { hexToBn } from '@polkadot/util';
 *
 * hexToBn('0x123480001f'); // => BN(0x123480001f)
 * ```
 */

function hexToBn(value, options = DEFAULT_OPTS) {
  if (!value || value === '0x') {
    return new _bn_bn_js__WEBPACK_IMPORTED_MODULE_0__(0);
  }

  const {
    isLe,
    isNegative
  } = (0,_object_spread_js__WEBPACK_IMPORTED_MODULE_1__.objectSpread)({
    isLe: false,
    isNegative: false
  }, (0,_is_boolean_js__WEBPACK_IMPORTED_MODULE_2__.isBoolean)(options) ? {
    isLe: options
  } : options);
  const stripped = (0,_stripPrefix_js__WEBPACK_IMPORTED_MODULE_3__.hexStripPrefix)(value);
  const bn = new _bn_bn_js__WEBPACK_IMPORTED_MODULE_0__(stripped, 16, isLe ? 'le' : 'be'); // fromTwos takes as parameter the number of bits, which is the hex length
  // multiplied by 4.

  return isNegative ? bn.fromTwos(stripped.length * 4) : bn;
}

/***/ }),
/* 128 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isBoolean": () => (/* binding */ isBoolean)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isBoolean
 * @summary Tests for a boolean value.
 * @description
 * Checks to see if the input value is a JavaScript boolean.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isBoolean } from '@polkadot/util';
 *
 * isBoolean(false); // => true
 * ```
 */
function isBoolean(value) {
  return typeof value === 'boolean';
}

/***/ }),
/* 129 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "hexStripPrefix": () => (/* binding */ hexStripPrefix)
/* harmony export */ });
/* harmony import */ var _is_hex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(126);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name hexStripPrefix
 * @summary Strips any leading `0x` prefix.
 * @description
 * Tests for the existence of a `0x` prefix, and returns the value without the prefix. Un-prefixed values are returned as-is.
 * @example
 * <BR>
 *
 * ```javascript
 * import { hexStripPrefix } from '@polkadot/util';
 *
 * console.log('stripped', hexStripPrefix('0x1234')); // => 1234
 * ```
 */

function hexStripPrefix(value) {
  if (!value || value === '0x') {
    return '';
  } else if (_is_hex_js__WEBPACK_IMPORTED_MODULE_0__.REGEX_HEX_PREFIXED.test(value)) {
    return value.substr(2);
  } else if (_is_hex_js__WEBPACK_IMPORTED_MODULE_0__.REGEX_HEX_NOPREFIX.test(value)) {
    return value;
  }

  throw new Error(`Expected hex value to convert, found '${value}'`);
}

/***/ }),
/* 130 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isBigInt": () => (/* binding */ isBigInt)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isBigInt
 * @summary Tests for a `BigInt` object instance.
 * @description
 * Checks to see if the input object is an instance of `BigInt`
 * @example
 * <BR>
 *
 * ```javascript
 * import { isBigInt } from '@polkadot/util';
 *
 * console.log('isBigInt', isBigInt(123_456n)); // => true
 * ```
 */
function isBigInt(value) {
  return typeof value === 'bigint' || value instanceof BigInt;
}

/***/ }),
/* 131 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isToBn": () => (/* binding */ isToBn)
/* harmony export */ });
/* harmony import */ var _function_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(81);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

function isToBn(value) {
  return !!value && (0,_function_js__WEBPACK_IMPORTED_MODULE_0__.isFunction)(value.toBn);
}

/***/ }),
/* 132 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isToBigInt": () => (/* binding */ isToBigInt)
/* harmony export */ });
/* harmony import */ var _function_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(81);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

function isToBigInt(value) {
  return !!value && (0,_function_js__WEBPACK_IMPORTED_MODULE_0__.isFunction)(value.toBigInt);
}

/***/ }),
/* 133 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BN_LE_OPTS": () => (/* binding */ BN_LE_OPTS),
/* harmony export */   "BN_LE_16_OPTS": () => (/* binding */ BN_LE_16_OPTS),
/* harmony export */   "BN_BE_32_OPTS": () => (/* binding */ BN_BE_32_OPTS),
/* harmony export */   "BN_LE_32_OPTS": () => (/* binding */ BN_LE_32_OPTS),
/* harmony export */   "BN_BE_256_OPTS": () => (/* binding */ BN_BE_256_OPTS),
/* harmony export */   "BN_LE_256_OPTS": () => (/* binding */ BN_LE_256_OPTS),
/* harmony export */   "BN_LE_512_OPTS": () => (/* binding */ BN_LE_512_OPTS)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
const BN_LE_OPTS = {
  isLe: true
};
const BN_LE_16_OPTS = {
  bitLength: 16,
  isLe: true
};
const BN_BE_32_OPTS = {
  bitLength: 32,
  isLe: false
};
const BN_LE_32_OPTS = {
  bitLength: 32,
  isLe: true
};
const BN_BE_256_OPTS = {
  bitLength: 256,
  isLe: false
};
const BN_LE_256_OPTS = {
  bitLength: 256,
  isLe: true
};
const BN_LE_512_OPTS = {
  bitLength: 512,
  isLe: true
};

/***/ }),
/* 134 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ed25519PairFromSeed": () => (/* binding */ ed25519PairFromSeed)
/* harmony export */ });
/* harmony import */ var tweetnacl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(135);
/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(137);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0


/**
 * @name ed25519PairFromSeed
 * @summary Creates a new public/secret keypair from a seed.
 * @description
 * Returns a object containing a `publicKey` & `secretKey` generated from the supplied seed.
 * @example
 * <BR>
 *
 * ```javascript
 * import { ed25519PairFromSeed } from '@polkadot/util-crypto';
 *
 * ed25519PairFromSeed(...); // => { secretKey: [...], publicKey: [...] }
 * ```
 */

function ed25519PairFromSeed(seed, onlyJs) {
  if (!onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.isReady)()) {
    const full = (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.ed25519KeypairFromSeed)(seed);
    return {
      publicKey: full.slice(32),
      secretKey: full.slice(0, 64)
    };
  }

  return tweetnacl__WEBPACK_IMPORTED_MODULE_0__.sign.keyPair.fromSeed(seed);
}

/***/ }),
/* 135 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

(function(nacl) {
'use strict';

// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.
// Public domain.
//
// Implementation derived from TweetNaCl version 20140427.
// See for details: http://tweetnacl.cr.yp.to/

var gf = function(init) {
  var i, r = new Float64Array(16);
  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];
  return r;
};

//  Pluggable, initialized in high-level API below.
var randombytes = function(/* x, n */) { throw new Error('no PRNG'); };

var _0 = new Uint8Array(16);
var _9 = new Uint8Array(32); _9[0] = 9;

var gf0 = gf(),
    gf1 = gf([1]),
    _121665 = gf([0xdb41, 1]),
    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),
    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),
    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),
    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),
    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);

function ts64(x, i, h, l) {
  x[i]   = (h >> 24) & 0xff;
  x[i+1] = (h >> 16) & 0xff;
  x[i+2] = (h >>  8) & 0xff;
  x[i+3] = h & 0xff;
  x[i+4] = (l >> 24)  & 0xff;
  x[i+5] = (l >> 16)  & 0xff;
  x[i+6] = (l >>  8)  & 0xff;
  x[i+7] = l & 0xff;
}

function vn(x, xi, y, yi, n) {
  var i,d = 0;
  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];
  return (1 & ((d - 1) >>> 8)) - 1;
}

function crypto_verify_16(x, xi, y, yi) {
  return vn(x,xi,y,yi,16);
}

function crypto_verify_32(x, xi, y, yi) {
  return vn(x,xi,y,yi,32);
}

function core_salsa20(o, p, k, c) {
  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,
      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,
      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,
      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,
      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,
      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,
      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,
      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,
      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,
      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,
      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,
      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,
      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,
      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,
      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,
      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;

  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,
      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,
      x15 = j15, u;

  for (var i = 0; i < 20; i += 2) {
    u = x0 + x12 | 0;
    x4 ^= u<<7 | u>>>(32-7);
    u = x4 + x0 | 0;
    x8 ^= u<<9 | u>>>(32-9);
    u = x8 + x4 | 0;
    x12 ^= u<<13 | u>>>(32-13);
    u = x12 + x8 | 0;
    x0 ^= u<<18 | u>>>(32-18);

    u = x5 + x1 | 0;
    x9 ^= u<<7 | u>>>(32-7);
    u = x9 + x5 | 0;
    x13 ^= u<<9 | u>>>(32-9);
    u = x13 + x9 | 0;
    x1 ^= u<<13 | u>>>(32-13);
    u = x1 + x13 | 0;
    x5 ^= u<<18 | u>>>(32-18);

    u = x10 + x6 | 0;
    x14 ^= u<<7 | u>>>(32-7);
    u = x14 + x10 | 0;
    x2 ^= u<<9 | u>>>(32-9);
    u = x2 + x14 | 0;
    x6 ^= u<<13 | u>>>(32-13);
    u = x6 + x2 | 0;
    x10 ^= u<<18 | u>>>(32-18);

    u = x15 + x11 | 0;
    x3 ^= u<<7 | u>>>(32-7);
    u = x3 + x15 | 0;
    x7 ^= u<<9 | u>>>(32-9);
    u = x7 + x3 | 0;
    x11 ^= u<<13 | u>>>(32-13);
    u = x11 + x7 | 0;
    x15 ^= u<<18 | u>>>(32-18);

    u = x0 + x3 | 0;
    x1 ^= u<<7 | u>>>(32-7);
    u = x1 + x0 | 0;
    x2 ^= u<<9 | u>>>(32-9);
    u = x2 + x1 | 0;
    x3 ^= u<<13 | u>>>(32-13);
    u = x3 + x2 | 0;
    x0 ^= u<<18 | u>>>(32-18);

    u = x5 + x4 | 0;
    x6 ^= u<<7 | u>>>(32-7);
    u = x6 + x5 | 0;
    x7 ^= u<<9 | u>>>(32-9);
    u = x7 + x6 | 0;
    x4 ^= u<<13 | u>>>(32-13);
    u = x4 + x7 | 0;
    x5 ^= u<<18 | u>>>(32-18);

    u = x10 + x9 | 0;
    x11 ^= u<<7 | u>>>(32-7);
    u = x11 + x10 | 0;
    x8 ^= u<<9 | u>>>(32-9);
    u = x8 + x11 | 0;
    x9 ^= u<<13 | u>>>(32-13);
    u = x9 + x8 | 0;
    x10 ^= u<<18 | u>>>(32-18);

    u = x15 + x14 | 0;
    x12 ^= u<<7 | u>>>(32-7);
    u = x12 + x15 | 0;
    x13 ^= u<<9 | u>>>(32-9);
    u = x13 + x12 | 0;
    x14 ^= u<<13 | u>>>(32-13);
    u = x14 + x13 | 0;
    x15 ^= u<<18 | u>>>(32-18);
  }
   x0 =  x0 +  j0 | 0;
   x1 =  x1 +  j1 | 0;
   x2 =  x2 +  j2 | 0;
   x3 =  x3 +  j3 | 0;
   x4 =  x4 +  j4 | 0;
   x5 =  x5 +  j5 | 0;
   x6 =  x6 +  j6 | 0;
   x7 =  x7 +  j7 | 0;
   x8 =  x8 +  j8 | 0;
   x9 =  x9 +  j9 | 0;
  x10 = x10 + j10 | 0;
  x11 = x11 + j11 | 0;
  x12 = x12 + j12 | 0;
  x13 = x13 + j13 | 0;
  x14 = x14 + j14 | 0;
  x15 = x15 + j15 | 0;

  o[ 0] = x0 >>>  0 & 0xff;
  o[ 1] = x0 >>>  8 & 0xff;
  o[ 2] = x0 >>> 16 & 0xff;
  o[ 3] = x0 >>> 24 & 0xff;

  o[ 4] = x1 >>>  0 & 0xff;
  o[ 5] = x1 >>>  8 & 0xff;
  o[ 6] = x1 >>> 16 & 0xff;
  o[ 7] = x1 >>> 24 & 0xff;

  o[ 8] = x2 >>>  0 & 0xff;
  o[ 9] = x2 >>>  8 & 0xff;
  o[10] = x2 >>> 16 & 0xff;
  o[11] = x2 >>> 24 & 0xff;

  o[12] = x3 >>>  0 & 0xff;
  o[13] = x3 >>>  8 & 0xff;
  o[14] = x3 >>> 16 & 0xff;
  o[15] = x3 >>> 24 & 0xff;

  o[16] = x4 >>>  0 & 0xff;
  o[17] = x4 >>>  8 & 0xff;
  o[18] = x4 >>> 16 & 0xff;
  o[19] = x4 >>> 24 & 0xff;

  o[20] = x5 >>>  0 & 0xff;
  o[21] = x5 >>>  8 & 0xff;
  o[22] = x5 >>> 16 & 0xff;
  o[23] = x5 >>> 24 & 0xff;

  o[24] = x6 >>>  0 & 0xff;
  o[25] = x6 >>>  8 & 0xff;
  o[26] = x6 >>> 16 & 0xff;
  o[27] = x6 >>> 24 & 0xff;

  o[28] = x7 >>>  0 & 0xff;
  o[29] = x7 >>>  8 & 0xff;
  o[30] = x7 >>> 16 & 0xff;
  o[31] = x7 >>> 24 & 0xff;

  o[32] = x8 >>>  0 & 0xff;
  o[33] = x8 >>>  8 & 0xff;
  o[34] = x8 >>> 16 & 0xff;
  o[35] = x8 >>> 24 & 0xff;

  o[36] = x9 >>>  0 & 0xff;
  o[37] = x9 >>>  8 & 0xff;
  o[38] = x9 >>> 16 & 0xff;
  o[39] = x9 >>> 24 & 0xff;

  o[40] = x10 >>>  0 & 0xff;
  o[41] = x10 >>>  8 & 0xff;
  o[42] = x10 >>> 16 & 0xff;
  o[43] = x10 >>> 24 & 0xff;

  o[44] = x11 >>>  0 & 0xff;
  o[45] = x11 >>>  8 & 0xff;
  o[46] = x11 >>> 16 & 0xff;
  o[47] = x11 >>> 24 & 0xff;

  o[48] = x12 >>>  0 & 0xff;
  o[49] = x12 >>>  8 & 0xff;
  o[50] = x12 >>> 16 & 0xff;
  o[51] = x12 >>> 24 & 0xff;

  o[52] = x13 >>>  0 & 0xff;
  o[53] = x13 >>>  8 & 0xff;
  o[54] = x13 >>> 16 & 0xff;
  o[55] = x13 >>> 24 & 0xff;

  o[56] = x14 >>>  0 & 0xff;
  o[57] = x14 >>>  8 & 0xff;
  o[58] = x14 >>> 16 & 0xff;
  o[59] = x14 >>> 24 & 0xff;

  o[60] = x15 >>>  0 & 0xff;
  o[61] = x15 >>>  8 & 0xff;
  o[62] = x15 >>> 16 & 0xff;
  o[63] = x15 >>> 24 & 0xff;
}

function core_hsalsa20(o,p,k,c) {
  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,
      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,
      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,
      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,
      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,
      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,
      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,
      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,
      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,
      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,
      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,
      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,
      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,
      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,
      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,
      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;

  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,
      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,
      x15 = j15, u;

  for (var i = 0; i < 20; i += 2) {
    u = x0 + x12 | 0;
    x4 ^= u<<7 | u>>>(32-7);
    u = x4 + x0 | 0;
    x8 ^= u<<9 | u>>>(32-9);
    u = x8 + x4 | 0;
    x12 ^= u<<13 | u>>>(32-13);
    u = x12 + x8 | 0;
    x0 ^= u<<18 | u>>>(32-18);

    u = x5 + x1 | 0;
    x9 ^= u<<7 | u>>>(32-7);
    u = x9 + x5 | 0;
    x13 ^= u<<9 | u>>>(32-9);
    u = x13 + x9 | 0;
    x1 ^= u<<13 | u>>>(32-13);
    u = x1 + x13 | 0;
    x5 ^= u<<18 | u>>>(32-18);

    u = x10 + x6 | 0;
    x14 ^= u<<7 | u>>>(32-7);
    u = x14 + x10 | 0;
    x2 ^= u<<9 | u>>>(32-9);
    u = x2 + x14 | 0;
    x6 ^= u<<13 | u>>>(32-13);
    u = x6 + x2 | 0;
    x10 ^= u<<18 | u>>>(32-18);

    u = x15 + x11 | 0;
    x3 ^= u<<7 | u>>>(32-7);
    u = x3 + x15 | 0;
    x7 ^= u<<9 | u>>>(32-9);
    u = x7 + x3 | 0;
    x11 ^= u<<13 | u>>>(32-13);
    u = x11 + x7 | 0;
    x15 ^= u<<18 | u>>>(32-18);

    u = x0 + x3 | 0;
    x1 ^= u<<7 | u>>>(32-7);
    u = x1 + x0 | 0;
    x2 ^= u<<9 | u>>>(32-9);
    u = x2 + x1 | 0;
    x3 ^= u<<13 | u>>>(32-13);
    u = x3 + x2 | 0;
    x0 ^= u<<18 | u>>>(32-18);

    u = x5 + x4 | 0;
    x6 ^= u<<7 | u>>>(32-7);
    u = x6 + x5 | 0;
    x7 ^= u<<9 | u>>>(32-9);
    u = x7 + x6 | 0;
    x4 ^= u<<13 | u>>>(32-13);
    u = x4 + x7 | 0;
    x5 ^= u<<18 | u>>>(32-18);

    u = x10 + x9 | 0;
    x11 ^= u<<7 | u>>>(32-7);
    u = x11 + x10 | 0;
    x8 ^= u<<9 | u>>>(32-9);
    u = x8 + x11 | 0;
    x9 ^= u<<13 | u>>>(32-13);
    u = x9 + x8 | 0;
    x10 ^= u<<18 | u>>>(32-18);

    u = x15 + x14 | 0;
    x12 ^= u<<7 | u>>>(32-7);
    u = x12 + x15 | 0;
    x13 ^= u<<9 | u>>>(32-9);
    u = x13 + x12 | 0;
    x14 ^= u<<13 | u>>>(32-13);
    u = x14 + x13 | 0;
    x15 ^= u<<18 | u>>>(32-18);
  }

  o[ 0] = x0 >>>  0 & 0xff;
  o[ 1] = x0 >>>  8 & 0xff;
  o[ 2] = x0 >>> 16 & 0xff;
  o[ 3] = x0 >>> 24 & 0xff;

  o[ 4] = x5 >>>  0 & 0xff;
  o[ 5] = x5 >>>  8 & 0xff;
  o[ 6] = x5 >>> 16 & 0xff;
  o[ 7] = x5 >>> 24 & 0xff;

  o[ 8] = x10 >>>  0 & 0xff;
  o[ 9] = x10 >>>  8 & 0xff;
  o[10] = x10 >>> 16 & 0xff;
  o[11] = x10 >>> 24 & 0xff;

  o[12] = x15 >>>  0 & 0xff;
  o[13] = x15 >>>  8 & 0xff;
  o[14] = x15 >>> 16 & 0xff;
  o[15] = x15 >>> 24 & 0xff;

  o[16] = x6 >>>  0 & 0xff;
  o[17] = x6 >>>  8 & 0xff;
  o[18] = x6 >>> 16 & 0xff;
  o[19] = x6 >>> 24 & 0xff;

  o[20] = x7 >>>  0 & 0xff;
  o[21] = x7 >>>  8 & 0xff;
  o[22] = x7 >>> 16 & 0xff;
  o[23] = x7 >>> 24 & 0xff;

  o[24] = x8 >>>  0 & 0xff;
  o[25] = x8 >>>  8 & 0xff;
  o[26] = x8 >>> 16 & 0xff;
  o[27] = x8 >>> 24 & 0xff;

  o[28] = x9 >>>  0 & 0xff;
  o[29] = x9 >>>  8 & 0xff;
  o[30] = x9 >>> 16 & 0xff;
  o[31] = x9 >>> 24 & 0xff;
}

function crypto_core_salsa20(out,inp,k,c) {
  core_salsa20(out,inp,k,c);
}

function crypto_core_hsalsa20(out,inp,k,c) {
  core_hsalsa20(out,inp,k,c);
}

var sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);
            // "expand 32-byte k"

function crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {
  var z = new Uint8Array(16), x = new Uint8Array(64);
  var u, i;
  for (i = 0; i < 16; i++) z[i] = 0;
  for (i = 0; i < 8; i++) z[i] = n[i];
  while (b >= 64) {
    crypto_core_salsa20(x,z,k,sigma);
    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];
    u = 1;
    for (i = 8; i < 16; i++) {
      u = u + (z[i] & 0xff) | 0;
      z[i] = u & 0xff;
      u >>>= 8;
    }
    b -= 64;
    cpos += 64;
    mpos += 64;
  }
  if (b > 0) {
    crypto_core_salsa20(x,z,k,sigma);
    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];
  }
  return 0;
}

function crypto_stream_salsa20(c,cpos,b,n,k) {
  var z = new Uint8Array(16), x = new Uint8Array(64);
  var u, i;
  for (i = 0; i < 16; i++) z[i] = 0;
  for (i = 0; i < 8; i++) z[i] = n[i];
  while (b >= 64) {
    crypto_core_salsa20(x,z,k,sigma);
    for (i = 0; i < 64; i++) c[cpos+i] = x[i];
    u = 1;
    for (i = 8; i < 16; i++) {
      u = u + (z[i] & 0xff) | 0;
      z[i] = u & 0xff;
      u >>>= 8;
    }
    b -= 64;
    cpos += 64;
  }
  if (b > 0) {
    crypto_core_salsa20(x,z,k,sigma);
    for (i = 0; i < b; i++) c[cpos+i] = x[i];
  }
  return 0;
}

function crypto_stream(c,cpos,d,n,k) {
  var s = new Uint8Array(32);
  crypto_core_hsalsa20(s,n,k,sigma);
  var sn = new Uint8Array(8);
  for (var i = 0; i < 8; i++) sn[i] = n[i+16];
  return crypto_stream_salsa20(c,cpos,d,sn,s);
}

function crypto_stream_xor(c,cpos,m,mpos,d,n,k) {
  var s = new Uint8Array(32);
  crypto_core_hsalsa20(s,n,k,sigma);
  var sn = new Uint8Array(8);
  for (var i = 0; i < 8; i++) sn[i] = n[i+16];
  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);
}

/*
* Port of Andrew Moon's Poly1305-donna-16. Public domain.
* https://github.com/floodyberry/poly1305-donna
*/

var poly1305 = function(key) {
  this.buffer = new Uint8Array(16);
  this.r = new Uint16Array(10);
  this.h = new Uint16Array(10);
  this.pad = new Uint16Array(8);
  this.leftover = 0;
  this.fin = 0;

  var t0, t1, t2, t3, t4, t5, t6, t7;

  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;
  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;
  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;
  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;
  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;
  this.r[5] = ((t4 >>>  1)) & 0x1ffe;
  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;
  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;
  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;
  this.r[9] = ((t7 >>>  5)) & 0x007f;

  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;
  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;
  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;
  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;
  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;
  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;
  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;
  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;
};

poly1305.prototype.blocks = function(m, mpos, bytes) {
  var hibit = this.fin ? 0 : (1 << 11);
  var t0, t1, t2, t3, t4, t5, t6, t7, c;
  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;

  var h0 = this.h[0],
      h1 = this.h[1],
      h2 = this.h[2],
      h3 = this.h[3],
      h4 = this.h[4],
      h5 = this.h[5],
      h6 = this.h[6],
      h7 = this.h[7],
      h8 = this.h[8],
      h9 = this.h[9];

  var r0 = this.r[0],
      r1 = this.r[1],
      r2 = this.r[2],
      r3 = this.r[3],
      r4 = this.r[4],
      r5 = this.r[5],
      r6 = this.r[6],
      r7 = this.r[7],
      r8 = this.r[8],
      r9 = this.r[9];

  while (bytes >= 16) {
    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;
    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;
    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;
    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;
    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;
    h5 += ((t4 >>>  1)) & 0x1fff;
    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;
    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;
    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;
    h9 += ((t7 >>> 5)) | hibit;

    c = 0;

    d0 = c;
    d0 += h0 * r0;
    d0 += h1 * (5 * r9);
    d0 += h2 * (5 * r8);
    d0 += h3 * (5 * r7);
    d0 += h4 * (5 * r6);
    c = (d0 >>> 13); d0 &= 0x1fff;
    d0 += h5 * (5 * r5);
    d0 += h6 * (5 * r4);
    d0 += h7 * (5 * r3);
    d0 += h8 * (5 * r2);
    d0 += h9 * (5 * r1);
    c += (d0 >>> 13); d0 &= 0x1fff;

    d1 = c;
    d1 += h0 * r1;
    d1 += h1 * r0;
    d1 += h2 * (5 * r9);
    d1 += h3 * (5 * r8);
    d1 += h4 * (5 * r7);
    c = (d1 >>> 13); d1 &= 0x1fff;
    d1 += h5 * (5 * r6);
    d1 += h6 * (5 * r5);
    d1 += h7 * (5 * r4);
    d1 += h8 * (5 * r3);
    d1 += h9 * (5 * r2);
    c += (d1 >>> 13); d1 &= 0x1fff;

    d2 = c;
    d2 += h0 * r2;
    d2 += h1 * r1;
    d2 += h2 * r0;
    d2 += h3 * (5 * r9);
    d2 += h4 * (5 * r8);
    c = (d2 >>> 13); d2 &= 0x1fff;
    d2 += h5 * (5 * r7);
    d2 += h6 * (5 * r6);
    d2 += h7 * (5 * r5);
    d2 += h8 * (5 * r4);
    d2 += h9 * (5 * r3);
    c += (d2 >>> 13); d2 &= 0x1fff;

    d3 = c;
    d3 += h0 * r3;
    d3 += h1 * r2;
    d3 += h2 * r1;
    d3 += h3 * r0;
    d3 += h4 * (5 * r9);
    c = (d3 >>> 13); d3 &= 0x1fff;
    d3 += h5 * (5 * r8);
    d3 += h6 * (5 * r7);
    d3 += h7 * (5 * r6);
    d3 += h8 * (5 * r5);
    d3 += h9 * (5 * r4);
    c += (d3 >>> 13); d3 &= 0x1fff;

    d4 = c;
    d4 += h0 * r4;
    d4 += h1 * r3;
    d4 += h2 * r2;
    d4 += h3 * r1;
    d4 += h4 * r0;
    c = (d4 >>> 13); d4 &= 0x1fff;
    d4 += h5 * (5 * r9);
    d4 += h6 * (5 * r8);
    d4 += h7 * (5 * r7);
    d4 += h8 * (5 * r6);
    d4 += h9 * (5 * r5);
    c += (d4 >>> 13); d4 &= 0x1fff;

    d5 = c;
    d5 += h0 * r5;
    d5 += h1 * r4;
    d5 += h2 * r3;
    d5 += h3 * r2;
    d5 += h4 * r1;
    c = (d5 >>> 13); d5 &= 0x1fff;
    d5 += h5 * r0;
    d5 += h6 * (5 * r9);
    d5 += h7 * (5 * r8);
    d5 += h8 * (5 * r7);
    d5 += h9 * (5 * r6);
    c += (d5 >>> 13); d5 &= 0x1fff;

    d6 = c;
    d6 += h0 * r6;
    d6 += h1 * r5;
    d6 += h2 * r4;
    d6 += h3 * r3;
    d6 += h4 * r2;
    c = (d6 >>> 13); d6 &= 0x1fff;
    d6 += h5 * r1;
    d6 += h6 * r0;
    d6 += h7 * (5 * r9);
    d6 += h8 * (5 * r8);
    d6 += h9 * (5 * r7);
    c += (d6 >>> 13); d6 &= 0x1fff;

    d7 = c;
    d7 += h0 * r7;
    d7 += h1 * r6;
    d7 += h2 * r5;
    d7 += h3 * r4;
    d7 += h4 * r3;
    c = (d7 >>> 13); d7 &= 0x1fff;
    d7 += h5 * r2;
    d7 += h6 * r1;
    d7 += h7 * r0;
    d7 += h8 * (5 * r9);
    d7 += h9 * (5 * r8);
    c += (d7 >>> 13); d7 &= 0x1fff;

    d8 = c;
    d8 += h0 * r8;
    d8 += h1 * r7;
    d8 += h2 * r6;
    d8 += h3 * r5;
    d8 += h4 * r4;
    c = (d8 >>> 13); d8 &= 0x1fff;
    d8 += h5 * r3;
    d8 += h6 * r2;
    d8 += h7 * r1;
    d8 += h8 * r0;
    d8 += h9 * (5 * r9);
    c += (d8 >>> 13); d8 &= 0x1fff;

    d9 = c;
    d9 += h0 * r9;
    d9 += h1 * r8;
    d9 += h2 * r7;
    d9 += h3 * r6;
    d9 += h4 * r5;
    c = (d9 >>> 13); d9 &= 0x1fff;
    d9 += h5 * r4;
    d9 += h6 * r3;
    d9 += h7 * r2;
    d9 += h8 * r1;
    d9 += h9 * r0;
    c += (d9 >>> 13); d9 &= 0x1fff;

    c = (((c << 2) + c)) | 0;
    c = (c + d0) | 0;
    d0 = c & 0x1fff;
    c = (c >>> 13);
    d1 += c;

    h0 = d0;
    h1 = d1;
    h2 = d2;
    h3 = d3;
    h4 = d4;
    h5 = d5;
    h6 = d6;
    h7 = d7;
    h8 = d8;
    h9 = d9;

    mpos += 16;
    bytes -= 16;
  }
  this.h[0] = h0;
  this.h[1] = h1;
  this.h[2] = h2;
  this.h[3] = h3;
  this.h[4] = h4;
  this.h[5] = h5;
  this.h[6] = h6;
  this.h[7] = h7;
  this.h[8] = h8;
  this.h[9] = h9;
};

poly1305.prototype.finish = function(mac, macpos) {
  var g = new Uint16Array(10);
  var c, mask, f, i;

  if (this.leftover) {
    i = this.leftover;
    this.buffer[i++] = 1;
    for (; i < 16; i++) this.buffer[i] = 0;
    this.fin = 1;
    this.blocks(this.buffer, 0, 16);
  }

  c = this.h[1] >>> 13;
  this.h[1] &= 0x1fff;
  for (i = 2; i < 10; i++) {
    this.h[i] += c;
    c = this.h[i] >>> 13;
    this.h[i] &= 0x1fff;
  }
  this.h[0] += (c * 5);
  c = this.h[0] >>> 13;
  this.h[0] &= 0x1fff;
  this.h[1] += c;
  c = this.h[1] >>> 13;
  this.h[1] &= 0x1fff;
  this.h[2] += c;

  g[0] = this.h[0] + 5;
  c = g[0] >>> 13;
  g[0] &= 0x1fff;
  for (i = 1; i < 10; i++) {
    g[i] = this.h[i] + c;
    c = g[i] >>> 13;
    g[i] &= 0x1fff;
  }
  g[9] -= (1 << 13);

  mask = (c ^ 1) - 1;
  for (i = 0; i < 10; i++) g[i] &= mask;
  mask = ~mask;
  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];

  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;
  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;
  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;
  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;
  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;
  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;
  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;
  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;

  f = this.h[0] + this.pad[0];
  this.h[0] = f & 0xffff;
  for (i = 1; i < 8; i++) {
    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;
    this.h[i] = f & 0xffff;
  }

  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;
  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;
  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;
  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;
  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;
  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;
  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;
  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;
  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;
  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;
  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;
  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;
  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;
  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;
  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;
  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;
};

poly1305.prototype.update = function(m, mpos, bytes) {
  var i, want;

  if (this.leftover) {
    want = (16 - this.leftover);
    if (want > bytes)
      want = bytes;
    for (i = 0; i < want; i++)
      this.buffer[this.leftover + i] = m[mpos+i];
    bytes -= want;
    mpos += want;
    this.leftover += want;
    if (this.leftover < 16)
      return;
    this.blocks(this.buffer, 0, 16);
    this.leftover = 0;
  }

  if (bytes >= 16) {
    want = bytes - (bytes % 16);
    this.blocks(m, mpos, want);
    mpos += want;
    bytes -= want;
  }

  if (bytes) {
    for (i = 0; i < bytes; i++)
      this.buffer[this.leftover + i] = m[mpos+i];
    this.leftover += bytes;
  }
};

function crypto_onetimeauth(out, outpos, m, mpos, n, k) {
  var s = new poly1305(k);
  s.update(m, mpos, n);
  s.finish(out, outpos);
  return 0;
}

function crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {
  var x = new Uint8Array(16);
  crypto_onetimeauth(x,0,m,mpos,n,k);
  return crypto_verify_16(h,hpos,x,0);
}

function crypto_secretbox(c,m,d,n,k) {
  var i;
  if (d < 32) return -1;
  crypto_stream_xor(c,0,m,0,d,n,k);
  crypto_onetimeauth(c, 16, c, 32, d - 32, c);
  for (i = 0; i < 16; i++) c[i] = 0;
  return 0;
}

function crypto_secretbox_open(m,c,d,n,k) {
  var i;
  var x = new Uint8Array(32);
  if (d < 32) return -1;
  crypto_stream(x,0,32,n,k);
  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;
  crypto_stream_xor(m,0,c,0,d,n,k);
  for (i = 0; i < 32; i++) m[i] = 0;
  return 0;
}

function set25519(r, a) {
  var i;
  for (i = 0; i < 16; i++) r[i] = a[i]|0;
}

function car25519(o) {
  var i, v, c = 1;
  for (i = 0; i < 16; i++) {
    v = o[i] + c + 65535;
    c = Math.floor(v / 65536);
    o[i] = v - c * 65536;
  }
  o[0] += c-1 + 37 * (c-1);
}

function sel25519(p, q, b) {
  var t, c = ~(b-1);
  for (var i = 0; i < 16; i++) {
    t = c & (p[i] ^ q[i]);
    p[i] ^= t;
    q[i] ^= t;
  }
}

function pack25519(o, n) {
  var i, j, b;
  var m = gf(), t = gf();
  for (i = 0; i < 16; i++) t[i] = n[i];
  car25519(t);
  car25519(t);
  car25519(t);
  for (j = 0; j < 2; j++) {
    m[0] = t[0] - 0xffed;
    for (i = 1; i < 15; i++) {
      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);
      m[i-1] &= 0xffff;
    }
    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);
    b = (m[15]>>16) & 1;
    m[14] &= 0xffff;
    sel25519(t, m, 1-b);
  }
  for (i = 0; i < 16; i++) {
    o[2*i] = t[i] & 0xff;
    o[2*i+1] = t[i]>>8;
  }
}

function neq25519(a, b) {
  var c = new Uint8Array(32), d = new Uint8Array(32);
  pack25519(c, a);
  pack25519(d, b);
  return crypto_verify_32(c, 0, d, 0);
}

function par25519(a) {
  var d = new Uint8Array(32);
  pack25519(d, a);
  return d[0] & 1;
}

function unpack25519(o, n) {
  var i;
  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);
  o[15] &= 0x7fff;
}

function A(o, a, b) {
  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];
}

function Z(o, a, b) {
  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];
}

function M(o, a, b) {
  var v, c,
     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,
     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,
    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,
    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,
    b0 = b[0],
    b1 = b[1],
    b2 = b[2],
    b3 = b[3],
    b4 = b[4],
    b5 = b[5],
    b6 = b[6],
    b7 = b[7],
    b8 = b[8],
    b9 = b[9],
    b10 = b[10],
    b11 = b[11],
    b12 = b[12],
    b13 = b[13],
    b14 = b[14],
    b15 = b[15];

  v = a[0];
  t0 += v * b0;
  t1 += v * b1;
  t2 += v * b2;
  t3 += v * b3;
  t4 += v * b4;
  t5 += v * b5;
  t6 += v * b6;
  t7 += v * b7;
  t8 += v * b8;
  t9 += v * b9;
  t10 += v * b10;
  t11 += v * b11;
  t12 += v * b12;
  t13 += v * b13;
  t14 += v * b14;
  t15 += v * b15;
  v = a[1];
  t1 += v * b0;
  t2 += v * b1;
  t3 += v * b2;
  t4 += v * b3;
  t5 += v * b4;
  t6 += v * b5;
  t7 += v * b6;
  t8 += v * b7;
  t9 += v * b8;
  t10 += v * b9;
  t11 += v * b10;
  t12 += v * b11;
  t13 += v * b12;
  t14 += v * b13;
  t15 += v * b14;
  t16 += v * b15;
  v = a[2];
  t2 += v * b0;
  t3 += v * b1;
  t4 += v * b2;
  t5 += v * b3;
  t6 += v * b4;
  t7 += v * b5;
  t8 += v * b6;
  t9 += v * b7;
  t10 += v * b8;
  t11 += v * b9;
  t12 += v * b10;
  t13 += v * b11;
  t14 += v * b12;
  t15 += v * b13;
  t16 += v * b14;
  t17 += v * b15;
  v = a[3];
  t3 += v * b0;
  t4 += v * b1;
  t5 += v * b2;
  t6 += v * b3;
  t7 += v * b4;
  t8 += v * b5;
  t9 += v * b6;
  t10 += v * b7;
  t11 += v * b8;
  t12 += v * b9;
  t13 += v * b10;
  t14 += v * b11;
  t15 += v * b12;
  t16 += v * b13;
  t17 += v * b14;
  t18 += v * b15;
  v = a[4];
  t4 += v * b0;
  t5 += v * b1;
  t6 += v * b2;
  t7 += v * b3;
  t8 += v * b4;
  t9 += v * b5;
  t10 += v * b6;
  t11 += v * b7;
  t12 += v * b8;
  t13 += v * b9;
  t14 += v * b10;
  t15 += v * b11;
  t16 += v * b12;
  t17 += v * b13;
  t18 += v * b14;
  t19 += v * b15;
  v = a[5];
  t5 += v * b0;
  t6 += v * b1;
  t7 += v * b2;
  t8 += v * b3;
  t9 += v * b4;
  t10 += v * b5;
  t11 += v * b6;
  t12 += v * b7;
  t13 += v * b8;
  t14 += v * b9;
  t15 += v * b10;
  t16 += v * b11;
  t17 += v * b12;
  t18 += v * b13;
  t19 += v * b14;
  t20 += v * b15;
  v = a[6];
  t6 += v * b0;
  t7 += v * b1;
  t8 += v * b2;
  t9 += v * b3;
  t10 += v * b4;
  t11 += v * b5;
  t12 += v * b6;
  t13 += v * b7;
  t14 += v * b8;
  t15 += v * b9;
  t16 += v * b10;
  t17 += v * b11;
  t18 += v * b12;
  t19 += v * b13;
  t20 += v * b14;
  t21 += v * b15;
  v = a[7];
  t7 += v * b0;
  t8 += v * b1;
  t9 += v * b2;
  t10 += v * b3;
  t11 += v * b4;
  t12 += v * b5;
  t13 += v * b6;
  t14 += v * b7;
  t15 += v * b8;
  t16 += v * b9;
  t17 += v * b10;
  t18 += v * b11;
  t19 += v * b12;
  t20 += v * b13;
  t21 += v * b14;
  t22 += v * b15;
  v = a[8];
  t8 += v * b0;
  t9 += v * b1;
  t10 += v * b2;
  t11 += v * b3;
  t12 += v * b4;
  t13 += v * b5;
  t14 += v * b6;
  t15 += v * b7;
  t16 += v * b8;
  t17 += v * b9;
  t18 += v * b10;
  t19 += v * b11;
  t20 += v * b12;
  t21 += v * b13;
  t22 += v * b14;
  t23 += v * b15;
  v = a[9];
  t9 += v * b0;
  t10 += v * b1;
  t11 += v * b2;
  t12 += v * b3;
  t13 += v * b4;
  t14 += v * b5;
  t15 += v * b6;
  t16 += v * b7;
  t17 += v * b8;
  t18 += v * b9;
  t19 += v * b10;
  t20 += v * b11;
  t21 += v * b12;
  t22 += v * b13;
  t23 += v * b14;
  t24 += v * b15;
  v = a[10];
  t10 += v * b0;
  t11 += v * b1;
  t12 += v * b2;
  t13 += v * b3;
  t14 += v * b4;
  t15 += v * b5;
  t16 += v * b6;
  t17 += v * b7;
  t18 += v * b8;
  t19 += v * b9;
  t20 += v * b10;
  t21 += v * b11;
  t22 += v * b12;
  t23 += v * b13;
  t24 += v * b14;
  t25 += v * b15;
  v = a[11];
  t11 += v * b0;
  t12 += v * b1;
  t13 += v * b2;
  t14 += v * b3;
  t15 += v * b4;
  t16 += v * b5;
  t17 += v * b6;
  t18 += v * b7;
  t19 += v * b8;
  t20 += v * b9;
  t21 += v * b10;
  t22 += v * b11;
  t23 += v * b12;
  t24 += v * b13;
  t25 += v * b14;
  t26 += v * b15;
  v = a[12];
  t12 += v * b0;
  t13 += v * b1;
  t14 += v * b2;
  t15 += v * b3;
  t16 += v * b4;
  t17 += v * b5;
  t18 += v * b6;
  t19 += v * b7;
  t20 += v * b8;
  t21 += v * b9;
  t22 += v * b10;
  t23 += v * b11;
  t24 += v * b12;
  t25 += v * b13;
  t26 += v * b14;
  t27 += v * b15;
  v = a[13];
  t13 += v * b0;
  t14 += v * b1;
  t15 += v * b2;
  t16 += v * b3;
  t17 += v * b4;
  t18 += v * b5;
  t19 += v * b6;
  t20 += v * b7;
  t21 += v * b8;
  t22 += v * b9;
  t23 += v * b10;
  t24 += v * b11;
  t25 += v * b12;
  t26 += v * b13;
  t27 += v * b14;
  t28 += v * b15;
  v = a[14];
  t14 += v * b0;
  t15 += v * b1;
  t16 += v * b2;
  t17 += v * b3;
  t18 += v * b4;
  t19 += v * b5;
  t20 += v * b6;
  t21 += v * b7;
  t22 += v * b8;
  t23 += v * b9;
  t24 += v * b10;
  t25 += v * b11;
  t26 += v * b12;
  t27 += v * b13;
  t28 += v * b14;
  t29 += v * b15;
  v = a[15];
  t15 += v * b0;
  t16 += v * b1;
  t17 += v * b2;
  t18 += v * b3;
  t19 += v * b4;
  t20 += v * b5;
  t21 += v * b6;
  t22 += v * b7;
  t23 += v * b8;
  t24 += v * b9;
  t25 += v * b10;
  t26 += v * b11;
  t27 += v * b12;
  t28 += v * b13;
  t29 += v * b14;
  t30 += v * b15;

  t0  += 38 * t16;
  t1  += 38 * t17;
  t2  += 38 * t18;
  t3  += 38 * t19;
  t4  += 38 * t20;
  t5  += 38 * t21;
  t6  += 38 * t22;
  t7  += 38 * t23;
  t8  += 38 * t24;
  t9  += 38 * t25;
  t10 += 38 * t26;
  t11 += 38 * t27;
  t12 += 38 * t28;
  t13 += 38 * t29;
  t14 += 38 * t30;
  // t15 left as is

  // first car
  c = 1;
  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;
  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;
  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;
  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;
  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;
  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;
  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;
  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;
  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;
  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;
  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;
  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;
  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;
  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;
  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;
  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;
  t0 += c-1 + 37 * (c-1);

  // second car
  c = 1;
  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;
  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;
  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;
  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;
  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;
  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;
  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;
  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;
  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;
  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;
  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;
  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;
  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;
  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;
  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;
  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;
  t0 += c-1 + 37 * (c-1);

  o[ 0] = t0;
  o[ 1] = t1;
  o[ 2] = t2;
  o[ 3] = t3;
  o[ 4] = t4;
  o[ 5] = t5;
  o[ 6] = t6;
  o[ 7] = t7;
  o[ 8] = t8;
  o[ 9] = t9;
  o[10] = t10;
  o[11] = t11;
  o[12] = t12;
  o[13] = t13;
  o[14] = t14;
  o[15] = t15;
}

function S(o, a) {
  M(o, a, a);
}

function inv25519(o, i) {
  var c = gf();
  var a;
  for (a = 0; a < 16; a++) c[a] = i[a];
  for (a = 253; a >= 0; a--) {
    S(c, c);
    if(a !== 2 && a !== 4) M(c, c, i);
  }
  for (a = 0; a < 16; a++) o[a] = c[a];
}

function pow2523(o, i) {
  var c = gf();
  var a;
  for (a = 0; a < 16; a++) c[a] = i[a];
  for (a = 250; a >= 0; a--) {
      S(c, c);
      if(a !== 1) M(c, c, i);
  }
  for (a = 0; a < 16; a++) o[a] = c[a];
}

function crypto_scalarmult(q, n, p) {
  var z = new Uint8Array(32);
  var x = new Float64Array(80), r, i;
  var a = gf(), b = gf(), c = gf(),
      d = gf(), e = gf(), f = gf();
  for (i = 0; i < 31; i++) z[i] = n[i];
  z[31]=(n[31]&127)|64;
  z[0]&=248;
  unpack25519(x,p);
  for (i = 0; i < 16; i++) {
    b[i]=x[i];
    d[i]=a[i]=c[i]=0;
  }
  a[0]=d[0]=1;
  for (i=254; i>=0; --i) {
    r=(z[i>>>3]>>>(i&7))&1;
    sel25519(a,b,r);
    sel25519(c,d,r);
    A(e,a,c);
    Z(a,a,c);
    A(c,b,d);
    Z(b,b,d);
    S(d,e);
    S(f,a);
    M(a,c,a);
    M(c,b,e);
    A(e,a,c);
    Z(a,a,c);
    S(b,a);
    Z(c,d,f);
    M(a,c,_121665);
    A(a,a,d);
    M(c,c,a);
    M(a,d,f);
    M(d,b,x);
    S(b,e);
    sel25519(a,b,r);
    sel25519(c,d,r);
  }
  for (i = 0; i < 16; i++) {
    x[i+16]=a[i];
    x[i+32]=c[i];
    x[i+48]=b[i];
    x[i+64]=d[i];
  }
  var x32 = x.subarray(32);
  var x16 = x.subarray(16);
  inv25519(x32,x32);
  M(x16,x16,x32);
  pack25519(q,x16);
  return 0;
}

function crypto_scalarmult_base(q, n) {
  return crypto_scalarmult(q, n, _9);
}

function crypto_box_keypair(y, x) {
  randombytes(x, 32);
  return crypto_scalarmult_base(y, x);
}

function crypto_box_beforenm(k, y, x) {
  var s = new Uint8Array(32);
  crypto_scalarmult(s, x, y);
  return crypto_core_hsalsa20(k, _0, s, sigma);
}

var crypto_box_afternm = crypto_secretbox;
var crypto_box_open_afternm = crypto_secretbox_open;

function crypto_box(c, m, d, n, y, x) {
  var k = new Uint8Array(32);
  crypto_box_beforenm(k, y, x);
  return crypto_box_afternm(c, m, d, n, k);
}

function crypto_box_open(m, c, d, n, y, x) {
  var k = new Uint8Array(32);
  crypto_box_beforenm(k, y, x);
  return crypto_box_open_afternm(m, c, d, n, k);
}

var K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
];

function crypto_hashblocks_hl(hh, hl, m, n) {
  var wh = new Int32Array(16), wl = new Int32Array(16),
      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,
      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,
      th, tl, i, j, h, l, a, b, c, d;

  var ah0 = hh[0],
      ah1 = hh[1],
      ah2 = hh[2],
      ah3 = hh[3],
      ah4 = hh[4],
      ah5 = hh[5],
      ah6 = hh[6],
      ah7 = hh[7],

      al0 = hl[0],
      al1 = hl[1],
      al2 = hl[2],
      al3 = hl[3],
      al4 = hl[4],
      al5 = hl[5],
      al6 = hl[6],
      al7 = hl[7];

  var pos = 0;
  while (n >= 128) {
    for (i = 0; i < 16; i++) {
      j = 8 * i + pos;
      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];
      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];
    }
    for (i = 0; i < 80; i++) {
      bh0 = ah0;
      bh1 = ah1;
      bh2 = ah2;
      bh3 = ah3;
      bh4 = ah4;
      bh5 = ah5;
      bh6 = ah6;
      bh7 = ah7;

      bl0 = al0;
      bl1 = al1;
      bl2 = al2;
      bl3 = al3;
      bl4 = al4;
      bl5 = al5;
      bl6 = al6;
      bl7 = al7;

      // add
      h = ah7;
      l = al7;

      a = l & 0xffff; b = l >>> 16;
      c = h & 0xffff; d = h >>> 16;

      // Sigma1
      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));
      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      // Ch
      h = (ah4 & ah5) ^ (~ah4 & ah6);
      l = (al4 & al5) ^ (~al4 & al6);

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      // K
      h = K[i*2];
      l = K[i*2+1];

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      // w
      h = wh[i%16];
      l = wl[i%16];

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;

      th = c & 0xffff | d << 16;
      tl = a & 0xffff | b << 16;

      // add
      h = th;
      l = tl;

      a = l & 0xffff; b = l >>> 16;
      c = h & 0xffff; d = h >>> 16;

      // Sigma0
      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));
      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      // Maj
      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);
      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;

      bh7 = (c & 0xffff) | (d << 16);
      bl7 = (a & 0xffff) | (b << 16);

      // add
      h = bh3;
      l = bl3;

      a = l & 0xffff; b = l >>> 16;
      c = h & 0xffff; d = h >>> 16;

      h = th;
      l = tl;

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;

      bh3 = (c & 0xffff) | (d << 16);
      bl3 = (a & 0xffff) | (b << 16);

      ah1 = bh0;
      ah2 = bh1;
      ah3 = bh2;
      ah4 = bh3;
      ah5 = bh4;
      ah6 = bh5;
      ah7 = bh6;
      ah0 = bh7;

      al1 = bl0;
      al2 = bl1;
      al3 = bl2;
      al4 = bl3;
      al5 = bl4;
      al6 = bl5;
      al7 = bl6;
      al0 = bl7;

      if (i%16 === 15) {
        for (j = 0; j < 16; j++) {
          // add
          h = wh[j];
          l = wl[j];

          a = l & 0xffff; b = l >>> 16;
          c = h & 0xffff; d = h >>> 16;

          h = wh[(j+9)%16];
          l = wl[(j+9)%16];

          a += l & 0xffff; b += l >>> 16;
          c += h & 0xffff; d += h >>> 16;

          // sigma0
          th = wh[(j+1)%16];
          tl = wl[(j+1)%16];
          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);
          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));

          a += l & 0xffff; b += l >>> 16;
          c += h & 0xffff; d += h >>> 16;

          // sigma1
          th = wh[(j+14)%16];
          tl = wl[(j+14)%16];
          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);
          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));

          a += l & 0xffff; b += l >>> 16;
          c += h & 0xffff; d += h >>> 16;

          b += a >>> 16;
          c += b >>> 16;
          d += c >>> 16;

          wh[j] = (c & 0xffff) | (d << 16);
          wl[j] = (a & 0xffff) | (b << 16);
        }
      }
    }

    // add
    h = ah0;
    l = al0;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[0];
    l = hl[0];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[0] = ah0 = (c & 0xffff) | (d << 16);
    hl[0] = al0 = (a & 0xffff) | (b << 16);

    h = ah1;
    l = al1;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[1];
    l = hl[1];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[1] = ah1 = (c & 0xffff) | (d << 16);
    hl[1] = al1 = (a & 0xffff) | (b << 16);

    h = ah2;
    l = al2;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[2];
    l = hl[2];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[2] = ah2 = (c & 0xffff) | (d << 16);
    hl[2] = al2 = (a & 0xffff) | (b << 16);

    h = ah3;
    l = al3;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[3];
    l = hl[3];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[3] = ah3 = (c & 0xffff) | (d << 16);
    hl[3] = al3 = (a & 0xffff) | (b << 16);

    h = ah4;
    l = al4;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[4];
    l = hl[4];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[4] = ah4 = (c & 0xffff) | (d << 16);
    hl[4] = al4 = (a & 0xffff) | (b << 16);

    h = ah5;
    l = al5;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[5];
    l = hl[5];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[5] = ah5 = (c & 0xffff) | (d << 16);
    hl[5] = al5 = (a & 0xffff) | (b << 16);

    h = ah6;
    l = al6;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[6];
    l = hl[6];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[6] = ah6 = (c & 0xffff) | (d << 16);
    hl[6] = al6 = (a & 0xffff) | (b << 16);

    h = ah7;
    l = al7;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[7];
    l = hl[7];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[7] = ah7 = (c & 0xffff) | (d << 16);
    hl[7] = al7 = (a & 0xffff) | (b << 16);

    pos += 128;
    n -= 128;
  }

  return n;
}

function crypto_hash(out, m, n) {
  var hh = new Int32Array(8),
      hl = new Int32Array(8),
      x = new Uint8Array(256),
      i, b = n;

  hh[0] = 0x6a09e667;
  hh[1] = 0xbb67ae85;
  hh[2] = 0x3c6ef372;
  hh[3] = 0xa54ff53a;
  hh[4] = 0x510e527f;
  hh[5] = 0x9b05688c;
  hh[6] = 0x1f83d9ab;
  hh[7] = 0x5be0cd19;

  hl[0] = 0xf3bcc908;
  hl[1] = 0x84caa73b;
  hl[2] = 0xfe94f82b;
  hl[3] = 0x5f1d36f1;
  hl[4] = 0xade682d1;
  hl[5] = 0x2b3e6c1f;
  hl[6] = 0xfb41bd6b;
  hl[7] = 0x137e2179;

  crypto_hashblocks_hl(hh, hl, m, n);
  n %= 128;

  for (i = 0; i < n; i++) x[i] = m[b-n+i];
  x[n] = 128;

  n = 256-128*(n<112?1:0);
  x[n-9] = 0;
  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);
  crypto_hashblocks_hl(hh, hl, x, n);

  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);

  return 0;
}

function add(p, q) {
  var a = gf(), b = gf(), c = gf(),
      d = gf(), e = gf(), f = gf(),
      g = gf(), h = gf(), t = gf();

  Z(a, p[1], p[0]);
  Z(t, q[1], q[0]);
  M(a, a, t);
  A(b, p[0], p[1]);
  A(t, q[0], q[1]);
  M(b, b, t);
  M(c, p[3], q[3]);
  M(c, c, D2);
  M(d, p[2], q[2]);
  A(d, d, d);
  Z(e, b, a);
  Z(f, d, c);
  A(g, d, c);
  A(h, b, a);

  M(p[0], e, f);
  M(p[1], h, g);
  M(p[2], g, f);
  M(p[3], e, h);
}

function cswap(p, q, b) {
  var i;
  for (i = 0; i < 4; i++) {
    sel25519(p[i], q[i], b);
  }
}

function pack(r, p) {
  var tx = gf(), ty = gf(), zi = gf();
  inv25519(zi, p[2]);
  M(tx, p[0], zi);
  M(ty, p[1], zi);
  pack25519(r, ty);
  r[31] ^= par25519(tx) << 7;
}

function scalarmult(p, q, s) {
  var b, i;
  set25519(p[0], gf0);
  set25519(p[1], gf1);
  set25519(p[2], gf1);
  set25519(p[3], gf0);
  for (i = 255; i >= 0; --i) {
    b = (s[(i/8)|0] >> (i&7)) & 1;
    cswap(p, q, b);
    add(q, p);
    add(p, p);
    cswap(p, q, b);
  }
}

function scalarbase(p, s) {
  var q = [gf(), gf(), gf(), gf()];
  set25519(q[0], X);
  set25519(q[1], Y);
  set25519(q[2], gf1);
  M(q[3], X, Y);
  scalarmult(p, q, s);
}

function crypto_sign_keypair(pk, sk, seeded) {
  var d = new Uint8Array(64);
  var p = [gf(), gf(), gf(), gf()];
  var i;

  if (!seeded) randombytes(sk, 32);
  crypto_hash(d, sk, 32);
  d[0] &= 248;
  d[31] &= 127;
  d[31] |= 64;

  scalarbase(p, d);
  pack(pk, p);

  for (i = 0; i < 32; i++) sk[i+32] = pk[i];
  return 0;
}

var L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);

function modL(r, x) {
  var carry, i, j, k;
  for (i = 63; i >= 32; --i) {
    carry = 0;
    for (j = i - 32, k = i - 12; j < k; ++j) {
      x[j] += carry - 16 * x[i] * L[j - (i - 32)];
      carry = Math.floor((x[j] + 128) / 256);
      x[j] -= carry * 256;
    }
    x[j] += carry;
    x[i] = 0;
  }
  carry = 0;
  for (j = 0; j < 32; j++) {
    x[j] += carry - (x[31] >> 4) * L[j];
    carry = x[j] >> 8;
    x[j] &= 255;
  }
  for (j = 0; j < 32; j++) x[j] -= carry * L[j];
  for (i = 0; i < 32; i++) {
    x[i+1] += x[i] >> 8;
    r[i] = x[i] & 255;
  }
}

function reduce(r) {
  var x = new Float64Array(64), i;
  for (i = 0; i < 64; i++) x[i] = r[i];
  for (i = 0; i < 64; i++) r[i] = 0;
  modL(r, x);
}

// Note: difference from C - smlen returned, not passed as argument.
function crypto_sign(sm, m, n, sk) {
  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);
  var i, j, x = new Float64Array(64);
  var p = [gf(), gf(), gf(), gf()];

  crypto_hash(d, sk, 32);
  d[0] &= 248;
  d[31] &= 127;
  d[31] |= 64;

  var smlen = n + 64;
  for (i = 0; i < n; i++) sm[64 + i] = m[i];
  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];

  crypto_hash(r, sm.subarray(32), n+32);
  reduce(r);
  scalarbase(p, r);
  pack(sm, p);

  for (i = 32; i < 64; i++) sm[i] = sk[i];
  crypto_hash(h, sm, n + 64);
  reduce(h);

  for (i = 0; i < 64; i++) x[i] = 0;
  for (i = 0; i < 32; i++) x[i] = r[i];
  for (i = 0; i < 32; i++) {
    for (j = 0; j < 32; j++) {
      x[i+j] += h[i] * d[j];
    }
  }

  modL(sm.subarray(32), x);
  return smlen;
}

function unpackneg(r, p) {
  var t = gf(), chk = gf(), num = gf(),
      den = gf(), den2 = gf(), den4 = gf(),
      den6 = gf();

  set25519(r[2], gf1);
  unpack25519(r[1], p);
  S(num, r[1]);
  M(den, num, D);
  Z(num, num, r[2]);
  A(den, r[2], den);

  S(den2, den);
  S(den4, den2);
  M(den6, den4, den2);
  M(t, den6, num);
  M(t, t, den);

  pow2523(t, t);
  M(t, t, num);
  M(t, t, den);
  M(t, t, den);
  M(r[0], t, den);

  S(chk, r[0]);
  M(chk, chk, den);
  if (neq25519(chk, num)) M(r[0], r[0], I);

  S(chk, r[0]);
  M(chk, chk, den);
  if (neq25519(chk, num)) return -1;

  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);

  M(r[3], r[0], r[1]);
  return 0;
}

function crypto_sign_open(m, sm, n, pk) {
  var i;
  var t = new Uint8Array(32), h = new Uint8Array(64);
  var p = [gf(), gf(), gf(), gf()],
      q = [gf(), gf(), gf(), gf()];

  if (n < 64) return -1;

  if (unpackneg(q, pk)) return -1;

  for (i = 0; i < n; i++) m[i] = sm[i];
  for (i = 0; i < 32; i++) m[i+32] = pk[i];
  crypto_hash(h, m, n);
  reduce(h);
  scalarmult(p, q, h);

  scalarbase(q, sm.subarray(32));
  add(p, q);
  pack(t, p);

  n -= 64;
  if (crypto_verify_32(sm, 0, t, 0)) {
    for (i = 0; i < n; i++) m[i] = 0;
    return -1;
  }

  for (i = 0; i < n; i++) m[i] = sm[i + 64];
  return n;
}

var crypto_secretbox_KEYBYTES = 32,
    crypto_secretbox_NONCEBYTES = 24,
    crypto_secretbox_ZEROBYTES = 32,
    crypto_secretbox_BOXZEROBYTES = 16,
    crypto_scalarmult_BYTES = 32,
    crypto_scalarmult_SCALARBYTES = 32,
    crypto_box_PUBLICKEYBYTES = 32,
    crypto_box_SECRETKEYBYTES = 32,
    crypto_box_BEFORENMBYTES = 32,
    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,
    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,
    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,
    crypto_sign_BYTES = 64,
    crypto_sign_PUBLICKEYBYTES = 32,
    crypto_sign_SECRETKEYBYTES = 64,
    crypto_sign_SEEDBYTES = 32,
    crypto_hash_BYTES = 64;

nacl.lowlevel = {
  crypto_core_hsalsa20: crypto_core_hsalsa20,
  crypto_stream_xor: crypto_stream_xor,
  crypto_stream: crypto_stream,
  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,
  crypto_stream_salsa20: crypto_stream_salsa20,
  crypto_onetimeauth: crypto_onetimeauth,
  crypto_onetimeauth_verify: crypto_onetimeauth_verify,
  crypto_verify_16: crypto_verify_16,
  crypto_verify_32: crypto_verify_32,
  crypto_secretbox: crypto_secretbox,
  crypto_secretbox_open: crypto_secretbox_open,
  crypto_scalarmult: crypto_scalarmult,
  crypto_scalarmult_base: crypto_scalarmult_base,
  crypto_box_beforenm: crypto_box_beforenm,
  crypto_box_afternm: crypto_box_afternm,
  crypto_box: crypto_box,
  crypto_box_open: crypto_box_open,
  crypto_box_keypair: crypto_box_keypair,
  crypto_hash: crypto_hash,
  crypto_sign: crypto_sign,
  crypto_sign_keypair: crypto_sign_keypair,
  crypto_sign_open: crypto_sign_open,

  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,
  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,
  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,
  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,
  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,
  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,
  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,
  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,
  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,
  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,
  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,
  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,
  crypto_sign_BYTES: crypto_sign_BYTES,
  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,
  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,
  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,
  crypto_hash_BYTES: crypto_hash_BYTES,

  gf: gf,
  D: D,
  L: L,
  pack25519: pack25519,
  unpack25519: unpack25519,
  M: M,
  A: A,
  S: S,
  Z: Z,
  pow2523: pow2523,
  add: add,
  set25519: set25519,
  modL: modL,
  scalarmult: scalarmult,
  scalarbase: scalarbase,
};

/* High-level API */

function checkLengths(k, n) {
  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');
  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');
}

function checkBoxLengths(pk, sk) {
  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');
  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');
}

function checkArrayTypes() {
  for (var i = 0; i < arguments.length; i++) {
    if (!(arguments[i] instanceof Uint8Array))
      throw new TypeError('unexpected type, use Uint8Array');
  }
}

function cleanup(arr) {
  for (var i = 0; i < arr.length; i++) arr[i] = 0;
}

nacl.randomBytes = function(n) {
  var b = new Uint8Array(n);
  randombytes(b, n);
  return b;
};

nacl.secretbox = function(msg, nonce, key) {
  checkArrayTypes(msg, nonce, key);
  checkLengths(key, nonce);
  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);
  var c = new Uint8Array(m.length);
  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];
  crypto_secretbox(c, m, m.length, nonce, key);
  return c.subarray(crypto_secretbox_BOXZEROBYTES);
};

nacl.secretbox.open = function(box, nonce, key) {
  checkArrayTypes(box, nonce, key);
  checkLengths(key, nonce);
  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);
  var m = new Uint8Array(c.length);
  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];
  if (c.length < 32) return null;
  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;
  return m.subarray(crypto_secretbox_ZEROBYTES);
};

nacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;
nacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;
nacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;

nacl.scalarMult = function(n, p) {
  checkArrayTypes(n, p);
  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');
  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');
  var q = new Uint8Array(crypto_scalarmult_BYTES);
  crypto_scalarmult(q, n, p);
  return q;
};

nacl.scalarMult.base = function(n) {
  checkArrayTypes(n);
  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');
  var q = new Uint8Array(crypto_scalarmult_BYTES);
  crypto_scalarmult_base(q, n);
  return q;
};

nacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;
nacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;

nacl.box = function(msg, nonce, publicKey, secretKey) {
  var k = nacl.box.before(publicKey, secretKey);
  return nacl.secretbox(msg, nonce, k);
};

nacl.box.before = function(publicKey, secretKey) {
  checkArrayTypes(publicKey, secretKey);
  checkBoxLengths(publicKey, secretKey);
  var k = new Uint8Array(crypto_box_BEFORENMBYTES);
  crypto_box_beforenm(k, publicKey, secretKey);
  return k;
};

nacl.box.after = nacl.secretbox;

nacl.box.open = function(msg, nonce, publicKey, secretKey) {
  var k = nacl.box.before(publicKey, secretKey);
  return nacl.secretbox.open(msg, nonce, k);
};

nacl.box.open.after = nacl.secretbox.open;

nacl.box.keyPair = function() {
  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);
  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);
  crypto_box_keypair(pk, sk);
  return {publicKey: pk, secretKey: sk};
};

nacl.box.keyPair.fromSecretKey = function(secretKey) {
  checkArrayTypes(secretKey);
  if (secretKey.length !== crypto_box_SECRETKEYBYTES)
    throw new Error('bad secret key size');
  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);
  crypto_scalarmult_base(pk, secretKey);
  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};
};

nacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;
nacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;
nacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;
nacl.box.nonceLength = crypto_box_NONCEBYTES;
nacl.box.overheadLength = nacl.secretbox.overheadLength;

nacl.sign = function(msg, secretKey) {
  checkArrayTypes(msg, secretKey);
  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)
    throw new Error('bad secret key size');
  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);
  crypto_sign(signedMsg, msg, msg.length, secretKey);
  return signedMsg;
};

nacl.sign.open = function(signedMsg, publicKey) {
  checkArrayTypes(signedMsg, publicKey);
  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)
    throw new Error('bad public key size');
  var tmp = new Uint8Array(signedMsg.length);
  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);
  if (mlen < 0) return null;
  var m = new Uint8Array(mlen);
  for (var i = 0; i < m.length; i++) m[i] = tmp[i];
  return m;
};

nacl.sign.detached = function(msg, secretKey) {
  var signedMsg = nacl.sign(msg, secretKey);
  var sig = new Uint8Array(crypto_sign_BYTES);
  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];
  return sig;
};

nacl.sign.detached.verify = function(msg, sig, publicKey) {
  checkArrayTypes(msg, sig, publicKey);
  if (sig.length !== crypto_sign_BYTES)
    throw new Error('bad signature size');
  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)
    throw new Error('bad public key size');
  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);
  var m = new Uint8Array(crypto_sign_BYTES + msg.length);
  var i;
  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];
  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];
  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);
};

nacl.sign.keyPair = function() {
  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);
  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);
  crypto_sign_keypair(pk, sk);
  return {publicKey: pk, secretKey: sk};
};

nacl.sign.keyPair.fromSecretKey = function(secretKey) {
  checkArrayTypes(secretKey);
  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)
    throw new Error('bad secret key size');
  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);
  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];
  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};
};

nacl.sign.keyPair.fromSeed = function(seed) {
  checkArrayTypes(seed);
  if (seed.length !== crypto_sign_SEEDBYTES)
    throw new Error('bad seed size');
  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);
  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);
  for (var i = 0; i < 32; i++) sk[i] = seed[i];
  crypto_sign_keypair(pk, sk, true);
  return {publicKey: pk, secretKey: sk};
};

nacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;
nacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;
nacl.sign.seedLength = crypto_sign_SEEDBYTES;
nacl.sign.signatureLength = crypto_sign_BYTES;

nacl.hash = function(msg) {
  checkArrayTypes(msg);
  var h = new Uint8Array(crypto_hash_BYTES);
  crypto_hash(h, msg, msg.length);
  return h;
};

nacl.hash.hashLength = crypto_hash_BYTES;

nacl.verify = function(x, y) {
  checkArrayTypes(x, y);
  // Zero length arguments are considered not equal.
  if (x.length === 0 || y.length === 0) return false;
  if (x.length !== y.length) return false;
  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;
};

nacl.setPRNG = function(fn) {
  randombytes = fn;
};

(function() {
  // Initialize PRNG if environment provides CSPRNG.
  // If not, methods calling randombytes will throw.
  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;
  if (crypto && crypto.getRandomValues) {
    // Browsers.
    var QUOTA = 65536;
    nacl.setPRNG(function(x, n) {
      var i, v = new Uint8Array(n);
      for (i = 0; i < n; i += QUOTA) {
        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));
      }
      for (i = 0; i < n; i++) x[i] = v[i];
      cleanup(v);
    });
  } else if (true) {
    // Node.js.
    crypto = __webpack_require__(136);
    if (crypto && crypto.randomBytes) {
      nacl.setPRNG(function(x, n) {
        var i, v = crypto.randomBytes(n);
        for (i = 0; i < n; i++) x[i] = v[i];
        cleanup(v);
      });
    }
  }
})();

})( true && module.exports ? module.exports : (self.nacl = self.nacl || {}));


/***/ }),
/* 136 */
/***/ (() => {

/* (ignored) */

/***/ }),
/* 137 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),
/* harmony export */   "bip39Generate": () => (/* binding */ bip39Generate),
/* harmony export */   "bip39ToEntropy": () => (/* binding */ bip39ToEntropy),
/* harmony export */   "bip39ToMiniSecret": () => (/* binding */ bip39ToMiniSecret),
/* harmony export */   "bip39ToSeed": () => (/* binding */ bip39ToSeed),
/* harmony export */   "bip39Validate": () => (/* binding */ bip39Validate),
/* harmony export */   "ed25519KeypairFromSeed": () => (/* binding */ ed25519KeypairFromSeed),
/* harmony export */   "ed25519Sign": () => (/* binding */ ed25519Sign),
/* harmony export */   "ed25519Verify": () => (/* binding */ ed25519Verify),
/* harmony export */   "sr25519DeriveKeypairHard": () => (/* binding */ sr25519DeriveKeypairHard),
/* harmony export */   "sr25519DeriveKeypairSoft": () => (/* binding */ sr25519DeriveKeypairSoft),
/* harmony export */   "sr25519DerivePublicSoft": () => (/* binding */ sr25519DerivePublicSoft),
/* harmony export */   "sr25519KeypairFromSeed": () => (/* binding */ sr25519KeypairFromSeed),
/* harmony export */   "sr25519Sign": () => (/* binding */ sr25519Sign),
/* harmony export */   "sr25519Verify": () => (/* binding */ sr25519Verify),
/* harmony export */   "sr25519Agree": () => (/* binding */ sr25519Agree),
/* harmony export */   "vrfSign": () => (/* binding */ vrfSign),
/* harmony export */   "vrfVerify": () => (/* binding */ vrfVerify),
/* harmony export */   "blake2b": () => (/* binding */ blake2b),
/* harmony export */   "hmacSha256": () => (/* binding */ hmacSha256),
/* harmony export */   "hmacSha512": () => (/* binding */ hmacSha512),
/* harmony export */   "keccak256": () => (/* binding */ keccak256),
/* harmony export */   "keccak512": () => (/* binding */ keccak512),
/* harmony export */   "pbkdf2": () => (/* binding */ pbkdf2),
/* harmony export */   "scrypt": () => (/* binding */ scrypt),
/* harmony export */   "sha256": () => (/* binding */ sha256),
/* harmony export */   "sha512": () => (/* binding */ sha512),
/* harmony export */   "twox": () => (/* binding */ twox),
/* harmony export */   "isReady": () => (/* binding */ isReady),
/* harmony export */   "waitReady": () => (/* binding */ waitReady)
/* harmony export */ });
/* harmony import */ var _polkadot_wasm_crypto_asmjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(161);
/* harmony import */ var _polkadot_wasm_crypto_wasm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(156);
/* harmony import */ var _bridge_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(139);
/* harmony import */ var _imports_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(162);
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(138);
// Copyright 2019-2021 @polkadot/wasm-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0





const PTR_VEC = 8;
const wasmPromise = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.initWasm)(_polkadot_wasm_crypto_wasm__WEBPACK_IMPORTED_MODULE_2__.wasmBytes, _polkadot_wasm_crypto_asmjs__WEBPACK_IMPORTED_MODULE_3__.asmJsInit, _imports_js__WEBPACK_IMPORTED_MODULE_4__).catch(() => null);
const bip39Generate = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => words => {
  wasm.ext_bip39_generate(PTR_VEC, words);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultString)();
});
const bip39ToEntropy = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => phrase => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocString)(phrase);
  wasm.ext_bip39_to_entropy(PTR_VEC, ptr0, len0);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const bip39ToMiniSecret = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (phrase, password) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocString)(phrase);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocString)(password);
  wasm.ext_bip39_to_mini_secret(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const bip39ToSeed = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (phrase, password) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocString)(phrase);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocString)(password);
  wasm.ext_bip39_to_seed(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const bip39Validate = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => phrase => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocString)(phrase);
  const ret = wasm.ext_bip39_validate(ptr0, len0);
  return ret !== 0;
});
const ed25519KeypairFromSeed = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => seed => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(seed);
  wasm.ext_ed_from_seed(PTR_VEC, ptr0, len0);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const ed25519Sign = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (pubkey, seckey, message) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pubkey);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(seckey);
  const [ptr2, len2] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(message);
  wasm.ext_ed_sign(PTR_VEC, ptr0, len0, ptr1, len1, ptr2, len2);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const ed25519Verify = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (signature, message, pubkey) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(signature);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(message);
  const [ptr2, len2] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pubkey);
  const ret = wasm.ext_ed_verify(ptr0, len0, ptr1, len1, ptr2, len2);
  return ret !== 0;
});
const sr25519DeriveKeypairHard = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (pair, cc) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pair);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(cc);
  wasm.ext_sr_derive_keypair_hard(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const sr25519DeriveKeypairSoft = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (pair, cc) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pair);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(cc);
  wasm.ext_sr_derive_keypair_soft(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const sr25519DerivePublicSoft = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (pubkey, cc) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pubkey);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(cc);
  wasm.ext_sr_derive_public_soft(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const sr25519KeypairFromSeed = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => seed => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(seed);
  wasm.ext_sr_from_seed(PTR_VEC, ptr0, len0);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const sr25519Sign = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (pubkey, secret, message) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pubkey);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(secret);
  const [ptr2, len2] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(message);
  wasm.ext_sr_sign(PTR_VEC, ptr0, len0, ptr1, len1, ptr2, len2);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const sr25519Verify = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (signature, message, pubkey) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(signature);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(message);
  const [ptr2, len2] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pubkey);
  const ret = wasm.ext_sr_verify(ptr0, len0, ptr1, len1, ptr2, len2);
  return ret !== 0;
});
const sr25519Agree = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (pubkey, secret) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pubkey);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(secret);
  wasm.ext_sr_agree(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const vrfSign = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (secret, context, message, extra) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(secret);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(context);
  const [ptr2, len2] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(message);
  const [ptr3, len3] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(extra);
  wasm.ext_vrf_sign(PTR_VEC, ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const vrfVerify = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (pubkey, context, message, extra, outAndProof) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pubkey);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(context);
  const [ptr2, len2] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(message);
  const [ptr3, len3] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(extra);
  const [ptr4, len4] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(outAndProof);
  const ret = wasm.ext_vrf_verify(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4);
  return ret !== 0;
});
const blake2b = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (data, key, size) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(key);
  wasm.ext_blake2b(PTR_VEC, ptr0, len0, ptr1, len1, size);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const hmacSha256 = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (key, data) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(key);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  wasm.ext_hmac_sha256(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const hmacSha512 = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (key, data) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(key);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  wasm.ext_hmac_sha512(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const keccak256 = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => data => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  wasm.ext_keccak256(PTR_VEC, ptr0, len0);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const keccak512 = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => data => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  wasm.ext_keccak512(PTR_VEC, ptr0, len0);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const pbkdf2 = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (data, salt, rounds) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(salt);
  wasm.ext_pbkdf2(PTR_VEC, ptr0, len0, ptr1, len1, rounds);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const scrypt = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (password, salt, log2n, r, p) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(password);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(salt);
  wasm.ext_scrypt(PTR_VEC, ptr0, len0, ptr1, len1, log2n, r, p);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const sha256 = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => data => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  wasm.ext_sha256(PTR_VEC, ptr0, len0);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const sha512 = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => data => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  wasm.ext_sha512(PTR_VEC, ptr0, len0);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const twox = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (data, rounds) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  wasm.ext_twox(PTR_VEC, ptr0, len0, rounds);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
function isReady() {
  return !!(0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.getWasm)();
}
function waitReady() {
  return wasmPromise.then(() => isReady());
}

/***/ }),
/* 138 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/wasm-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/wasm-crypto',
  version: '4.4.1'
};

/***/ }),
/* 139 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "initWasm": () => (/* binding */ initWasm),
/* harmony export */   "withWasm": () => (/* binding */ withWasm),
/* harmony export */   "getWasm": () => (/* binding */ getWasm),
/* harmony export */   "getInt32": () => (/* binding */ getInt32),
/* harmony export */   "getUint8": () => (/* binding */ getUint8),
/* harmony export */   "getU8a": () => (/* binding */ getU8a),
/* harmony export */   "getString": () => (/* binding */ getString),
/* harmony export */   "allocU8a": () => (/* binding */ allocU8a),
/* harmony export */   "allocString": () => (/* binding */ allocString),
/* harmony export */   "resultU8a": () => (/* binding */ resultU8a),
/* harmony export */   "resultString": () => (/* binding */ resultString)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(140);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(144);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(150);
// Copyright 2019-2021 @polkadot/wasm-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/* eslint-disable @typescript-eslint/no-non-null-assertion */

let wasm = null;
let cachegetInt32 = null;
let cachegetUint8 = null;
async function initWasm(wasmBytes, asmFn, wbg) {
  try {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)(typeof WebAssembly !== 'undefined' && wasmBytes && wasmBytes.length, 'WebAssembly is not available in your environment');
    const source = await WebAssembly.instantiate(wasmBytes, {
      wbg
    });
    wasm = source.instance.exports;
  } catch (error) {
    // if we have a valid supplied asm.js, return that
    if (asmFn) {
      wasm = asmFn(wbg);
    } else {
      console.error('FATAL: Unable to initialize @polkadot/wasm-crypto');
      console.error(error);
      wasm = null;
    }
  }
} // FIXME We really would love to clean this up and have a sign like (wasm, ...params) => T
// Alas, TypeScript foo is not that great today, so we sadly have an extra closure here

function withWasm(fn) {
  return (...params) => {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)(wasm, 'The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces.');
    return fn(wasm)(...params);
  };
}
function getWasm() {
  return wasm;
}
function getInt32() {
  if (cachegetInt32 === null || cachegetInt32.buffer !== wasm.memory.buffer) {
    cachegetInt32 = new Int32Array(wasm.memory.buffer);
  }

  return cachegetInt32;
}
function getUint8() {
  if (cachegetUint8 === null || cachegetUint8.buffer !== wasm.memory.buffer) {
    cachegetUint8 = new Uint8Array(wasm.memory.buffer);
  }

  return cachegetUint8;
}
function getU8a(ptr, len) {
  return getUint8().subarray(ptr / 1, ptr / 1 + len);
}
function getString(ptr, len) {
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToString)(getU8a(ptr, len));
}
function allocU8a(arg) {
  const ptr = wasm.__wbindgen_malloc(arg.length * 1);

  getUint8().set(arg, ptr / 1);
  return [ptr, arg.length];
}
function allocString(arg) {
  return allocU8a((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.stringToU8a)(arg));
}
function resultU8a() {
  const r0 = getInt32()[8 / 4 + 0];
  const r1 = getInt32()[8 / 4 + 1];
  const ret = getU8a(r0, r1).slice();

  wasm.__wbindgen_free(r0, r1 * 1);

  return ret;
}
function resultString() {
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToString)(resultU8a());
}

/***/ }),
/* 140 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "assert": () => (/* binding */ assert),
/* harmony export */   "assertReturn": () => (/* binding */ assertReturn)
/* harmony export */ });
/* harmony import */ var _is_function_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(141);
/* harmony import */ var _is_null_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(143);
/* harmony import */ var _is_undefined_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(142);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0




/**
 * @name assert
 * @summary Checks for a valid test, if not Error is thrown.
 * @description
 * Checks that `test` is a truthy value. If value is falsy (`null`, `undefined`, `false`, ...), it throws an Error with the supplied `message`. When `test` passes, `true` is returned.
 * @example
 * <BR>
 *
 * ```javascript
 * const { assert } from '@polkadot/util';
 *
 * assert(true, 'True should be true'); // passes
 * assert(false, 'False should not be true'); // Error thrown
 * assert(false, () => 'message'); // Error with 'message'
 * ```
 */
function assert(condition, message) {
  if (!condition) {
    throw new Error((0,_is_function_js__WEBPACK_IMPORTED_MODULE_0__.isFunction)(message) ? message() : message);
  }
}
/**
 * @name assertReturn
 * @description Returns when the value is not undefined/null, otherwise throws assertion error
 */

function assertReturn(value, message) {
  assert(!(0,_is_undefined_js__WEBPACK_IMPORTED_MODULE_1__.isUndefined)(value) && !(0,_is_null_js__WEBPACK_IMPORTED_MODULE_2__.isNull)(value), message);
  return value;
}

/***/ }),
/* 141 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isFunction": () => (/* binding */ isFunction)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
// eslint-disable-next-line @typescript-eslint/ban-types

/**
 * @name isFunction
 * @summary Tests for a `function`.
 * @description
 * Checks to see if the input value is a JavaScript function.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isFunction } from '@polkadot/util';
 *
 * isFunction(() => false); // => true
 * ```
 */
function isFunction(value) {
  return typeof value === 'function';
}

/***/ }),
/* 142 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isUndefined": () => (/* binding */ isUndefined)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isUndefined
 * @summary Tests for a `undefined` values.
 * @description
 * Checks to see if the input value is `undefined`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isUndefined } from '@polkadot/util';
 *
 * console.log('isUndefined', isUndefined(void(0))); // => true
 * ```
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function isUndefined(value) {
  return typeof value === 'undefined';
}

/***/ }),
/* 143 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isNull": () => (/* binding */ isNull)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isNull
 * @summary Tests for a `null` values.
 * @description
 * Checks to see if the input value is `null`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isNull } from '@polkadot/util';
 *
 * console.log('isNull', isNull(null)); // => true
 * ```
 */
function isNull(value) {
  return value === null;
}

/***/ }),
/* 144 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "u8aToString": () => (/* binding */ u8aToString)
/* harmony export */ });
/* harmony import */ var _polkadot_x_textdecoder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(145);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

const decoder = new _polkadot_x_textdecoder__WEBPACK_IMPORTED_MODULE_0__.TextDecoder('utf-8');
/**
 * @name u8aToString
 * @summary Creates a utf-8 string from a Uint8Array object.
 * @description
 * `UInt8Array` input values return the actual decoded utf-8 string. `null` or `undefined` values returns an empty string.
 * @example
 * <BR>
 *
 * ```javascript
 * import { u8aToString } from '@polkadot/util';
 *
 * u8aToString(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0x6f])); // hello
 * ```
 */

function u8aToString(value) {
  return !(value !== null && value !== void 0 && value.length) ? '' : decoder.decode(value);
}

/***/ }),
/* 145 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),
/* harmony export */   "TextDecoder": () => (/* binding */ TextDecoder)
/* harmony export */ });
/* harmony import */ var _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(147);
/* harmony import */ var _fallback_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(149);
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(146);
// Copyright 2017-2021 @polkadot/x-textencoder authors & contributors
// SPDX-License-Identifier: Apache-2.0



const TextDecoder = typeof _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__.xglobal.TextDecoder === 'undefined' ? _fallback_js__WEBPACK_IMPORTED_MODULE_2__.TextDecoder : _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__.xglobal.TextDecoder;

/***/ }),
/* 146 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-textdecoder authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/x-textdecoder',
  version: '8.0.4'
};

/***/ }),
/* 147 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),
/* harmony export */   "xglobal": () => (/* binding */ xglobal)
/* harmony export */ });
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(148);
// Copyright 2017-2021 @polkadot/x-global authors & contributors
// SPDX-License-Identifier: Apache-2.0


function evaluateThis(fn) {
  return fn('return this');
}

const xglobal = typeof globalThis !== 'undefined' ? globalThis : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : evaluateThis(Function);

/***/ }),
/* 148 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-global authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/x-global',
  version: '8.0.4'
};

/***/ }),
/* 149 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TextDecoder": () => (/* binding */ TextDecoder)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-textencoder authors & contributors
// SPDX-License-Identifier: Apache-2.0
// This is very limited, only handling Ascii values
class TextDecoder {
  // eslint-disable-next-line @typescript-eslint/no-unused-vars,no-useless-constructor
  constructor(_) {// nothing
  }

  decode(value) {
    let result = '';

    for (let i = 0; i < value.length; i++) {
      result += String.fromCharCode(value[i]);
    }

    return result;
  }

}

/***/ }),
/* 150 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "stringToU8a": () => (/* binding */ stringToU8a)
/* harmony export */ });
/* harmony import */ var _polkadot_x_textencoder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(151);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

const encoder = new _polkadot_x_textencoder__WEBPACK_IMPORTED_MODULE_0__.TextEncoder();
/**
 * @name stringToU8a
 * @summary Creates a Uint8Array object from a utf-8 string.
 * @description
 * String input values return the actual encoded `UInt8Array`. `null` or `undefined` values returns an empty encoded array.
 * @example
 * <BR>
 *
 * ```javascript
 * import { stringToU8a } from '@polkadot/util';
 *
 * stringToU8a('hello'); // [0x68, 0x65, 0x6c, 0x6c, 0x6f]
 * ```
 */
// eslint-disable-next-line @typescript-eslint/ban-types

function stringToU8a(value) {
  return value ? encoder.encode(value.toString()) : new Uint8Array();
}

/***/ }),
/* 151 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),
/* harmony export */   "TextEncoder": () => (/* binding */ TextEncoder)
/* harmony export */ });
/* harmony import */ var _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(153);
/* harmony import */ var _fallback_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(155);
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(152);
// Copyright 2017-2021 @polkadot/x-textencoder authors & contributors
// SPDX-License-Identifier: Apache-2.0



const TextEncoder = typeof _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__.xglobal.TextEncoder === 'undefined' ? _fallback_js__WEBPACK_IMPORTED_MODULE_2__.TextEncoder : _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__.xglobal.TextEncoder;

/***/ }),
/* 152 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-textencoder authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/x-textencoder',
  version: '8.0.4'
};

/***/ }),
/* 153 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),
/* harmony export */   "xglobal": () => (/* binding */ xglobal)
/* harmony export */ });
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(154);
// Copyright 2017-2021 @polkadot/x-global authors & contributors
// SPDX-License-Identifier: Apache-2.0


function evaluateThis(fn) {
  return fn('return this');
}

const xglobal = typeof globalThis !== 'undefined' ? globalThis : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : evaluateThis(Function);

/***/ }),
/* 154 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-global authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/x-global',
  version: '8.0.4'
};

/***/ }),
/* 155 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TextEncoder": () => (/* binding */ TextEncoder)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-textencoder authors & contributors
// SPDX-License-Identifier: Apache-2.0
// This is very limited, only handling Ascii values
class TextEncoder {
  encode(value) {
    const u8a = new Uint8Array(value.length);

    for (let i = 0; i < value.length; i++) {
      u8a[i] = value.charCodeAt(i);
    }

    return u8a;
  }

}

/***/ }),
/* 156 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "wasmBytes": () => (/* binding */ wasmBytes)
/* harmony export */ });
/* harmony import */ var _base64_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(158);
/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(159);
/* harmony import */ var _fflate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(157);
// Copyright 2019-2021 @polkadot/wasm-crypto-wasm authors & contributors
// SPDX-License-Identifier: Apache-2.0



const wasmBytes = (0,_fflate_js__WEBPACK_IMPORTED_MODULE_0__.unzlibSync)((0,_base64_js__WEBPACK_IMPORTED_MODULE_1__.toByteArray)(_bytes_js__WEBPACK_IMPORTED_MODULE_2__.bytes), new Uint8Array(_bytes_js__WEBPACK_IMPORTED_MODULE_2__.sizeUncompressed));

/***/ }),
/* 157 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "unzlibSync": () => (/* binding */ unzlibSync)
/* harmony export */ });
// Copyright 2019-2021 @polkadot/wasm-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
// MIT License
//
// Copyright (c) 2020 Arjun Barrett
//
// Copied from https://github.com/101arrowz/fflate/blob/73c737941ec89d85cdf0ad39ee6f26c5fdc95fd7/src/index.ts
// This only contains the unzlibSync function, no compression, no async, no workers
//
// These 2 issues are addressed as a short-term, stop-gap solution
//   - https://github.com/polkadot-js/api/issues/2963
//   - https://github.com/101arrowz/fflate/issues/17
//
// Only tweaks make here are some TS adjustments (we use strict null checks), the code is otherwise as-is with
// only the single required function provided (compression is still being done in the build with fflate)

/* eslint-disable */
// inflate state
// aliases for shorter compressed code (most minifers don't do this)
const u8 = Uint8Array,
      u16 = Uint16Array,
      u32 = Uint32Array; // code length index map

const clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]); // fixed length extra bits

const fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0,
/* unused */
0, 0,
/* impossible */
0]); // fixed distance extra bits
// see fleb note

const fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13,
/* unused */
0, 0]); // get base, reverse index map from extra bits

const freb = (eb, start) => {
  const b = new u16(31);

  for (let i = 0; i < 31; ++i) {
    b[i] = start += 1 << eb[i - 1];
  } // numbers here are at max 18 bits


  const r = new u32(b[30]);

  for (let i = 1; i < 30; ++i) {
    for (let j = b[i]; j < b[i + 1]; ++j) {
      r[j] = j - b[i] << 5 | i;
    }
  }

  return [b, r];
};

const [fl, revfl] = freb(fleb, 2); // we can ignore the fact that the other numbers are wrong; they never happen anyway

fl[28] = 258, revfl[258] = 28;
const [fd] = freb(fdeb, 0); // map of value to reverse (assuming 16 bits)

const rev = new u16(32768);

for (let i = 0; i < 32768; ++i) {
  // reverse table algorithm from SO
  let x = (i & 0xAAAA) >>> 1 | (i & 0x5555) << 1;
  x = (x & 0xCCCC) >>> 2 | (x & 0x3333) << 2;
  x = (x & 0xF0F0) >>> 4 | (x & 0x0F0F) << 4;
  rev[i] = ((x & 0xFF00) >>> 8 | (x & 0x00FF) << 8) >>> 1;
} // create huffman tree from u8 "map": index -> code length for code index
// mb (max bits) must be at most 15
// TODO: optimize/split up?


const hMap = (cd, mb, r) => {
  const s = cd.length; // index

  let i = 0; // u16 "map": index -> # of codes with bit length = index

  const l = new u16(mb); // length of cd must be 288 (total # of codes)

  for (; i < s; ++i) ++l[cd[i] - 1]; // u16 "map": index -> minimum code for bit length = index


  const le = new u16(mb);

  for (i = 0; i < mb; ++i) {
    le[i] = le[i - 1] + l[i - 1] << 1;
  }

  let co;

  if (r) {
    // u16 "map": index -> number of actual bits, symbol for code
    co = new u16(1 << mb); // bits to remove for reverser

    const rvb = 15 - mb;

    for (i = 0; i < s; ++i) {
      // ignore 0 lengths
      if (cd[i]) {
        // num encoding both symbol and bits read
        const sv = i << 4 | cd[i]; // free bits

        const r = mb - cd[i]; // start value

        let v = le[cd[i] - 1]++ << r; // m is end value

        for (const m = v | (1 << r) - 1; v <= m; ++v) {
          // every 16 bit value starting with the code yields the same result
          co[rev[v] >>> rvb] = sv;
        }
      }
    }
  } else {
    co = new u16(s);

    for (i = 0; i < s; ++i) co[i] = rev[le[cd[i] - 1]++] >>> 15 - cd[i];
  }

  return co;
}; // fixed length tree


const flt = new u8(288);

for (let i = 0; i < 144; ++i) flt[i] = 8;

for (let i = 144; i < 256; ++i) flt[i] = 9;

for (let i = 256; i < 280; ++i) flt[i] = 7;

for (let i = 280; i < 288; ++i) flt[i] = 8; // fixed distance tree


const fdt = new u8(32);

for (let i = 0; i < 32; ++i) fdt[i] = 5; // fixed length map


const flrm = hMap(flt, 9, 1); // fixed distance map

const fdrm = hMap(fdt, 5, 1); // read d, starting at bit p and mask with m

const bits = (d, p, m) => {
  const o = p >>> 3;
  return (d[o] | d[o + 1] << 8) >>> (p & 7) & m;
}; // read d, starting at bit p continuing for at least 16 bits


const bits16 = (d, p) => {
  const o = p >>> 3;
  return (d[o] | d[o + 1] << 8 | d[o + 2] << 16) >>> (p & 7);
}; // get end of byte


const shft = p => (p >>> 3) + (p & 7 && 1); // typed array slice - allows garbage collector to free original reference,
// while being more compatible than .slice


const slc = (v, s, e) => {
  if (s == null || s < 0) s = 0;
  if (e == null || e > v.length) e = v.length; // can't use .constructor in case user-supplied

  const n = new (v instanceof u16 ? u16 : v instanceof u32 ? u32 : u8)(e - s);
  n.set(v.subarray(s, e));
  return n;
}; // find max of array


const max = a => {
  let m = a[0];

  for (let i = 1; i < a.length; ++i) {
    if (a[i] > m) m = a[i];
  }

  return m;
}; // expands raw DEFLATE data


const inflt = (dat, buf, st) => {
  const noSt = !st || st.i;
  if (!st) st = {}; // source length

  const sl = dat.length; // have to estimate size

  const noBuf = !buf || !noSt; // Assumes roughly 33% compression ratio average

  if (!buf) buf = new u8(sl * 3); // ensure buffer can fit at least l elements

  const cbuf = l => {
    let bl = buf.length; // need to increase size to fit

    if (l > bl) {
      // Double or set to necessary, whichever is greater
      const nbuf = new u8(Math.max(bl << 1, l));
      nbuf.set(buf);
      buf = nbuf;
    }
  }; //  last chunk         bitpos           bytes


  let final = st.f || 0,
      pos = st.p || 0,
      bt = st.b || 0,
      lm = st.l,
      dm = st.d,
      lbt = st.m,
      dbt = st.n;
  if (final && !lm) return buf; // total bits

  const tbts = sl << 3;

  do {
    if (!lm) {
      // BFINAL - this is only 1 when last chunk is next
      st.f = final = bits(dat, pos, 1); // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman

      const type = bits(dat, pos + 1, 3);
      pos += 3;

      if (!type) {
        // go to end of byte boundary
        const s = shft(pos) + 4,
              l = dat[s - 4] | dat[s - 3] << 8,
              t = s + l;

        if (t > sl) {
          if (noSt) throw 'unexpected EOF';
          break;
        } // ensure size


        if (noBuf) cbuf(bt + l); // Copy over uncompressed data

        buf.set(dat.subarray(s, t), bt); // Get new bitpos, update byte count

        st.b = bt += l, st.p = pos = t << 3;
        continue;
      } else if (type == 1) lm = flrm, dm = fdrm, lbt = 9, dbt = 5;else if (type == 2) {
        //  literal                            lengths
        const hLit = bits(dat, pos, 31) + 257,
              hcLen = bits(dat, pos + 10, 15) + 4;
        const tl = hLit + bits(dat, pos + 5, 31) + 1;
        pos += 14; // length+distance tree

        const ldt = new u8(tl); // code length tree

        const clt = new u8(19);

        for (let i = 0; i < hcLen; ++i) {
          // use index map to get real code
          clt[clim[i]] = bits(dat, pos + i * 3, 7);
        }

        pos += hcLen * 3; // code lengths bits

        const clb = max(clt),
              clbmsk = (1 << clb) - 1;
        if (!noSt && pos + tl * (clb + 7) > tbts) break; // code lengths map

        const clm = hMap(clt, clb, 1);

        for (let i = 0; i < tl;) {
          const r = clm[bits(dat, pos, clbmsk)]; // bits read

          pos += r & 15; // symbol

          const s = r >>> 4; // code length to copy

          if (s < 16) {
            ldt[i++] = s;
          } else {
            //  copy   count
            let c = 0,
                n = 0;
            if (s == 16) n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];else if (s == 17) n = 3 + bits(dat, pos, 7), pos += 3;else if (s == 18) n = 11 + bits(dat, pos, 127), pos += 7;

            while (n--) ldt[i++] = c;
          }
        } //    length tree                 distance tree


        const lt = ldt.subarray(0, hLit),
              dt = ldt.subarray(hLit); // max length bits

        lbt = max(lt); // max dist bits

        dbt = max(dt);
        lm = hMap(lt, lbt, 1);
        dm = hMap(dt, dbt, 1);
      } else throw 'invalid block type';

      if (pos > tbts) throw 'unexpected EOF';
    } // Make sure the buffer can hold this + the largest possible addition
    // maximum chunk size (practically, theoretically infinite) is 2^17;


    if (noBuf) cbuf(bt + 131072);
    const lms = (1 << lbt) - 1,
          dms = (1 << dbt) - 1;
    const mxa = lbt + dbt + 18;

    while (noSt || pos + mxa < tbts) {
      // bits read, code
      const c = lm[bits16(dat, pos) & lms],
            sym = c >>> 4;
      pos += c & 15;
      if (pos > tbts) throw 'unexpected EOF';
      if (!c) throw 'invalid length/literal';
      if (sym < 256) buf[bt++] = sym;else if (sym == 256) {
        lm = undefined;
        break;
      } else {
        let add = sym - 254; // no extra bits needed if less

        if (sym > 264) {
          // index
          const i = sym - 257,
                b = fleb[i];
          add = bits(dat, pos, (1 << b) - 1) + fl[i];
          pos += b;
        } // dist


        const d = dm[bits16(dat, pos) & dms],
              dsym = d >>> 4;
        if (!d) throw 'invalid distance';
        pos += d & 15;
        let dt = fd[dsym];

        if (dsym > 3) {
          const b = fdeb[dsym];
          dt += bits16(dat, pos) & (1 << b) - 1, pos += b;
        }

        if (pos > tbts) throw 'unexpected EOF';
        if (noBuf) cbuf(bt + 131072);
        const end = bt + add;

        for (; bt < end; bt += 4) {
          buf[bt] = buf[bt - dt];
          buf[bt + 1] = buf[bt + 1 - dt];
          buf[bt + 2] = buf[bt + 2 - dt];
          buf[bt + 3] = buf[bt + 3 - dt];
        }

        bt = end;
      }
    }

    st.l = lm, st.p = pos, st.b = bt;
    if (lm) final = 1, st.m = lbt, st.d = dm, st.n = dbt;
  } while (!final);

  return bt == buf.length ? buf : slc(buf, 0, bt);
}; // zlib valid


const zlv = d => {
  if ((d[0] & 15) != 8 || d[0] >>> 4 > 7 || (d[0] << 8 | d[1]) % 31) throw 'invalid zlib data';
  if (d[1] & 32) throw 'invalid zlib data: preset dictionaries not supported';
};
/**
 * Expands Zlib data
 * @param data The data to decompress
 * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.
 * @returns The decompressed version of the data
 */


function unzlibSync(data, out) {
  return inflt((zlv(data), data.subarray(2, -4)), out);
}

/***/ }),
/* 158 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "toByteArray": () => (/* binding */ toByteArray)
/* harmony export */ });
// Copyright 2019-2021 @polkadot/wasm-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
// MIT License
//
// Copyright (c) 2014 Jameson Little
//
// https://github.com/beatgammit/base64-js/blob/88957c9943c7e2a0f03cdf73e71d579e433627d3/index.js
// This only contains the toByteArray function (no encoding)
//
// Only tweaks make here are some TS adjustments (we use strict null checks), the code is otherwise as-is with
// only the single required function provided
const CODE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
const lookup = [];
const revLookup = [];

for (let i = 0; i < CODE.length; ++i) {
  lookup[i] = CODE[i];
  revLookup[CODE.charCodeAt(i)] = i;
} // Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications


revLookup['-'.charCodeAt(0)] = 62;
revLookup['_'.charCodeAt(0)] = 63;

function getLens(b64) {
  const len = b64.length;

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4');
  } // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42


  const validLen = b64.indexOf('=');
  return validLen === -1 ? [len, 0] : [validLen, 4 - validLen % 4];
}

function toByteArray(b64) {
  const [validLen, placeHoldersLen] = getLens(b64);
  const arr = new Uint8Array((validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen);
  let curByte = 0;
  let i;
  let tmp; // if there are placeholders, only get up to the last complete 4 chars

  const len = placeHoldersLen > 0 ? validLen - 4 : validLen;

  for (i = 0; i < len; i += 4) {
    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];
    arr[curByte++] = tmp >> 16 & 0xFF;
    arr[curByte++] = tmp >> 8 & 0xFF;
    arr[curByte++] = tmp & 0xFF;
  }

  if (placeHoldersLen === 2) {
    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;
    arr[curByte++] = tmp & 0xFF;
  } else if (placeHoldersLen === 1) {
    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;
    arr[curByte++] = tmp >> 8 & 0xFF;
    arr[curByte++] = tmp & 0xFF;
  }

  return arr;
}

/***/ }),
/* 159 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "bytes": () => (/* binding */ bytes),
/* harmony export */   "sizeCompressed": () => (/* binding */ sizeCompressed),
/* harmony export */   "sizeUncompressed": () => (/* binding */ sizeUncompressed)
/* harmony export */ });
/* harmony import */ var _cjs_bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(160);
// Copyright 2019-2021 @polkadot/wasm-crypto-wasm authors & contributors
// SPDX-License-Identifier: Apache-2.0

const bytes = _cjs_bytes_js__WEBPACK_IMPORTED_MODULE_0__.bytes;
const sizeCompressed = _cjs_bytes_js__WEBPACK_IMPORTED_MODULE_0__.sizeCompressed;
const sizeUncompressed = _cjs_bytes_js__WEBPACK_IMPORTED_MODULE_0__.sizeUncompressed;

/***/ }),
/* 160 */
/***/ ((module) => {

// Copyright 2019-2021 @polkadot/wasm-crypto-wasm authors & contributors
// SPDX-License-Identifier: Apache-2.0

// Generated as part of the build, do not edit

const sizeCompressed = 153363;
const sizeUncompressed = 301802;
const bytes = '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';

module.exports = { bytes, sizeCompressed, sizeUncompressed };


/***/ }),
/* 161 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "asmJsInit": () => (/* binding */ asmJsInit)
/* harmony export */ });
// Copyright 2019-2021 @polkadot/wasm-crypto-asmjs authors & contributors
// SPDX-License-Identifier: Apache-2.0
const asmJsInit = null;

/***/ }),
/* 162 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__wbindgen_is_undefined": () => (/* binding */ __wbindgen_is_undefined),
/* harmony export */   "__wbg_self_1b7a39e3a92c949c": () => (/* binding */ __wbg_self_1b7a39e3a92c949c),
/* harmony export */   "__wbg_require_604837428532a733": () => (/* binding */ __wbg_require_604837428532a733),
/* harmony export */   "__wbg_crypto_968f1772287e2df0": () => (/* binding */ __wbg_crypto_968f1772287e2df0),
/* harmony export */   "__wbg_getRandomValues_a3d34b4fee3c2869": () => (/* binding */ __wbg_getRandomValues_a3d34b4fee3c2869),
/* harmony export */   "__wbg_getRandomValues_f5e14ab7ac8e995d": () => (/* binding */ __wbg_getRandomValues_f5e14ab7ac8e995d),
/* harmony export */   "__wbg_randomFillSync_d5bd2d655fdf256a": () => (/* binding */ __wbg_randomFillSync_d5bd2d655fdf256a),
/* harmony export */   "__wbindgen_object_drop_ref": () => (/* binding */ __wbindgen_object_drop_ref),
/* harmony export */   "abort": () => (/* binding */ abort)
/* harmony export */ });
/* harmony import */ var _polkadot_x_randomvalues__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(163);
/* harmony import */ var _bridge_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(139);
// Copyright 2019-2021 @polkadot/wasm-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/* eslint-disable camelcase */


const DEFAULT_CRYPTO = {
  getRandomValues: _polkadot_x_randomvalues__WEBPACK_IMPORTED_MODULE_0__.getRandomValues
};
const DEFAULT_SELF = {
  crypto: DEFAULT_CRYPTO
};
const heap = new Array(32).fill(undefined).concat(undefined, null, true, false);
let heapNext = heap.length;

function getObject(idx) {
  return heap[idx];
}

function dropObject(idx) {
  if (idx < 36) {
    return;
  }

  heap[idx] = heapNext;
  heapNext = idx;
}

function takeObject(idx) {
  const ret = getObject(idx);
  dropObject(idx);
  return ret;
}

function addObject(obj) {
  if (heapNext === heap.length) {
    heap.push(heap.length + 1);
  }

  const idx = heapNext;
  heapNext = heap[idx];
  heap[idx] = obj;
  return idx;
}

function __wbindgen_is_undefined(idx) {
  return getObject(idx) === undefined;
}
function __wbg_self_1b7a39e3a92c949c() {
  return addObject(DEFAULT_SELF);
}
function __wbg_require_604837428532a733(ptr, len) {
  throw new Error(`Unable to require ${(0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.getString)(ptr, len)}`);
} // eslint-disable-next-line @typescript-eslint/no-unused-vars

function __wbg_crypto_968f1772287e2df0(_idx) {
  return addObject(DEFAULT_CRYPTO);
} // eslint-disable-next-line @typescript-eslint/no-unused-vars

function __wbg_getRandomValues_a3d34b4fee3c2869(_idx) {
  return addObject(DEFAULT_CRYPTO.getRandomValues);
} // eslint-disable-next-line @typescript-eslint/no-unused-vars

function __wbg_getRandomValues_f5e14ab7ac8e995d(_arg0, ptr, len) {
  DEFAULT_CRYPTO.getRandomValues((0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.getU8a)(ptr, len));
} // eslint-disable-next-line @typescript-eslint/no-unused-vars

function __wbg_randomFillSync_d5bd2d655fdf256a(_idx, _ptr, _len) {
  throw new Error('randomFillsync is not available'); // getObject(idx).randomFillSync(getU8a(ptr, len));
}
function __wbindgen_object_drop_ref(idx) {
  takeObject(idx);
}
function abort() {
  throw new Error('abort');
}

/***/ }),
/* 163 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),
/* harmony export */   "getRandomValues": () => (/* binding */ getRandomValues)
/* harmony export */ });
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(164);
// Copyright 2017-2021 @polkadot/x-randomvalues authors & contributors
// SPDX-License-Identifier: Apache-2.0

function getRandomValues(arr) {
  return crypto.getRandomValues(arr);
}

/***/ }),
/* 164 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-randomvalues authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/x-randomvalues',
  version: '8.0.4'
};

/***/ }),
/* 165 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "sr25519PairFromSeed": () => (/* binding */ sr25519PairFromSeed)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(80);
/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(137);
/* harmony import */ var _fromU8a_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(179);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0



/**
 * @name sr25519PairFromSeed
 * @description Returns a object containing a `publicKey` & `secretKey` generated from the supplied seed.
 */

function sr25519PairFromSeed(seed) {
  const seedU8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(seed);
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(seedU8a.length === 32, () => `Expected a seed matching 32 bytes, found ${seedU8a.length}`);
  return (0,_fromU8a_js__WEBPACK_IMPORTED_MODULE_2__.sr25519PairFromU8a)((0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_3__.sr25519KeypairFromSeed)(seedU8a));
}

/***/ }),
/* 166 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "u8aToU8a": () => (/* binding */ u8aToU8a)
/* harmony export */ });
/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(80);
/* harmony import */ var _hex_toU8a_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(167);
/* harmony import */ var _is_buffer_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(176);
/* harmony import */ var _is_hex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(126);
/* harmony import */ var _is_string_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(169);
/* harmony import */ var _is_u8a_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(178);
/* harmony import */ var _string_toU8a_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(170);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0







/**
 * @name u8aToU8a
 * @summary Creates a Uint8Array value from a Uint8Array, Buffer, string or hex input.
 * @description
 * `null` or `undefined` inputs returns a `[]` result, Uint8Array values returns the value, hex strings returns a Uint8Array representation.
 * @example
 * <BR>
 *
 * ```javascript
 * import { u8aToU8a } from '@polkadot/util';
 *
 * u8aToU8a(new Uint8Array([0x12, 0x34]); // => Uint8Array([0x12, 0x34])
 * u8aToU8a(0x1234); // => Uint8Array([0x12, 0x34])
 * ```
 */

function u8aToU8a(value) {
  if (!value) {
    return new Uint8Array();
  } else if ((0,_is_hex_js__WEBPACK_IMPORTED_MODULE_0__.isHex)(value)) {
    return (0,_hex_toU8a_js__WEBPACK_IMPORTED_MODULE_1__.hexToU8a)(value);
  } else if ((0,_is_string_js__WEBPACK_IMPORTED_MODULE_2__.isString)(value)) {
    return (0,_string_toU8a_js__WEBPACK_IMPORTED_MODULE_3__.stringToU8a)(value);
  } else if (Array.isArray(value) || (0,_is_buffer_js__WEBPACK_IMPORTED_MODULE_4__.isBuffer)(value)) {
    return new Uint8Array(value);
  }

  (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assert)((0,_is_u8a_js__WEBPACK_IMPORTED_MODULE_6__.isU8a)(value), () => `Unable to convert ${value.toString()} (typeof ${typeof value}) to a Uint8Array`);
  return value;
}

/***/ }),
/* 167 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "hexToU8a": () => (/* binding */ hexToU8a)
/* harmony export */ });
/* harmony import */ var _alphabet_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(168);
/* harmony import */ var _stripPrefix_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(129);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0


/**
 * @name hexToU8a
 * @summary Creates a Uint8Array object from a hex string.
 * @description
 * `null` inputs returns an empty `Uint8Array` result. Hex input values return the actual bytes value converted to a Uint8Array. Anything that is not a hex string (including the `0x` prefix) throws an error.
 * @example
 * <BR>
 *
 * ```javascript
 * import { hexToU8a } from '@polkadot/util';
 *
 * hexToU8a('0x80001f'); // Uint8Array([0x80, 0x00, 0x1f])
 * hexToU8a('0x80001f', 32); // Uint8Array([0x00, 0x80, 0x00, 0x1f])
 * ```
 */

function hexToU8a(_value, bitLength = -1) {
  if (!_value) {
    return new Uint8Array();
  }

  const value = (0,_stripPrefix_js__WEBPACK_IMPORTED_MODULE_0__.hexStripPrefix)(_value).toLowerCase();
  const valLength = value.length / 2;
  const endLength = Math.ceil(bitLength === -1 ? valLength : bitLength / 8);
  const result = new Uint8Array(endLength);
  const offset = endLength > valLength ? endLength - valLength : 0;
  const dv = new DataView(result.buffer, offset);
  const mod = (endLength - offset) % 2;
  const length = endLength - offset - mod;

  for (let i = 0; i < length; i += 2) {
    dv.setUint16(i, _alphabet_js__WEBPACK_IMPORTED_MODULE_1__.HEX_TO_U16[value.substr(i * 2, 4)]);
  }

  if (mod) {
    dv.setUint8(length, _alphabet_js__WEBPACK_IMPORTED_MODULE_1__.HEX_TO_U8[value.substr(value.length - 2, 2)]);
  }

  return result;
}

/***/ }),
/* 168 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HEX_TO_U16": () => (/* binding */ HEX_TO_U16),
/* harmony export */   "HEX_TO_U8": () => (/* binding */ HEX_TO_U8),
/* harmony export */   "U16_TO_HEX": () => (/* binding */ U16_TO_HEX),
/* harmony export */   "U8_TO_HEX": () => (/* binding */ U8_TO_HEX)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
const U8_TO_HEX = new Array(256);
const U16_TO_HEX = new Array(256 * 256);
const HEX_TO_U8 = {};
const HEX_TO_U16 = {};

for (let n = 0; n < 256; n++) {
  const hex = n.toString(16).padStart(2, '0');
  U8_TO_HEX[n] = hex;
  HEX_TO_U8[hex] = n;
}

for (let i = 0; i < 256; i++) {
  for (let j = 0; j < 256; j++) {
    const hex = U8_TO_HEX[i] + U8_TO_HEX[j];
    const n = i << 8 | j;
    U16_TO_HEX[n] = hex;
    HEX_TO_U16[hex] = n;
  }
}



/***/ }),
/* 169 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isString": () => (/* binding */ isString)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isString
 * @summary Tests for a string.
 * @description
 * Checks to see if the input value is a JavaScript string.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isString } from '@polkadot/util';
 *
 * console.log('isString', isString('test')); // => true
 * ```
 */
function isString(value) {
  return typeof value === 'string' || value instanceof String;
}

/***/ }),
/* 170 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "stringToU8a": () => (/* binding */ stringToU8a)
/* harmony export */ });
/* harmony import */ var _polkadot_x_textencoder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(171);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

const encoder = new _polkadot_x_textencoder__WEBPACK_IMPORTED_MODULE_0__.TextEncoder();
/**
 * @name stringToU8a
 * @summary Creates a Uint8Array object from a utf-8 string.
 * @description
 * String input values return the actual encoded `UInt8Array`. `null` or `undefined` values returns an empty encoded array.
 * @example
 * <BR>
 *
 * ```javascript
 * import { stringToU8a } from '@polkadot/util';
 *
 * stringToU8a('hello'); // [0x68, 0x65, 0x6c, 0x6c, 0x6f]
 * ```
 */
// eslint-disable-next-line @typescript-eslint/ban-types

function stringToU8a(value) {
  return value ? encoder.encode(value.toString()) : new Uint8Array();
}

/***/ }),
/* 171 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),
/* harmony export */   "TextEncoder": () => (/* binding */ TextEncoder)
/* harmony export */ });
/* harmony import */ var _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(173);
/* harmony import */ var _fallback_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(175);
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(172);
// Copyright 2017-2021 @polkadot/x-textencoder authors & contributors
// SPDX-License-Identifier: Apache-2.0



const TextEncoder = typeof _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__.xglobal.TextEncoder === 'undefined' ? _fallback_js__WEBPACK_IMPORTED_MODULE_2__.TextEncoder : _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__.xglobal.TextEncoder;

/***/ }),
/* 172 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-textencoder authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/x-textencoder',
  version: '8.0.2'
};

/***/ }),
/* 173 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),
/* harmony export */   "xglobal": () => (/* binding */ xglobal)
/* harmony export */ });
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(174);
// Copyright 2017-2021 @polkadot/x-global authors & contributors
// SPDX-License-Identifier: Apache-2.0


function evaluateThis(fn) {
  return fn('return this');
}

const xglobal = typeof globalThis !== 'undefined' ? globalThis : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : evaluateThis(Function);

/***/ }),
/* 174 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-global authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/x-global',
  version: '8.0.2'
};

/***/ }),
/* 175 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TextEncoder": () => (/* binding */ TextEncoder)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-textencoder authors & contributors
// SPDX-License-Identifier: Apache-2.0
// This is very limited, only handling Ascii values
class TextEncoder {
  encode(value) {
    const u8a = new Uint8Array(value.length);

    for (let i = 0; i < value.length; i++) {
      u8a[i] = value.charCodeAt(i);
    }

    return u8a;
  }

}

/***/ }),
/* 176 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isBuffer": () => (/* binding */ isBuffer)
/* harmony export */ });
/* harmony import */ var _has_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(177);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isBuffer
 * @summary Tests for a `Buffer` object instance.
 * @description
 * Checks to see if the input object is an instance of `Buffer`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isBuffer } from '@polkadot/util';
 *
 * console.log('isBuffer', isBuffer(Buffer.from([]))); // => true
 * ```
 */

function isBuffer(value) {
  return _has_js__WEBPACK_IMPORTED_MODULE_0__.hasBuffer && Buffer.isBuffer(value);
}

/***/ }),
/* 177 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "hasBigInt": () => (/* binding */ hasBigInt),
/* harmony export */   "hasBuffer": () => (/* binding */ hasBuffer),
/* harmony export */   "hasDirname": () => (/* binding */ hasDirname),
/* harmony export */   "hasProcess": () => (/* binding */ hasProcess),
/* harmony export */   "hasWasm": () => (/* binding */ hasWasm)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
const hasBigInt = typeof BigInt !== 'undefined';
const hasBuffer = typeof Buffer !== 'undefined';
const hasDirname = typeof __dirname !== 'undefined';
const hasProcess = typeof process === 'object';
const hasWasm = typeof WebAssembly !== 'undefined';

/***/ }),
/* 178 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isU8a": () => (/* binding */ isU8a)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isU8a
 * @summary Tests for a `Uint8Array` object instance.
 * @description
 * Checks to see if the input object is an instance of `Uint8Array`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isUint8Array } from '@polkadot/util';
 *
 * console.log('isU8a', isU8a([])); // => false
 * ```
 */
function isU8a(value) {
  return value instanceof Uint8Array;
}

/***/ }),
/* 179 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "sr25519PairFromU8a": () => (/* binding */ sr25519PairFromU8a)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(80);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

const SEC_LEN = 64;
const PUB_LEN = 32;
const TOT_LEN = SEC_LEN + PUB_LEN;
function sr25519PairFromU8a(full) {
  const fullU8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(full);
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(fullU8a.length === TOT_LEN, () => `Expected keypair with ${TOT_LEN} bytes, found ${fullU8a.length}`);
  return {
    publicKey: fullU8a.slice(SEC_LEN, TOT_LEN),
    secretKey: fullU8a.slice(0, SEC_LEN)
  };
}

/***/ }),
/* 180 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "decodeAddress": () => (/* binding */ decodeAddress)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(126);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(166);
/* harmony import */ var _base58_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(181);
/* harmony import */ var _checksum_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(188);
/* harmony import */ var _defaults_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(184);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Original implementation: https://github.com/paritytech/polka-ui/blob/4858c094684769080f5811f32b081dd7780b0880/src/polkadot.js#L6




function decodeAddress(encoded, ignoreChecksum, ss58Format = -1) {
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)(encoded, 'Invalid empty address passed');

  if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isU8a)(encoded) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isHex)(encoded)) {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.u8aToU8a)(encoded);
  }

  try {
    const decoded = (0,_base58_index_js__WEBPACK_IMPORTED_MODULE_4__.base58Decode)(encoded);
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)(_defaults_js__WEBPACK_IMPORTED_MODULE_5__.defaults.allowedEncodedLengths.includes(decoded.length), 'Invalid decoded address length');
    const [isValid, endPos, ss58Length, ss58Decoded] = (0,_checksum_js__WEBPACK_IMPORTED_MODULE_6__.checkAddressChecksum)(decoded);
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)(ignoreChecksum || isValid, 'Invalid decoded address checksum');
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)([-1, ss58Decoded].includes(ss58Format), () => `Expected ss58Format ${ss58Format}, received ${ss58Decoded}`);
    return decoded.slice(ss58Length, endPos);
  } catch (error) {
    throw new Error(`Decoding ${encoded}: ${error.message}`);
  }
}

/***/ }),
/* 181 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "base58Validate": () => (/* binding */ base58Validate),
/* harmony export */   "base58Decode": () => (/* binding */ base58Decode),
/* harmony export */   "base58Encode": () => (/* binding */ base58Encode),
/* harmony export */   "isBase58": () => (/* binding */ isBase58)
/* harmony export */ });
/* harmony import */ var micro_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(182);
/* harmony import */ var _base32_helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(183);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0


const BASE58_CONFIG = {
  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz',
  coder: micro_base__WEBPACK_IMPORTED_MODULE_0__.base58,
  ipfsChar: 'z',
  type: 'base58'
};
/**
 * @name base58Validate
 * @summary Validates a base58 value.
 * @description
 * Validates that the supplied value is valid base58, throwing exceptions if not
 */

const base58Validate = (0,_base32_helpers_js__WEBPACK_IMPORTED_MODULE_1__.createValidate)(BASE58_CONFIG);
/**
 * @name base58Decode
 * @summary Decodes a base58 value.
 * @description
 * From the provided input, decode the base58 and return the result as an `Uint8Array`.
 */

const base58Decode = (0,_base32_helpers_js__WEBPACK_IMPORTED_MODULE_1__.createDecode)(BASE58_CONFIG, base58Validate);
/**
* @name base58Encode
* @summary Creates a base58 value.
* @description
* From the provided input, create the base58 and return the result as a string.
*/

const base58Encode = (0,_base32_helpers_js__WEBPACK_IMPORTED_MODULE_1__.createEncode)(BASE58_CONFIG);
/**
* @name isBase58
* @description Checks if the input is in base58, returning true/false
*/

const isBase58 = (0,_base32_helpers_js__WEBPACK_IMPORTED_MODULE_1__.createIs)(base58Validate);

/***/ }),
/* 182 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/*! micro-base - MIT License (c) 2021 Paul Miller (paulmillr.com) */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.bytes = exports.stringToBytes = exports.str = exports.bytesToString = exports.hex = exports.utf8 = exports.bech32m = exports.bech32 = exports.base58check = exports.base58xmr = exports.base58xrp = exports.base58flickr = exports.base58 = exports.base64url = exports.base64 = exports.base32crockford = exports.base32hex = exports.base32 = exports.base16 = exports.utils = void 0;
function chain(...args) {
    const wrap = (a, b) => (c) => a(b(c));
    const encode = Array.from(args)
        .reverse()
        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);
    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);
    return { encode, decode };
}
function alphabet(alphabet) {
    return {
        encode: (digits) => {
            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))
                throw new Error('alphabet.encode input should be an array of numbers');
            return digits.map((i) => {
                if (i < 0 || i >= alphabet.length)
                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);
                return alphabet[i];
            });
        },
        decode: (input) => {
            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))
                throw new Error('alphabet.decode input should be array of strings');
            return input.map((letter) => {
                const index = alphabet.indexOf(letter);
                if (index === -1)
                    throw new Error(`Unknown letter: "${letter}". Allowed: ${alphabet}`);
                return index;
            });
        },
    };
}
function join(separator = '') {
    return {
        encode: (from) => {
            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))
                throw new Error('join.encode input should be array of strings');
            return from.join(separator);
        },
        decode: (to) => {
            if (typeof to !== 'string')
                throw new Error('join.decode input should be string');
            return to.split(separator);
        },
    };
}
function padding(bits, chr = '=') {
    return {
        encode(data) {
            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))
                throw new Error('padding.encode input should be array of strings');
            while ((data.length * bits) % 8)
                data.push(chr);
            return data;
        },
        decode(input) {
            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))
                throw new Error('padding.encode input should be array of strings');
            let end = input.length;
            if ((end * bits) % 8)
                throw new Error('Invalid padding: string should have whole number of bytes');
            while (end > 0 && input[end - 1] === chr) {
                end--;
                if (!((end * bits) % 8))
                    throw new Error('Invalid padding: string has too much padding');
            }
            return input.slice(0, end);
        },
    };
}
function normalize(fn) {
    return { encode: (from) => from, decode: (to) => fn(to) };
}
function convertRadix(data, from, to) {
    if (!data.length)
        return [];
    let pos = 0;
    const res = [];
    const digits = Array.from(data);
    while (true) {
        let carry = 0;
        let done = true;
        for (let i = pos; i < digits.length; i++) {
            const digit = from * carry + digits[i];
            carry = digit % to;
            digits[i] = Math.floor(digit / to);
            if (!done)
                continue;
            else if (!digits[i])
                pos = i;
            else
                done = false;
        }
        res.push(carry);
        if (done)
            break;
    }
    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)
        res.push(0);
    return res.reverse();
}
function convertRadix2(data, from, to, padding) {
    let carry = 0;
    let pos = 0;
    const mask = 2 ** to - 1;
    const res = [];
    for (const n of data) {
        carry = (carry << from) | n;
        pos += from;
        for (; pos >= to; pos -= to)
            res.push((carry >> (pos - to)) & mask);
    }
    carry = (carry << (to - pos)) & mask;
    if (!padding && pos >= from)
        throw new Error('Excess padding');
    if (!padding && carry)
        throw new Error(`Non-zero padding: ${carry}`);
    if (padding && pos > 0)
        res.push(carry);
    return res;
}
function radix(num) {
    return {
        encode: (bytes) => {
            if (!(bytes instanceof Uint8Array))
                throw new Error('radix.encode input should be Uint8Array');
            return convertRadix(Array.from(bytes), 2 ** 8, num);
        },
        decode: (digits) => {
            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))
                throw new Error('radix.decode input should be array of strings');
            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));
        },
    };
}
function radix2(bits, revPadding = false) {
    return {
        encode: (bytes) => {
            if (!(bytes instanceof Uint8Array))
                throw new Error('radix2.encode input should be Uint8Array');
            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);
        },
        decode: (digits) => {
            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))
                throw new Error('radix2.decode input should be array of strings');
            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));
        },
    };
}
function unsafeWrapper(fn) {
    return function (...args) {
        try {
            return fn.apply(null, args);
        }
        catch (e) { }
    };
}
function checksum(len, fn) {
    return {
        encode(data) {
            if (!(data instanceof Uint8Array))
                throw new Error('checksum.encode: input should be Uint8Array');
            const checksum = fn(data).slice(0, len);
            const res = new Uint8Array(data.length + len);
            res.set(data);
            res.set(checksum, data.length);
            return res;
        },
        decode(data) {
            if (!(data instanceof Uint8Array))
                throw new Error('checksum.decode: input should be Uint8Array');
            const payload = data.slice(0, -len);
            const newChecksum = fn(payload).slice(0, len);
            const oldChecksum = data.slice(-len);
            for (let i = 0; i < len; i++)
                if (newChecksum[i] !== oldChecksum[i])
                    throw new Error('Invalid checksum');
            return payload;
        },
    };
}
exports.utils = { alphabet, chain, checksum, radix2 };
exports.base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));
exports.base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));
exports.base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));
exports.base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));
exports.base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));
exports.base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));
const genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));
exports.base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');
exports.base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');
exports.base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');
exports.base58xmr = {
    encode(data) {
        let res = '';
        for (let i = 0; i < data.length; i += 8) {
            const slice = data.subarray(i, i + 8);
            res += exports.base58.encode(slice).padStart(slice.length === 8 ? 11 : 7, '1');
        }
        return res;
    },
    decode(str) {
        let res = [];
        for (let i = 0; i < str.length; i += 11)
            res = res.concat(Array.from(exports.base58.decode(str.slice(i, i + 11))));
        return Uint8Array.from(res);
    },
};
const base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), exports.base58);
exports.base58check = base58check;
const BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));
const POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];
function bech32Polymod(pre) {
    const b = pre >> 25;
    let chk = (pre & 0x1ffffff) << 5;
    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {
        if (((b >> i) & 1) === 1)
            chk ^= POLYMOD_GENERATORS[i];
    }
    return chk;
}
function bechChecksum(prefix, words, encodingConst = 1) {
    const len = prefix.length;
    let chk = 1;
    for (let i = 0; i < len; i++) {
        const c = prefix.charCodeAt(i);
        if (c < 33 || c > 126)
            throw new Error(`Invalid prefix (${prefix})`);
        chk = bech32Polymod(chk) ^ (c >> 5);
    }
    chk = bech32Polymod(chk);
    for (let i = 0; i < len; i++)
        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);
    for (let v of words)
        chk = bech32Polymod(chk) ^ v;
    for (let i = 0; i < 6; i++)
        chk = bech32Polymod(chk);
    chk ^= encodingConst;
    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));
}
function genBech32(encoding) {
    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;
    const _words = radix2(5);
    const fromWords = _words.decode;
    const toWords = _words.encode;
    const fromWordsUnsafe = unsafeWrapper(fromWords);
    function encode(prefix, words, limit = 90) {
        if (typeof prefix !== 'string')
            throw new Error(`bech32.decode prefix should be string, not ${typeof prefix}`);
        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))
            throw new Error(`bech32.decode words should be array of numbers, not ${typeof words}`);
        const actualLength = prefix.length + 7 + words.length;
        if (limit !== false && actualLength > limit)
            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);
        prefix = prefix.toLowerCase();
        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;
    }
    function decode(str, limit = 90) {
        if (typeof str !== 'string')
            throw new Error(`bech32.decode input should be string, not ${typeof str}`);
        if (str.length < 8 || (limit !== false && str.length > limit))
            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);
        const lowered = str.toLowerCase();
        if (str !== lowered && str !== str.toUpperCase())
            throw new Error(`String must be lowercase or uppercase`);
        str = lowered;
        const sepIndex = str.lastIndexOf('1');
        if (sepIndex === 0 || sepIndex === -1)
            throw new Error(`Letter "1" must be present between prefix and data only`);
        const [prefix, _words] = [str.slice(0, sepIndex), str.slice(sepIndex + 1)];
        if (_words.length < 6)
            throw new Error('Data must be at least 6 characters long');
        const words = BECH_ALPHABET.decode(_words).slice(0, -6);
        const sum = bechChecksum(prefix, words, ENCODING_CONST);
        if (!_words.endsWith(sum))
            throw new Error(`Invalid checksum in ${str}: expected "${sum}"`);
        return { prefix, words };
    }
    const decodeUnsafe = unsafeWrapper(decode);
    function decodeToBytes(str) {
        const { prefix, words } = decode(str, false);
        return { prefix, words, bytes: fromWords(words) };
    }
    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };
}
exports.bech32 = genBech32('bech32');
exports.bech32m = genBech32('bech32m');
exports.utf8 = {
    encode: (data) => new TextDecoder().decode(data),
    decode: (str) => new TextEncoder().encode(str),
};
exports.hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {
    if (typeof s !== 'string' || s.length % 2)
        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);
    return s.toLowerCase();
}));
const CODERS = {
    utf8: exports.utf8, hex: exports.hex, base16: exports.base16, base32: exports.base32, base64: exports.base64, base64url: exports.base64url, base58: exports.base58, base58xmr: exports.base58xmr
};
const coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;
const bytesToString = (type, bytes) => {
    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))
        throw new TypeError(coderTypeError);
    if (!(bytes instanceof Uint8Array))
        throw new TypeError('bytesToString() expects Uint8Array');
    return CODERS[type].encode(bytes);
};
exports.bytesToString = bytesToString;
exports.str = exports.bytesToString;
const stringToBytes = (type, str) => {
    if (!CODERS.hasOwnProperty(type))
        throw new TypeError(coderTypeError);
    if (typeof str !== 'string')
        throw new TypeError('stringToBytes() expects string');
    return CODERS[type].decode(str);
};
exports.stringToBytes = stringToBytes;
exports.bytes = exports.stringToBytes;


/***/ }),
/* 183 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createDecode": () => (/* binding */ createDecode),
/* harmony export */   "createEncode": () => (/* binding */ createEncode),
/* harmony export */   "createIs": () => (/* binding */ createIs),
/* harmony export */   "createValidate": () => (/* binding */ createValidate)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(80);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
 // NOTE: Work around a TS issue. These are re-defined like in @polkadot/util/types
// since without it the import
//
//   import type { U8aLike } from '@polkadot/util/types';
//
// ends up in the build-generated code as
//
//   impor("../../../util/src/types").U8aLike
//
// eslint-disable-next-line @typescript-eslint/ban-types

function createDecode({
  coder,
  ipfsChar
}, validate) {
  return (value, ipfsCompat) => {
    validate(value, ipfsCompat);
    return coder.decode(ipfsChar && ipfsCompat ? value.substr(1) : value);
  };
}
function createEncode({
  coder,
  ipfsChar
}) {
  return (value, ipfsCompat) => {
    const out = coder.encode((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(value));
    return ipfsChar && ipfsCompat ? `${ipfsChar}${out}` : out;
  };
}
function createIs(validate) {
  return (value, ipfsCompat) => {
    try {
      return validate(value, ipfsCompat);
    } catch (error) {
      return false;
    }
  };
}
function createValidate({
  alphabet,
  ipfsChar,
  regex,
  type
}) {
  return (value, ipfsCompat) => {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(value && typeof value === 'string', () => `Expected non-null, non-empty ${type} string input`);

    if (ipfsChar && ipfsCompat) {
      (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(value[0] === ipfsChar, () => `Expected ipfs-compatible ${type} to start with '${ipfsChar}'`);
    }

    if (regex) {
      (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(regex.test(value), `Invalid ${type} encoding`);
    } else {
      for (let i = ipfsCompat ? 1 : 0; i < value.length; i++) {
        (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(alphabet.includes(value[i]), () => `Invalid ${type} character "${value[i]}" (0x${value.charCodeAt(i).toString(16)}) at index ${i}`);
      }
    }

    return true;
  };
}

/***/ }),
/* 184 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "defaults": () => (/* binding */ defaults)
/* harmony export */ });
/* harmony import */ var _networks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(185);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0


function networkToPrefix({
  prefix
}) {
  return prefix;
}

const defaults = {
  allowedDecodedLengths: [1, 2, 4, 8, 32, 33],
  // publicKey has prefix + 2 checksum bytes, short only prefix + 1 checksum byte
  allowedEncodedLengths: [3, 4, 6, 10, 35, 36, 37, 38],
  allowedPrefix: _networks_js__WEBPACK_IMPORTED_MODULE_0__.availableNetworks.map(networkToPrefix),
  prefix: 42
};

/***/ }),
/* 185 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "allNetworks": () => (/* binding */ allNetworks),
/* harmony export */   "availableNetworks": () => (/* binding */ availableNetworks),
/* harmony export */   "selectableNetworks": () => (/* binding */ selectableNetworks)
/* harmony export */ });
/* harmony import */ var _defaults_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(186);
/* harmony import */ var _substrate_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(187);
// Copyright 2017-2021 @polkadot/networks authors & contributors
// SPDX-License-Identifier: Apache-2.0

 // These are known prefixes that are not sorted

const UNSORTED = [0, 2, 42];
const TESTNETS = ['testnet'];

function toExpanded(o) {
  const network = o.network || '';
  const nameParts = network.replace(/_/g, '-').split('-');
  const n = o; // ledger additions

  n.slip44 = _defaults_js__WEBPACK_IMPORTED_MODULE_0__.knownLedger[network];
  n.hasLedgerSupport = !!n.slip44; // general items

  n.genesisHash = _defaults_js__WEBPACK_IMPORTED_MODULE_0__.knownGenesis[network] || [];
  n.icon = _defaults_js__WEBPACK_IMPORTED_MODULE_0__.knownIcon[network] || 'substrate'; // filtering

  n.isTestnet = !!_defaults_js__WEBPACK_IMPORTED_MODULE_0__.knownTestnet[network] || TESTNETS.includes(nameParts[nameParts.length - 1]);
  n.isIgnored = n.isTestnet || !(o.standardAccount && o.decimals && o.symbols) && o.prefix !== 42;
  return n;
}

function filterSelectable({
  genesisHash,
  prefix
}) {
  return !!genesisHash.length || prefix === 42;
}

function filterAvailable(n) {
  return !n.isIgnored && !!n.network;
}

function sortNetworks(a, b) {
  const isUnSortedA = UNSORTED.includes(a.prefix);
  const isUnSortedB = UNSORTED.includes(b.prefix);
  return isUnSortedA === isUnSortedB ? 0 : isUnSortedA ? -1 : isUnSortedB ? 1 : a.displayName.localeCompare(b.displayName);
} // This is all the Substrate networks with our additional information


const allNetworks = _substrate_js__WEBPACK_IMPORTED_MODULE_1__.knownSubstrate.map(toExpanded); // The list of available/claimed prefixes
//   - no testnets
//   - we only include those where we have a standardAccount
//   - sort by name, however we keep 0, 2, 42 first in the list

const availableNetworks = allNetworks.filter(filterAvailable).sort(sortNetworks); // A filtered list of those chains we have details about (genesisHashes)

const selectableNetworks = availableNetworks.filter(filterSelectable);

/***/ }),
/* 186 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "substrateRegistry": () => (/* binding */ substrateRegistry),
/* harmony export */   "knownGenesis": () => (/* binding */ knownGenesis),
/* harmony export */   "knownIcon": () => (/* binding */ knownIcon),
/* harmony export */   "knownLedger": () => (/* binding */ knownLedger),
/* harmony export */   "knownTestnet": () => (/* binding */ knownTestnet)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/networks authors & contributors
// SPDX-License-Identifier: Apache-2.0
const substrateRegistry = 'https://raw.githubusercontent.com/paritytech/ss58-registry/main/ss58-registry.json'; // NOTE: In the case where the network was hard-spooned and multiple genesisHashes
// are provided, it needs to be in reverse order, i.e. most-recent first, oldest
// last. This make lookups for the current a simple genesisHash[0]
// (See Kusama as an example)

const knownGenesis = {
  acala: ['0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c'],
  bifrost: ['0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed'],
  centrifuge: ['0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5'],
  'dock-mainnet': ['0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9'],
  edgeware: ['0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b'],
  equilibrium: ['0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925'],
  genshiro: ['0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243'],
  hydradx: ['0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc', // Snakenet Gen3-1
  '0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9', // Snakenet Gen3
  '0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047', // Snakenet Gen2
  '0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2' // Snakenet Gen1
  ],
  karura: ['0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b'],
  kulupu: ['0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba'],
  kusama: ['0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe', // Kusama CC3,
  '0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636', // Kusama CC2
  '0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf' // Kusama CC1
  ],
  'nodle-chain': ['0xa3d114c2b8d0627c1aa9b134eafcf7d05ca561fdc19fb388bb9457f81809fb23'],
  plasm: ['0x3e86364d4b4894021cb2a0390bcf2feb5517d5292f2de2bb9404227e908b0b8b'],
  polkadot: ['0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3'],
  polymesh: ['0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063'],
  stafi: ['0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80'],
  statemine: ['0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a'],
  subsocial: ['0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8']
}; // these are icon overrides

const knownIcon = {
  centrifuge: 'polkadot',
  kusama: 'polkadot',
  polkadot: 'polkadot',
  statemine: 'polkadot',
  statemint: 'polkadot',
  westmint: 'polkadot'
}; // These match up with the keys of the ledgerApps object in the @polkadot/hw-ledger/defaults.ts
// and maps to the known slip44 (minus the `0x8` hard derivation flag)
// NOTE: Any network here needs to have a genesisHash attached in the config above

const knownLedger = {
  centrifuge: 0x000002eb,
  'dock-mainnet': 0x00000252,
  edgeware: 0x0000020b,
  equilibrium: 0x05f5e0fd,
  genshiro: 0x05f5e0fc,
  kusama: 0x000001b2,
  'nodle-chain': 0x000003eb,
  polkadot: 0x00000162,
  polymesh: 0x00000253,
  statemine: 0x000001b2 // common-good on Kusama, shares derivation

}; // testnets should not allow selection

const knownTestnet = {
  '': true,
  // this is the default non-network entry
  'cess-testnet': true,
  'dock-testnet': true,
  jupiter: true,
  'mathchain-testnet': true,
  subspace_testnet: true,
  'zero-alphaville': true
};

/***/ }),
/* 187 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "knownSubstrate": () => (/* binding */ knownSubstrate)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/networks authors & contributors
// SPDX-License-Identifier: Apache-2.0
//
// Auto-generated by yarn networks:sync (via scripts/fromSubstrate.mjs)
//
// This file should never be edited manually. Rather the process is as follow -
//
//   - make a PR to the upstream registry found at https://github.com/paritytech/ss58-registry/
//   - ensure the PR gets merged
//   - yarn networks:sync in this repo to sync
//
// Any manual changes to this file will make CI cron checks fail and will be
// lost when the registry is updated alongside the above sync.
//
const knownSubstrate = [{
  decimals: [10],
  displayName: 'Polkadot Relay Chain',
  network: 'polkadot',
  prefix: 0,
  standardAccount: '*25519',
  symbols: ['DOT'],
  website: 'https://polkadot.network'
}, {
  decimals: null,
  displayName: 'Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.',
  network: 'BareSr25519',
  prefix: 1,
  standardAccount: 'Sr25519',
  symbols: null,
  website: null
}, {
  decimals: [12],
  displayName: 'Kusama Relay Chain',
  network: 'kusama',
  prefix: 2,
  standardAccount: '*25519',
  symbols: ['KSM'],
  website: 'https://kusama.network'
}, {
  decimals: null,
  displayName: 'Bare 32-bit Ed25519 public key.',
  network: 'BareEd25519',
  prefix: 3,
  standardAccount: 'Ed25519',
  symbols: null,
  website: null
}, {
  decimals: null,
  displayName: 'Katal Chain',
  network: 'katalchain',
  prefix: 4,
  standardAccount: '*25519',
  symbols: null,
  website: null
}, {
  decimals: [15],
  displayName: 'Plasm Network',
  network: 'plasm',
  prefix: 5,
  standardAccount: '*25519',
  symbols: ['PLM'],
  website: 'https://plasmnet.io'
}, {
  decimals: [12],
  displayName: 'Bifrost',
  network: 'bifrost',
  prefix: 6,
  standardAccount: '*25519',
  symbols: ['BNC'],
  website: 'https://bifrost.finance/'
}, {
  decimals: [18],
  displayName: 'Edgeware',
  network: 'edgeware',
  prefix: 7,
  standardAccount: '*25519',
  symbols: ['EDG'],
  website: 'https://edgewa.re'
}, {
  decimals: [12],
  displayName: 'Karura',
  network: 'karura',
  prefix: 8,
  standardAccount: '*25519',
  symbols: ['KAR'],
  website: 'https://karura.network/'
}, {
  decimals: [18],
  displayName: 'Laminar Reynolds Canary',
  network: 'reynolds',
  prefix: 9,
  standardAccount: '*25519',
  symbols: ['REY'],
  website: 'http://laminar.network/'
}, {
  decimals: [12],
  displayName: 'Acala',
  network: 'acala',
  prefix: 10,
  standardAccount: '*25519',
  symbols: ['ACA'],
  website: 'https://acala.network/'
}, {
  decimals: [18],
  displayName: 'Laminar',
  network: 'laminar',
  prefix: 11,
  standardAccount: '*25519',
  symbols: ['LAMI'],
  website: 'http://laminar.network/'
}, {
  decimals: [6],
  displayName: 'Polymesh',
  network: 'polymesh',
  prefix: 12,
  standardAccount: '*25519',
  symbols: ['POLYX'],
  website: 'https://polymath.network/'
}, {
  decimals: [12],
  displayName: 'Integritee',
  network: 'integritee',
  prefix: 13,
  standardAccount: '*25519',
  symbols: ['TEER'],
  website: 'https://integritee.network'
}, {
  decimals: [0],
  displayName: 'Totem',
  network: 'totem',
  prefix: 14,
  standardAccount: '*25519',
  symbols: ['TOTEM'],
  website: 'https://totemaccounting.com'
}, {
  decimals: [12],
  displayName: 'Synesthesia',
  network: 'synesthesia',
  prefix: 15,
  standardAccount: '*25519',
  symbols: ['SYN'],
  website: 'https://synesthesia.network/'
}, {
  decimals: [12],
  displayName: 'Kulupu',
  network: 'kulupu',
  prefix: 16,
  standardAccount: '*25519',
  symbols: ['KLP'],
  website: 'https://kulupu.network/'
}, {
  decimals: null,
  displayName: 'Dark Mainnet',
  network: 'dark',
  prefix: 17,
  standardAccount: '*25519',
  symbols: null,
  website: null
}, {
  decimals: [9, 9],
  displayName: 'Darwinia Network',
  network: 'darwinia',
  prefix: 18,
  standardAccount: '*25519',
  symbols: ['RING', 'KTON'],
  website: 'https://darwinia.network/'
}, {
  decimals: [12],
  displayName: 'GeekCash',
  network: 'geek',
  prefix: 19,
  standardAccount: '*25519',
  symbols: ['GEEK'],
  website: 'https://geekcash.org'
}, {
  decimals: [12],
  displayName: 'Stafi',
  network: 'stafi',
  prefix: 20,
  standardAccount: '*25519',
  symbols: ['FIS'],
  website: 'https://stafi.io'
}, {
  decimals: [6],
  displayName: 'Dock Testnet',
  network: 'dock-testnet',
  prefix: 21,
  standardAccount: '*25519',
  symbols: ['DCK'],
  website: 'https://dock.io'
}, {
  decimals: [6],
  displayName: 'Dock Mainnet',
  network: 'dock-mainnet',
  prefix: 22,
  standardAccount: '*25519',
  symbols: ['DCK'],
  website: 'https://dock.io'
}, {
  decimals: null,
  displayName: 'ShiftNrg',
  network: 'shift',
  prefix: 23,
  standardAccount: '*25519',
  symbols: null,
  website: null
}, {
  decimals: [18],
  displayName: 'ZERO',
  network: 'zero',
  prefix: 24,
  standardAccount: '*25519',
  symbols: ['PLAY'],
  website: 'https://zero.io'
}, {
  decimals: [18],
  displayName: 'ZERO Alphaville',
  network: 'zero-alphaville',
  prefix: 25,
  standardAccount: '*25519',
  symbols: ['PLAY'],
  website: 'https://zero.io'
}, {
  decimals: [10],
  displayName: 'Jupiter',
  network: 'jupiter',
  prefix: 26,
  standardAccount: '*25519',
  symbols: ['jDOT'],
  website: 'https://jupiter.patract.io'
}, {
  decimals: null,
  displayName: 'Subsocial',
  network: 'subsocial',
  prefix: 28,
  standardAccount: '*25519',
  symbols: null,
  website: null
}, {
  decimals: [12, 12],
  displayName: 'CORD Network',
  network: 'cord',
  prefix: 29,
  standardAccount: '*25519',
  symbols: ['DHI', 'WAY'],
  website: 'https://cord.network/'
}, {
  decimals: [12],
  displayName: 'Phala Network',
  network: 'phala',
  prefix: 30,
  standardAccount: '*25519',
  symbols: ['PHA'],
  website: 'https://phala.network'
}, {
  decimals: [12],
  displayName: 'Litentry Network',
  network: 'litentry',
  prefix: 31,
  standardAccount: '*25519',
  symbols: ['LIT'],
  website: 'https://litentry.com/'
}, {
  decimals: [9],
  displayName: 'Robonomics',
  network: 'robonomics',
  prefix: 32,
  standardAccount: '*25519',
  symbols: ['XRT'],
  website: 'https://robonomics.network'
}, {
  decimals: null,
  displayName: 'DataHighway',
  network: 'datahighway',
  prefix: 33,
  standardAccount: '*25519',
  symbols: null,
  website: null
}, {
  decimals: [12],
  displayName: 'Ares Protocol',
  network: 'ares',
  prefix: 34,
  standardAccount: '*25519',
  symbols: ['ARES'],
  website: 'https://www.aresprotocol.com/'
}, {
  decimals: [15],
  displayName: 'Valiu Liquidity Network',
  network: 'vln',
  prefix: 35,
  standardAccount: '*25519',
  symbols: ['USDv'],
  website: 'https://valiu.com/'
}, {
  decimals: [18],
  displayName: 'Centrifuge Chain',
  network: 'centrifuge',
  prefix: 36,
  standardAccount: '*25519',
  symbols: ['CFG'],
  website: 'https://centrifuge.io/'
}, {
  decimals: [18],
  displayName: 'Nodle Chain',
  network: 'nodle',
  prefix: 37,
  standardAccount: '*25519',
  symbols: ['NODL'],
  website: 'https://nodle.io/'
}, {
  decimals: [18],
  displayName: 'KILT Chain',
  network: 'kilt',
  prefix: 38,
  standardAccount: '*25519',
  symbols: ['KILT'],
  website: 'https://kilt.io/'
}, {
  decimals: [18],
  displayName: 'MathChain mainnet',
  network: 'mathchain',
  prefix: 39,
  standardAccount: '*25519',
  symbols: ['MATH'],
  website: 'https://mathwallet.org'
}, {
  decimals: [18],
  displayName: 'MathChain testnet',
  network: 'mathchain-testnet',
  prefix: 40,
  standardAccount: '*25519',
  symbols: ['MATH'],
  website: 'https://mathwallet.org'
}, {
  decimals: null,
  displayName: 'Polimec Chain',
  network: 'poli',
  prefix: 41,
  standardAccount: '*25519',
  symbols: null,
  website: 'https://polimec.io/'
}, {
  decimals: null,
  displayName: 'Substrate',
  network: 'substrate',
  prefix: 42,
  standardAccount: '*25519',
  symbols: null,
  website: 'https://substrate.io/'
}, {
  decimals: null,
  displayName: 'Bare 32-bit ECDSA SECP-256k1 public key.',
  network: 'BareSecp256k1',
  prefix: 43,
  standardAccount: 'secp256k1',
  symbols: null,
  website: null
}, {
  decimals: [8],
  displayName: 'ChainX',
  network: 'chainx',
  prefix: 44,
  standardAccount: '*25519',
  symbols: ['PCX'],
  website: 'https://chainx.org/'
}, {
  decimals: [12, 12],
  displayName: 'UniArts Network',
  network: 'uniarts',
  prefix: 45,
  standardAccount: '*25519',
  symbols: ['UART', 'UINK'],
  website: 'https://uniarts.me'
}, {
  decimals: null,
  displayName: 'This prefix is reserved.',
  network: 'reserved46',
  prefix: 46,
  standardAccount: null,
  symbols: null,
  website: null
}, {
  decimals: null,
  displayName: 'This prefix is reserved.',
  network: 'reserved47',
  prefix: 47,
  standardAccount: null,
  symbols: null,
  website: null
}, {
  decimals: [12],
  displayName: 'Neatcoin Mainnet',
  network: 'neatcoin',
  prefix: 48,
  standardAccount: '*25519',
  symbols: ['NEAT'],
  website: 'https://neatcoin.org'
}, {
  decimals: [12],
  displayName: 'Picasso',
  network: 'picasso',
  prefix: 49,
  standardAccount: '*25519',
  symbols: ['PICA'],
  website: 'https://picasso.composable.finance'
}, {
  decimals: [12],
  displayName: 'Composable',
  network: 'composable',
  prefix: 50,
  standardAccount: '*25519',
  symbols: ['LAYR'],
  website: 'https://composable.finance'
}, {
  decimals: [9],
  displayName: 'xx network',
  network: 'xxnetwork',
  prefix: 55,
  standardAccount: '*25519',
  symbols: ['XX'],
  website: 'https://xx.network'
}, {
  decimals: [12],
  displayName: 'HydraDX',
  network: 'hydradx',
  prefix: 63,
  standardAccount: '*25519',
  symbols: ['HDX'],
  website: 'https://hydradx.io'
}, {
  decimals: [18],
  displayName: 'AvN Mainnet',
  network: 'aventus',
  prefix: 65,
  standardAccount: '*25519',
  symbols: ['AVT'],
  website: 'https://aventus.io'
}, {
  decimals: [12],
  displayName: 'Crust Network',
  network: 'crust',
  prefix: 66,
  standardAccount: '*25519',
  symbols: ['CRU'],
  website: 'https://crust.network'
}, {
  decimals: [0, 9, 9, 9, 9, 9, 9, 9],
  displayName: 'Equilibrium Network',
  network: 'equilibrium',
  prefix: 67,
  standardAccount: '*25519',
  symbols: ['Unknown', 'USD', 'EQ', 'ETH', 'BTC', 'EOS', 'DOT', 'CRV'],
  website: 'https://equilibrium.io'
}, {
  decimals: [18],
  displayName: 'SORA Network',
  network: 'sora',
  prefix: 69,
  standardAccount: '*25519',
  symbols: ['XOR'],
  website: 'https://sora.org'
}, {
  decimals: [10],
  displayName: 'Zeitgeist',
  network: 'zeitgeist',
  prefix: 73,
  standardAccount: '*25519',
  symbols: ['ZTG'],
  website: 'https://zeitgeist.pm'
}, {
  decimals: [12],
  displayName: 'Manta network',
  network: 'manta',
  prefix: 77,
  standardAccount: '*25519',
  symbols: ['MA'],
  website: 'https://manta.network'
}, {
  decimals: [12],
  displayName: 'Calamari: Manta Canary Network',
  network: 'calamari',
  prefix: 78,
  standardAccount: '*25519',
  symbols: ['KMA'],
  website: 'https://manta.network'
}, {
  decimals: [12],
  displayName: 'Polkadex Mainnet',
  network: 'polkadex',
  prefix: 88,
  standardAccount: '*25519',
  symbols: ['PDEX'],
  website: 'https://polkadex.trade'
}, {
  decimals: [18],
  displayName: 'PolkaSmith Canary Network',
  network: 'polkasmith',
  prefix: 98,
  standardAccount: '*25519',
  symbols: ['PKS'],
  website: 'https://polkafoundry.com'
}, {
  decimals: [18],
  displayName: 'PolkaFoundry Network',
  network: 'polkafoundry',
  prefix: 99,
  standardAccount: '*25519',
  symbols: ['PKF'],
  website: 'https://polkafoundry.com'
}, {
  decimals: [18],
  displayName: 'OriginTrail Parachain',
  network: 'origintrail-parachain',
  prefix: 101,
  standardAccount: 'secp256k1',
  symbols: ['TRAC'],
  website: 'https://origintrail.io'
}, {
  decimals: [10],
  displayName: 'Pontem Network',
  network: 'pontem-network',
  prefix: 105,
  standardAccount: '*25519',
  symbols: ['PONT'],
  website: 'https://pontem.network'
}, {
  decimals: [12],
  displayName: 'Heiko',
  network: 'heiko',
  prefix: 110,
  standardAccount: '*25519',
  symbols: ['HKO'],
  website: 'https://parallel.fi/'
}, {
  decimals: null,
  displayName: 'Integritee Incognito',
  network: 'integritee-incognito',
  prefix: 113,
  standardAccount: '*25519',
  symbols: null,
  website: 'https://integritee.network'
}, {
  decimals: [18],
  displayName: 'Clover Finance',
  network: 'clover',
  prefix: 128,
  standardAccount: '*25519',
  symbols: ['CLV'],
  website: 'https://clover.finance'
}, {
  decimals: [18],
  displayName: 'Altair',
  network: 'altair',
  prefix: 136,
  standardAccount: '*25519',
  symbols: ['AIR'],
  website: 'https://centrifuge.io/'
}, {
  decimals: [12],
  displayName: 'Parallel',
  network: 'parallel',
  prefix: 172,
  standardAccount: '*25519',
  symbols: ['PARA'],
  website: 'https://parallel.fi/'
}, {
  decimals: [18],
  displayName: 'Social Network',
  network: 'social-network',
  prefix: 252,
  standardAccount: '*25519',
  symbols: ['NET'],
  website: 'https://social.network'
}, {
  decimals: [15],
  displayName: 'QUARTZ by UNIQUE',
  network: 'quartz_mainnet',
  prefix: 255,
  standardAccount: '*25519',
  symbols: ['QTZ'],
  website: 'https://unique.network'
}, {
  decimals: [18],
  displayName: 'Pioneer Network by Bit.Country',
  network: 'pioneer_network',
  prefix: 268,
  standardAccount: '*25519',
  symbols: ['NEER'],
  website: 'https://bit.country'
}, {
  decimals: [18],
  displayName: 'Moonbeam',
  network: 'moonbeam',
  prefix: 1284,
  standardAccount: 'secp256k1',
  symbols: ['GLMR'],
  website: 'https://moonbeam.network'
}, {
  decimals: [18],
  displayName: 'Moonriver',
  network: 'moonriver',
  prefix: 1285,
  standardAccount: 'secp256k1',
  symbols: ['MOVR'],
  website: 'https://moonbeam.network'
}, {
  decimals: [12],
  displayName: 'Kapex',
  network: 'kapex',
  prefix: 2007,
  standardAccount: '*25519',
  symbols: ['KAPEX'],
  website: 'https://totemaccounting.com'
}, {
  decimals: [18],
  displayName: 'Subspace testnet',
  network: 'subspace_testnet',
  prefix: 2254,
  standardAccount: '*25519',
  symbols: ['tSSC'],
  website: 'https://subspace.network'
}, {
  decimals: [18],
  displayName: 'Subspace',
  network: 'subspace',
  prefix: 6094,
  standardAccount: '*25519',
  symbols: ['SSC'],
  website: 'https://subspace.network'
}, {
  decimals: [12],
  displayName: 'Basilisk',
  network: 'basilisk',
  prefix: 10041,
  standardAccount: '*25519',
  symbols: ['BSX'],
  website: 'https://bsx.fi'
}, {
  decimals: [12],
  displayName: 'CESS Testnet',
  network: 'cess-testnet',
  prefix: 10042,
  standardAccount: '*25519',
  symbols: ['TCESS'],
  website: 'https://cess.cloud'
}, {
  decimals: [12],
  displayName: 'CESS',
  network: 'cess',
  prefix: 10043,
  standardAccount: '*25519',
  symbols: ['CESS'],
  website: 'https://cess.cloud'
}, {
  decimals: [18],
  displayName: 'Automata ContextFree',
  network: 'contextfree',
  prefix: 11820,
  standardAccount: '*25519',
  symbols: ['CTX'],
  website: 'https://ata.network'
}];

/***/ }),
/* 188 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "checkAddressChecksum": () => (/* binding */ checkAddressChecksum)
/* harmony export */ });
/* harmony import */ var _sshash_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(189);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

function checkAddressChecksum(decoded) {
  const ss58Length = decoded[0] & 0b01000000 ? 2 : 1;
  const ss58Decoded = ss58Length === 1 ? decoded[0] : (decoded[0] & 0b00111111) << 2 | decoded[1] >> 6 | (decoded[1] & 0b00111111) << 8; // 32/33 bytes public + 2 bytes checksum + prefix

  const isPublicKey = [34 + ss58Length, 35 + ss58Length].includes(decoded.length);
  const length = decoded.length - (isPublicKey ? 2 : 1); // calculate the hash and do the checksum byte checks

  const hash = (0,_sshash_js__WEBPACK_IMPORTED_MODULE_0__.sshash)(decoded.subarray(0, length));
  const isValid = (decoded[0] & 0b10000000) === 0 && ![46, 47].includes(decoded[0]) && (isPublicKey ? decoded[decoded.length - 2] === hash[0] && decoded[decoded.length - 1] === hash[1] : decoded[decoded.length - 1] === hash[0]);
  return [isValid, length, ss58Length, ss58Decoded];
}

/***/ }),
/* 189 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "sshash": () => (/* binding */ sshash)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(170);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(197);
/* harmony import */ var _blake2_asU8a_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(190);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0


const SS58_PREFIX = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.stringToU8a)('SS58PRE');
function sshash(key) {
  return (0,_blake2_asU8a_js__WEBPACK_IMPORTED_MODULE_1__.blake2AsU8a)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aConcat)(SS58_PREFIX, key), 512);
}

/***/ }),
/* 190 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "blake2AsU8a": () => (/* binding */ blake2AsU8a),
/* harmony export */   "blake2AsHex": () => (/* binding */ blake2AsHex)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(177);
/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(137);
/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(195);
/* harmony import */ var _noble_hashes_lib_blake2b_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(191);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0





/**
 * @name blake2AsU8a
 * @summary Creates a blake2b u8a from the input.
 * @description
 * From a `Uint8Array` input, create the blake2b and return the result as a u8a with the specified `bitLength`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { blake2AsU8a } from '@polkadot/util-crypto';
 *
 * blake2AsU8a('abc'); // => [0xba, 0x80, 0xa5, 0x3f, 0x98, 0x1c, 0x4d, 0x0d]
 * ```
 */
function blake2AsU8a(data, bitLength = 256, key, onlyJs) {
  const byteLength = Math.ceil(bitLength / 8);
  const u8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(data);
  return !_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.hasBigInt || !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.isReady)() ? (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.blake2b)(u8a, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(key), byteLength) : (0,_noble_hashes_lib_blake2b_js__WEBPACK_IMPORTED_MODULE_3__.blake2b)(u8a, {
    dkLen: byteLength,
    key: key || undefined
  });
}
/**
 * @name blake2AsHex
 * @description Creates a blake2b hex from the input.
 */

const blake2AsHex = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_4__.createAsHex)(blake2AsU8a);

/***/ }),
/* 191 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "blake2b": () => (/* binding */ blake2b)
/* harmony export */ });
/* harmony import */ var _blake2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(194);
/* harmony import */ var _u64_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(192);
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(193);
/*! noble-hashes - MIT License (c) 2021 Paul Miller (paulmillr.com) */
// https://github.com/paulmillr/noble-hashes/pull/13


 // Same as SHA-512 but LE
// prettier-ignore

const IV = new Uint32Array([0xf3bcc908, 0x6a09e667, 0x84caa73b, 0xbb67ae85, 0xfe94f82b, 0x3c6ef372, 0x5f1d36f1, 0xa54ff53a, 0xade682d1, 0x510e527f, 0x2b3e6c1f, 0x9b05688c, 0xfb41bd6b, 0x1f83d9ab, 0x137e2179, 0x5be0cd19]); // Temporary buffer

const BUF = new Uint32Array(32); // Mixing function G splitted in two halfs

function G1(a, b, c, d, msg, x) {
  // NOTE: V is LE here
  const Xl = msg[x],
        Xh = msg[x + 1]; // prettier-ignore

  let Al = BUF[2 * a],
      Ah = BUF[2 * a + 1]; // prettier-ignore

  let Bl = BUF[2 * b],
      Bh = BUF[2 * b + 1]; // prettier-ignore

  let Cl = BUF[2 * c],
      Ch = BUF[2 * c + 1]; // prettier-ignore

  let Dl = BUF[2 * d],
      Dh = BUF[2 * d + 1]; // prettier-ignore
  // v[a] = (v[a] + v[b] + x) | 0;

  let ll = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add3L(Al, Bl, Xl);
  Ah = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add3H(ll, Ah, Bh, Xh);
  Al = ll | 0; // v[d] = rotr(v[d] ^ v[a], 32)

  ({
    Dh,
    Dl
  } = {
    Dh: Dh ^ Ah,
    Dl: Dl ^ Al
  });
  ({
    Dh,
    Dl
  } = {
    Dh: _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotr32H(Dh, Dl),
    Dl: _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotr32L(Dh, Dl)
  }); // v[c] = (v[c] + v[d]) | 0;

  ({
    h: Ch,
    l: Cl
  } = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add(Ch, Cl, Dh, Dl)); // v[b] = rotr(v[b] ^ v[c], 24)

  ({
    Bh,
    Bl
  } = {
    Bh: Bh ^ Ch,
    Bl: Bl ^ Cl
  });
  ({
    Bh,
    Bl
  } = {
    Bh: _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrSH(Bh, Bl, 24),
    Bl: _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrSL(Bh, Bl, 24)
  });
  BUF[2 * a] = Al, BUF[2 * a + 1] = Ah;
  BUF[2 * b] = Bl, BUF[2 * b + 1] = Bh;
  BUF[2 * c] = Cl, BUF[2 * c + 1] = Ch;
  BUF[2 * d] = Dl, BUF[2 * d + 1] = Dh;
}

function G2(a, b, c, d, msg, x) {
  // NOTE: V is LE here
  const Xl = msg[x],
        Xh = msg[x + 1]; // prettier-ignore

  let Al = BUF[2 * a],
      Ah = BUF[2 * a + 1]; // prettier-ignore

  let Bl = BUF[2 * b],
      Bh = BUF[2 * b + 1]; // prettier-ignore

  let Cl = BUF[2 * c],
      Ch = BUF[2 * c + 1]; // prettier-ignore

  let Dl = BUF[2 * d],
      Dh = BUF[2 * d + 1]; // prettier-ignore
  // v[a] = (v[a] + v[b] + x) | 0;

  let ll = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add3L(Al, Bl, Xl);
  Ah = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add3H(ll, Ah, Bh, Xh);
  Al = ll | 0; // v[d] = rotr(v[d] ^ v[a], 16)

  ({
    Dh,
    Dl
  } = {
    Dh: Dh ^ Ah,
    Dl: Dl ^ Al
  });
  ({
    Dh,
    Dl
  } = {
    Dh: _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrSH(Dh, Dl, 16),
    Dl: _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrSL(Dh, Dl, 16)
  }); // v[c] = (v[c] + v[d]) | 0;

  ({
    h: Ch,
    l: Cl
  } = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add(Ch, Cl, Dh, Dl)); // v[b] = rotr(v[b] ^ v[c], 63)

  ({
    Bh,
    Bl
  } = {
    Bh: Bh ^ Ch,
    Bl: Bl ^ Cl
  });
  ({
    Bh,
    Bl
  } = {
    Bh: _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrBH(Bh, Bl, 63),
    Bl: _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrBL(Bh, Bl, 63)
  });
  BUF[2 * a] = Al, BUF[2 * a + 1] = Ah;
  BUF[2 * b] = Bl, BUF[2 * b + 1] = Bh;
  BUF[2 * c] = Cl, BUF[2 * c + 1] = Ch;
  BUF[2 * d] = Dl, BUF[2 * d + 1] = Dh;
}

class BLAKE2b extends _blake2_js__WEBPACK_IMPORTED_MODULE_1__.BLAKE2 {
  // Same as SHA-512, but LE
  constructor(opts = {}) {
    super(128, opts.dkLen === undefined ? 64 : opts.dkLen, opts, 64, 16, 16);
    this.v0l = IV[0] | 0;
    this.v0h = IV[1] | 0;
    this.v1l = IV[2] | 0;
    this.v1h = IV[3] | 0;
    this.v2l = IV[4] | 0;
    this.v2h = IV[5] | 0;
    this.v3l = IV[6] | 0;
    this.v3h = IV[7] | 0;
    this.v4l = IV[8] | 0;
    this.v4h = IV[9] | 0;
    this.v5l = IV[10] | 0;
    this.v5h = IV[11] | 0;
    this.v6l = IV[12] | 0;
    this.v6h = IV[13] | 0;
    this.v7l = IV[14] | 0;
    this.v7h = IV[15] | 0;
    const keyLength = opts.key ? opts.key.length : 0;
    this.v0l ^= this.outputLen | keyLength << 8 | 0x01 << 16 | 0x01 << 24;

    if (opts.salt) {
      const salt = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.u32)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.toBytes)(opts.salt));
      this.v4l ^= salt[0];
      this.v4h ^= salt[1];
      this.v5l ^= salt[2];
      this.v5h ^= salt[3];
    }

    if (opts.personalization) {
      const pers = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.u32)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.toBytes)(opts.personalization));
      this.v6l ^= pers[0];
      this.v6h ^= pers[1];
      this.v7l ^= pers[2];
      this.v7h ^= pers[3];
    }

    if (opts.key) {
      // Pad to blockLen and update
      const tmp = new Uint8Array(this.blockLen);
      tmp.set((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.toBytes)(opts.key));
      this.update(tmp);
    }
  } // prettier-ignore


  get() {
    let {
      v0l,
      v0h,
      v1l,
      v1h,
      v2l,
      v2h,
      v3l,
      v3h,
      v4l,
      v4h,
      v5l,
      v5h,
      v6l,
      v6h,
      v7l,
      v7h
    } = this;
    return [v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h];
  } // prettier-ignore


  set(v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h) {
    this.v0l = v0l | 0;
    this.v0h = v0h | 0;
    this.v1l = v1l | 0;
    this.v1h = v1h | 0;
    this.v2l = v2l | 0;
    this.v2h = v2h | 0;
    this.v3l = v3l | 0;
    this.v3h = v3h | 0;
    this.v4l = v4l | 0;
    this.v4h = v4h | 0;
    this.v5l = v5l | 0;
    this.v5h = v5h | 0;
    this.v6l = v6l | 0;
    this.v6h = v6h | 0;
    this.v7l = v7l | 0;
    this.v7h = v7h | 0;
  }

  compress(msg, offset, isLast) {
    this.get().forEach((v, i) => BUF[i] = v); // First half from state.

    BUF.set(IV, 16); // Second half from IV.

    let {
      h,
      l
    } = _u64_js__WEBPACK_IMPORTED_MODULE_0__.fromBig(BigInt(this.length));
    BUF[24] = IV[8] ^ l; // Low word of the offset.

    BUF[25] = IV[9] ^ h; // High word.
    // Invert all bits for last block

    if (isLast) {
      BUF[28] = ~BUF[28];
      BUF[29] = ~BUF[29];
    }

    let j = 0;
    const s = _blake2_js__WEBPACK_IMPORTED_MODULE_1__.SIGMA;

    for (let i = 0; i < 12; i++) {
      G1(0, 4, 8, 12, msg, offset + 2 * s[j++]);
      G2(0, 4, 8, 12, msg, offset + 2 * s[j++]);
      G1(1, 5, 9, 13, msg, offset + 2 * s[j++]);
      G2(1, 5, 9, 13, msg, offset + 2 * s[j++]);
      G1(2, 6, 10, 14, msg, offset + 2 * s[j++]);
      G2(2, 6, 10, 14, msg, offset + 2 * s[j++]);
      G1(3, 7, 11, 15, msg, offset + 2 * s[j++]);
      G2(3, 7, 11, 15, msg, offset + 2 * s[j++]);
      G1(0, 5, 10, 15, msg, offset + 2 * s[j++]);
      G2(0, 5, 10, 15, msg, offset + 2 * s[j++]);
      G1(1, 6, 11, 12, msg, offset + 2 * s[j++]);
      G2(1, 6, 11, 12, msg, offset + 2 * s[j++]);
      G1(2, 7, 8, 13, msg, offset + 2 * s[j++]);
      G2(2, 7, 8, 13, msg, offset + 2 * s[j++]);
      G1(3, 4, 9, 14, msg, offset + 2 * s[j++]);
      G2(3, 4, 9, 14, msg, offset + 2 * s[j++]);
    }

    this.v0l ^= BUF[0] ^ BUF[16];
    this.v0h ^= BUF[1] ^ BUF[17];
    this.v1l ^= BUF[2] ^ BUF[18];
    this.v1h ^= BUF[3] ^ BUF[19];
    this.v2l ^= BUF[4] ^ BUF[20];
    this.v2h ^= BUF[5] ^ BUF[21];
    this.v3l ^= BUF[6] ^ BUF[22];
    this.v3h ^= BUF[7] ^ BUF[23];
    this.v4l ^= BUF[8] ^ BUF[24];
    this.v4h ^= BUF[9] ^ BUF[25];
    this.v5l ^= BUF[10] ^ BUF[26];
    this.v5h ^= BUF[11] ^ BUF[27];
    this.v6l ^= BUF[12] ^ BUF[28];
    this.v6h ^= BUF[13] ^ BUF[29];
    this.v7l ^= BUF[14] ^ BUF[30];
    this.v7h ^= BUF[15] ^ BUF[31];
    BUF.fill(0);
  }

  destroy() {
    this.destroyed = true;
    this.buffer32.fill(0);
    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  }

}

const blake2b = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapConstructorWithOpts)(opts => new BLAKE2b(opts));

/***/ }),
/* 192 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fromBig": () => (/* binding */ fromBig),
/* harmony export */   "split": () => (/* binding */ split),
/* harmony export */   "toBig": () => (/* binding */ toBig),
/* harmony export */   "shrSH": () => (/* binding */ shrSH),
/* harmony export */   "shrSL": () => (/* binding */ shrSL),
/* harmony export */   "rotrSH": () => (/* binding */ rotrSH),
/* harmony export */   "rotrSL": () => (/* binding */ rotrSL),
/* harmony export */   "rotrBH": () => (/* binding */ rotrBH),
/* harmony export */   "rotrBL": () => (/* binding */ rotrBL),
/* harmony export */   "rotr32H": () => (/* binding */ rotr32H),
/* harmony export */   "rotr32L": () => (/* binding */ rotr32L),
/* harmony export */   "rotlSH": () => (/* binding */ rotlSH),
/* harmony export */   "rotlSL": () => (/* binding */ rotlSL),
/* harmony export */   "rotlBH": () => (/* binding */ rotlBH),
/* harmony export */   "rotlBL": () => (/* binding */ rotlBL),
/* harmony export */   "add": () => (/* binding */ add),
/* harmony export */   "add3L": () => (/* binding */ add3L),
/* harmony export */   "add3H": () => (/* binding */ add3H),
/* harmony export */   "add4L": () => (/* binding */ add4L),
/* harmony export */   "add4H": () => (/* binding */ add4H),
/* harmony export */   "add5L": () => (/* binding */ add5L),
/* harmony export */   "add5H": () => (/* binding */ add5H)
/* harmony export */ });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(193);
/*! noble-hashes - MIT License (c) 2021 Paul Miller (paulmillr.com) */
// https://github.com/paulmillr/noble-hashes/pull/13


const U32_MASK64 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__._n)(2 ** 32 - 1);

const _32n = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__._n)(32);

function fromBig(n, le = false) {
  if (le) return {
    h: Number(n & U32_MASK64),
    l: Number(n >> _32n & U32_MASK64)
  };
  return {
    h: Number(n >> _32n & U32_MASK64) | 0,
    l: Number(n & U32_MASK64) | 0
  };
}
function split(lst, le = false) {
  let [Ah, Al] = [new Uint32Array(lst.length), new Uint32Array(lst.length)];

  for (let i = 0; i < lst.length; i++) {
    const {
      h,
      l
    } = fromBig(lst[i], le);
    [Ah[i], Al[i]] = [h, l];
  }

  return [Ah, Al];
}
const toBig = (h, l) => BigInt(h >>> 0) << _32n | BigInt(l >>> 0); // for Shift in [0, 32)

const shrSH = (h, l, s) => h >>> s;
const shrSL = (h, l, s) => h << 32 - s | l >>> s; // Right rotate for Shift in [1, 32)

const rotrSH = (h, l, s) => h >>> s | l << 32 - s;
const rotrSL = (h, l, s) => h << 32 - s | l >>> s; // Right rotate for Shift in (32, 64), NOTE: 32 is special case.

const rotrBH = (h, l, s) => h << 64 - s | l >>> s - 32;
const rotrBL = (h, l, s) => h >>> s - 32 | l << 64 - s; // Right rotate for shift===32 (just swaps l&h)

const rotr32H = (h, l) => l;
const rotr32L = (h, l) => h; // Left rotate for Shift in [1, 32)

const rotlSH = (h, l, s) => h << s | l >>> 32 - s;
const rotlSL = (h, l, s) => l << s | h >>> 32 - s; // Left rotate for Shift in (32, 64), NOTE: 32 is special case.

const rotlBH = (h, l, s) => l << s - 32 | h >>> 64 - s;
const rotlBL = (h, l, s) => h << s - 32 | l >>> 64 - s; // JS uses 32-bit signed integers for bitwise operations which means we cannot
// simple take carry out of low bit sum by shift, we need to use division.

function add(Ah, Al, Bh, Bl) {
  const l = (Al >>> 0) + (Bl >>> 0);
  return {
    h: Ah + Bh + (l / 2 ** 32 | 0) | 0,
    l: l | 0
  };
} // Addition with more than 2 elements

const add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);
const add3H = (low, Ah, Bh, Ch) => Ah + Bh + Ch + (low / 2 ** 32 | 0) | 0;
const add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);
const add4H = (low, Ah, Bh, Ch, Dh) => Ah + Bh + Ch + Dh + (low / 2 ** 32 | 0) | 0;
const add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);
const add5H = (low, Ah, Bh, Ch, Dh, Eh) => Ah + Bh + Ch + Dh + Eh + (low / 2 ** 32 | 0) | 0;

/***/ }),
/* 193 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "_n": () => (/* binding */ _n),
/* harmony export */   "u8": () => (/* binding */ u8),
/* harmony export */   "u32": () => (/* binding */ u32),
/* harmony export */   "createView": () => (/* binding */ createView),
/* harmony export */   "rotr": () => (/* binding */ rotr),
/* harmony export */   "isLE": () => (/* binding */ isLE),
/* harmony export */   "bytesToHex": () => (/* binding */ bytesToHex),
/* harmony export */   "nextTick": () => (/* binding */ nextTick),
/* harmony export */   "asyncLoop": () => (/* binding */ asyncLoop),
/* harmony export */   "toBytes": () => (/* binding */ toBytes),
/* harmony export */   "assertNumber": () => (/* binding */ assertNumber),
/* harmony export */   "assertBool": () => (/* binding */ assertBool),
/* harmony export */   "assertHash": () => (/* binding */ assertHash),
/* harmony export */   "Hash": () => (/* binding */ Hash),
/* harmony export */   "checkOpts": () => (/* binding */ checkOpts),
/* harmony export */   "wrapConstructor": () => (/* binding */ wrapConstructor),
/* harmony export */   "wrapConstructorWithOpts": () => (/* binding */ wrapConstructorWithOpts),
/* harmony export */   "crypto": () => (/* binding */ crypto),
/* harmony export */   "randomBytes": () => (/* binding */ randomBytes)
/* harmony export */ });
/*! noble-hashes - MIT License (c) 2021 Paul Miller (paulmillr.com) */
// https://github.com/paulmillr/noble-hashes/pull/13
// prettier-ignore
// helper to protect against older bundlers
const _n = typeof BigInt !== 'undefined' ? BigInt : () => Number.NaN; // Cast array to different type

const u8 = arr => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);
const u32 = arr => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4)); // Cast array to view

const createView = arr => new DataView(arr.buffer, arr.byteOffset, arr.byteLength); // The rotate right (circular right shift) operation for uint32

const rotr = (word, shift) => word << 32 - shift | word >>> shift;
const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44; // There is almost no big endian hardware, but js typed arrays uses platform specific endianess.
// So, just to be sure not to corrupt anything.

if (!isLE) throw new Error('Non little-endian hardware is not supported');
const hexes = Array.from({
  length: 256
}, (v, i) => i.toString(16).padStart(2, '0'));
function bytesToHex(uint8a) {
  // pre-caching chars could speed this up 6x.
  let hex = '';

  for (let i = 0; i < uint8a.length; i++) {
    hex += hexes[uint8a[i]];
  }

  return hex;
} // Currently avoid insertion of polyfills with packers (browserify/webpack/etc)
// But setTimeout is pretty slow, maybe worth to investigate howto do minimal polyfill here

const nextTick = (() => {
  const nodeRequire = typeof module !== 'undefined' && typeof module.require === 'function' && module.require.bind(module);

  try {
    if (nodeRequire) {
      const {
        setImmediate
      } = nodeRequire('timers');
      return () => new Promise(resolve => setImmediate(resolve));
    }
  } catch (e) {}

  return () => new Promise(resolve => setTimeout(resolve, 0));
})(); // Returns control to thread each 'tick' ms to avoid blocking

async function asyncLoop(iters, tick, cb) {
  let ts = Date.now();

  for (let i = 0; i < iters; i++) {
    cb(i); // Date.now() is not monotonic, so in case if clock goes backwards we return return control too

    const diff = Date.now() - ts;
    if (diff >= 0 && diff < tick) continue;
    await nextTick();
    ts += diff;
  }
}
function toBytes(data) {
  if (typeof data === 'string') data = new TextEncoder().encode(data);
  if (!(data instanceof Uint8Array)) throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);
  return data;
}
function assertNumber(n) {
  if (!Number.isSafeInteger(n)) throw new Error(`Wrong integer: ${n}`);
}
function assertBool(b) {
  if (typeof b !== 'boolean') {
    throw new Error(`Expected boolean, not ${b}`);
  }
}
function assertHash(hash) {
  if (typeof hash !== 'function' || typeof hash.init !== 'function') throw new Error('Hash should be wrapped by utils.wrapConstructor');
  assertNumber(hash.outputLen);
  assertNumber(hash.blockLen);
} // For runtime check if class implements interface

class Hash {
  constructor() {
    this.blockLen = void 0;
    this.outputLen = void 0;
  }

  // Safe version that clones internal state
  clone() {
    return this._cloneInto();
  }

}

// Check if object doens't have custom constructor (like Uint8Array/Array)
const isPlainObject = obj => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;

function checkOpts(def, _opts) {
  if (_opts !== undefined && (typeof _opts !== 'object' || !isPlainObject(_opts))) throw new TypeError('Options should be object or undefined');
  const opts = Object.assign(def, _opts);
  return opts;
}
function wrapConstructor(hashConstructor) {
  const hashC = message => hashConstructor().update(toBytes(message)).digest();

  const tmp = hashConstructor();
  hashC.outputLen = tmp.outputLen;
  hashC.blockLen = tmp.blockLen;

  hashC.create = () => hashConstructor();

  hashC.init = hashC.create;
  return hashC;
}
function wrapConstructorWithOpts(hashCons) {
  const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();

  const tmp = hashCons({});
  hashC.outputLen = tmp.outputLen;
  hashC.blockLen = tmp.blockLen;

  hashC.create = opts => hashCons(opts);

  hashC.init = hashC.create;
  return hashC;
}
const crypto = (() => {
  const webCrypto = typeof self === 'object' && 'crypto' in self ? self.crypto : undefined;
  const nodeRequire = typeof module !== 'undefined' && typeof require === 'function';
  return {
    node: nodeRequire && !webCrypto ? require('crypto') : undefined,
    web: webCrypto
  };
})();
function randomBytes(bytesLength = 32) {
  if (crypto.web) {
    return crypto.web.getRandomValues(new Uint8Array(bytesLength));
  } else if (crypto.node) {
    return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);
  } else {
    throw new Error("The environment doesn't have randomBytes function");
  }
}

/***/ }),
/* 194 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SIGMA": () => (/* binding */ SIGMA),
/* harmony export */   "BLAKE2": () => (/* binding */ BLAKE2)
/* harmony export */ });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(193);
/*! noble-hashes - MIT License (c) 2021 Paul Miller (paulmillr.com) */
// https://github.com/paulmillr/noble-hashes/pull/13
 // prettier-ignore

const SIGMA = new Uint8Array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, // For BLAKE2b, the two extra permutations for rounds 10 and 11 are SIGMA[10..11] = SIGMA[0..1].
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3]);
class BLAKE2 extends _utils_js__WEBPACK_IMPORTED_MODULE_0__.Hash {
  constructor(blockLen, outputLen, opts = {}, keyLen, saltLen, persLen) {
    super();
    this.blockLen = blockLen;
    this.outputLen = outputLen;
    this.buffer = void 0;
    this.buffer32 = void 0;
    this.length = 0;
    this.pos = 0;
    this.finished = false;
    this.destroyed = false;
    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertNumber)(blockLen);
    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertNumber)(outputLen);
    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertNumber)(keyLen);
    if (outputLen < 0 || outputLen > keyLen) throw new Error('Blake2: outputLen bigger than keyLen');
    if (opts.key !== undefined && (opts.key.length < 1 || opts.key.length > keyLen)) throw new Error(`Key should be up 1..${keyLen} byte long or undefined`);
    if (opts.salt !== undefined && opts.salt.length !== saltLen) throw new Error(`Salt should be ${saltLen} byte long or undefined`);
    if (opts.personalization !== undefined && opts.personalization.length !== persLen) throw new Error(`Personalization should be ${persLen} byte long or undefined`);
    this.buffer32 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.u32)(this.buffer = new Uint8Array(blockLen));
  }

  update(data) {
    if (this.destroyed) throw new Error('instance is destroyed'); // Main difference with other hashes: there is flag for last block,
    // so we cannot process current block before we know that there
    // is the next one. This significantly complicates logic and reduces ability
    // to do zero-copy processing

    const {
      finished,
      blockLen,
      buffer,
      buffer32
    } = this;
    if (finished) throw new Error('digest() was already called');
    data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.toBytes)(data);
    const len = data.length;

    for (let pos = 0; pos < len;) {
      // If buffer is full and we still have input (don't process last block, same as blake2s)
      if (this.pos === blockLen) {
        this.compress(buffer32, 0, false);
        this.pos = 0;
      }

      const take = Math.min(blockLen - this.pos, len - pos);
      const dataOffset = data.byteOffset + pos; // full block && aligned to 4 bytes && not last in input

      if (take === blockLen && !(dataOffset % 4) && pos + take < len) {
        const data32 = new Uint32Array(data.buffer, dataOffset, Math.floor((len - pos) / 4));

        for (let pos32 = 0; pos + blockLen < len; pos32 += buffer32.length, pos += blockLen) {
          this.length += blockLen;
          this.compress(data32, pos32, false);
        }

        continue;
      }

      buffer.set(data.subarray(pos, pos + take), this.pos);
      this.pos += take;
      this.length += take;
      pos += take;
    }

    return this;
  }

  digestInto(out) {
    if (this.destroyed) throw new Error('instance is destroyed');
    if (!(out instanceof Uint8Array) || out.length < this.outputLen) throw new Error('_Blake2: Invalid output buffer');
    const {
      finished,
      pos,
      buffer32
    } = this;
    if (finished) throw new Error('digest() was already called');
    this.finished = true; // Padding

    this.buffer.subarray(pos).fill(0);
    this.compress(buffer32, 0, true);
    const out32 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.u32)(out);
    this.get().forEach((v, i) => out32[i] = v);
  }

  digest() {
    const {
      buffer,
      outputLen
    } = this;
    this.digestInto(buffer);
    const res = buffer.slice(0, outputLen);
    this.destroy();
    return res;
  }

  _cloneInto(to) {
    const {
      buffer,
      length,
      finished,
      destroyed,
      outputLen,
      pos
    } = this;
    to || (to = new this.constructor({
      dkLen: outputLen
    }));
    to.set(...this.get());
    to.length = length;
    to.finished = finished;
    to.destroyed = destroyed;
    to.outputLen = outputLen;
    to.buffer.set(buffer);
    to.pos = pos;
    return to;
  }

}

/***/ }),
/* 195 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAsHex": () => (/* binding */ createAsHex),
/* harmony export */   "createBitHasher": () => (/* binding */ createBitHasher)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(196);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
 // eslint-disable-next-line @typescript-eslint/no-explicit-any

function createAsHex(fn) {
  return (...args) => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToHex)(fn(...args));
}
function createBitHasher(bitLength, fn) {
  return (data, onlyJs) => fn(data, bitLength, onlyJs);
}

/***/ }),
/* 196 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "u8aToHex": () => (/* binding */ u8aToHex)
/* harmony export */ });
/* harmony import */ var _hex_alphabet_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(168);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/** @internal */

function hex(value) {
  const mod = value.length % 2;
  const length = value.length - mod;
  const dv = new DataView(value.buffer, value.byteOffset);
  let result = '';

  for (let i = 0; i < length; i += 2) {
    result += _hex_alphabet_js__WEBPACK_IMPORTED_MODULE_0__.U16_TO_HEX[dv.getUint16(i)];
  }

  if (mod) {
    result += _hex_alphabet_js__WEBPACK_IMPORTED_MODULE_0__.U8_TO_HEX[dv.getUint8(length)];
  }

  return result;
}
/**
 * @name u8aToHex
 * @summary Creates a hex string from a Uint8Array object.
 * @description
 * `UInt8Array` input values return the actual hex string. `null` or `undefined` values returns an `0x` string.
 * @example
 * <BR>
 *
 * ```javascript
 * import { u8aToHex } from '@polkadot/util';
 *
 * u8aToHex(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0xf])); // 0x68656c0f
 * ```
 */


function u8aToHex(value, bitLength = -1, isPrefixed = true) {
  const length = Math.ceil(bitLength / 8);
  return `${isPrefixed ? '0x' : ''}${!value || !value.length ? '' : length > 0 && value.length > length ? `${hex(value.subarray(0, length / 2))}…${hex(value.subarray(value.length - length / 2))}` : hex(value)}`;
}

/***/ }),
/* 197 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "u8aConcat": () => (/* binding */ u8aConcat)
/* harmony export */ });
/* harmony import */ var _toU8a_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(166);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name u8aConcat
 * @summary Creates a concatenated Uint8Array from the inputs.
 * @description
 * Concatenates the input arrays into a single `UInt8Array`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { { u8aConcat } from '@polkadot/util';
 *
 * u8aConcat(
 *   new Uint8Array([1, 2, 3]),
 *   new Uint8Array([4, 5, 6])
 * ); // [1, 2, 3, 4, 5, 6]
 * ```
 */

function u8aConcat(...list) {
  let length = 0;
  let offset = 0;
  const u8as = new Array(list.length);

  for (let i = 0; i < list.length; i++) {
    u8as[i] = (0,_toU8a_js__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(list[i]);
    length += u8as[i].length;
  }

  const result = new Uint8Array(length);

  for (let i = 0; i < u8as.length; i++) {
    result.set(u8as[i], offset);
    offset += u8as[i].length;
  }

  return result;
}

/***/ }),
/* 198 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ethereumEncode": () => (/* binding */ ethereumEncode)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(196);
/* harmony import */ var _keccak_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(199);
/* harmony import */ var _secp256k1_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(201);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0




function getH160(u8a) {
  if ([33, 65].includes(u8a.length)) {
    u8a = (0,_keccak_index_js__WEBPACK_IMPORTED_MODULE_0__.keccakAsU8a)((0,_secp256k1_index_js__WEBPACK_IMPORTED_MODULE_1__.secp256k1Expand)(u8a));
  }

  return u8a.slice(-20);
}

function ethereumEncode(addressOrPublic) {
  if (!addressOrPublic) {
    return '0x';
  }

  const u8aAddress = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aToU8a)(addressOrPublic);
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.assert)([20, 32, 33, 65].includes(u8aAddress.length), 'Invalid address or publicKey passed');
  const address = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.u8aToHex)(getH160(u8aAddress), -1, false);
  const hash = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.u8aToHex)((0,_keccak_index_js__WEBPACK_IMPORTED_MODULE_0__.keccakAsU8a)(address), -1, false);
  let result = '';

  for (let i = 0; i < 40; i++) {
    result = `${result}${parseInt(hash[i], 16) > 7 ? address[i].toUpperCase() : address[i]}`;
  }

  return `0x${result}`;
}

/***/ }),
/* 199 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "keccakAsU8a": () => (/* binding */ keccakAsU8a),
/* harmony export */   "keccak256AsU8a": () => (/* binding */ keccak256AsU8a),
/* harmony export */   "keccak512AsU8a": () => (/* binding */ keccak512AsU8a),
/* harmony export */   "keccakAsHex": () => (/* binding */ keccakAsHex)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(177);
/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(137);
/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(195);
/* harmony import */ var _noble_hashes_lib_sha3_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(200);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0





/**
 * @name keccakAsU8a
 * @summary Creates a keccak Uint8Array from the input.
 * @description
 * From either a `string` or a `Buffer` input, create the keccak and return the result as a `Uint8Array`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { keccakAsU8a } from '@polkadot/util-crypto';
 *
 * keccakAsU8a('123'); // => Uint8Array
 * ```
 */
function keccakAsU8a(value, bitLength = 256, onlyJs) {
  const is256 = bitLength === 256;
  const u8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(value);
  return !_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.hasBigInt || !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.isReady)() ? is256 ? (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.keccak256)(u8a) : (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.keccak512)(u8a) : is256 ? (0,_noble_hashes_lib_sha3_js__WEBPACK_IMPORTED_MODULE_3__.keccak_256)(u8a) : (0,_noble_hashes_lib_sha3_js__WEBPACK_IMPORTED_MODULE_3__.keccak_512)(u8a);
}
/**
 * @name keccak256AsU8a
 * @description Creates a keccak256 Uint8Array from the input.
 */

const keccak256AsU8a = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_4__.createBitHasher)(256, keccakAsU8a);
/**
 * @name keccak512AsU8a
 * @description Creates a keccak512 Uint8Array from the input.
 */

const keccak512AsU8a = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_4__.createBitHasher)(512, keccakAsU8a);
/**
 * @name keccakAsHex
 * @description Creates a keccak hex string from the input.
 */

const keccakAsHex = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_4__.createAsHex)(keccakAsU8a);

/***/ }),
/* 200 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "keccakP": () => (/* binding */ keccakP),
/* harmony export */   "Keccak": () => (/* binding */ Keccak),
/* harmony export */   "sha3_224": () => (/* binding */ sha3_224),
/* harmony export */   "sha3_256": () => (/* binding */ sha3_256),
/* harmony export */   "sha3_384": () => (/* binding */ sha3_384),
/* harmony export */   "sha3_512": () => (/* binding */ sha3_512),
/* harmony export */   "keccak_224": () => (/* binding */ keccak_224),
/* harmony export */   "keccak_256": () => (/* binding */ keccak_256),
/* harmony export */   "keccak_384": () => (/* binding */ keccak_384),
/* harmony export */   "keccak_512": () => (/* binding */ keccak_512),
/* harmony export */   "shake128": () => (/* binding */ shake128),
/* harmony export */   "shake256": () => (/* binding */ shake256)
/* harmony export */ });
/* harmony import */ var _u64_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(192);
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(193);
/*! noble-hashes - MIT License (c) 2021 Paul Miller (paulmillr.com) */
// https://github.com/paulmillr/noble-hashes/pull/13



const _0n = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__._n)(0);

const _1n = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__._n)(1);

const _2n = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__._n)(2);

const _7n = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__._n)(7);

const _256n = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__._n)(256);

const _0x71n = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__._n)(0x71); // Various per round constants calculations


const [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];

for (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {
  // Pi
  [x, y] = [y, (2 * x + 3 * y) % 5];
  SHA3_PI.push(2 * (5 * y + x)); // Rotational

  SHA3_ROTL.push((round + 1) * (round + 2) / 2 % 64); // Iota

  let t = _0n;

  for (let j = 0; j < 7; j++) {
    R = (R << _1n ^ (R >> _7n) * _0x71n) % _256n;
    if (R & _2n) t ^= _1n << (_1n << BigInt(j)) - _1n;
  }

  _SHA3_IOTA.push(t);
}

const [SHA3_IOTA_H, SHA3_IOTA_L] = _u64_js__WEBPACK_IMPORTED_MODULE_1__.split(_SHA3_IOTA, true); // Left rotation (without 0, 32, 64)

const rotlH = (h, l, s) => s > 32 ? _u64_js__WEBPACK_IMPORTED_MODULE_1__.rotlBH(h, l, s) : _u64_js__WEBPACK_IMPORTED_MODULE_1__.rotlSH(h, l, s);

const rotlL = (h, l, s) => s > 32 ? _u64_js__WEBPACK_IMPORTED_MODULE_1__.rotlBL(h, l, s) : _u64_js__WEBPACK_IMPORTED_MODULE_1__.rotlSL(h, l, s); // Same as keccakf1600, but allows to skip some rounds


function keccakP(s, rounds = 24) {
  const B = new Uint32Array(5 * 2); // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)

  for (let round = 24 - rounds; round < 24; round++) {
    // Theta θ
    for (let x = 0; x < 10; x++) B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];

    for (let x = 0; x < 10; x += 2) {
      const idx1 = (x + 8) % 10;
      const idx0 = (x + 2) % 10;
      const B0 = B[idx0];
      const B1 = B[idx0 + 1];
      const Th = rotlH(B0, B1, 1) ^ B[idx1];
      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];

      for (let y = 0; y < 50; y += 10) {
        s[x + y] ^= Th;
        s[x + y + 1] ^= Tl;
      }
    } // Rho (ρ) and Pi (π)


    let curH = s[2];
    let curL = s[3];

    for (let t = 0; t < 24; t++) {
      const shift = SHA3_ROTL[t];
      const Th = rotlH(curH, curL, shift);
      const Tl = rotlL(curH, curL, shift);
      const PI = SHA3_PI[t];
      curH = s[PI];
      curL = s[PI + 1];
      s[PI] = Th;
      s[PI + 1] = Tl;
    } // Chi (χ)


    for (let y = 0; y < 50; y += 10) {
      for (let x = 0; x < 10; x++) B[x] = s[y + x];

      for (let x = 0; x < 10; x++) s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];
    } // Iota (ι)


    s[0] ^= SHA3_IOTA_H[round];
    s[1] ^= SHA3_IOTA_L[round];
  }

  B.fill(0);
}
class Keccak extends _utils_js__WEBPACK_IMPORTED_MODULE_0__.Hash {
  // NOTE: we accept arguments in bytes instead of bits here.
  constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {
    super(); // Can be passed from user as dkLen

    this.blockLen = blockLen;
    this.suffix = suffix;
    this.outputLen = outputLen;
    this.enableXOF = enableXOF;
    this.rounds = rounds;
    this.state = void 0;
    this.pos = 0;
    this.posOut = 0;
    this.finished = false;
    this.state32 = void 0;
    this.destroyed = false;
    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertNumber)(outputLen); // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes

    if (0 >= this.blockLen || this.blockLen >= 200) throw new Error('Sha3 supports only keccak-f1600 function');
    this.state = new Uint8Array(200);
    this.state32 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.u32)(this.state);
  }

  keccak() {
    keccakP(this.state32, this.rounds);
    this.posOut = 0;
    this.pos = 0;
  }

  update(data) {
    if (this.destroyed) throw new Error('instance is destroyed');
    if (this.finished) throw new Error('digest() was already called');
    const {
      blockLen,
      state
    } = this;
    data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.toBytes)(data);
    const len = data.length;

    for (let pos = 0; pos < len;) {
      const take = Math.min(blockLen - this.pos, len - pos);

      for (let i = 0; i < take; i++) state[this.pos++] ^= data[pos++];

      if (this.pos === blockLen) this.keccak();
    }

    return this;
  }

  finish() {
    if (this.finished) return;
    this.finished = true;
    const {
      state,
      suffix,
      pos,
      blockLen
    } = this; // Do the padding

    state[pos] ^= suffix;
    if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();
    state[blockLen - 1] ^= 0x80;
    this.keccak();
  }

  writeInto(out) {
    if (this.destroyed) throw new Error('instance is destroyed');
    if (!(out instanceof Uint8Array)) throw new Error('Keccak: invalid output buffer');
    this.finish();

    for (let pos = 0, len = out.length; pos < len;) {
      if (this.posOut >= this.blockLen) this.keccak();
      const take = Math.min(this.blockLen - this.posOut, len - pos);
      out.set(this.state.subarray(this.posOut, this.posOut + take), pos);
      this.posOut += take;
      pos += take;
    }

    return out;
  }

  xofInto(out) {
    // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF
    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');
    return this.writeInto(out);
  }

  xof(bytes) {
    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertNumber)(bytes);
    return this.xofInto(new Uint8Array(bytes));
  }

  digestInto(out) {
    if (out.length < this.outputLen) throw new Error('Keccak: invalid output buffer');
    if (this.finished) throw new Error('digest() was already called');
    this.finish();
    this.writeInto(out);
    this.destroy();
    return out;
  }

  digest() {
    return this.digestInto(new Uint8Array(this.outputLen));
  }

  destroy() {
    this.destroyed = true;
    this.state.fill(0);
  }

  _cloneInto(to) {
    const {
      blockLen,
      suffix,
      outputLen,
      rounds,
      enableXOF
    } = this;
    to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));
    to.state32.set(this.state32);
    to.pos = this.pos;
    to.posOut = this.posOut;
    to.finished = this.finished;
    to.rounds = rounds; // Suffix can change in cSHAKE

    to.suffix = suffix;
    to.outputLen = outputLen;
    to.enableXOF = enableXOF;
    to.destroyed = this.destroyed;
    return to;
  }

}

const gen = (suffix, blockLen, outputLen) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.wrapConstructor)(() => new Keccak(blockLen, suffix, outputLen));

const sha3_224 = gen(0x06, 144, 224 / 8);
const sha3_256 = gen(0x06, 136, 256 / 8);
const sha3_384 = gen(0x06, 104, 384 / 8);
const sha3_512 = gen(0x06, 72, 512 / 8);
const keccak_224 = gen(0x01, 144, 224 / 8);
const keccak_256 = gen(0x01, 136, 256 / 8);
const keccak_384 = gen(0x01, 104, 384 / 8);
const keccak_512 = gen(0x01, 72, 512 / 8);

const genShake = (suffix, blockLen, outputLen) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.wrapConstructorWithOpts)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen !== undefined ? opts.dkLen : outputLen, true));

const shake128 = genShake(0x1f, 168, 128 / 8);
const shake256 = genShake(0x1f, 136, 256 / 8);

/***/ }),
/* 201 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "secp256k1Expand": () => (/* binding */ secp256k1Expand)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(197);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(121);
/* harmony import */ var _bn_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(133);
/* harmony import */ var _secp256k1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(84);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0



function secp256k1Expand(publicKey) {
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)([33, 65].includes(publicKey.length), 'Invalid publicKey provided');
  const expanded = _secp256k1_js__WEBPACK_IMPORTED_MODULE_1__.secp256k1.keyFromPublic(publicKey).getPublic();
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aConcat)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.bnToU8a)(expanded.getX(), _bn_js__WEBPACK_IMPORTED_MODULE_4__.BN_BE_256_OPTS), (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.bnToU8a)(expanded.getY(), _bn_js__WEBPACK_IMPORTED_MODULE_4__.BN_BE_256_OPTS));
}

/***/ }),
/* 202 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "encodeAddress": () => (/* binding */ encodeAddress)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(197);
/* harmony import */ var _base58_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(181);
/* harmony import */ var _decode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(180);
/* harmony import */ var _defaults_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(184);
/* harmony import */ var _sshash_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(189);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Original implementation: https://github.com/paritytech/polka-ui/blob/4858c094684769080f5811f32b081dd7780b0880/src/polkadot.js#L34





function encodeAddress(key, ss58Format = _defaults_js__WEBPACK_IMPORTED_MODULE_0__.defaults.prefix) {
  // decode it, this means we can re-encode an address
  const u8a = (0,_decode_js__WEBPACK_IMPORTED_MODULE_1__.decodeAddress)(key);
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.assert)(ss58Format >= 0 && ss58Format <= 16383 && ![46, 47].includes(ss58Format), 'Out of range ss58Format specified');
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.assert)(_defaults_js__WEBPACK_IMPORTED_MODULE_0__.defaults.allowedDecodedLengths.includes(u8a.length), () => `Expected a valid key to convert, with length ${_defaults_js__WEBPACK_IMPORTED_MODULE_0__.defaults.allowedDecodedLengths.join(', ')}`);
  const input = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.u8aConcat)(ss58Format < 64 ? [ss58Format] : [(ss58Format & 0b0000000011111100) >> 2 | 0b01000000, ss58Format >> 8 | (ss58Format & 0b0000000000000011) << 6], u8a);
  return (0,_base58_index_js__WEBPACK_IMPORTED_MODULE_4__.base58Encode)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.u8aConcat)(input, (0,_sshash_js__WEBPACK_IMPORTED_MODULE_5__.sshash)(input).subarray(0, [32, 33].includes(u8a.length) ? 2 : 1)));
}

/***/ }),
/* 203 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Pairs": () => (/* binding */ Pairs)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(126);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(196);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(180);


// Copyright 2017-2021 @polkadot/keyring authors & contributors
// SPDX-License-Identifier: Apache-2.0



var _map = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("map");

class Pairs {
  constructor() {
    Object.defineProperty(this, _map, {
      writable: true,
      value: {}
    });
  }

  add(pair) {
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _map)[_map][(0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_2__.decodeAddress)(pair.address).toString()] = pair;
    return pair;
  }

  all() {
    return Object.values((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _map)[_map]);
  }

  get(address) {
    const pair = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _map)[_map][(0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_2__.decodeAddress)(address).toString()];

    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.assert)(pair, () => `Unable to retrieve keypair '${(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.isU8a)(address) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.isHex)(address) ? (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.u8aToHex)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_7__.u8aToU8a)(address)) : address}'`);
    return pair;
  }

  remove(address) {
    delete (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _map)[_map][(0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_2__.decodeAddress)(address).toString()];
  }

}

/***/ }),
/* 204 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createPair": () => (/* binding */ createPair)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(209);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(197);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(122);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(196);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(228);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(79);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(134);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(165);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(205);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(207);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(208);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(190);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(199);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(201);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(198);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(232);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(233);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(235);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(241);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(252);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(253);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(257);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(262);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(263);
/* harmony import */ var _decode_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(210);
/* harmony import */ var _encode_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(229);
/* harmony import */ var _toJson_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(254);
// Copyright 2017-2021 @polkadot/keyring authors & contributors
// SPDX-License-Identifier: Apache-2.0





const SIG_TYPE_NONE = new Uint8Array();
const TYPE_FROM_SEED = {
  ecdsa: _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_0__.secp256k1PairFromSeed,
  ed25519: _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_1__.ed25519PairFromSeed,
  ethereum: _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_0__.secp256k1PairFromSeed,
  sr25519: _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_2__.sr25519PairFromSeed
};
const TYPE_PREFIX = {
  ecdsa: new Uint8Array([2]),
  ed25519: new Uint8Array([0]),
  ethereum: new Uint8Array([2]),
  sr25519: new Uint8Array([1])
};
const TYPE_SIGNATURE = {
  ecdsa: (m, p) => (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_3__.secp256k1Sign)(m, p, 'blake2'),
  ed25519: _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_4__.ed25519Sign,
  ethereum: (m, p) => (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_3__.secp256k1Sign)(m, p, 'keccak'),
  sr25519: _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_5__.sr25519Sign
};
const TYPE_ADDRESS = {
  ecdsa: p => p.length > 32 ? (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_6__.blake2AsU8a)(p) : p,
  ed25519: p => p,
  ethereum: p => p.length === 20 ? p : (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_7__.keccakAsU8a)((0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_8__.secp256k1Expand)(p)),
  sr25519: p => p
};

function isLocked(secretKey) {
  return !secretKey || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.u8aEmpty)(secretKey);
}

function vrfHash(proof, context, extra) {
  return (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_6__.blake2AsU8a)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_10__.u8aConcat)(context || '', extra || '', proof));
}
/**
 * @name createPair
 * @summary Creates a keyring pair object
 * @description Creates a keyring pair object with provided account public key, metadata, and encoded arguments.
 * The keyring pair stores the account state including the encoded address and associated metadata.
 *
 * It has properties whose values are functions that may be called to perform account actions:
 *
 * - `address` function retrieves the address associated with the account.
 * - `decodedPkcs8` function is called with the account passphrase and account encoded public key.
 * It decodes the encoded public key using the passphrase provided to obtain the decoded account public key
 * and associated secret key that are then available in memory, and changes the account address stored in the
 * state of the pair to correspond to the address of the decoded public key.
 * - `encodePkcs8` function when provided with the correct passphrase associated with the account pair
 * and when the secret key is in memory (when the account pair is not locked) it returns an encoded
 * public key of the account.
 * - `meta` is the metadata that is stored in the state of the pair, either when it was originally
 * created or set via `setMeta`.
 * - `publicKey` returns the public key stored in memory for the pair.
 * - `sign` may be used to return a signature by signing a provided message with the secret
 * key (if it is in memory) using Nacl.
 * - `toJson` calls another `toJson` function and provides the state of the pair,
 * it generates arguments to be passed to the other `toJson` function including an encoded public key of the account
 * that it generates using the secret key from memory (if it has been made available in memory)
 * and the optionally provided passphrase argument. It passes a third boolean argument to `toJson`
 * indicating whether the public key has been encoded or not (if a passphrase argument was provided then it is encoded).
 * The `toJson` function that it calls returns a JSON object with properties including the `address`
 * and `meta` that are assigned with the values stored in the corresponding state variables of the account pair,
 * an `encoded` property that is assigned with the encoded public key in hex format, and an `encoding`
 * property that indicates whether the public key value of the `encoded` property is encoded or not.
 */


function createPair({
  toSS58,
  type
}, {
  publicKey,
  secretKey
}, meta = {}, encoded = null, encTypes) {
  const decodePkcs8 = (passphrase, userEncoded) => {
    const decoded = (0,_decode_js__WEBPACK_IMPORTED_MODULE_11__.decodePair)(passphrase, userEncoded || encoded, encTypes);

    if (decoded.secretKey.length === 64) {
      publicKey = decoded.publicKey;
      secretKey = decoded.secretKey;
    } else {
      const pair = TYPE_FROM_SEED[type](decoded.secretKey);
      publicKey = pair.publicKey;
      secretKey = pair.secretKey;
    }
  };

  const recode = passphrase => {
    isLocked(secretKey) && encoded && decodePkcs8(passphrase, encoded);
    encoded = (0,_encode_js__WEBPACK_IMPORTED_MODULE_12__.encodePair)({
      publicKey,
      secretKey
    }, passphrase); // re-encode, latest version

    encTypes = undefined; // swap to defaults, latest version follows

    return encoded;
  };

  const encodeAddress = () => {
    const raw = TYPE_ADDRESS[type](publicKey);
    return type === 'ethereum' ? (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_13__.ethereumEncode)(raw) : toSS58(raw);
  };

  return {
    get address() {
      return encodeAddress();
    },

    get addressRaw() {
      const raw = TYPE_ADDRESS[type](publicKey);
      return type === 'ethereum' ? raw.slice(-20) : raw;
    },

    get isLocked() {
      return isLocked(secretKey);
    },

    get meta() {
      return meta;
    },

    get publicKey() {
      return publicKey;
    },

    get type() {
      return type;
    },

    // eslint-disable-next-line sort-keys
    decodePkcs8,
    decryptMessage: (encryptedMessageWithNonce, senderPublicKey) => {
      (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_14__.assert)(!isLocked(secretKey), 'Cannot encrypt with a locked key pair');
      (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_14__.assert)(!['ecdsa', 'ethereum'].includes(type), 'Secp256k1 not supported yet');
      const messageU8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_15__.u8aToU8a)(encryptedMessageWithNonce);
      return (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_16__.naclOpen)(messageU8a.slice(24, messageU8a.length), messageU8a.slice(0, 24), (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_17__.convertPublicKeyToCurve25519)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_15__.u8aToU8a)(senderPublicKey)), (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_17__.convertSecretKeyToCurve25519)(secretKey));
    },
    derive: (suri, meta) => {
      (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_14__.assert)(type !== 'ethereum', 'Unable to derive on this keypair');
      (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_14__.assert)(!isLocked(secretKey), 'Cannot derive on a locked keypair');
      const {
        path
      } = (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_18__.keyExtractPath)(suri);
      const derived = (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_19__.keyFromPath)({
        publicKey,
        secretKey
      }, path, type);
      return createPair({
        toSS58,
        type
      }, derived, meta, null);
    },
    encodePkcs8: passphrase => {
      return recode(passphrase);
    },
    encryptMessage: (message, recipientPublicKey, nonceIn) => {
      (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_14__.assert)(!isLocked(secretKey), 'Cannot encrypt with a locked key pair');
      (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_14__.assert)(!['ecdsa', 'ethereum'].includes(type), 'Secp256k1 not supported yet');
      const {
        nonce,
        sealed
      } = (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_20__.naclSeal)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_15__.u8aToU8a)(message), (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_17__.convertSecretKeyToCurve25519)(secretKey), (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_17__.convertPublicKeyToCurve25519)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_15__.u8aToU8a)(recipientPublicKey)), nonceIn);
      return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_10__.u8aConcat)(nonce, sealed);
    },
    lock: () => {
      secretKey = new Uint8Array();
    },
    setMeta: additional => {
      meta = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_21__.objectSpread)({}, meta, additional);
    },
    sign: (message, options = {}) => {
      (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_14__.assert)(!isLocked(secretKey), 'Cannot sign with a locked key pair');
      return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_10__.u8aConcat)(options.withType ? TYPE_PREFIX[type] : SIG_TYPE_NONE, TYPE_SIGNATURE[type]((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_15__.u8aToU8a)(message), {
        publicKey,
        secretKey
      }));
    },
    toJson: passphrase => {
      // NOTE: For ecdsa and ethereum, the publicKey cannot be extracted from the address. For these
      // pass the hex-encoded publicKey through to the address portion of the JSON (before decoding)
      // unless the publicKey is already an address
      const address = ['ecdsa', 'ethereum'].includes(type) ? publicKey.length === 20 ? (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_22__.u8aToHex)(publicKey) : (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_22__.u8aToHex)((0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_23__.secp256k1Compress)(publicKey)) : encodeAddress();
      return (0,_toJson_js__WEBPACK_IMPORTED_MODULE_24__.pairToJson)(type, {
        address,
        meta
      }, recode(passphrase), !!passphrase);
    },
    unlock: passphrase => {
      return decodePkcs8(passphrase);
    },
    verify: (message, signature, signerPublic) => {
      return (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_25__.signatureVerify)(message, signature, TYPE_ADDRESS[type]((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_15__.u8aToU8a)(signerPublic))).isValid;
    },
    vrfSign: (message, context, extra) => {
      (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_14__.assert)(!isLocked(secretKey), 'Cannot sign with a locked key pair');

      if (type === 'sr25519') {
        return (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_26__.sr25519VrfSign)(message, {
          secretKey
        }, context, extra);
      }

      const proof = TYPE_SIGNATURE[type]((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_15__.u8aToU8a)(message), {
        publicKey,
        secretKey
      });
      return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_10__.u8aConcat)(vrfHash(proof, context, extra), proof);
    },
    vrfVerify: (message, vrfResult, signerPublic, context, extra) => {
      if (type === 'sr25519') {
        return (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_27__.sr25519VrfVerify)(message, vrfResult, publicKey, context, extra);
      }

      const result = (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_25__.signatureVerify)(message, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_10__.u8aConcat)(TYPE_PREFIX[type], vrfResult.subarray(32)), TYPE_ADDRESS[type]((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_15__.u8aToU8a)(signerPublic)));
      return result.isValid && (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_28__.u8aEq)(vrfResult.subarray(0, 32), vrfHash(vrfResult.subarray(32), context, extra));
    }
  };
}

/***/ }),
/* 205 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "secp256k1Sign": () => (/* binding */ secp256k1Sign)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(197);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(121);
/* harmony import */ var _bn_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(133);
/* harmony import */ var _hasher_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(206);
/* harmony import */ var _secp256k1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(84);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0




/**
 * @name secp256k1Sign
 * @description Returns message signature of `message`, using the supplied pair
 */

function secp256k1Sign(message, {
  secretKey
}, hashType = 'blake2') {
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)((secretKey === null || secretKey === void 0 ? void 0 : secretKey.length) === 32, 'Expected valid secp256k1 secretKey, 32-bytes');
  const key = _secp256k1_js__WEBPACK_IMPORTED_MODULE_1__.secp256k1.keyFromPrivate(secretKey);
  const ecsig = key.sign((0,_hasher_js__WEBPACK_IMPORTED_MODULE_2__.secp256k1Hasher)(hashType, message));
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.u8aConcat)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.bnToU8a)(ecsig.r, _bn_js__WEBPACK_IMPORTED_MODULE_5__.BN_BE_256_OPTS), (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.bnToU8a)(ecsig.s, _bn_js__WEBPACK_IMPORTED_MODULE_5__.BN_BE_256_OPTS), new Uint8Array([ecsig.recoveryParam || 0]));
}

/***/ }),
/* 206 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "secp256k1Hasher": () => (/* binding */ secp256k1Hasher)
/* harmony export */ });
/* harmony import */ var _blake2_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(190);
/* harmony import */ var _keccak_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(199);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0


const HASH_TYPES = ['blake2', 'keccak'];
function secp256k1Hasher(hashType, data) {
  if (hashType === 'blake2') {
    return (0,_blake2_index_js__WEBPACK_IMPORTED_MODULE_0__.blake2AsU8a)(data);
  } else if (hashType === 'keccak') {
    return (0,_keccak_index_js__WEBPACK_IMPORTED_MODULE_1__.keccakAsU8a)(data);
  }

  throw new Error(`Unsupported secp256k1 hasher '${hashType}', expected one of ${HASH_TYPES.join(', ')}`);
}

/***/ }),
/* 207 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ed25519Sign": () => (/* binding */ ed25519Sign)
/* harmony export */ });
/* harmony import */ var tweetnacl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(135);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(166);
/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(137);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0



/**
 * @name ed25519Sign
 * @summary Signs a message using the supplied secretKey
 * @description
 * Returns message signature of `message`, using the `secretKey`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { ed25519Sign } from '@polkadot/util-crypto';
 *
 * ed25519Sign([...], [...]); // => [...]
 * ```
 */

function ed25519Sign(message, {
  publicKey,
  secretKey
}, onlyJs) {
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(secretKey, 'Expected a valid secretKey');
  const messageU8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aToU8a)(message);
  return !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_3__.isReady)() ? (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_3__.ed25519Sign)(publicKey, secretKey.subarray(0, 32), messageU8a) : tweetnacl__WEBPACK_IMPORTED_MODULE_0__.sign.detached(messageU8a, secretKey);
}

/***/ }),
/* 208 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "sr25519Sign": () => (/* binding */ sr25519Sign)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(166);
/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(137);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0


/**
 * @name sr25519Sign
 * @description Returns message signature of `message`, using the supplied pair
 */

function sr25519Sign(message, {
  publicKey,
  secretKey
}) {
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)((publicKey === null || publicKey === void 0 ? void 0 : publicKey.length) === 32, 'Expected a valid publicKey, 32-bytes');
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)((secretKey === null || secretKey === void 0 ? void 0 : secretKey.length) === 64, 'Expected a valid secretKey, 64-bytes');
  return (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.sr25519Sign)(publicKey, secretKey, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aToU8a)(message));
}

/***/ }),
/* 209 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "u8aEmpty": () => (/* binding */ u8aEmpty)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name u8aEmpty
 * @summary Tests for a `Uint8Array` for emptyness
 * @description
 * Checks to see if the input `Uint8Array` has zero length or contains all 0 values.
 */
function u8aEmpty(value) {
  for (let i = 0; i < value.length; i++) {
    if (value[i]) {
      return false;
    }
  }

  return true;
}

/***/ }),
/* 210 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "decodePair": () => (/* binding */ decodePair)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(82);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(228);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(212);
/* harmony import */ var _defaults_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(211);
// Copyright 2017-2021 @polkadot/keyring authors & contributors
// SPDX-License-Identifier: Apache-2.0



const SEED_OFFSET = _defaults_js__WEBPACK_IMPORTED_MODULE_0__.PKCS8_HEADER.length;
function decodePair(passphrase, encrypted, _encType) {
  const encType = Array.isArray(_encType) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isUndefined)(_encType) ? _encType : [_encType];
  const decrypted = (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_2__.jsonDecryptData)(encrypted, passphrase, encType);
  const header = decrypted.subarray(0, _defaults_js__WEBPACK_IMPORTED_MODULE_0__.PKCS8_HEADER.length);
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.assert)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.u8aEq)(header, _defaults_js__WEBPACK_IMPORTED_MODULE_0__.PKCS8_HEADER), 'Invalid Pkcs8 header found in body');
  let secretKey = decrypted.subarray(SEED_OFFSET, SEED_OFFSET + _defaults_js__WEBPACK_IMPORTED_MODULE_0__.SEC_LENGTH);
  let divOffset = SEED_OFFSET + _defaults_js__WEBPACK_IMPORTED_MODULE_0__.SEC_LENGTH;
  let divider = decrypted.subarray(divOffset, divOffset + _defaults_js__WEBPACK_IMPORTED_MODULE_0__.PKCS8_DIVIDER.length); // old-style, we have the seed here

  if (!(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.u8aEq)(divider, _defaults_js__WEBPACK_IMPORTED_MODULE_0__.PKCS8_DIVIDER)) {
    divOffset = SEED_OFFSET + _defaults_js__WEBPACK_IMPORTED_MODULE_0__.SEED_LENGTH;
    secretKey = decrypted.subarray(SEED_OFFSET, divOffset);
    divider = decrypted.subarray(divOffset, divOffset + _defaults_js__WEBPACK_IMPORTED_MODULE_0__.PKCS8_DIVIDER.length);
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.assert)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.u8aEq)(divider, _defaults_js__WEBPACK_IMPORTED_MODULE_0__.PKCS8_DIVIDER), 'Invalid Pkcs8 divider found in body');
  }

  const pubOffset = divOffset + _defaults_js__WEBPACK_IMPORTED_MODULE_0__.PKCS8_DIVIDER.length;
  const publicKey = decrypted.subarray(pubOffset, pubOffset + _defaults_js__WEBPACK_IMPORTED_MODULE_0__.PUB_LENGTH);
  return {
    publicKey,
    secretKey
  };
}

/***/ }),
/* 211 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PKCS8_DIVIDER": () => (/* binding */ PKCS8_DIVIDER),
/* harmony export */   "PKCS8_HEADER": () => (/* binding */ PKCS8_HEADER),
/* harmony export */   "PUB_LENGTH": () => (/* binding */ PUB_LENGTH),
/* harmony export */   "SALT_LENGTH": () => (/* binding */ SALT_LENGTH),
/* harmony export */   "SEC_LENGTH": () => (/* binding */ SEC_LENGTH),
/* harmony export */   "SEED_LENGTH": () => (/* binding */ SEED_LENGTH)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/keyring authors & contributors
// SPDX-License-Identifier: Apache-2.0
const PKCS8_DIVIDER = new Uint8Array([161, 35, 3, 33, 0]);
const PKCS8_HEADER = new Uint8Array([48, 83, 2, 1, 1, 48, 5, 6, 3, 43, 101, 112, 4, 34, 4, 32]);
const PUB_LENGTH = 32;
const SALT_LENGTH = 32;
const SEC_LENGTH = 64;
const SEED_LENGTH = 32;

/***/ }),
/* 212 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "jsonDecryptData": () => (/* binding */ jsonDecryptData)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(170);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(227);
/* harmony import */ var _nacl_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(226);
/* harmony import */ var _scrypt_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(214);
/* harmony import */ var _scrypt_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(217);
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(213);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0




function jsonDecryptData(encrypted, passphrase, encType = _constants_js__WEBPACK_IMPORTED_MODULE_0__.ENCODING) {
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(encrypted, 'No encrypted data available to decode');
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(passphrase || !encType.includes('xsalsa20-poly1305'), 'Password required to decode encrypted data');
  let encoded = encrypted;

  if (passphrase) {
    let password;

    if (encType.includes('scrypt')) {
      const {
        params,
        salt
      } = (0,_scrypt_index_js__WEBPACK_IMPORTED_MODULE_2__.scryptFromU8a)(encrypted);
      password = (0,_scrypt_index_js__WEBPACK_IMPORTED_MODULE_3__.scryptEncode)(passphrase, salt, params).password;
      encrypted = encrypted.subarray(_constants_js__WEBPACK_IMPORTED_MODULE_0__.SCRYPT_LENGTH);
    } else {
      password = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.stringToU8a)(passphrase);
    }

    encoded = (0,_nacl_index_js__WEBPACK_IMPORTED_MODULE_5__.naclDecrypt)(encrypted.subarray(_constants_js__WEBPACK_IMPORTED_MODULE_0__.NONCE_LENGTH), encrypted.subarray(0, _constants_js__WEBPACK_IMPORTED_MODULE_0__.NONCE_LENGTH), (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.u8aFixLength)(password, 256, true));
  }

  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(encoded, 'Unable to decode using the supplied passphrase');
  return encoded;
}

/***/ }),
/* 213 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ENCODING": () => (/* binding */ ENCODING),
/* harmony export */   "ENCODING_NONE": () => (/* binding */ ENCODING_NONE),
/* harmony export */   "ENCODING_VERSION": () => (/* binding */ ENCODING_VERSION),
/* harmony export */   "NONCE_LENGTH": () => (/* binding */ NONCE_LENGTH),
/* harmony export */   "SCRYPT_LENGTH": () => (/* binding */ SCRYPT_LENGTH)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
const ENCODING = ['scrypt', 'xsalsa20-poly1305'];
const ENCODING_NONE = ['none'];
const ENCODING_VERSION = '3';
const NONCE_LENGTH = 24;
const SCRYPT_LENGTH = 32 + 3 * 4;

/***/ }),
/* 214 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scryptFromU8a": () => (/* binding */ scryptFromU8a)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(215);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(80);
/* harmony import */ var _bn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(133);
/* harmony import */ var _defaults_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(216);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0



function scryptFromU8a(data) {
  const salt = data.subarray(0, 32);
  const N = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToBn)(data.subarray(32 + 0, 32 + 4), _bn_js__WEBPACK_IMPORTED_MODULE_1__.BN_LE_OPTS).toNumber();
  const p = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToBn)(data.subarray(32 + 4, 32 + 8), _bn_js__WEBPACK_IMPORTED_MODULE_1__.BN_LE_OPTS).toNumber();
  const r = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToBn)(data.subarray(32 + 8, 32 + 12), _bn_js__WEBPACK_IMPORTED_MODULE_1__.BN_LE_OPTS).toNumber(); // FIXME At this moment we assume these to be fixed params, this is not a great idea since we lose flexibility
  // and updates for greater security. However we need some protection against carefully-crafted params that can
  // eat up CPU since these are user inputs. So we need to get very clever here, but atm we only allow the defaults
  // and if no match, bail out

  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.assert)(N === _defaults_js__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_PARAMS.N && p === _defaults_js__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_PARAMS.p && r === _defaults_js__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_PARAMS.r, 'Invalid injected scrypt params found');
  return {
    params: {
      N,
      p,
      r
    },
    salt
  };
}

/***/ }),
/* 215 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "u8aToBn": () => (/* binding */ u8aToBn)
/* harmony export */ });
/* harmony import */ var _hex_toBn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(127);
/* harmony import */ var _toHex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(196);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0


const DEFAULT_OPTS = {
  isLe: true,
  isNegative: false
};
/**
 * @name u8aToBn
 * @summary Creates a BN from a Uint8Array object.
 * @description
 * `UInt8Array` input values return the actual BN. `null` or `undefined` values returns an `0x0` value.
 * @param value The value to convert
 * @param options Options to pass while converting
 * @param options.isLe Convert using Little Endian
 * @param options.isNegative Convert using two's complement
 * @example
 * <BR>
 *
 * ```javascript
 * import { u8aToBn } from '@polkadot/util';
 *
 * u8aToHex(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0xf])); // 0x68656c0f
 * ```
 */

function u8aToBn(value, options = DEFAULT_OPTS) {
  return (0,_hex_toBn_js__WEBPACK_IMPORTED_MODULE_0__.hexToBn)((0,_toHex_js__WEBPACK_IMPORTED_MODULE_1__.u8aToHex)(value), options);
}

/***/ }),
/* 216 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DEFAULT_PARAMS": () => (/* binding */ DEFAULT_PARAMS)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
const DEFAULT_PARAMS = {
  N: 1 << 15,
  p: 1,
  r: 8
};

/***/ }),
/* 217 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scryptEncode": () => (/* binding */ scryptEncode)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(177);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(122);
/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(137);
/* harmony import */ var _noble_hashes_lib_scrypt_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(221);
/* harmony import */ var _random_asU8a_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(218);
/* harmony import */ var _defaults_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(216);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0





function scryptEncode(passphrase, salt = (0,_random_asU8a_js__WEBPACK_IMPORTED_MODULE_0__.randomAsU8a)(), params = _defaults_js__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_PARAMS, onlyJs) {
  const u8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aToU8a)(passphrase);
  return {
    params,
    password: !_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.hasBigInt || !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_4__.isReady)() ? (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_4__.scrypt)(u8a, salt, Math.log2(params.N), params.r, params.p) : (0,_noble_hashes_lib_scrypt_js__WEBPACK_IMPORTED_MODULE_5__.scrypt)(u8a, salt, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.objectSpread)({
      dkLen: 64
    }, params)),
    salt
  };
}

/***/ }),
/* 218 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "randomAsU8a": () => (/* binding */ randomAsU8a),
/* harmony export */   "randomAsHex": () => (/* binding */ randomAsHex)
/* harmony export */ });
/* harmony import */ var _polkadot_x_randomvalues__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(219);
/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(195);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0


/**
 * @name randomAsU8a
 * @summary Creates a Uint8Array filled with random bytes.
 * @description
 * Returns a `Uint8Array` with the specified (optional) length filled with random bytes.
 * @example
 * <BR>
 *
 * ```javascript
 * import { randomAsU8a } from '@polkadot/util-crypto';
 *
 * randomAsU8a(); // => Uint8Array([...])
 * ```
 */

function randomAsU8a(length = 32) {
  return (0,_polkadot_x_randomvalues__WEBPACK_IMPORTED_MODULE_0__.getRandomValues)(new Uint8Array(length));
}
/**
 * @name randomAsHex
 * @description Creates a hex string filled with random bytes.
 */

const randomAsHex = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.createAsHex)(randomAsU8a);

/***/ }),
/* 219 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),
/* harmony export */   "getRandomValues": () => (/* binding */ getRandomValues)
/* harmony export */ });
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(220);
// Copyright 2017-2021 @polkadot/x-randomvalues authors & contributors
// SPDX-License-Identifier: Apache-2.0

function getRandomValues(arr) {
  return crypto.getRandomValues(arr);
}

/***/ }),
/* 220 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-randomvalues authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/x-randomvalues',
  version: '8.0.2'
};

/***/ }),
/* 221 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scrypt": () => (/* binding */ scrypt),
/* harmony export */   "scryptAsync": () => (/* binding */ scryptAsync)
/* harmony export */ });
/* harmony import */ var _sha256_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(224);
/* harmony import */ var _pbkdf2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(222);
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(193);
/*! noble-hashes - MIT License (c) 2021 Paul Miller (paulmillr.com) */
// https://github.com/paulmillr/noble-hashes/pull/13


 // Left rotate for uint32

const rotl = (a, b) => a << b | a >>> 32 - b; // prettier-ignore


function XorAndSalsa(prev, pi, input, ii, out, oi) {
  // Based on https://cr.yp.to/salsa20.html
  // Xor blocks
  let y00 = prev[pi++] ^ input[ii++],
      y01 = prev[pi++] ^ input[ii++];
  let y02 = prev[pi++] ^ input[ii++],
      y03 = prev[pi++] ^ input[ii++];
  let y04 = prev[pi++] ^ input[ii++],
      y05 = prev[pi++] ^ input[ii++];
  let y06 = prev[pi++] ^ input[ii++],
      y07 = prev[pi++] ^ input[ii++];
  let y08 = prev[pi++] ^ input[ii++],
      y09 = prev[pi++] ^ input[ii++];
  let y10 = prev[pi++] ^ input[ii++],
      y11 = prev[pi++] ^ input[ii++];
  let y12 = prev[pi++] ^ input[ii++],
      y13 = prev[pi++] ^ input[ii++];
  let y14 = prev[pi++] ^ input[ii++],
      y15 = prev[pi++] ^ input[ii++]; // Save state to temporary variables (salsa)

  let x00 = y00,
      x01 = y01,
      x02 = y02,
      x03 = y03,
      x04 = y04,
      x05 = y05,
      x06 = y06,
      x07 = y07,
      x08 = y08,
      x09 = y09,
      x10 = y10,
      x11 = y11,
      x12 = y12,
      x13 = y13,
      x14 = y14,
      x15 = y15; // Main loop (salsa)

  for (let i = 0; i < 8; i += 2) {
    x04 ^= rotl(x00 + x12 | 0, 7);
    x08 ^= rotl(x04 + x00 | 0, 9);
    x12 ^= rotl(x08 + x04 | 0, 13);
    x00 ^= rotl(x12 + x08 | 0, 18);
    x09 ^= rotl(x05 + x01 | 0, 7);
    x13 ^= rotl(x09 + x05 | 0, 9);
    x01 ^= rotl(x13 + x09 | 0, 13);
    x05 ^= rotl(x01 + x13 | 0, 18);
    x14 ^= rotl(x10 + x06 | 0, 7);
    x02 ^= rotl(x14 + x10 | 0, 9);
    x06 ^= rotl(x02 + x14 | 0, 13);
    x10 ^= rotl(x06 + x02 | 0, 18);
    x03 ^= rotl(x15 + x11 | 0, 7);
    x07 ^= rotl(x03 + x15 | 0, 9);
    x11 ^= rotl(x07 + x03 | 0, 13);
    x15 ^= rotl(x11 + x07 | 0, 18);
    x01 ^= rotl(x00 + x03 | 0, 7);
    x02 ^= rotl(x01 + x00 | 0, 9);
    x03 ^= rotl(x02 + x01 | 0, 13);
    x00 ^= rotl(x03 + x02 | 0, 18);
    x06 ^= rotl(x05 + x04 | 0, 7);
    x07 ^= rotl(x06 + x05 | 0, 9);
    x04 ^= rotl(x07 + x06 | 0, 13);
    x05 ^= rotl(x04 + x07 | 0, 18);
    x11 ^= rotl(x10 + x09 | 0, 7);
    x08 ^= rotl(x11 + x10 | 0, 9);
    x09 ^= rotl(x08 + x11 | 0, 13);
    x10 ^= rotl(x09 + x08 | 0, 18);
    x12 ^= rotl(x15 + x14 | 0, 7);
    x13 ^= rotl(x12 + x15 | 0, 9);
    x14 ^= rotl(x13 + x12 | 0, 13);
    x15 ^= rotl(x14 + x13 | 0, 18);
  } // Write output (salsa)


  out[oi++] = y00 + x00 | 0;
  out[oi++] = y01 + x01 | 0;
  out[oi++] = y02 + x02 | 0;
  out[oi++] = y03 + x03 | 0;
  out[oi++] = y04 + x04 | 0;
  out[oi++] = y05 + x05 | 0;
  out[oi++] = y06 + x06 | 0;
  out[oi++] = y07 + x07 | 0;
  out[oi++] = y08 + x08 | 0;
  out[oi++] = y09 + x09 | 0;
  out[oi++] = y10 + x10 | 0;
  out[oi++] = y11 + x11 | 0;
  out[oi++] = y12 + x12 | 0;
  out[oi++] = y13 + x13 | 0;
  out[oi++] = y14 + x14 | 0;
  out[oi++] = y15 + x15 | 0;
}

function BlockMix(input, ii, out, oi, r) {
  // The block B is r 128-byte chunks (which is equivalent of 2r 64-byte chunks)
  let [head, tail] = [oi + 0, oi + 16 * r];

  for (let i = 0; i < 16; i++) out[tail + i] = input[ii + (2 * r - 1) * 16 + i]; // X ← B[2r−1]


  for (let i = 0; i < r; i++, head += 16, ii += 16) {
    // We write odd & even Yi at same time. Even: 0bXXXXX0 Odd:  0bXXXXX1
    XorAndSalsa(out, tail, input, ii, out, head); // head[i] = Salsa(blockIn[2*i] ^ tail[i-1])

    if (i > 0) tail += 16; // First iteration overwrites tmp value in tail

    XorAndSalsa(out, head, input, ii += 16, out, tail); // tail[i] = Salsa(blockIn[2*i+1] ^ head[i])
  }
} // RFC 7914


// Common prologue and epilogue for sync/async functions
function scryptInit(password, salt, _opts) {
  // Maxmem - 1GB+1KB by default
  const opts = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.checkOpts)({
    dkLen: 32,
    asyncTick: 10,
    maxmem: 1024 ** 3 + 1024
  }, _opts);
  const {
    N,
    r,
    p,
    dkLen,
    asyncTick,
    maxmem,
    onProgress
  } = opts;
  (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertNumber)(N);
  (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertNumber)(r);
  (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertNumber)(p);
  (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertNumber)(dkLen);
  (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertNumber)(asyncTick);
  (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertNumber)(maxmem);
  if (onProgress !== undefined && typeof onProgress !== 'function') throw new Error('progressCb should be function');
  const blockSize = 128 * r;
  const blockSize32 = blockSize / 4;

  if (N <= 1 || (N & N - 1) !== 0 || N >= 2 ** (blockSize / 8) || N > 2 ** 32) {
    // NOTE: we limit N to be less than 2**32 because of 32 bit variant of Integrify function
    // There is no JS engines that allows alocate more than 4GB per single Uint8Array for now, but can change in future.
    throw new Error('Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32');
  }

  if (p < 0 || p > (2 ** 32 - 1) * 32 / blockSize) {
    throw new Error('Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)');
  }

  if (dkLen < 0 || dkLen > (2 ** 32 - 1) * 32) {
    throw new Error('Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32');
  }

  const memUsed = blockSize * (N + p);

  if (memUsed > maxmem) {
    throw new Error(`Scrypt: parameters too large, ${memUsed} (128 * r * (N + p)) > ${maxmem} (maxmem)`);
  } // [B0...Bp−1] ← PBKDF2HMAC-SHA256(Passphrase, Salt, 1, blockSize*ParallelizationFactor)
  // Since it has only one iteration there is no reason to use async variant


  const B = (0,_pbkdf2_js__WEBPACK_IMPORTED_MODULE_1__.pbkdf2)(_sha256_js__WEBPACK_IMPORTED_MODULE_2__.sha256, password, salt, {
    c: 1,
    dkLen: blockSize * p
  });
  const B32 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.u32)(B); // Re-used between parallel iterations. Array(iterations) of B

  const V = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.u32)(new Uint8Array(blockSize * N));
  const tmp = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.u32)(new Uint8Array(blockSize));

  let blockMixCb = () => {};

  if (onProgress) {
    const totalBlockMix = 2 * N * p; // Invoke callback if progress changes from 10.01 to 10.02
    // Allows to draw smooth progress bar on up to 8K screen

    const callbackPer = Math.max(Math.floor(totalBlockMix / 10000), 1);
    let blockMixCnt = 0;

    blockMixCb = () => {
      blockMixCnt++;
      if (onProgress && (!(blockMixCnt % callbackPer) || blockMixCnt === totalBlockMix)) onProgress(blockMixCnt / totalBlockMix);
    };
  }

  return {
    N,
    r,
    p,
    dkLen,
    blockSize32,
    V,
    B32,
    B,
    tmp,
    blockMixCb,
    asyncTick
  };
}

function scryptOutput(password, dkLen, B, V, tmp) {
  const res = (0,_pbkdf2_js__WEBPACK_IMPORTED_MODULE_1__.pbkdf2)(_sha256_js__WEBPACK_IMPORTED_MODULE_2__.sha256, password, B, {
    c: 1,
    dkLen
  });
  B.fill(0);
  V.fill(0);
  tmp.fill(0);
  return res;
}

function scrypt(password, salt, _opts) {
  const {
    N,
    r,
    p,
    dkLen,
    blockSize32,
    V,
    B32,
    B,
    tmp,
    blockMixCb
  } = scryptInit(password, salt, _opts);

  for (let pi = 0; pi < p; pi++) {
    const Pi = blockSize32 * pi;

    for (let i = 0; i < blockSize32; i++) V[i] = B32[Pi + i]; // V[0] = B[i]


    for (let i = 0, pos = 0; i < N - 1; i++) {
      BlockMix(V, pos, V, pos += blockSize32, r); // V[i] = BlockMix(V[i-1]);

      blockMixCb();
    }

    BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element

    blockMixCb();

    for (let i = 0; i < N; i++) {
      // First u32 of the last 64-byte block (u32 is LE)
      const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations

      for (let k = 0; k < blockSize32; k++) tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]


      BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])

      blockMixCb();
    }
  }

  return scryptOutput(password, dkLen, B, V, tmp);
}
async function scryptAsync(password, salt, _opts) {
  const {
    N,
    r,
    p,
    dkLen,
    blockSize32,
    V,
    B32,
    B,
    tmp,
    blockMixCb,
    asyncTick
  } = scryptInit(password, salt, _opts);

  for (let pi = 0; pi < p; pi++) {
    const Pi = blockSize32 * pi;

    for (let i = 0; i < blockSize32; i++) V[i] = B32[Pi + i]; // V[0] = B[i]


    let pos = 0;
    await (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.asyncLoop)(N - 1, asyncTick, i => {
      BlockMix(V, pos, V, pos += blockSize32, r); // V[i] = BlockMix(V[i-1]);

      blockMixCb();
    });
    BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element

    blockMixCb();
    await (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.asyncLoop)(N, asyncTick, i => {
      // First u32 of the last 64-byte block (u32 is LE)
      const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations

      for (let k = 0; k < blockSize32; k++) tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]


      BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])

      blockMixCb();
    });
  }

  return scryptOutput(password, dkLen, B, V, tmp);
}

/***/ }),
/* 222 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "pbkdf2": () => (/* binding */ pbkdf2),
/* harmony export */   "pbkdf2Async": () => (/* binding */ pbkdf2Async)
/* harmony export */ });
/* harmony import */ var _hmac_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(223);
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(193);
/*! noble-hashes - MIT License (c) 2021 Paul Miller (paulmillr.com) */
// https://github.com/paulmillr/noble-hashes/pull/13
 // prettier-ignore

 // PBKDF (RFC 2898)

// Common prologue and epilogue for sync/async functions
function pbkdf2Init(hash, _password, _salt, _opts) {
  (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertHash)(hash);
  const opts = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.checkOpts)({
    dkLen: 32,
    asyncTick: 10
  }, _opts);
  const {
    c,
    dkLen,
    asyncTick
  } = opts;
  (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertNumber)(c);
  (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertNumber)(dkLen);
  (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertNumber)(asyncTick);
  if (c < 1) throw new Error('PBKDF2: iterations (c) should be >= 1');
  const password = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.toBytes)(_password);
  const salt = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.toBytes)(_salt); // DK = PBKDF2(PRF, Password, Salt, c, dkLen);

  const DK = new Uint8Array(dkLen); // U1 = PRF(Password, Salt + INT_32_BE(i))

  const PRF = _hmac_js__WEBPACK_IMPORTED_MODULE_1__.hmac.init(hash, password);

  const PRFSalt = PRF._cloneInto().update(salt);

  return {
    c,
    dkLen,
    asyncTick,
    DK,
    PRF,
    PRFSalt
  };
}

function pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {
  PRF.destroy();
  PRFSalt.destroy();
  if (prfW) prfW.destroy();
  u.fill(0);
  return DK;
}

function pbkdf2(hash, password, salt, _opts) {
  const {
    c,
    dkLen,
    DK,
    PRF,
    PRFSalt
  } = pbkdf2Init(hash, password, salt, _opts);
  let prfW; // Working copy

  const arr = new Uint8Array(4);
  const view = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createView)(arr);
  const u = new Uint8Array(PRF.outputLen); // DK = T1 + T2 + ⋯ + Tdklen/hlen

  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {
    // Ti = F(Password, Salt, c, i)
    const Ti = DK.subarray(pos, pos + PRF.outputLen);
    view.setInt32(0, ti, false); // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc
    // U1 = PRF(Password, Salt + INT_32_BE(i))

    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);

    Ti.set(u.subarray(0, Ti.length));

    for (let ui = 1; ui < c; ui++) {
      // Uc = PRF(Password, Uc−1)
      PRF._cloneInto(prfW).update(u).digestInto(u);

      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];
    }
  }

  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);
}
async function pbkdf2Async(hash, password, salt, _opts) {
  const {
    c,
    dkLen,
    asyncTick,
    DK,
    PRF,
    PRFSalt
  } = pbkdf2Init(hash, password, salt, _opts);
  let prfW; // Working copy

  const arr = new Uint8Array(4);
  const view = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createView)(arr);
  const u = new Uint8Array(PRF.outputLen); // DK = T1 + T2 + ⋯ + Tdklen/hlen

  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {
    // Ti = F(Password, Salt, c, i)
    const Ti = DK.subarray(pos, pos + PRF.outputLen);
    view.setInt32(0, ti, false); // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc
    // U1 = PRF(Password, Salt + INT_32_BE(i))

    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);

    Ti.set(u.subarray(0, Ti.length));
    await (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.asyncLoop)(c - 1, asyncTick, i => {
      // Uc = PRF(Password, Uc−1)
      PRF._cloneInto(prfW).update(u).digestInto(u);

      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];
    });
  }

  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);
}

/***/ }),
/* 223 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "hmac": () => (/* binding */ hmac)
/* harmony export */ });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(193);
/*! noble-hashes - MIT License (c) 2021 Paul Miller (paulmillr.com) */
// https://github.com/paulmillr/noble-hashes/pull/13
 // HMAC (RFC 2104)

class HMAC extends _utils_js__WEBPACK_IMPORTED_MODULE_0__.Hash {
  constructor(hash, _key) {
    super();
    this.oHash = void 0;
    this.iHash = void 0;
    this.blockLen = void 0;
    this.outputLen = void 0;
    this.finished = false;
    this.destroyed = false;
    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertHash)(hash);
    const key = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.toBytes)(_key);
    this.iHash = hash.create();
    if (!(this.iHash instanceof _utils_js__WEBPACK_IMPORTED_MODULE_0__.Hash)) throw new TypeError('Expected instance of class which extends utils.Hash');
    const blockLen = this.blockLen = this.iHash.blockLen;
    this.outputLen = this.iHash.outputLen;
    const pad = new Uint8Array(blockLen); // blockLen can be bigger than outputLen

    pad.set(key.length > this.iHash.blockLen ? hash.create().update(key).digest() : key);

    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;

    this.iHash.update(pad); // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone

    this.oHash = hash.create(); // Undo internal XOR && apply outer XOR

    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;

    this.oHash.update(pad);
    pad.fill(0);
  }

  update(buf) {
    if (this.destroyed) throw new Error('instance is destroyed');
    this.iHash.update(buf);
    return this;
  }

  digestInto(out) {
    if (this.destroyed) throw new Error('instance is destroyed');
    if (!(out instanceof Uint8Array) || out.length !== this.outputLen) throw new Error('HMAC: Invalid output buffer');
    if (this.finished) throw new Error('digest() was already called');
    this.finished = true;
    this.iHash.digestInto(out);
    this.oHash.update(out);
    this.oHash.digestInto(out);
    this.destroy();
  }

  digest() {
    const out = new Uint8Array(this.oHash.outputLen);
    this.digestInto(out);
    return out;
  }

  _cloneInto(to) {
    // Create new instance without calling constructor since key already in state and we don't know it.
    to || (to = Object.create(Object.getPrototypeOf(this), {}));
    const {
      oHash,
      iHash,
      finished,
      destroyed,
      blockLen,
      outputLen
    } = this;
    to = to;
    to.finished = finished;
    to.destroyed = destroyed;
    to.blockLen = blockLen;
    to.outputLen = outputLen;
    to.oHash = oHash._cloneInto(to.oHash);
    to.iHash = iHash._cloneInto(to.iHash);
    return to;
  }

  destroy() {
    this.destroyed = true;
    this.oHash.destroy();
    this.iHash.destroy();
  }

}

const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();

hmac.create = (hash, key) => new HMAC(hash, key);

hmac.init = hmac.create;

/***/ }),
/* 224 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "sha256": () => (/* binding */ sha256)
/* harmony export */ });
/* harmony import */ var _sha2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(225);
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(193);
/*! noble-hashes - MIT License (c) 2021 Paul Miller (paulmillr.com) */
// https://github.com/paulmillr/noble-hashes/pull/13

 // Choice: a ? b : c

const Chi = (a, b, c) => a & b ^ ~a & c; // Majority function, true if any two inpust is true


const Maj = (a, b, c) => a & b ^ a & c ^ b & c; // Round constants:
// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)
// prettier-ignore


const SHA256_K = new Uint32Array([0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2]); // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):
// prettier-ignore

const IV = new Uint32Array([0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19]); // Temporary buffer, not used to store anything between runs
// Named this way because it matches specification.

const SHA256_W = new Uint32Array(64);

class SHA256 extends _sha2_js__WEBPACK_IMPORTED_MODULE_0__.SHA2 {
  // We cannot use array here since array allows indexing by variable
  // which means optimizer/compiler cannot use registers.
  constructor() {
    super(64, 32, 8, false);
    this.A = IV[0] | 0;
    this.B = IV[1] | 0;
    this.C = IV[2] | 0;
    this.D = IV[3] | 0;
    this.E = IV[4] | 0;
    this.F = IV[5] | 0;
    this.G = IV[6] | 0;
    this.H = IV[7] | 0;
  }

  get() {
    const {
      A,
      B,
      C,
      D,
      E,
      F,
      G,
      H
    } = this;
    return [A, B, C, D, E, F, G, H];
  } // prettier-ignore


  set(A, B, C, D, E, F, G, H) {
    this.A = A | 0;
    this.B = B | 0;
    this.C = C | 0;
    this.D = D | 0;
    this.E = E | 0;
    this.F = F | 0;
    this.G = G | 0;
    this.H = H | 0;
  }

  process(view, offset) {
    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array
    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);

    for (let i = 16; i < 64; i++) {
      const W15 = SHA256_W[i - 15];
      const W2 = SHA256_W[i - 2];
      const s0 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(W15, 7) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(W15, 18) ^ W15 >>> 3;
      const s1 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(W2, 17) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(W2, 19) ^ W2 >>> 10;
      SHA256_W[i] = s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16] | 0;
    } // Compression function main loop, 64 rounds


    let {
      A,
      B,
      C,
      D,
      E,
      F,
      G,
      H
    } = this;

    for (let i = 0; i < 64; i++) {
      const sigma1 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(E, 6) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(E, 11) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(E, 25);
      const T1 = H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i] | 0;
      const sigma0 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(A, 2) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(A, 13) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(A, 22);
      const T2 = sigma0 + Maj(A, B, C) | 0;
      H = G;
      G = F;
      F = E;
      E = D + T1 | 0;
      D = C;
      C = B;
      B = A;
      A = T1 + T2 | 0;
    } // Add the compressed chunk to the current hash value


    A = A + this.A | 0;
    B = B + this.B | 0;
    C = C + this.C | 0;
    D = D + this.D | 0;
    E = E + this.E | 0;
    F = F + this.F | 0;
    G = G + this.G | 0;
    H = H + this.H | 0;
    this.set(A, B, C, D, E, F, G, H);
  }

  roundClean() {
    SHA256_W.fill(0);
  }

  destroy() {
    this.set(0, 0, 0, 0, 0, 0, 0, 0);
    this.buffer.fill(0);
  }

}

const sha256 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapConstructor)(() => new SHA256());

/***/ }),
/* 225 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SHA2": () => (/* binding */ SHA2)
/* harmony export */ });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(193);
/*! noble-hashes - MIT License (c) 2021 Paul Miller (paulmillr.com) */
// https://github.com/paulmillr/noble-hashes/pull/13


const _32n = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__._n)(32);

const _u32_max = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__._n)(0xffffffff); // Polyfill for Safari 14


function setBigUint64(view, byteOffset, value, isLE) {
  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);
  const wh = Number(value >> _32n & _u32_max);
  const wl = Number(value & _u32_max);
  const [h, l] = isLE ? [4, 0] : [0, 4];
  view.setUint32(byteOffset + h, wh, isLE);
  view.setUint32(byteOffset + l, wl, isLE);
} // Base SHA2 class (RFC 6234)


class SHA2 extends _utils_js__WEBPACK_IMPORTED_MODULE_0__.Hash {
  constructor(blockLen, outputLen, padOffset, isLE) {
    super();
    this.blockLen = blockLen;
    this.outputLen = outputLen;
    this.padOffset = padOffset;
    this.isLE = isLE;
    this.buffer = void 0;
    this.view = void 0;
    this.finished = false;
    this.length = 0;
    this.pos = 0;
    this.destroyed = false;
    this.buffer = new Uint8Array(blockLen);
    this.view = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createView)(this.buffer);
  }

  update(data) {
    if (this.destroyed) throw new Error('instance is destroyed');
    const {
      view,
      buffer,
      blockLen,
      finished
    } = this;
    if (finished) throw new Error('digest() was already called');
    data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.toBytes)(data);
    const len = data.length;

    for (let pos = 0; pos < len;) {
      const take = Math.min(blockLen - this.pos, len - pos); // Fast path: we have at least one block in input, cast it to view and process

      if (take === blockLen) {
        const dataView = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createView)(data);

        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);

        continue;
      }

      buffer.set(data.subarray(pos, pos + take), this.pos);
      this.pos += take;
      pos += take;

      if (this.pos === blockLen) {
        this.process(view, 0);
        this.pos = 0;
      }
    }

    this.length += data.length;
    this.roundClean();
    return this;
  }

  digestInto(out) {
    if (this.destroyed) throw new Error('instance is destroyed');
    if (!(out instanceof Uint8Array) || out.length < this.outputLen) throw new Error('_Sha2: Invalid output buffer');
    if (this.finished) throw new Error('digest() was already called');
    this.finished = true; // Padding
    // We can avoid allocation of buffer for padding completely if it
    // was previously not allocated here. But it won't change performance.

    const {
      buffer,
      view,
      blockLen,
      isLE
    } = this;
    let {
      pos
    } = this; // append the bit '1' to the message

    buffer[pos++] = 0b10000000;
    this.buffer.subarray(pos).fill(0); // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again

    if (this.padOffset > blockLen - pos) {
      this.process(view, 0);
      pos = 0;
    } // Pad until full block byte with zeros


    for (let i = pos; i < blockLen; i++) buffer[i] = 0; // NOTE: sha512 requires length to be 128bit integer, but length in JS will overflow before that
    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.
    // So we just write lowest 64bit of that value.


    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);
    this.process(view, 0);
    const oview = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createView)(out);
    this.get().forEach((v, i) => oview.setUint32(4 * i, v, isLE));
  }

  digest() {
    const {
      buffer,
      outputLen
    } = this;
    this.digestInto(buffer);
    const res = buffer.slice(0, outputLen);
    this.destroy();
    return res;
  }

  _cloneInto(to) {
    to || (to = new this.constructor());
    to.set(...this.get());
    const {
      blockLen,
      buffer,
      length,
      finished,
      destroyed,
      pos
    } = this;
    to.length = length;
    to.pos = pos;
    to.finished = finished;
    to.destroyed = destroyed;
    if (length % blockLen) to.buffer.set(buffer);
    return to;
  }

}

/***/ }),
/* 226 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "naclDecrypt": () => (/* binding */ naclDecrypt)
/* harmony export */ });
/* harmony import */ var tweetnacl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(135);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name naclDecrypt
 * @summary Decrypts a message using the supplied secretKey and nonce
 * @description
 * Returns an decrypted message, using the `secret` and `nonce`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { naclDecrypt } from '@polkadot/util-crypto';
 *
 * naclDecrypt([...], [...], [...]); // => [...]
 * ```
 */

function naclDecrypt(encrypted, nonce, secret) {
  return tweetnacl__WEBPACK_IMPORTED_MODULE_0__.secretbox.open(encrypted, nonce, secret) || null;
}

/***/ }),
/* 227 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "u8aFixLength": () => (/* binding */ u8aFixLength)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name u8aFixLength
 * @summary Shifts a Uint8Array to a specific bitLength
 * @description
 * Returns a uint8Array with the specified number of bits contained in the return value. (If bitLength is -1, length checking is not done). Values with more bits are trimmed to the specified length.
 * @example
 * <BR>
 *
 * ```javascript
 * import { u8aFixLength } from '@polkadot/util';
 *
 * u8aFixLength('0x12') // => 0x12
 * u8aFixLength('0x12', 16) // => 0x0012
 * u8aFixLength('0x1234', 8) // => 0x12
 * ```
 */
function u8aFixLength(value, bitLength = -1, atStart = false) {
  const byteLength = Math.ceil(bitLength / 8);

  if (bitLength === -1 || value.length === byteLength) {
    return value;
  } else if (value.length > byteLength) {
    return value.subarray(0, byteLength);
  }

  const result = new Uint8Array(byteLength);
  result.set(value, atStart ? 0 : byteLength - value.length);
  return result;
}

/***/ }),
/* 228 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "u8aEq": () => (/* binding */ u8aEq)
/* harmony export */ });
/* harmony import */ var _toU8a_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(166);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name u8aEq
 * @summary Compares two Uint8Arrays for equality.
 * @description
 * For `UInt8Array` (or hex string) input values true if there is a match.
 * @example
 * <BR>
 *
 * ```javascript
 * import { u8aEq } from '@polkadot/util';
 *
 * u8aEq(new Uint8Array([0x68, 0x65]), new Uint8Array([0x68, 0x65])); // true
 * ```
 */

function u8aEq(a, b) {
  const u8aa = (0,_toU8a_js__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(a);
  const u8ab = (0,_toU8a_js__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(b);

  if (u8aa.length === u8ab.length) {
    const dvA = new DataView(u8aa.buffer, u8aa.byteOffset);
    const dvB = new DataView(u8ab.buffer, u8ab.byteOffset);
    const mod = u8aa.length % 4;
    const length = u8aa.length - mod;

    for (let i = 0; i < length; i += 4) {
      if (dvA.getUint32(i) !== dvB.getUint32(i)) {
        return false;
      }
    }

    for (let i = length; i < u8aa.length; i++) {
      if (u8aa[i] !== u8ab[i]) {
        return false;
      }
    }

    return true;
  }

  return false;
}

/***/ }),
/* 229 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "encodePair": () => (/* binding */ encodePair)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(197);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(217);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(230);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(231);
/* harmony import */ var _defaults_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(211);
// Copyright 2017-2021 @polkadot/keyring authors & contributors
// SPDX-License-Identifier: Apache-2.0



function encodePair({
  publicKey,
  secretKey
}, passphrase) {
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)(secretKey, 'Expected a valid secretKey to be passed to encode');
  const encoded = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aConcat)(_defaults_js__WEBPACK_IMPORTED_MODULE_2__.PKCS8_HEADER, secretKey, _defaults_js__WEBPACK_IMPORTED_MODULE_2__.PKCS8_DIVIDER, publicKey);

  if (!passphrase) {
    return encoded;
  }

  const {
    params,
    password,
    salt
  } = (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_3__.scryptEncode)(passphrase);
  const {
    encrypted,
    nonce
  } = (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_4__.naclEncrypt)(encoded, password.subarray(0, 32));
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aConcat)((0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_5__.scryptToU8a)(salt, params), nonce, encrypted);
}

/***/ }),
/* 230 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "naclEncrypt": () => (/* binding */ naclEncrypt)
/* harmony export */ });
/* harmony import */ var tweetnacl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(135);
/* harmony import */ var _random_asU8a_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(218);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0



/**
 * @name naclEncrypt
 * @summary Encrypts a message using the supplied secretKey and nonce
 * @description
 * Returns an encrypted message, using the `secretKey` and `nonce`. If the `nonce` was not supplied, a random value is generated.
 * @example
 * <BR>
 *
 * ```javascript
 * import { naclEncrypt } from '@polkadot/util-crypto';
 *
 * naclEncrypt([...], [...]); // => [...]
 * ```
 */
function naclEncrypt(message, secret, nonce = (0,_random_asU8a_js__WEBPACK_IMPORTED_MODULE_1__.randomAsU8a)(24)) {
  return {
    encrypted: tweetnacl__WEBPACK_IMPORTED_MODULE_0__.secretbox(message, nonce, secret),
    nonce
  };
}

/***/ }),
/* 231 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scryptToU8a": () => (/* binding */ scryptToU8a)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(197);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(121);
/* harmony import */ var _bn_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(133);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0


function scryptToU8a(salt, {
  N,
  p,
  r
}) {
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aConcat)(salt, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.bnToU8a)(N, _bn_js__WEBPACK_IMPORTED_MODULE_2__.BN_LE_32_OPTS), (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.bnToU8a)(p, _bn_js__WEBPACK_IMPORTED_MODULE_2__.BN_LE_32_OPTS), (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.bnToU8a)(r, _bn_js__WEBPACK_IMPORTED_MODULE_2__.BN_LE_32_OPTS));
}

/***/ }),
/* 232 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "naclOpen": () => (/* binding */ naclOpen)
/* harmony export */ });
/* harmony import */ var tweetnacl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(135);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name naclOpen
 * @summary Opens a message using the receiver's secretKey and nonce
 * @description
 * Returns a message sealed by the sender, using the receiver's `secret` and `nonce`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { naclOpen } from '@polkadot/util-crypto';
 *
 * naclOpen([...], [...], [...]); // => [...]
 * ```
 */

function naclOpen(sealed, nonce, senderBoxPublic, receiverBoxSecret) {
  return tweetnacl__WEBPACK_IMPORTED_MODULE_0__.box.open(sealed, nonce, senderBoxPublic, receiverBoxSecret) || null;
}

/***/ }),
/* 233 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "convertSecretKeyToCurve25519": () => (/* binding */ convertSecretKeyToCurve25519),
/* harmony export */   "convertPublicKeyToCurve25519": () => (/* binding */ convertPublicKeyToCurve25519)
/* harmony export */ });
/* harmony import */ var ed2curve__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(234);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(80);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0


function convertSecretKeyToCurve25519(secretKey) {
  return ed2curve__WEBPACK_IMPORTED_MODULE_0__.convertSecretKey(secretKey);
}
function convertPublicKeyToCurve25519(publicKey) {
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assertReturn)(ed2curve__WEBPACK_IMPORTED_MODULE_0__.convertPublicKey(publicKey), 'Unable to convert publicKey to ed25519');
}

/***/ }),
/* 234 */
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/*
 * ed2curve: convert Ed25519 signing key pair into Curve25519
 * key pair suitable for Diffie-Hellman key exchange.
 *
 * Written by Dmitry Chestnykh in 2014. Public domain.
 */
/* jshint newcap: false */
(function(root, f) {
  'use strict';
  if ( true && module.exports) module.exports = f(__webpack_require__(135));
  else root.ed2curve = f(root.nacl);
}(this, function(nacl) {
  'use strict';
  if (!nacl) throw new Error('tweetnacl not loaded');

  // -- Operations copied from TweetNaCl.js. --

  var gf = function(init) {
    var i, r = new Float64Array(16);
    if (init) for (i = 0; i < init.length; i++) r[i] = init[i];
    return r;
  };

  var gf0 = gf(),
      gf1 = gf([1]),
      D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),
      I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);

  function car25519(o) {
    var c;
    var i;
    for (i = 0; i < 16; i++) {
      o[i] += 65536;
      c = Math.floor(o[i] / 65536);
      o[(i+1)*(i<15?1:0)] += c - 1 + 37 * (c-1) * (i===15?1:0);
      o[i] -= (c * 65536);
    }
  }

  function sel25519(p, q, b) {
    var t, c = ~(b-1);
    for (var i = 0; i < 16; i++) {
      t = c & (p[i] ^ q[i]);
      p[i] ^= t;
      q[i] ^= t;
    }
  }

  function unpack25519(o, n) {
    var i;
    for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);
    o[15] &= 0x7fff;
  }

  // addition
  function A(o, a, b) {
    var i;
    for (i = 0; i < 16; i++) o[i] = (a[i] + b[i])|0;
  }

  // subtraction
  function Z(o, a, b) {
    var i;
    for (i = 0; i < 16; i++) o[i] = (a[i] - b[i])|0;
  }

  // multiplication
  function M(o, a, b) {
    var i, j, t = new Float64Array(31);
    for (i = 0; i < 31; i++) t[i] = 0;
    for (i = 0; i < 16; i++) {
      for (j = 0; j < 16; j++) {
        t[i+j] += a[i] * b[j];
      }
    }
    for (i = 0; i < 15; i++) {
      t[i] += 38 * t[i+16];
    }
    for (i = 0; i < 16; i++) o[i] = t[i];
    car25519(o);
    car25519(o);
  }

  // squaring
  function S(o, a) {
    M(o, a, a);
  }

  // inversion
  function inv25519(o, i) {
    var c = gf();
    var a;
    for (a = 0; a < 16; a++) c[a] = i[a];
    for (a = 253; a >= 0; a--) {
      S(c, c);
      if(a !== 2 && a !== 4) M(c, c, i);
    }
    for (a = 0; a < 16; a++) o[a] = c[a];
  }

  function pack25519(o, n) {
    var i, j, b;
    var m = gf(), t = gf();
    for (i = 0; i < 16; i++) t[i] = n[i];
    car25519(t);
    car25519(t);
    car25519(t);
    for (j = 0; j < 2; j++) {
      m[0] = t[0] - 0xffed;
      for (i = 1; i < 15; i++) {
        m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);
        m[i-1] &= 0xffff;
      }
      m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);
      b = (m[15]>>16) & 1;
      m[14] &= 0xffff;
      sel25519(t, m, 1-b);
    }
    for (i = 0; i < 16; i++) {
      o[2*i] = t[i] & 0xff;
      o[2*i+1] = t[i] >> 8;
    }
  }

  function par25519(a) {
    var d = new Uint8Array(32);
    pack25519(d, a);
    return d[0] & 1;
  }

  function vn(x, xi, y, yi, n) {
    var i, d = 0;
    for (i = 0; i < n; i++) d |= x[xi + i] ^ y[yi + i];
    return (1 & ((d - 1) >>> 8)) - 1;
  }

  function crypto_verify_32(x, xi, y, yi) {
    return vn(x, xi, y, yi, 32);
  }

  function neq25519(a, b) {
    var c = new Uint8Array(32), d = new Uint8Array(32);
    pack25519(c, a);
    pack25519(d, b);
    return crypto_verify_32(c, 0, d, 0);
  }

  function pow2523(o, i) {
    var c = gf();
    var a;
    for (a = 0; a < 16; a++) c[a] = i[a];
    for (a = 250; a >= 0; a--) {
      S(c, c);
      if (a !== 1) M(c, c, i);
    }
    for (a = 0; a < 16; a++) o[a] = c[a];
  }

  function set25519(r, a) {
    var i;
    for (i = 0; i < 16; i++) r[i] = a[i] | 0;
  }

  function unpackneg(r, p) {
    var t = gf(), chk = gf(), num = gf(),
      den = gf(), den2 = gf(), den4 = gf(),
      den6 = gf();

    set25519(r[2], gf1);
    unpack25519(r[1], p);
    S(num, r[1]);
    M(den, num, D);
    Z(num, num, r[2]);
    A(den, r[2], den);

    S(den2, den);
    S(den4, den2);
    M(den6, den4, den2);
    M(t, den6, num);
    M(t, t, den);

    pow2523(t, t);
    M(t, t, num);
    M(t, t, den);
    M(t, t, den);
    M(r[0], t, den);

    S(chk, r[0]);
    M(chk, chk, den);
    if (neq25519(chk, num)) M(r[0], r[0], I);

    S(chk, r[0]);
    M(chk, chk, den);
    if (neq25519(chk, num)) return -1;

    if (par25519(r[0]) === (p[31] >> 7)) Z(r[0], gf0, r[0]);

    M(r[3], r[0], r[1]);
    return 0;
  }

  // ----

  // Converts Ed25519 public key to Curve25519 public key.
  // montgomeryX = (edwardsY + 1)*inverse(1 - edwardsY) mod p
  function convertPublicKey(pk) {
    var z = new Uint8Array(32),
      q = [gf(), gf(), gf(), gf()],
      a = gf(), b = gf();

    if (unpackneg(q, pk)) return null; // reject invalid key

    var y = q[1];

    A(a, gf1, y);
    Z(b, gf1, y);
    inv25519(b, b);
    M(a, a, b);

    pack25519(z, a);
    return z;
  }

  // Converts Ed25519 secret key to Curve25519 secret key.
  function convertSecretKey(sk) {
    var d = new Uint8Array(64), o = new Uint8Array(32), i;
    nacl.lowlevel.crypto_hash(d, sk, 32);
    d[0] &= 248;
    d[31] &= 127;
    d[31] |= 64;
    for (i = 0; i < 32; i++) o[i] = d[i];
    for (i = 0; i < 64; i++) d[i] = 0;
    return o;
  }

  function convertKeyPair(edKeyPair) {
    var publicKey = convertPublicKey(edKeyPair.publicKey);
    if (!publicKey) return null;
    return {
      publicKey: publicKey,
      secretKey: convertSecretKey(edKeyPair.secretKey)
    };
  }

  return {
    convertPublicKey: convertPublicKey,
    convertSecretKey: convertSecretKey,
    convertKeyPair: convertKeyPair,
  };

}));


/***/ }),
/* 235 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "keyExtractPath": () => (/* binding */ keyExtractPath)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(80);
/* harmony import */ var _DeriveJunction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(236);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0


const RE_JUNCTION = /\/(\/?)([^/]+)/g;

/**
 * @description Extract derivation junctions from the supplied path
 */
function keyExtractPath(derivePath) {
  const parts = derivePath.match(RE_JUNCTION);
  const path = [];
  let constructed = '';

  if (parts) {
    constructed = parts.join('');

    for (const p of parts) {
      path.push(_DeriveJunction_js__WEBPACK_IMPORTED_MODULE_0__.DeriveJunction.from(p.substr(1)));
    }
  }

  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(constructed === derivePath, () => `Re-constructed path "${constructed}" does not match input`);
  return {
    parts,
    path
  };
}

/***/ }),
/* 236 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DeriveJunction": () => (/* binding */ DeriveJunction)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(88);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(124);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(237);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(130);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(121);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(126);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(167);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(169);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(238);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(170);
/* harmony import */ var _blake2_asU8a_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(190);
/* harmony import */ var _bn_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(133);


// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0



const RE_NUMBER = /^\d+$/;
const JUNCTION_ID_LEN = 32;

var _chainCode = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("chainCode");

var _isHard = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("isHard");

class DeriveJunction {
  constructor() {
    Object.defineProperty(this, _chainCode, {
      writable: true,
      value: new Uint8Array(32)
    });
    Object.defineProperty(this, _isHard, {
      writable: true,
      value: false
    });
  }

  static from(value) {
    const result = new DeriveJunction();
    const [code, isHard] = value.startsWith('/') ? [value.substr(1), true] : [value, false];
    result.soft(RE_NUMBER.test(code) ? new _polkadot_util__WEBPACK_IMPORTED_MODULE_2__(code, 10) : code);
    return isHard ? result.harden() : result;
  }

  get chainCode() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _chainCode)[_chainCode];
  }

  get isHard() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _isHard)[_isHard];
  }

  get isSoft() {
    return !(0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _isHard)[_isHard];
  }

  hard(value) {
    return this.soft(value).harden();
  }

  harden() {
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _isHard)[_isHard] = true;
    return this;
  }

  soft(value) {
    if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.isNumber)(value) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.isBn)(value) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.isBigInt)(value)) {
      return this.soft((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.bnToU8a)(value, _bn_js__WEBPACK_IMPORTED_MODULE_7__.BN_LE_256_OPTS));
    } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_8__.isHex)(value)) {
      return this.soft((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.hexToU8a)(value));
    } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_10__.isString)(value)) {
      return this.soft((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_11__.compactAddLength)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_12__.stringToU8a)(value)));
    } else if (value.length > JUNCTION_ID_LEN) {
      return this.soft((0,_blake2_asU8a_js__WEBPACK_IMPORTED_MODULE_13__.blake2AsU8a)(value));
    }

    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _chainCode)[_chainCode].fill(0);

    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _chainCode)[_chainCode].set(value, 0);

    return this;
  }

  soften() {
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _isHard)[_isHard] = false;
    return this;
  }

}

/***/ }),
/* 237 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isBn": () => (/* binding */ isBn)
/* harmony export */ });
/* harmony import */ var _bn_bn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(88);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isBn
 * @summary Tests for a `BN` object instance.
 * @description
 * Checks to see if the input object is an instance of `BN` (bn.js).
 * @example
 * <BR>
 *
 * ```javascript
 * import BN from 'bn.js';
 * import { isBn } from '@polkadot/util';
 *
 * console.log('isBn', isBn(new BN(1))); // => true
 * ```
 */

function isBn(value) {
  return _bn_bn_js__WEBPACK_IMPORTED_MODULE_0__.isBN(value);
}

/***/ }),
/* 238 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "compactAddLength": () => (/* binding */ compactAddLength)
/* harmony export */ });
/* harmony import */ var _u8a_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(197);
/* harmony import */ var _toU8a_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(239);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0


/**
 * @name compactAddLength
 * @description Adds a length prefix to the input value
 * @example
 * <BR>
 *
 * ```javascript
 * import { compactAddLength } from '@polkadot/util';
 *
 * console.log(compactAddLength(new Uint8Array([0xde, 0xad, 0xbe, 0xef]))); // Uint8Array([4 << 2, 0xde, 0xad, 0xbe, 0xef])
 * ```
 */

function compactAddLength(input) {
  return (0,_u8a_index_js__WEBPACK_IMPORTED_MODULE_0__.u8aConcat)((0,_toU8a_js__WEBPACK_IMPORTED_MODULE_1__.compactToU8a)(input.length), input);
}

/***/ }),
/* 239 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "compactToU8a": () => (/* binding */ compactToU8a)
/* harmony export */ });
/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(80);
/* harmony import */ var _bn_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(240);
/* harmony import */ var _bn_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(88);
/* harmony import */ var _bn_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(125);
/* harmony import */ var _bn_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(121);
/* harmony import */ var _u8a_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(197);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0



const MAX_U8 = _bn_index_js__WEBPACK_IMPORTED_MODULE_0__.BN_TWO.pow(new _bn_index_js__WEBPACK_IMPORTED_MODULE_1__(8 - 2)).isub(_bn_index_js__WEBPACK_IMPORTED_MODULE_0__.BN_ONE);
const MAX_U16 = _bn_index_js__WEBPACK_IMPORTED_MODULE_0__.BN_TWO.pow(new _bn_index_js__WEBPACK_IMPORTED_MODULE_1__(16 - 2)).isub(_bn_index_js__WEBPACK_IMPORTED_MODULE_0__.BN_ONE);
const MAX_U32 = _bn_index_js__WEBPACK_IMPORTED_MODULE_0__.BN_TWO.pow(new _bn_index_js__WEBPACK_IMPORTED_MODULE_1__(32 - 2)).isub(_bn_index_js__WEBPACK_IMPORTED_MODULE_0__.BN_ONE);
/**
 * @name compactToU8a
 * @description Encodes a number into a compact representation
 * @example
 * <BR>
 *
 * ```javascript
 * import { compactToU8a } from '@polkadot/util';
 *
 * console.log(compactToU8a(511, 32)); // Uint8Array([0b11111101, 0b00000111])
 * ```
 */

function compactToU8a(value) {
  const bn = (0,_bn_index_js__WEBPACK_IMPORTED_MODULE_2__.bnToBn)(value);

  if (bn.lte(MAX_U8)) {
    return new Uint8Array([bn.toNumber() << 2]);
  } else if (bn.lte(MAX_U16)) {
    return (0,_bn_index_js__WEBPACK_IMPORTED_MODULE_3__.bnToU8a)(bn.shln(2).iadd(_bn_index_js__WEBPACK_IMPORTED_MODULE_0__.BN_ONE), 16, true);
  } else if (bn.lte(MAX_U32)) {
    return (0,_bn_index_js__WEBPACK_IMPORTED_MODULE_3__.bnToU8a)(bn.shln(2).iadd(_bn_index_js__WEBPACK_IMPORTED_MODULE_0__.BN_TWO), 32, true);
  }

  const u8a = (0,_bn_index_js__WEBPACK_IMPORTED_MODULE_3__.bnToU8a)(bn);
  let length = u8a.length; // adjust to the minimum number of bytes

  while (u8a[length - 1] === 0) {
    length--;
  }

  (0,_assert_js__WEBPACK_IMPORTED_MODULE_4__.assert)(length >= 4, 'Invalid length, previous checks match anything less than 2^30');
  return (0,_u8a_index_js__WEBPACK_IMPORTED_MODULE_5__.u8aConcat)( // subtract 4 as minimum (also catered for in decoding)
  [(length - 4 << 2) + 0b11], u8a.subarray(0, length));
}

/***/ }),
/* 240 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BN_ZERO": () => (/* binding */ BN_ZERO),
/* harmony export */   "BN_ONE": () => (/* binding */ BN_ONE),
/* harmony export */   "BN_TWO": () => (/* binding */ BN_TWO),
/* harmony export */   "BN_THREE": () => (/* binding */ BN_THREE),
/* harmony export */   "BN_FOUR": () => (/* binding */ BN_FOUR),
/* harmony export */   "BN_FIVE": () => (/* binding */ BN_FIVE),
/* harmony export */   "BN_SIX": () => (/* binding */ BN_SIX),
/* harmony export */   "BN_SEVEN": () => (/* binding */ BN_SEVEN),
/* harmony export */   "BN_EIGHT": () => (/* binding */ BN_EIGHT),
/* harmony export */   "BN_NINE": () => (/* binding */ BN_NINE),
/* harmony export */   "BN_TEN": () => (/* binding */ BN_TEN),
/* harmony export */   "BN_HUNDRED": () => (/* binding */ BN_HUNDRED),
/* harmony export */   "BN_THOUSAND": () => (/* binding */ BN_THOUSAND),
/* harmony export */   "BN_MILLION": () => (/* binding */ BN_MILLION),
/* harmony export */   "BN_BILLION": () => (/* binding */ BN_BILLION),
/* harmony export */   "BN_QUINTILL": () => (/* binding */ BN_QUINTILL),
/* harmony export */   "BN_MAX_INTEGER": () => (/* binding */ BN_MAX_INTEGER)
/* harmony export */ });
/* harmony import */ var _bn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(88);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name BN_ZERO
 * @summary BN constant for 0.
 */

const BN_ZERO = new _bn_js__WEBPACK_IMPORTED_MODULE_0__(0);
/**
 * @name BN_ONE
 * @summary BN constant for 1.
 */

const BN_ONE = new _bn_js__WEBPACK_IMPORTED_MODULE_0__(1);
/**
 * @name BN_TWO
 * @summary BN constant for 2.
 */

const BN_TWO = new _bn_js__WEBPACK_IMPORTED_MODULE_0__(2);
/**
 * @name BN_THREE
 * @summary BN constant for 3.
 */

const BN_THREE = new _bn_js__WEBPACK_IMPORTED_MODULE_0__(3);
/**
 * @name BN_FOUR
 * @summary BN constant for 4.
 */

const BN_FOUR = new _bn_js__WEBPACK_IMPORTED_MODULE_0__(4);
/**
 * @name BN_FIVE
 * @summary BN constant for 5.
 */

const BN_FIVE = new _bn_js__WEBPACK_IMPORTED_MODULE_0__(5);
/**
 * @name BN_SIX
 * @summary BN constant for 6.
 */

const BN_SIX = new _bn_js__WEBPACK_IMPORTED_MODULE_0__(6);
/**
 * @name BN_SEVEN
 * @summary BN constant for 7.
 */

const BN_SEVEN = new _bn_js__WEBPACK_IMPORTED_MODULE_0__(7);
/**
 * @name BN_EIGHT
 * @summary BN constant for 8.
 */

const BN_EIGHT = new _bn_js__WEBPACK_IMPORTED_MODULE_0__(8);
/**
 * @name BN_NINE
 * @summary BN constant for 9.
 */

const BN_NINE = new _bn_js__WEBPACK_IMPORTED_MODULE_0__(9);
/**
 * @name BN_TEN
 * @summary BN constant for 10.
 */

const BN_TEN = new _bn_js__WEBPACK_IMPORTED_MODULE_0__(10);
/**
 * @name BN_HUNDRED
 * @summary BN constant for 100.
 */

const BN_HUNDRED = new _bn_js__WEBPACK_IMPORTED_MODULE_0__(100);
/**
 * @name BN_THOUSAND
 * @summary BN constant for 1,000.
 */

const BN_THOUSAND = new _bn_js__WEBPACK_IMPORTED_MODULE_0__(1000);
/**
 * @name BN_MILLION
 * @summary BN constant for 1,000,000.
 */

const BN_MILLION = new _bn_js__WEBPACK_IMPORTED_MODULE_0__(1000000);
/**
 * @name BN_BILLION
 * @summary BN constant for 1,000,000,000.
 */

const BN_BILLION = new _bn_js__WEBPACK_IMPORTED_MODULE_0__(1000000000);
/**
 * @name BN_QUINTILL
 * @summary BN constant for 1,000,000,000,000,000,000.
 */

const BN_QUINTILL = BN_BILLION.mul(BN_BILLION);
/**
 * @name BN_MAX_INTEGER
 * @summary BN constant for MAX_SAFE_INTEGER
 */

const BN_MAX_INTEGER = new _bn_js__WEBPACK_IMPORTED_MODULE_0__(Number.MAX_SAFE_INTEGER);

/***/ }),
/* 241 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "keyFromPath": () => (/* binding */ keyFromPath)
/* harmony export */ });
/* harmony import */ var _hdkdEcdsa_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(242);
/* harmony import */ var _hdkdEd25519_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(245);
/* harmony import */ var _hdkdSr25519_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(247);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0



const generators = {
  ecdsa: _hdkdEcdsa_js__WEBPACK_IMPORTED_MODULE_0__.keyHdkdEcdsa,
  ed25519: _hdkdEd25519_js__WEBPACK_IMPORTED_MODULE_1__.keyHdkdEd25519,
  // FIXME This is Substrate-compatible, not Ethereum-compatible
  ethereum: _hdkdEcdsa_js__WEBPACK_IMPORTED_MODULE_0__.keyHdkdEcdsa,
  sr25519: _hdkdSr25519_js__WEBPACK_IMPORTED_MODULE_2__.keyHdkdSr25519
};
function keyFromPath(pair, path, type) {
  const keyHdkd = generators[type];
  let result = pair;

  for (const junction of path) {
    result = keyHdkd(result, junction);
  }

  return result;
}

/***/ }),
/* 242 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "keyHdkdEcdsa": () => (/* binding */ keyHdkdEcdsa)
/* harmony export */ });
/* harmony import */ var _secp256k1_deriveHard_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(244);
/* harmony import */ var _secp256k1_pair_fromSeed_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(79);
/* harmony import */ var _hdkdDerive_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(243);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0



const keyHdkdEcdsa = (0,_hdkdDerive_js__WEBPACK_IMPORTED_MODULE_0__.createSeedDeriveFn)(_secp256k1_pair_fromSeed_js__WEBPACK_IMPORTED_MODULE_1__.secp256k1PairFromSeed, _secp256k1_deriveHard_js__WEBPACK_IMPORTED_MODULE_2__.secp256k1DeriveHard);

/***/ }),
/* 243 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createSeedDeriveFn": () => (/* binding */ createSeedDeriveFn)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(80);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

function createSeedDeriveFn(fromSeed, derive) {
  return (keypair, {
    chainCode,
    isHard
  }) => {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)(isHard, 'A soft key was found in the path and is not supported');
    return fromSeed(derive(keypair.secretKey.subarray(0, 32), chainCode));
  };
}

/***/ }),
/* 244 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "secp256k1DeriveHard": () => (/* binding */ secp256k1DeriveHard)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(238);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(170);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(197);
/* harmony import */ var _blake2_asU8a_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(190);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0


const HDKD = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.compactAddLength)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.stringToU8a)('Secp256k1HDKD'));
function secp256k1DeriveHard(seed, chainCode) {
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.assert)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.isU8a)(chainCode) && chainCode.length === 32, 'Invalid chainCode passed to derive'); // NOTE This is specific to the Substrate HDD derivation, so always use the blake2 hasher

  return (0,_blake2_asU8a_js__WEBPACK_IMPORTED_MODULE_4__.blake2AsU8a)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.u8aConcat)(HDKD, seed, chainCode), 256);
}

/***/ }),
/* 245 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "keyHdkdEd25519": () => (/* binding */ keyHdkdEd25519)
/* harmony export */ });
/* harmony import */ var _ed25519_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(134);
/* harmony import */ var _ed25519_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(246);
/* harmony import */ var _hdkdDerive_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(243);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0


const keyHdkdEd25519 = (0,_hdkdDerive_js__WEBPACK_IMPORTED_MODULE_0__.createSeedDeriveFn)(_ed25519_index_js__WEBPACK_IMPORTED_MODULE_1__.ed25519PairFromSeed, _ed25519_index_js__WEBPACK_IMPORTED_MODULE_2__.ed25519DeriveHard);

/***/ }),
/* 246 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ed25519DeriveHard": () => (/* binding */ ed25519DeriveHard)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(238);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(170);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(197);
/* harmony import */ var _blake2_asU8a_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(190);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0


const HDKD = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.compactAddLength)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.stringToU8a)('Ed25519HDKD'));
function ed25519DeriveHard(seed, chainCode) {
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.assert)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.isU8a)(chainCode) && chainCode.length === 32, 'Invalid chainCode passed to derive');
  return (0,_blake2_asU8a_js__WEBPACK_IMPORTED_MODULE_4__.blake2AsU8a)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.u8aConcat)(HDKD, seed, chainCode));
}

/***/ }),
/* 247 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "keyHdkdSr25519": () => (/* binding */ keyHdkdSr25519)
/* harmony export */ });
/* harmony import */ var _sr25519_deriveHard_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(251);
/* harmony import */ var _sr25519_deriveSoft_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(248);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0


function keyHdkdSr25519(keypair, {
  chainCode,
  isSoft
}) {
  return isSoft ? (0,_sr25519_deriveSoft_js__WEBPACK_IMPORTED_MODULE_0__.sr25519DeriveSoft)(keypair, chainCode) : (0,_sr25519_deriveHard_js__WEBPACK_IMPORTED_MODULE_1__.sr25519DeriveHard)(keypair, chainCode);
}

/***/ }),
/* 248 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "sr25519DeriveSoft": () => (/* binding */ sr25519DeriveSoft)
/* harmony export */ });
/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(137);
/* harmony import */ var _derive_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(249);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0


const sr25519DeriveSoft = (0,_derive_js__WEBPACK_IMPORTED_MODULE_0__.createDeriveFn)(_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.sr25519DeriveKeypairSoft);

/***/ }),
/* 249 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createDeriveFn": () => (/* binding */ createDeriveFn)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(178);
/* harmony import */ var _pair_fromU8a_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(179);
/* harmony import */ var _pair_toU8a_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(250);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0



function createDeriveFn(derive) {
  return (keypair, chainCode) => {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isU8a)(chainCode) && chainCode.length === 32, 'Invalid chainCode passed to derive');
    return (0,_pair_fromU8a_js__WEBPACK_IMPORTED_MODULE_2__.sr25519PairFromU8a)(derive((0,_pair_toU8a_js__WEBPACK_IMPORTED_MODULE_3__.sr25519KeypairToU8a)(keypair), chainCode));
  };
}

/***/ }),
/* 250 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "sr25519KeypairToU8a": () => (/* binding */ sr25519KeypairToU8a)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(197);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

function sr25519KeypairToU8a({
  publicKey,
  secretKey
}) {
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aConcat)(secretKey, publicKey).slice();
}

/***/ }),
/* 251 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "sr25519DeriveHard": () => (/* binding */ sr25519DeriveHard)
/* harmony export */ });
/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(137);
/* harmony import */ var _derive_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(249);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0


const sr25519DeriveHard = (0,_derive_js__WEBPACK_IMPORTED_MODULE_0__.createDeriveFn)(_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.sr25519DeriveKeypairHard);

/***/ }),
/* 252 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "naclSeal": () => (/* binding */ naclSeal)
/* harmony export */ });
/* harmony import */ var tweetnacl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(135);
/* harmony import */ var _random_asU8a_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(218);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0



/**
 * @name naclSeal
 * @summary Seals a message using the sender's encrypting secretKey, receiver's public key, and nonce
 * @description
 * Returns an encrypted message which can be open only by receiver's secretKey. If the `nonce` was not supplied, a random value is generated.
 * @example
 * <BR>
 *
 * ```javascript
 * import { naclSeal } from '@polkadot/util-crypto';
 *
 * naclSeal([...], [...], [...], [...]); // => [...]
 * ```
 */
function naclSeal(message, senderBoxSecret, receiverBoxPublic, nonce = (0,_random_asU8a_js__WEBPACK_IMPORTED_MODULE_1__.randomAsU8a)(24)) {
  return {
    nonce,
    sealed: tweetnacl__WEBPACK_IMPORTED_MODULE_0__.box(message, nonce, receiverBoxPublic, senderBoxSecret)
  };
}

/***/ }),
/* 253 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "secp256k1Compress": () => (/* binding */ secp256k1Compress)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(80);
/* harmony import */ var _secp256k1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(84);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0


function secp256k1Compress(publicKey) {
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)([33, 65].includes(publicKey.length), 'Invalid publicKey provided');
  return new Uint8Array(_secp256k1_js__WEBPACK_IMPORTED_MODULE_1__.secp256k1.keyFromPublic(publicKey).getPublic().encodeCompressed());
}

/***/ }),
/* 254 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "pairToJson": () => (/* binding */ pairToJson)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(122);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(255);
// Copyright 2017-2021 @polkadot/keyring authors & contributors
// SPDX-License-Identifier: Apache-2.0


function pairToJson(type, {
  address,
  meta
}, encoded, isEncrypted) {
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)((0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_1__.jsonEncryptFormat)(encoded, ['pkcs8', type], isEncrypted), {
    address,
    meta
  });
}

/***/ }),
/* 255 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "jsonEncryptFormat": () => (/* binding */ jsonEncryptFormat)
/* harmony export */ });
/* harmony import */ var _base64_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(256);
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(213);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0


function jsonEncryptFormat(encoded, contentType, isEncrypted) {
  return {
    encoded: (0,_base64_index_js__WEBPACK_IMPORTED_MODULE_0__.base64Encode)(encoded),
    encoding: {
      content: contentType,
      type: isEncrypted ? _constants_js__WEBPACK_IMPORTED_MODULE_1__.ENCODING : _constants_js__WEBPACK_IMPORTED_MODULE_1__.ENCODING_NONE,
      version: _constants_js__WEBPACK_IMPORTED_MODULE_1__.ENCODING_VERSION
    }
  };
}

/***/ }),
/* 256 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "base64Validate": () => (/* binding */ base64Validate),
/* harmony export */   "isBase64": () => (/* binding */ isBase64),
/* harmony export */   "base64Decode": () => (/* binding */ base64Decode),
/* harmony export */   "base64Encode": () => (/* binding */ base64Encode)
/* harmony export */ });
/* harmony import */ var micro_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(182);
/* harmony import */ var _base32_helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(183);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0


const BASE64_CONFIG = {
  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',
  coder: micro_base__WEBPACK_IMPORTED_MODULE_0__.base64,
  regex: /^(?:[A-Za-z0-9+/]{2}[A-Za-z0-9+/]{2})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/,
  type: 'base64'
};
/**
 * @name base64Validate
 * @summary Validates a base64 value.
 * @description
 * Validates that the supplied value is valid base64
 */

const base64Validate = (0,_base32_helpers_js__WEBPACK_IMPORTED_MODULE_1__.createValidate)(BASE64_CONFIG);
/**
 * @name isBase64
 * @description Checks if the input is in base64, returning true/false
 */

const isBase64 = (0,_base32_helpers_js__WEBPACK_IMPORTED_MODULE_1__.createIs)(base64Validate);
/**
 * @name base64Decode
 * @summary Decodes a base64 value.
 * @description
 * From the provided input, decode the base64 and return the result as an `Uint8Array`.
 */

const base64Decode = (0,_base32_helpers_js__WEBPACK_IMPORTED_MODULE_1__.createDecode)(BASE64_CONFIG, base64Validate);
/**
 * @name base64Encode
 * @summary Creates a base64 value.
 * @description
 * From the provided input, create the base64 and return the result as a string.
 */

const base64Encode = (0,_base32_helpers_js__WEBPACK_IMPORTED_MODULE_1__.createEncode)(BASE64_CONFIG);

/***/ }),
/* 257 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "signatureVerify": () => (/* binding */ signatureVerify)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(261);
/* harmony import */ var _address_decode_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(180);
/* harmony import */ var _ed25519_verify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(259);
/* harmony import */ var _secp256k1_verify_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(258);
/* harmony import */ var _sr25519_verify_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(260);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0






const secp256k1VerifyHasher = hashType => (message, signature, publicKey) => (0,_secp256k1_verify_js__WEBPACK_IMPORTED_MODULE_0__.secp256k1Verify)(message, signature, publicKey, hashType);

const VERIFIERS_ECDSA = [['ecdsa', secp256k1VerifyHasher('blake2')], ['ethereum', secp256k1VerifyHasher('keccak')]];
const VERIFIERS = [['ed25519', _ed25519_verify_js__WEBPACK_IMPORTED_MODULE_1__.ed25519Verify], ['sr25519', _sr25519_verify_js__WEBPACK_IMPORTED_MODULE_2__.sr25519Verify], ...VERIFIERS_ECDSA];
const CRYPTO_TYPES = ['ed25519', 'sr25519', 'ecdsa'];

function verifyDetect(result, {
  message,
  publicKey,
  signature
}, verifiers = VERIFIERS) {
  result.isValid = verifiers.some(([crypto, verify]) => {
    try {
      if (verify(message, signature, publicKey)) {
        result.crypto = crypto;
        return true;
      }
    } catch (error) {// do nothing, result.isValid still set to false
    }

    return false;
  });
  return result;
}

function verifyMultisig(result, {
  message,
  publicKey,
  signature
}) {
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.assert)([0, 1, 2].includes(signature[0]), () => `Unknown crypto type, expected signature prefix [0..2], found ${signature[0]}`);
  const type = CRYPTO_TYPES[signature[0]] || 'none';
  result.crypto = type;

  try {
    result.isValid = {
      ecdsa: () => verifyDetect(result, {
        message,
        publicKey,
        signature: signature.subarray(1)
      }, VERIFIERS_ECDSA).isValid,
      ed25519: () => (0,_ed25519_verify_js__WEBPACK_IMPORTED_MODULE_1__.ed25519Verify)(message, signature.subarray(1), publicKey),
      none: () => {
        throw Error('no verify for `none` crypto type');
      },
      sr25519: () => (0,_sr25519_verify_js__WEBPACK_IMPORTED_MODULE_2__.sr25519Verify)(message, signature.subarray(1), publicKey)
    }[type]();
  } catch (error) {// ignore, result.isValid still set to false
  }

  return result;
}

function getVerifyFn(signature) {
  return [0, 1, 2].includes(signature[0]) && [65, 66].includes(signature.length) ? verifyMultisig : verifyDetect;
}

function signatureVerify(message, signature, addressOrPublicKey) {
  const signatureU8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.u8aToU8a)(signature);
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.assert)([64, 65, 66].includes(signatureU8a.length), () => `Invalid signature length, expected [64..66] bytes, found ${signatureU8a.length}`);
  const publicKey = (0,_address_decode_js__WEBPACK_IMPORTED_MODULE_5__.decodeAddress)(addressOrPublicKey);
  const input = {
    message: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.u8aToU8a)(message),
    publicKey,
    signature: signatureU8a
  };
  const result = {
    crypto: 'none',
    isValid: false,
    isWrapped: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.u8aIsWrapped)(input.message, true),
    publicKey
  };
  const isWrappedBytes = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.u8aIsWrapped)(input.message, false);
  const verifyFn = getVerifyFn(signatureU8a);
  verifyFn(result, input);

  if (result.crypto !== 'none' || result.isWrapped && !isWrappedBytes) {
    return result;
  }

  input.message = isWrappedBytes ? (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.u8aUnwrapBytes)(input.message) : (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.u8aWrapBytes)(input.message);
  return verifyFn(result, input);
}

/***/ }),
/* 258 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "secp256k1Verify": () => (/* binding */ secp256k1Verify)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(228);
/* harmony import */ var _expand_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(201);
/* harmony import */ var _hasher_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(206);
/* harmony import */ var _secp256k1_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(84);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0




/**
 * @name secp256k1Verify
 * @description Verifies the signature of `message`, using the supplied pair
 */

function secp256k1Verify(message, signature, address, hashType = 'blake2') {
  const isEthereum = hashType === 'keccak';
  const u8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(signature);
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(u8a.length === 65, `Expected signature with 65 bytes, ${u8a.length} found instead`);
  const publicKey = new Uint8Array( // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument
  _secp256k1_js__WEBPACK_IMPORTED_MODULE_2__.secp256k1.recoverPubKey((0,_hasher_js__WEBPACK_IMPORTED_MODULE_3__.secp256k1Hasher)(hashType, message), {
    r: u8a.slice(0, 32),
    s: u8a.slice(32, 64)
  }, u8a[64]).encodeCompressed());
  const signingAddress = (0,_hasher_js__WEBPACK_IMPORTED_MODULE_3__.secp256k1Hasher)(hashType, isEthereum ? (0,_expand_js__WEBPACK_IMPORTED_MODULE_4__.secp256k1Expand)(publicKey) : publicKey);
  const inputAddress = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(address); // for Ethereum (keccak) the last 20 bytes is the address

  return isEthereum ? (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.u8aEq)(signingAddress.slice(-20), inputAddress.slice(-20)) : (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.u8aEq)(signingAddress, inputAddress);
}

/***/ }),
/* 259 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ed25519Verify": () => (/* binding */ ed25519Verify)
/* harmony export */ });
/* harmony import */ var tweetnacl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(135);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(80);
/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(137);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0



/**
 * @name ed25519Sign
 * @summary Verifies the signature on the supplied message.
 * @description
 * Verifies the `signature` on `message` with the supplied `publicKey`. Returns `true` on sucess, `false` otherwise.
 * @example
 * <BR>
 *
 * ```javascript
 * import { ed25519Verify } from '@polkadot/util-crypto';
 *
 * ed25519Verify([...], [...], [...]); // => true/false
 * ```
 */

function ed25519Verify(message, signature, publicKey, onlyJs) {
  const messageU8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToU8a)(message);
  const publicKeyU8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToU8a)(publicKey);
  const signatureU8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToU8a)(signature);
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.assert)(publicKeyU8a.length === 32, () => `Invalid publicKey, received ${publicKeyU8a.length}, expected 32`);
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.assert)(signatureU8a.length === 64, () => `Invalid signature, received ${signatureU8a.length} bytes, expected 64`);
  return !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_3__.isReady)() ? (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_3__.ed25519Verify)(signatureU8a, messageU8a, publicKeyU8a) : tweetnacl__WEBPACK_IMPORTED_MODULE_0__.sign.detached.verify(messageU8a, signatureU8a, publicKeyU8a);
}

/***/ }),
/* 260 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "sr25519Verify": () => (/* binding */ sr25519Verify)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(80);
/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(137);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0


/**
 * @name sr25519Verify
 * @description Verifies the signature of `message`, using the supplied pair
 */

function sr25519Verify(message, signature, publicKey) {
  const publicKeyU8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(publicKey);
  const signatureU8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(signature);
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(publicKeyU8a.length === 32, () => `Invalid publicKey, received ${publicKeyU8a.length} bytes, expected 32`);
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(signatureU8a.length === 64, () => `Invalid signature, received ${signatureU8a.length} bytes, expected 64`);
  return (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.sr25519Verify)(signatureU8a, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(message), publicKeyU8a);
}

/***/ }),
/* 261 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "U8A_WRAP_ETHEREUM": () => (/* binding */ U8A_WRAP_ETHEREUM),
/* harmony export */   "U8A_WRAP_PREFIX": () => (/* binding */ U8A_WRAP_PREFIX),
/* harmony export */   "U8A_WRAP_POSTFIX": () => (/* binding */ U8A_WRAP_POSTFIX),
/* harmony export */   "u8aIsWrapped": () => (/* binding */ u8aIsWrapped),
/* harmony export */   "u8aUnwrapBytes": () => (/* binding */ u8aUnwrapBytes),
/* harmony export */   "u8aWrapBytes": () => (/* binding */ u8aWrapBytes)
/* harmony export */ });
/* harmony import */ var _concat_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(197);
/* harmony import */ var _eq_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(228);
/* harmony import */ var _toU8a_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(166);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Originally from https://github.com/polkadot-js/extension/pull/743



const U8A_WRAP_ETHEREUM = (0,_toU8a_js__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)('\x19Ethereum Signed Message:\n');
const U8A_WRAP_PREFIX = (0,_toU8a_js__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)('<Bytes>');
const U8A_WRAP_POSTFIX = (0,_toU8a_js__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)('</Bytes>');
const WRAP_LEN = U8A_WRAP_PREFIX.length + U8A_WRAP_POSTFIX.length;
function u8aIsWrapped(u8a, withEthereum) {
  return u8a.length >= WRAP_LEN && (0,_eq_js__WEBPACK_IMPORTED_MODULE_1__.u8aEq)(u8a.subarray(0, U8A_WRAP_PREFIX.length), U8A_WRAP_PREFIX) && (0,_eq_js__WEBPACK_IMPORTED_MODULE_1__.u8aEq)(u8a.slice(-U8A_WRAP_POSTFIX.length), U8A_WRAP_POSTFIX) || withEthereum && u8a.length >= U8A_WRAP_ETHEREUM.length && (0,_eq_js__WEBPACK_IMPORTED_MODULE_1__.u8aEq)(u8a.subarray(0, U8A_WRAP_ETHEREUM.length), U8A_WRAP_ETHEREUM);
}
function u8aUnwrapBytes(bytes) {
  const u8a = (0,_toU8a_js__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(bytes); // we don't want to unwrap Ethereum-style wraps

  return u8aIsWrapped(u8a, false) ? u8a.subarray(U8A_WRAP_PREFIX.length, u8a.length - U8A_WRAP_POSTFIX.length) : u8a;
}
function u8aWrapBytes(bytes) {
  const u8a = (0,_toU8a_js__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(bytes); // if Ethereum-wrapping, we don't add our wrapping bytes

  return u8aIsWrapped(u8a, true) ? u8a : (0,_concat_js__WEBPACK_IMPORTED_MODULE_2__.u8aConcat)(U8A_WRAP_PREFIX, u8a, U8A_WRAP_POSTFIX);
}

/***/ }),
/* 262 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "sr25519VrfSign": () => (/* binding */ sr25519VrfSign)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(166);
/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(137);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0


const EMPTY_U8A = new Uint8Array();
/**
 * @name sr25519VrfSign
 * @description Sign with sr25519 vrf signing (deterministic)
 */

function sr25519VrfSign(message, {
  secretKey
}, context = EMPTY_U8A, extra = EMPTY_U8A) {
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)((secretKey === null || secretKey === void 0 ? void 0 : secretKey.length) === 64, 'Invalid secretKey, expected 64-bytes');
  return (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.vrfSign)(secretKey, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aToU8a)(context), (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aToU8a)(message), (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aToU8a)(extra));
}

/***/ }),
/* 263 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "sr25519VrfVerify": () => (/* binding */ sr25519VrfVerify)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(80);
/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(137);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0


const EMPTY_U8A = new Uint8Array();
/**
 * @name sr25519VrfVerify
 * @description Verify with sr25519 vrf verification
 */

function sr25519VrfVerify(message, signOutput, publicKey, context = EMPTY_U8A, extra = EMPTY_U8A) {
  const publicKeyU8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(publicKey);
  const proofU8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(signOutput);
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(publicKeyU8a.length === 32, 'Invalid publicKey, expected 32-bytes');
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(proofU8a.length === 96, 'Invalid vrfSign output, expected 96 bytes');
  return (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.vrfVerify)(publicKeyU8a, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(context), (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(message), (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(extra), proofU8a);
}

/***/ }),
/* 264 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DEV_PHRASE": () => (/* binding */ DEV_PHRASE),
/* harmony export */   "DEV_SEED": () => (/* binding */ DEV_SEED)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/keyring authors & contributors
// SPDX-License-Identifier: Apache-2.0
// default substrate dev phrase
const DEV_PHRASE = 'bottom drive obey lake curtain smoke basket hold race lonely fit walk'; // seed from the above phrase

const DEV_SEED = '0xfac7959dbfe72f052e5a0c3c8d6530f202b02fd8f9f5ca3580ec8deb7797479e';

/***/ }),
/* 265 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "keyExtractSuri": () => (/* binding */ keyExtractSuri)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(83);
/* harmony import */ var _extractPath_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(235);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0


const RE_CAPTURE = /^(\w+( \w+)*)((\/\/?[^/]+)*)(\/\/\/(.*))?$/;
/**
 * @description Extracts the phrase, path and password from a SURI format for specifying secret keys `<secret>/<soft-key>//<hard-key>///<password>` (the `///password` may be omitted, and `/<soft-key>` and `//<hard-key>` maybe repeated and mixed).
 */

function keyExtractSuri(suri) {
  // eslint-disable-next-line @typescript-eslint/prefer-regexp-exec
  const matches = suri.match(RE_CAPTURE);
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)(!(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isNull)(matches), 'Unable to match provided value to a secret URI');
  const [, phrase,, derivePath,,, password] = matches;
  const {
    path
  } = (0,_extractPath_js__WEBPACK_IMPORTED_MODULE_2__.keyExtractPath)(derivePath);
  return {
    derivePath,
    password,
    path,
    phrase
  };
}

/***/ }),
/* 266 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "mnemonicToLegacySeed": () => (/* binding */ mnemonicToLegacySeed)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(177);
/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(137);
/* harmony import */ var _bip39_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(268);
/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(267);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0




/**
 * @name mnemonicToLegacySeed
 * @summary Creates a valid Ethereum/Bitcoin-compatible seed from a mnemonic input
 * @example
 * <BR>
 *
 * ```javascript
 * import { mnemonicGenerate, mnemonicToLegacySeed, mnemonicValidate } from '@polkadot/util-crypto';
 *
 * const mnemonic = mnemonicGenerate(); // => string
 * const isValidMnemonic = mnemonicValidate(mnemonic); // => boolean
 *
 * if (isValidMnemonic) {
 *   console.log(`Seed generated from mnemonic: ${mnemonicToLegacySeed(mnemonic)}`); => u8a
 * }
 * ```
 */

function mnemonicToLegacySeed(mnemonic, password = '', onlyJs, byteLength = 32) {
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)((0,_validate_js__WEBPACK_IMPORTED_MODULE_1__.mnemonicValidate)(mnemonic), 'Invalid bip39 mnemonic specified');
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)([32, 64].includes(byteLength), () => `Invalid seed length ${byteLength}, expected 32 or 64`);
  return byteLength === 32 ? !_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.hasBigInt || !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_3__.isReady)() ? (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_3__.bip39ToSeed)(mnemonic, password) : (0,_bip39_js__WEBPACK_IMPORTED_MODULE_4__.mnemonicToSeedSync)(mnemonic, password).subarray(0, 32) : (0,_bip39_js__WEBPACK_IMPORTED_MODULE_4__.mnemonicToSeedSync)(mnemonic, password);
}

/***/ }),
/* 267 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "mnemonicValidate": () => (/* binding */ mnemonicValidate)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(177);
/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(137);
/* harmony import */ var _bip39_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(268);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0



/**
 * @name mnemonicValidate
 * @summary Validates a mnemonic input using [BIP39](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki).
 * @example
 * <BR>
 *
 * ```javascript
 * import { mnemonicGenerate, mnemonicValidate } from '@polkadot/util-crypto';
 *
 * const mnemonic = mnemonicGenerate(); // => string
 * const isValidMnemonic = mnemonicValidate(mnemonic); // => boolean
 * ```
 */

function mnemonicValidate(mnemonic, onlyJs) {
  return !_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.hasBigInt || !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.isReady)() ? (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.bip39Validate)(mnemonic) : (0,_bip39_js__WEBPACK_IMPORTED_MODULE_2__.validateMnemonic)(mnemonic);
}

/***/ }),
/* 268 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "mnemonicToSeedSync": () => (/* binding */ mnemonicToSeedSync),
/* harmony export */   "mnemonicToEntropy": () => (/* binding */ mnemonicToEntropy),
/* harmony export */   "entropyToMnemonic": () => (/* binding */ entropyToMnemonic),
/* harmony export */   "generateMnemonic": () => (/* binding */ generateMnemonic),
/* harmony export */   "validateMnemonic": () => (/* binding */ validateMnemonic)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(170);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(166);
/* harmony import */ var _pbkdf2_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(271);
/* harmony import */ var _random_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(218);
/* harmony import */ var _sha_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(269);
/* harmony import */ var _bip39_en_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(272);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Adapted from the bitcoinjs/bip39 source
// https://github.com/bitcoinjs/bip39/blob/1d063b6a6aee4145b34d701037cd3e67f5446ff9/ts_src/index.ts
// Copyright (c) 2014, Wei Lu <luwei.here@gmail.com> and Daniel Cousens <email@dcousens.com>
// ISC Licence
//
// Change made in this version -
//   - Adjust formatting (just eslint differences)
//   - Only English wordlist (this aligns with the wasm-crypto implementation)
//   - Use util-crypto randomAsU8a (instead of randombytes)
//   - Remove setting of wordlist passing of wordlist in functions
//   - Remove mnemonicToSeed (we only use the sync variant)





const INVALID_MNEMONIC = 'Invalid mnemonic';
const INVALID_ENTROPY = 'Invalid entropy';
const INVALID_CHECKSUM = 'Invalid mnemonic checksum';

function normalize(str) {
  return (str || '').normalize('NFKD');
}

function binaryToByte(bin) {
  return parseInt(bin, 2);
}

function bytesToBinary(bytes) {
  return bytes.map(x => x.toString(2).padStart(8, '0')).join('');
}

function deriveChecksumBits(entropyBuffer) {
  return bytesToBinary(Array.from((0,_sha_index_js__WEBPACK_IMPORTED_MODULE_0__.sha256AsU8a)(entropyBuffer))).slice(0, entropyBuffer.length * 8 / 32);
}

function mnemonicToSeedSync(mnemonic, password) {
  return (0,_pbkdf2_index_js__WEBPACK_IMPORTED_MODULE_1__.pbkdf2Encode)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.stringToU8a)(normalize(mnemonic)), (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.stringToU8a)(`mnemonic${normalize(password)}`)).password;
}
function mnemonicToEntropy(mnemonic) {
  var _entropyBits$match;

  const words = normalize(mnemonic).split(' ');
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.assert)(words.length % 3 === 0, INVALID_MNEMONIC); // convert word indices to 11 bit binary strings

  const bits = words.map(word => {
    const index = _bip39_en_js__WEBPACK_IMPORTED_MODULE_4__["default"].indexOf(word);
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.assert)(index !== -1, INVALID_MNEMONIC);
    return index.toString(2).padStart(11, '0');
  }).join(''); // split the binary string into ENT/CS

  const dividerIndex = Math.floor(bits.length / 33) * 32;
  const entropyBits = bits.slice(0, dividerIndex);
  const checksumBits = bits.slice(dividerIndex); // calculate the checksum and compare

  const entropyBytes = (_entropyBits$match = entropyBits.match(/(.{1,8})/g)) === null || _entropyBits$match === void 0 ? void 0 : _entropyBits$match.map(binaryToByte);
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.assert)(entropyBytes && entropyBytes.length % 4 === 0 && entropyBytes.length >= 16 && entropyBytes.length <= 32, INVALID_ENTROPY);
  const entropy = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.u8aToU8a)(entropyBytes);
  const newChecksum = deriveChecksumBits(entropy);
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.assert)(newChecksum === checksumBits, INVALID_CHECKSUM);
  return entropy;
}
function entropyToMnemonic(entropy) {
  // 128 <= ENT <= 256
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.assert)(entropy.length % 4 === 0 && entropy.length >= 16 && entropy.length <= 32, INVALID_ENTROPY);
  const entropyBits = bytesToBinary(Array.from(entropy));
  const checksumBits = deriveChecksumBits(entropy); // we just set it prior, so this is a safe check
  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion

  return (entropyBits + checksumBits).match(/(.{1,11})/g).map(binary => _bip39_en_js__WEBPACK_IMPORTED_MODULE_4__["default"][binaryToByte(binary)]).join(' ');
}
function generateMnemonic(strength) {
  strength = strength || 128;
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.assert)(strength % 32 === 0, INVALID_ENTROPY);
  return entropyToMnemonic((0,_random_index_js__WEBPACK_IMPORTED_MODULE_6__.randomAsU8a)(strength / 8));
}
function validateMnemonic(mnemonic) {
  try {
    mnemonicToEntropy(mnemonic);
  } catch (e) {
    return false;
  }

  return true;
}

/***/ }),
/* 269 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "shaAsU8a": () => (/* binding */ shaAsU8a),
/* harmony export */   "sha256AsU8a": () => (/* binding */ sha256AsU8a),
/* harmony export */   "sha512AsU8a": () => (/* binding */ sha512AsU8a)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(177);
/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(137);
/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(195);
/* harmony import */ var _noble_hashes_lib_sha256_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(224);
/* harmony import */ var _noble_hashes_lib_sha512_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(270);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0






/**
 * @name shaAsU8a
 * @summary Creates a sha Uint8Array from the input.
 */
function shaAsU8a(value, bitLength = 256, onlyJs) {
  const is256 = bitLength === 256;
  const u8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(value);
  return !_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.hasBigInt || !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.isReady)() ? is256 ? (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.sha256)(u8a) : (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.sha512)(u8a) : is256 ? (0,_noble_hashes_lib_sha256_js__WEBPACK_IMPORTED_MODULE_3__.sha256)(u8a) : (0,_noble_hashes_lib_sha512_js__WEBPACK_IMPORTED_MODULE_4__.sha512)(u8a);
}
/**
 * @name sha256AsU8a
 * @summary Creates a sha256 Uint8Array from the input.
 */

const sha256AsU8a = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_5__.createBitHasher)(256, shaAsU8a);
/**
 * @name sha512AsU8a
 * @summary Creates a sha512 Uint8Array from the input.
 */

const sha512AsU8a = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_5__.createBitHasher)(512, shaAsU8a);

/***/ }),
/* 270 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SHA512": () => (/* binding */ SHA512),
/* harmony export */   "sha512": () => (/* binding */ sha512),
/* harmony export */   "sha512_256": () => (/* binding */ sha512_256),
/* harmony export */   "sha384": () => (/* binding */ sha384)
/* harmony export */ });
/* harmony import */ var _sha2_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(225);
/* harmony import */ var _u64_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(192);
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(193);
/*! noble-hashes - MIT License (c) 2021 Paul Miller (paulmillr.com) */
// https://github.com/paulmillr/noble-hashes/pull/13


 // Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):
// prettier-ignore

const [SHA512_Kh, SHA512_Kl] = _u64_js__WEBPACK_IMPORTED_MODULE_0__.split([(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x428a2f98d728ae22'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x7137449123ef65cd'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xb5c0fbcfec4d3b2f'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xe9b5dba58189dbbc'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x3956c25bf348b538'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x59f111f1b605d019'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x923f82a4af194f9b'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xab1c5ed5da6d8118'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xd807aa98a3030242'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x12835b0145706fbe'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x243185be4ee4b28c'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x550c7dc3d5ffb4e2'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x72be5d74f27b896f'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x80deb1fe3b1696b1'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x9bdc06a725c71235'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xc19bf174cf692694'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xe49b69c19ef14ad2'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xefbe4786384f25e3'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x0fc19dc68b8cd5b5'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x240ca1cc77ac9c65'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x2de92c6f592b0275'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x4a7484aa6ea6e483'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x5cb0a9dcbd41fbd4'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x76f988da831153b5'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x983e5152ee66dfab'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xa831c66d2db43210'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xb00327c898fb213f'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xbf597fc7beef0ee4'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xc6e00bf33da88fc2'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xd5a79147930aa725'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x06ca6351e003826f'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x142929670a0e6e70'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x27b70a8546d22ffc'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x2e1b21385c26c926'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x4d2c6dfc5ac42aed'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x53380d139d95b3df'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x650a73548baf63de'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x766a0abb3c77b2a8'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x81c2c92e47edaee6'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x92722c851482353b'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xa2bfe8a14cf10364'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xa81a664bbc423001'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xc24b8b70d0f89791'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xc76c51a30654be30'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xd192e819d6ef5218'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xd69906245565a910'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xf40e35855771202a'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x106aa07032bbd1b8'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x19a4c116b8d2d0c8'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x1e376c085141ab53'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x2748774cdf8eeb99'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x34b0bcb5e19b48a8'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x391c0cb3c5c95a63'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x4ed8aa4ae3418acb'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x5b9cca4f7763e373'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x682e6ff3d6b2b8a3'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x748f82ee5defb2fc'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x78a5636f43172f60'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x84c87814a1f0ab72'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x8cc702081a6439ec'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x90befffa23631e28'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xa4506cebde82bde9'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xbef9a3f7b2c67915'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xc67178f2e372532b'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xca273eceea26619c'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xd186b8c721c0c207'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xeada7dd6cde0eb1e'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xf57d4f7fee6ed178'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x06f067aa72176fba'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x0a637dc5a2c898a6'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x113f9804bef90dae'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x1b710b35131c471b'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x28db77f523047d84'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x32caab7b40c72493'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x3c9ebe0a15c9bebc'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x431d67c49c100d4c'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x4cc5d4becb3e42b6'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x597f299cfc657e2a'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x5fcb6fab3ad6faec'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x6c44198c4a475817')]); // Temporary buffer, not used to store anything between runs

const SHA512_W_H = new Uint32Array(80);
const SHA512_W_L = new Uint32Array(80);
class SHA512 extends _sha2_js__WEBPACK_IMPORTED_MODULE_2__.SHA2 {
  // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.
  // Also looks cleaner and easier to verify with spec.
  // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):
  // h -- high 32 bits, l -- low 32 bits
  constructor() {
    super(128, 64, 16, false);
    this.Ah = 0x6a09e667 | 0;
    this.Al = 0xf3bcc908 | 0;
    this.Bh = 0xbb67ae85 | 0;
    this.Bl = 0x84caa73b | 0;
    this.Ch = 0x3c6ef372 | 0;
    this.Cl = 0xfe94f82b | 0;
    this.Dh = 0xa54ff53a | 0;
    this.Dl = 0x5f1d36f1 | 0;
    this.Eh = 0x510e527f | 0;
    this.El = 0xade682d1 | 0;
    this.Fh = 0x9b05688c | 0;
    this.Fl = 0x2b3e6c1f | 0;
    this.Gh = 0x1f83d9ab | 0;
    this.Gl = 0xfb41bd6b | 0;
    this.Hh = 0x5be0cd19 | 0;
    this.Hl = 0x137e2179 | 0;
  } // prettier-ignore


  get() {
    const {
      Ah,
      Al,
      Bh,
      Bl,
      Ch,
      Cl,
      Dh,
      Dl,
      Eh,
      El,
      Fh,
      Fl,
      Gh,
      Gl,
      Hh,
      Hl
    } = this;
    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];
  } // prettier-ignore


  set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {
    this.Ah = Ah | 0;
    this.Al = Al | 0;
    this.Bh = Bh | 0;
    this.Bl = Bl | 0;
    this.Ch = Ch | 0;
    this.Cl = Cl | 0;
    this.Dh = Dh | 0;
    this.Dl = Dl | 0;
    this.Eh = Eh | 0;
    this.El = El | 0;
    this.Fh = Fh | 0;
    this.Fl = Fl | 0;
    this.Gh = Gh | 0;
    this.Gl = Gl | 0;
    this.Hh = Hh | 0;
    this.Hl = Hl | 0;
  }

  process(view, offset) {
    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array
    for (let i = 0; i < 16; i++, offset += 4) {
      SHA512_W_H[i] = view.getUint32(offset);
      SHA512_W_L[i] = view.getUint32(offset += 4);
    }

    for (let i = 16; i < 80; i++) {
      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)
      const W15h = SHA512_W_H[i - 15] | 0;
      const W15l = SHA512_W_L[i - 15] | 0;
      const s0h = _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrSH(W15h, W15l, 1) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrSH(W15h, W15l, 8) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__.shrSH(W15h, W15l, 7);
      const s0l = _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrSL(W15h, W15l, 1) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrSL(W15h, W15l, 8) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__.shrSL(W15h, W15l, 7); // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)

      const W2h = SHA512_W_H[i - 2] | 0;
      const W2l = SHA512_W_L[i - 2] | 0;
      const s1h = _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrSH(W2h, W2l, 19) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrBH(W2h, W2l, 61) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__.shrSH(W2h, W2l, 6);
      const s1l = _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrSL(W2h, W2l, 19) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrBL(W2h, W2l, 61) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__.shrSL(W2h, W2l, 6); // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];

      const SUMl = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);
      const SUMh = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);
      SHA512_W_H[i] = SUMh | 0;
      SHA512_W_L[i] = SUMl | 0;
    }

    let {
      Ah,
      Al,
      Bh,
      Bl,
      Ch,
      Cl,
      Dh,
      Dl,
      Eh,
      El,
      Fh,
      Fl,
      Gh,
      Gl,
      Hh,
      Hl
    } = this; // Compression function main loop, 80 rounds

    for (let i = 0; i < 80; i++) {
      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)
      const sigma1h = _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrSH(Eh, El, 14) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrSH(Eh, El, 18) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrBH(Eh, El, 41);
      const sigma1l = _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrSL(Eh, El, 14) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrSL(Eh, El, 18) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrBL(Eh, El, 41); //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;

      const CHIh = Eh & Fh ^ ~Eh & Gh;
      const CHIl = El & Fl ^ ~El & Gl; // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]
      // prettier-ignore

      const T1ll = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);
      const T1h = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);
      const T1l = T1ll | 0; // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)

      const sigma0h = _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrSH(Ah, Al, 28) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrBH(Ah, Al, 34) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrBH(Ah, Al, 39);
      const sigma0l = _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrSL(Ah, Al, 28) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrBL(Ah, Al, 34) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrBL(Ah, Al, 39);
      const MAJh = Ah & Bh ^ Ah & Ch ^ Bh & Ch;
      const MAJl = Al & Bl ^ Al & Cl ^ Bl & Cl;
      Hh = Gh | 0;
      Hl = Gl | 0;
      Gh = Fh | 0;
      Gl = Fl | 0;
      Fh = Eh | 0;
      Fl = El | 0;
      ({
        h: Eh,
        l: El
      } = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));
      Dh = Ch | 0;
      Dl = Cl | 0;
      Ch = Bh | 0;
      Cl = Bl | 0;
      Bh = Ah | 0;
      Bl = Al | 0;
      const All = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add3L(T1l, sigma0l, MAJl);
      Ah = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add3H(All, T1h, sigma0h, MAJh);
      Al = All | 0;
    } // Add the compressed chunk to the current hash value


    ({
      h: Ah,
      l: Al
    } = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));
    ({
      h: Bh,
      l: Bl
    } = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));
    ({
      h: Ch,
      l: Cl
    } = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));
    ({
      h: Dh,
      l: Dl
    } = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));
    ({
      h: Eh,
      l: El
    } = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));
    ({
      h: Fh,
      l: Fl
    } = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));
    ({
      h: Gh,
      l: Gl
    } = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));
    ({
      h: Hh,
      l: Hl
    } = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));
    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);
  }

  roundClean() {
    SHA512_W_H.fill(0);
    SHA512_W_L.fill(0);
  }

  destroy() {
    this.buffer.fill(0);
    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  }

}

class SHA512_256 extends SHA512 {
  // h -- high 32 bits, l -- low 32 bits
  constructor() {
    super();
    this.Ah = 0x22312194 | 0;
    this.Al = 0xfc2bf72c | 0;
    this.Bh = 0x9f555fa3 | 0;
    this.Bl = 0xc84c64c2 | 0;
    this.Ch = 0x2393b86b | 0;
    this.Cl = 0x6f53b151 | 0;
    this.Dh = 0x96387719 | 0;
    this.Dl = 0x5940eabd | 0;
    this.Eh = 0x96283ee2 | 0;
    this.El = 0xa88effe3 | 0;
    this.Fh = 0xbe5e1e25 | 0;
    this.Fl = 0x53863992 | 0;
    this.Gh = 0x2b0199fc | 0;
    this.Gl = 0x2c85b8aa | 0;
    this.Hh = 0x0eb72ddc | 0;
    this.Hl = 0x81c52ca2 | 0;
    this.outputLen = 32;
  }

}

class SHA384 extends SHA512 {
  // h -- high 32 bits, l -- low 32 bits
  constructor() {
    super();
    this.Ah = 0xcbbb9d5d | 0;
    this.Al = 0xc1059ed8 | 0;
    this.Bh = 0x629a292a | 0;
    this.Bl = 0x367cd507 | 0;
    this.Ch = 0x9159015a | 0;
    this.Cl = 0x3070dd17 | 0;
    this.Dh = 0x152fecd8 | 0;
    this.Dl = 0xf70e5939 | 0;
    this.Eh = 0x67332667 | 0;
    this.El = 0xffc00b31 | 0;
    this.Fh = 0x8eb44a87 | 0;
    this.Fl = 0x68581511 | 0;
    this.Gh = 0xdb0c2e0d | 0;
    this.Gl = 0x64f98fa7 | 0;
    this.Hh = 0x47b5481d | 0;
    this.Hl = 0xbefa4fa4 | 0;
    this.outputLen = 48;
  }

}

const sha512 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapConstructor)(() => new SHA512());
const sha512_256 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapConstructor)(() => new SHA512_256());
const sha384 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapConstructor)(() => new SHA384());

/***/ }),
/* 271 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "pbkdf2Encode": () => (/* binding */ pbkdf2Encode)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(177);
/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(137);
/* harmony import */ var _noble_hashes_lib_pbkdf2_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(222);
/* harmony import */ var _noble_hashes_lib_sha512_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(270);
/* harmony import */ var _random_asU8a_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(218);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0





function pbkdf2Encode(passphrase, salt = (0,_random_asU8a_js__WEBPACK_IMPORTED_MODULE_0__.randomAsU8a)(), rounds = 2048, onlyJs) {
  const u8aPass = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToU8a)(passphrase);
  const u8aSalt = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToU8a)(salt);
  return {
    password: !_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.hasBigInt || !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_3__.isReady)() ? (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_3__.pbkdf2)(u8aPass, u8aSalt, rounds) : (0,_noble_hashes_lib_pbkdf2_js__WEBPACK_IMPORTED_MODULE_4__.pbkdf2)(_noble_hashes_lib_sha512_js__WEBPACK_IMPORTED_MODULE_5__.sha512, u8aPass, u8aSalt, {
      c: rounds,
      dkLen: 64
    }),
    rounds,
    salt
  };
}

/***/ }),
/* 272 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Adapted from the bitcoinjs/bip39 source
// https://github.com/bitcoinjs/bip39/blob/1d063b6a6aee4145b34d701037cd3e67f5446ff9/ts_src/
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (`abandon
ability
able
about
above
absent
absorb
abstract
absurd
abuse
access
accident
account
accuse
achieve
acid
acoustic
acquire
across
act
action
actor
actress
actual
adapt
add
addict
address
adjust
admit
adult
advance
advice
aerobic
affair
afford
afraid
again
age
agent
agree
ahead
aim
air
airport
aisle
alarm
album
alcohol
alert
alien
all
alley
allow
almost
alone
alpha
already
also
alter
always
amateur
amazing
among
amount
amused
analyst
anchor
ancient
anger
angle
angry
animal
ankle
announce
annual
another
answer
antenna
antique
anxiety
any
apart
apology
appear
apple
approve
april
arch
arctic
area
arena
argue
arm
armed
armor
army
around
arrange
arrest
arrive
arrow
art
artefact
artist
artwork
ask
aspect
assault
asset
assist
assume
asthma
athlete
atom
attack
attend
attitude
attract
auction
audit
august
aunt
author
auto
autumn
average
avocado
avoid
awake
aware
away
awesome
awful
awkward
axis
baby
bachelor
bacon
badge
bag
balance
balcony
ball
bamboo
banana
banner
bar
barely
bargain
barrel
base
basic
basket
battle
beach
bean
beauty
because
become
beef
before
begin
behave
behind
believe
below
belt
bench
benefit
best
betray
better
between
beyond
bicycle
bid
bike
bind
biology
bird
birth
bitter
black
blade
blame
blanket
blast
bleak
bless
blind
blood
blossom
blouse
blue
blur
blush
board
boat
body
boil
bomb
bone
bonus
book
boost
border
boring
borrow
boss
bottom
bounce
box
boy
bracket
brain
brand
brass
brave
bread
breeze
brick
bridge
brief
bright
bring
brisk
broccoli
broken
bronze
broom
brother
brown
brush
bubble
buddy
budget
buffalo
build
bulb
bulk
bullet
bundle
bunker
burden
burger
burst
bus
business
busy
butter
buyer
buzz
cabbage
cabin
cable
cactus
cage
cake
call
calm
camera
camp
can
canal
cancel
candy
cannon
canoe
canvas
canyon
capable
capital
captain
car
carbon
card
cargo
carpet
carry
cart
case
cash
casino
castle
casual
cat
catalog
catch
category
cattle
caught
cause
caution
cave
ceiling
celery
cement
census
century
cereal
certain
chair
chalk
champion
change
chaos
chapter
charge
chase
chat
cheap
check
cheese
chef
cherry
chest
chicken
chief
child
chimney
choice
choose
chronic
chuckle
chunk
churn
cigar
cinnamon
circle
citizen
city
civil
claim
clap
clarify
claw
clay
clean
clerk
clever
click
client
cliff
climb
clinic
clip
clock
clog
close
cloth
cloud
clown
club
clump
cluster
clutch
coach
coast
coconut
code
coffee
coil
coin
collect
color
column
combine
come
comfort
comic
common
company
concert
conduct
confirm
congress
connect
consider
control
convince
cook
cool
copper
copy
coral
core
corn
correct
cost
cotton
couch
country
couple
course
cousin
cover
coyote
crack
cradle
craft
cram
crane
crash
crater
crawl
crazy
cream
credit
creek
crew
cricket
crime
crisp
critic
crop
cross
crouch
crowd
crucial
cruel
cruise
crumble
crunch
crush
cry
crystal
cube
culture
cup
cupboard
curious
current
curtain
curve
cushion
custom
cute
cycle
dad
damage
damp
dance
danger
daring
dash
daughter
dawn
day
deal
debate
debris
decade
december
decide
decline
decorate
decrease
deer
defense
define
defy
degree
delay
deliver
demand
demise
denial
dentist
deny
depart
depend
deposit
depth
deputy
derive
describe
desert
design
desk
despair
destroy
detail
detect
develop
device
devote
diagram
dial
diamond
diary
dice
diesel
diet
differ
digital
dignity
dilemma
dinner
dinosaur
direct
dirt
disagree
discover
disease
dish
dismiss
disorder
display
distance
divert
divide
divorce
dizzy
doctor
document
dog
doll
dolphin
domain
donate
donkey
donor
door
dose
double
dove
draft
dragon
drama
drastic
draw
dream
dress
drift
drill
drink
drip
drive
drop
drum
dry
duck
dumb
dune
during
dust
dutch
duty
dwarf
dynamic
eager
eagle
early
earn
earth
easily
east
easy
echo
ecology
economy
edge
edit
educate
effort
egg
eight
either
elbow
elder
electric
elegant
element
elephant
elevator
elite
else
embark
embody
embrace
emerge
emotion
employ
empower
empty
enable
enact
end
endless
endorse
enemy
energy
enforce
engage
engine
enhance
enjoy
enlist
enough
enrich
enroll
ensure
enter
entire
entry
envelope
episode
equal
equip
era
erase
erode
erosion
error
erupt
escape
essay
essence
estate
eternal
ethics
evidence
evil
evoke
evolve
exact
example
excess
exchange
excite
exclude
excuse
execute
exercise
exhaust
exhibit
exile
exist
exit
exotic
expand
expect
expire
explain
expose
express
extend
extra
eye
eyebrow
fabric
face
faculty
fade
faint
faith
fall
false
fame
family
famous
fan
fancy
fantasy
farm
fashion
fat
fatal
father
fatigue
fault
favorite
feature
february
federal
fee
feed
feel
female
fence
festival
fetch
fever
few
fiber
fiction
field
figure
file
film
filter
final
find
fine
finger
finish
fire
firm
first
fiscal
fish
fit
fitness
fix
flag
flame
flash
flat
flavor
flee
flight
flip
float
flock
floor
flower
fluid
flush
fly
foam
focus
fog
foil
fold
follow
food
foot
force
forest
forget
fork
fortune
forum
forward
fossil
foster
found
fox
fragile
frame
frequent
fresh
friend
fringe
frog
front
frost
frown
frozen
fruit
fuel
fun
funny
furnace
fury
future
gadget
gain
galaxy
gallery
game
gap
garage
garbage
garden
garlic
garment
gas
gasp
gate
gather
gauge
gaze
general
genius
genre
gentle
genuine
gesture
ghost
giant
gift
giggle
ginger
giraffe
girl
give
glad
glance
glare
glass
glide
glimpse
globe
gloom
glory
glove
glow
glue
goat
goddess
gold
good
goose
gorilla
gospel
gossip
govern
gown
grab
grace
grain
grant
grape
grass
gravity
great
green
grid
grief
grit
grocery
group
grow
grunt
guard
guess
guide
guilt
guitar
gun
gym
habit
hair
half
hammer
hamster
hand
happy
harbor
hard
harsh
harvest
hat
have
hawk
hazard
head
health
heart
heavy
hedgehog
height
hello
helmet
help
hen
hero
hidden
high
hill
hint
hip
hire
history
hobby
hockey
hold
hole
holiday
hollow
home
honey
hood
hope
horn
horror
horse
hospital
host
hotel
hour
hover
hub
huge
human
humble
humor
hundred
hungry
hunt
hurdle
hurry
hurt
husband
hybrid
ice
icon
idea
identify
idle
ignore
ill
illegal
illness
image
imitate
immense
immune
impact
impose
improve
impulse
inch
include
income
increase
index
indicate
indoor
industry
infant
inflict
inform
inhale
inherit
initial
inject
injury
inmate
inner
innocent
input
inquiry
insane
insect
inside
inspire
install
intact
interest
into
invest
invite
involve
iron
island
isolate
issue
item
ivory
jacket
jaguar
jar
jazz
jealous
jeans
jelly
jewel
job
join
joke
journey
joy
judge
juice
jump
jungle
junior
junk
just
kangaroo
keen
keep
ketchup
key
kick
kid
kidney
kind
kingdom
kiss
kit
kitchen
kite
kitten
kiwi
knee
knife
knock
know
lab
label
labor
ladder
lady
lake
lamp
language
laptop
large
later
latin
laugh
laundry
lava
law
lawn
lawsuit
layer
lazy
leader
leaf
learn
leave
lecture
left
leg
legal
legend
leisure
lemon
lend
length
lens
leopard
lesson
letter
level
liar
liberty
library
license
life
lift
light
like
limb
limit
link
lion
liquid
list
little
live
lizard
load
loan
lobster
local
lock
logic
lonely
long
loop
lottery
loud
lounge
love
loyal
lucky
luggage
lumber
lunar
lunch
luxury
lyrics
machine
mad
magic
magnet
maid
mail
main
major
make
mammal
man
manage
mandate
mango
mansion
manual
maple
marble
march
margin
marine
market
marriage
mask
mass
master
match
material
math
matrix
matter
maximum
maze
meadow
mean
measure
meat
mechanic
medal
media
melody
melt
member
memory
mention
menu
mercy
merge
merit
merry
mesh
message
metal
method
middle
midnight
milk
million
mimic
mind
minimum
minor
minute
miracle
mirror
misery
miss
mistake
mix
mixed
mixture
mobile
model
modify
mom
moment
monitor
monkey
monster
month
moon
moral
more
morning
mosquito
mother
motion
motor
mountain
mouse
move
movie
much
muffin
mule
multiply
muscle
museum
mushroom
music
must
mutual
myself
mystery
myth
naive
name
napkin
narrow
nasty
nation
nature
near
neck
need
negative
neglect
neither
nephew
nerve
nest
net
network
neutral
never
news
next
nice
night
noble
noise
nominee
noodle
normal
north
nose
notable
note
nothing
notice
novel
now
nuclear
number
nurse
nut
oak
obey
object
oblige
obscure
observe
obtain
obvious
occur
ocean
october
odor
off
offer
office
often
oil
okay
old
olive
olympic
omit
once
one
onion
online
only
open
opera
opinion
oppose
option
orange
orbit
orchard
order
ordinary
organ
orient
original
orphan
ostrich
other
outdoor
outer
output
outside
oval
oven
over
own
owner
oxygen
oyster
ozone
pact
paddle
page
pair
palace
palm
panda
panel
panic
panther
paper
parade
parent
park
parrot
party
pass
patch
path
patient
patrol
pattern
pause
pave
payment
peace
peanut
pear
peasant
pelican
pen
penalty
pencil
people
pepper
perfect
permit
person
pet
phone
photo
phrase
physical
piano
picnic
picture
piece
pig
pigeon
pill
pilot
pink
pioneer
pipe
pistol
pitch
pizza
place
planet
plastic
plate
play
please
pledge
pluck
plug
plunge
poem
poet
point
polar
pole
police
pond
pony
pool
popular
portion
position
possible
post
potato
pottery
poverty
powder
power
practice
praise
predict
prefer
prepare
present
pretty
prevent
price
pride
primary
print
priority
prison
private
prize
problem
process
produce
profit
program
project
promote
proof
property
prosper
protect
proud
provide
public
pudding
pull
pulp
pulse
pumpkin
punch
pupil
puppy
purchase
purity
purpose
purse
push
put
puzzle
pyramid
quality
quantum
quarter
question
quick
quit
quiz
quote
rabbit
raccoon
race
rack
radar
radio
rail
rain
raise
rally
ramp
ranch
random
range
rapid
rare
rate
rather
raven
raw
razor
ready
real
reason
rebel
rebuild
recall
receive
recipe
record
recycle
reduce
reflect
reform
refuse
region
regret
regular
reject
relax
release
relief
rely
remain
remember
remind
remove
render
renew
rent
reopen
repair
repeat
replace
report
require
rescue
resemble
resist
resource
response
result
retire
retreat
return
reunion
reveal
review
reward
rhythm
rib
ribbon
rice
rich
ride
ridge
rifle
right
rigid
ring
riot
ripple
risk
ritual
rival
river
road
roast
robot
robust
rocket
romance
roof
rookie
room
rose
rotate
rough
round
route
royal
rubber
rude
rug
rule
run
runway
rural
sad
saddle
sadness
safe
sail
salad
salmon
salon
salt
salute
same
sample
sand
satisfy
satoshi
sauce
sausage
save
say
scale
scan
scare
scatter
scene
scheme
school
science
scissors
scorpion
scout
scrap
screen
script
scrub
sea
search
season
seat
second
secret
section
security
seed
seek
segment
select
sell
seminar
senior
sense
sentence
series
service
session
settle
setup
seven
shadow
shaft
shallow
share
shed
shell
sheriff
shield
shift
shine
ship
shiver
shock
shoe
shoot
shop
short
shoulder
shove
shrimp
shrug
shuffle
shy
sibling
sick
side
siege
sight
sign
silent
silk
silly
silver
similar
simple
since
sing
siren
sister
situate
six
size
skate
sketch
ski
skill
skin
skirt
skull
slab
slam
sleep
slender
slice
slide
slight
slim
slogan
slot
slow
slush
small
smart
smile
smoke
smooth
snack
snake
snap
sniff
snow
soap
soccer
social
sock
soda
soft
solar
soldier
solid
solution
solve
someone
song
soon
sorry
sort
soul
sound
soup
source
south
space
spare
spatial
spawn
speak
special
speed
spell
spend
sphere
spice
spider
spike
spin
spirit
split
spoil
sponsor
spoon
sport
spot
spray
spread
spring
spy
square
squeeze
squirrel
stable
stadium
staff
stage
stairs
stamp
stand
start
state
stay
steak
steel
stem
step
stereo
stick
still
sting
stock
stomach
stone
stool
story
stove
strategy
street
strike
strong
struggle
student
stuff
stumble
style
subject
submit
subway
success
such
sudden
suffer
sugar
suggest
suit
summer
sun
sunny
sunset
super
supply
supreme
sure
surface
surge
surprise
surround
survey
suspect
sustain
swallow
swamp
swap
swarm
swear
sweet
swift
swim
swing
switch
sword
symbol
symptom
syrup
system
table
tackle
tag
tail
talent
talk
tank
tape
target
task
taste
tattoo
taxi
teach
team
tell
ten
tenant
tennis
tent
term
test
text
thank
that
theme
then
theory
there
they
thing
this
thought
three
thrive
throw
thumb
thunder
ticket
tide
tiger
tilt
timber
time
tiny
tip
tired
tissue
title
toast
tobacco
today
toddler
toe
together
toilet
token
tomato
tomorrow
tone
tongue
tonight
tool
tooth
top
topic
topple
torch
tornado
tortoise
toss
total
tourist
toward
tower
town
toy
track
trade
traffic
tragic
train
transfer
trap
trash
travel
tray
treat
tree
trend
trial
tribe
trick
trigger
trim
trip
trophy
trouble
truck
true
truly
trumpet
trust
truth
try
tube
tuition
tumble
tuna
tunnel
turkey
turn
turtle
twelve
twenty
twice
twin
twist
two
type
typical
ugly
umbrella
unable
unaware
uncle
uncover
under
undo
unfair
unfold
unhappy
uniform
unique
unit
universe
unknown
unlock
until
unusual
unveil
update
upgrade
uphold
upon
upper
upset
urban
urge
usage
use
used
useful
useless
usual
utility
vacant
vacuum
vague
valid
valley
valve
van
vanish
vapor
various
vast
vault
vehicle
velvet
vendor
venture
venue
verb
verify
version
very
vessel
veteran
viable
vibrant
vicious
victory
video
view
village
vintage
violin
virtual
virus
visa
visit
visual
vital
vivid
vocal
voice
void
volcano
volume
vote
voyage
wage
wagon
wait
walk
wall
walnut
want
warfare
warm
warrior
wash
wasp
waste
water
wave
way
wealth
weapon
wear
weasel
weather
web
wedding
weekend
weird
welcome
west
wet
whale
what
wheat
wheel
when
where
whip
whisper
wide
width
wife
wild
will
win
window
wine
wing
wink
winner
winter
wire
wisdom
wise
wish
witness
wolf
woman
wonder
wood
wool
word
work
world
worry
worth
wrap
wreck
wrestle
wrist
write
wrong
yard
year
yellow
you
young
youth
zebra
zero
zone
zoo`.split('\n'));

/***/ }),
/* 273 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "mnemonicToMiniSecret": () => (/* binding */ mnemonicToMiniSecret)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(170);
/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(137);
/* harmony import */ var _pbkdf2_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(271);
/* harmony import */ var _toEntropy_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(274);
/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(267);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0





function mnemonicToMiniSecret(mnemonic, password = '', onlyJs) {
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)((0,_validate_js__WEBPACK_IMPORTED_MODULE_1__.mnemonicValidate)(mnemonic), 'Invalid bip39 mnemonic specified');

  if (!onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.isReady)()) {
    return (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.bip39ToMiniSecret)(mnemonic, password);
  }

  const entropy = (0,_toEntropy_js__WEBPACK_IMPORTED_MODULE_3__.mnemonicToEntropy)(mnemonic);
  const salt = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.stringToU8a)(`mnemonic${password}`); // return the first 32 bytes as the seed

  return (0,_pbkdf2_index_js__WEBPACK_IMPORTED_MODULE_5__.pbkdf2Encode)(entropy, salt).password.slice(0, 32);
}

/***/ }),
/* 274 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "mnemonicToEntropy": () => (/* binding */ mnemonicToEntropy)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(177);
/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(137);
/* harmony import */ var _bip39_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(268);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0



function mnemonicToEntropy(mnemonic, onlyJs) {
  return !_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.hasBigInt || !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.isReady)() ? (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.bip39ToEntropy)(mnemonic) : (0,_bip39_js__WEBPACK_IMPORTED_MODULE_2__.mnemonicToEntropy)(mnemonic);
}

/***/ }),
/* 275 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "hdEthereum": () => (/* binding */ hdEthereum)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(170);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(121);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(197);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(80);
/* harmony import */ var _bn_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(133);
/* harmony import */ var _hmac_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(277);
/* harmony import */ var _secp256k1_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(79);
/* harmony import */ var _secp256k1_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(278);
/* harmony import */ var _validatePath_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(276);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0





const MASTER_SECRET = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.stringToU8a)('Bitcoin seed');

function createCoded(secretKey, chainCode) {
  return {
    chainCode,
    publicKey: (0,_secp256k1_index_js__WEBPACK_IMPORTED_MODULE_1__.secp256k1PairFromSeed)(secretKey).publicKey,
    secretKey
  };
}

function deriveChild(hd, index) {
  const indexBuffer = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.bnToU8a)(index, _bn_js__WEBPACK_IMPORTED_MODULE_3__.BN_BE_32_OPTS);
  const data = index >= _validatePath_js__WEBPACK_IMPORTED_MODULE_4__.HARDENED ? (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.u8aConcat)(new Uint8Array(1), hd.secretKey, indexBuffer) : (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.u8aConcat)(hd.publicKey, indexBuffer);

  try {
    const I = (0,_hmac_index_js__WEBPACK_IMPORTED_MODULE_6__.hmacShaAsU8a)(hd.chainCode, data, 512);
    return createCoded((0,_secp256k1_index_js__WEBPACK_IMPORTED_MODULE_7__.secp256k1PrivateKeyTweakAdd)(hd.secretKey, I.slice(0, 32)), I.slice(32));
  } catch (err) {
    // In case parse256(IL) >= n or ki == 0, proceed with the next value for i
    return deriveChild(hd, index + 1);
  }
}

function hdEthereum(seed, path = '') {
  const I = (0,_hmac_index_js__WEBPACK_IMPORTED_MODULE_6__.hmacShaAsU8a)(MASTER_SECRET, seed, 512);
  let hd = createCoded(I.slice(0, 32), I.slice(32));

  if (!path || path === 'm' || path === 'M' || path === "m'" || path === "M'") {
    return hd;
  }

  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_8__.assert)((0,_validatePath_js__WEBPACK_IMPORTED_MODULE_4__.hdValidatePath)(path), 'Invalid derivation path');
  const parts = path.split('/').slice(1);

  for (const p of parts) {
    hd = deriveChild(hd, parseInt(p, 10) + (p.length > 1 && p.endsWith("'") ? _validatePath_js__WEBPACK_IMPORTED_MODULE_4__.HARDENED : 0));
  }

  return hd;
}

/***/ }),
/* 276 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HARDENED": () => (/* binding */ HARDENED),
/* harmony export */   "hdValidatePath": () => (/* binding */ hdValidatePath)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
const HARDENED = 0x80000000;
function hdValidatePath(path) {
  if (!path.startsWith('m/')) {
    return false;
  }

  const parts = path.split('/').slice(1);

  for (const p of parts) {
    const n = /^\d+'?$/.test(p) ? parseInt(p.replace(/'$/, ''), 10) : Number.NaN;

    if (isNaN(n) || n >= HARDENED || n < 0) {
      return false;
    }
  }

  return true;
}

/***/ }),
/* 277 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "hmacShaAsU8a": () => (/* binding */ hmacShaAsU8a),
/* harmony export */   "hmacSha256AsU8a": () => (/* binding */ hmacSha256AsU8a),
/* harmony export */   "hmacSha512AsU8a": () => (/* binding */ hmacSha512AsU8a)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(177);
/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(137);
/* harmony import */ var _noble_hashes_lib_hmac_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(223);
/* harmony import */ var _noble_hashes_lib_sha256_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(224);
/* harmony import */ var _noble_hashes_lib_sha512_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(270);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0






function createSha(bitLength) {
  return (key, data, onlyJs) => hmacShaAsU8a(key, data, bitLength, onlyJs);
}
/**
 * @name hmacShaAsU8a
 * @description creates a Hmac Sha (256/512) Uint8Array from the key & data
 */


function hmacShaAsU8a(key, data, bitLength = 256, onlyJs) {
  const is256 = bitLength === 256;
  const u8aKey = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(key);
  return !_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.hasBigInt || !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.isReady)() ? is256 ? (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.hmacSha256)(u8aKey, data) : (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.hmacSha512)(u8aKey, data) : is256 ? (0,_noble_hashes_lib_hmac_js__WEBPACK_IMPORTED_MODULE_3__.hmac)(_noble_hashes_lib_sha256_js__WEBPACK_IMPORTED_MODULE_4__.sha256, u8aKey, data) : (0,_noble_hashes_lib_hmac_js__WEBPACK_IMPORTED_MODULE_3__.hmac)(_noble_hashes_lib_sha512_js__WEBPACK_IMPORTED_MODULE_5__.sha512, u8aKey, data);
}
/**
 * @name hmacSha256AsU8a
 * @description creates a Hmac Sha256 Uint8Array from the key & data
 */

const hmacSha256AsU8a = createSha(256);
/**
 * @name hmacSha512AsU8a
 * @description creates a Hmac Sha512 Uint8Array from the key & data
 */

const hmacSha512AsU8a = createSha(512);

/***/ }),
/* 278 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "secp256k1PrivateKeyTweakAdd": () => (/* binding */ secp256k1PrivateKeyTweakAdd)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(88);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(121);
/* harmony import */ var _bn_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(133);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

 // pre-defined curve param as lifted form elliptic
// https://github.com/indutny/elliptic/blob/e71b2d9359c5fe9437fbf46f1f05096de447de57/lib/elliptic/curves.js#L182

const N = new _polkadot_util__WEBPACK_IMPORTED_MODULE_0__('ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141'.replace(/ /g, ''), 'hex');
function secp256k1PrivateKeyTweakAdd(seckey, tweak) {
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isU8a)(seckey) && seckey.length === 32, 'Expected seckey to be an Uint8Array with length 32');
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isU8a)(tweak) && tweak.length === 32, 'Expected tweak to be an Uint8Array with length 32');
  const bn = new _polkadot_util__WEBPACK_IMPORTED_MODULE_0__(tweak);
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(bn.cmp(N) < 0, 'Tweak parameter is out of range');
  bn.iadd(new _polkadot_util__WEBPACK_IMPORTED_MODULE_0__(seckey));

  if (bn.cmp(N) >= 0) {
    bn.isub(N);
  }

  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(!bn.isZero(), 'Invalid resulting private key');
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.bnToU8a)(bn, _bn_js__WEBPACK_IMPORTED_MODULE_4__.BN_BE_256_OPTS);
}

/***/ }),
/* 279 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MissingLiveness": () => (/* binding */ MissingLiveness),
/* harmony export */   "ProtocolOptIn": () => (/* binding */ ProtocolOptIn)
/* harmony export */ });
/* harmony import */ var _services_FractalAccount__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(49);

class MissingLiveness extends Error {
}
class ProtocolOptIn {
    storage;
    protocol;
    postOptInCallbacks = [];
    completedLivenessOverride = false;
    constructor(storage, protocol) {
        this.storage = storage;
        this.protocol = protocol;
    }
    async isOptedIn() {
        return await this.storage.hasItem(await this.mnemonicKey());
    }
    async mnemonicKey() {
        const network = 'network'; //TODO(melatron): get the current network
        return `opt-in/${network}/mnemonic`;
    }
    async hasCompletedLiveness() {
        if (this.completedLivenessOverride)
            return true;
        try {
            return await this.protocol.isIdentityRegistered();
        }
        catch {
            return false;
        }
    }
    async getMnemonic() {
        return await this.storage.getItem(await this.mnemonicKey());
    }
    async optIn(mnemonic) {
        await this.storage.setItem(await this.mnemonicKey(), mnemonic);
        await this.runCallbacks(mnemonic);
        await this.tryRegisterIdentity();
    }
    async runCallbacks(mnemonic) {
        while (this.postOptInCallbacks.length > 0) {
            const cb = this.postOptInCallbacks.shift();
            await cb(mnemonic);
        }
    }
    async checkOptIn() {
        const mnemonic = await this.getMnemonic();
        if (mnemonic == null)
            return;
        await this.runCallbacks(mnemonic);
    }
    async tryRegisterIdentity(onMissingLiveness) {
        try {
            await this.protocol.ensureIdentityRegistered();
            this.completedLivenessOverride = true;
        }
        catch (e) {
            if (e instanceof MissingLiveness) {
                if (onMissingLiveness != null) {
                    await onMissingLiveness();
                }
                return;
            }
            if (e instanceof _services_FractalAccount__WEBPACK_IMPORTED_MODULE_0__.NotConnectedError) {
                return;
            }
            throw e;
        }
    }
}


/***/ }),
/* 280 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StorageService": () => (/* binding */ StorageService)
/* harmony export */ });
/* harmony import */ var _Errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(281);

class StorageService {
    hasItem(key) {
        return new Promise((resolve, reject) => {
            chrome.storage.local.get([key], (items) => {
                if (chrome.runtime.lastError !== undefined) {
                    console.error(chrome.runtime.lastError);
                    reject((0,_Errors__WEBPACK_IMPORTED_MODULE_0__.ERROR_HAS_ITEM)(chrome.runtime.lastError, key));
                }
                resolve(items[key] !== undefined);
            });
        });
    }
    getItem(key, ifNull) {
        return new Promise((resolve, reject) => {
            chrome.storage.local.get([key], (items) => {
                if (chrome.runtime.lastError !== undefined) {
                    console.error(chrome.runtime.lastError);
                    reject((0,_Errors__WEBPACK_IMPORTED_MODULE_0__.ERROR_GET_ITEM)(chrome.runtime.lastError, key));
                }
                resolve(items[key] || ifNull);
            });
        });
    }
    setItem(key, value) {
        return new Promise((resolve, reject) => {
            chrome.storage.local.set({ [key]: value }, () => {
                if (chrome.runtime.lastError !== undefined) {
                    console.error(chrome.runtime.lastError);
                    reject((0,_Errors__WEBPACK_IMPORTED_MODULE_0__.ERROR_SET_ITEM)(chrome.runtime.lastError, key, value));
                }
                resolve();
            });
        });
    }
    removeItem(key) {
        return new Promise((resolve, reject) => {
            chrome.storage.local.remove([key], () => {
                if (chrome.runtime.lastError !== undefined) {
                    console.error(chrome.runtime.lastError);
                    reject((0,_Errors__WEBPACK_IMPORTED_MODULE_0__.ERROR_REMOVE_ITEM)(chrome.runtime.lastError, key));
                }
                resolve();
            });
        });
    }
    clear() {
        return new Promise((resolve, reject) => {
            chrome.storage.local.clear(() => {
                if (chrome.runtime.lastError !== undefined) {
                    console.error(chrome.runtime.lastError);
                    reject((0,_Errors__WEBPACK_IMPORTED_MODULE_0__.ERROR_CLEAR)(chrome.runtime.lastError));
                }
                resolve();
            });
        });
    }
}


/***/ }),
/* 281 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ERROR_HAS_ITEM": () => (/* binding */ ERROR_HAS_ITEM),
/* harmony export */   "ERROR_GET_ITEM": () => (/* binding */ ERROR_GET_ITEM),
/* harmony export */   "ERROR_SET_ITEM": () => (/* binding */ ERROR_SET_ITEM),
/* harmony export */   "ERROR_REMOVE_ITEM": () => (/* binding */ ERROR_REMOVE_ITEM),
/* harmony export */   "ERROR_CLEAR": () => (/* binding */ ERROR_CLEAR)
/* harmony export */ });
var ErrorCode;
(function (ErrorCode) {
    ErrorCode[ErrorCode["ERROR_HAS_ITEM"] = 1000] = "ERROR_HAS_ITEM";
    ErrorCode[ErrorCode["ERROR_GET_ITEM"] = 1001] = "ERROR_GET_ITEM";
    ErrorCode[ErrorCode["ERROR_SET_ITEM"] = 1002] = "ERROR_SET_ITEM";
    ErrorCode[ErrorCode["ERROR_REMOVE_ITEM"] = 1003] = "ERROR_REMOVE_ITEM";
    ErrorCode[ErrorCode["ERROR_CLEAR"] = 1003] = "ERROR_CLEAR";
})(ErrorCode || (ErrorCode = {}));
class StorageServiceError extends Error {
    errorCode;
    errorChrome;
    constructor(errorCode, errorChrome, message) {
        super(message);
        this.errorChrome = errorChrome;
        this.errorCode = errorCode;
    }
}
const ERROR_HAS_ITEM = (errorChrome, key) => {
    return new StorageServiceError(ErrorCode.ERROR_HAS_ITEM, errorChrome, `StorageService: could not check if key '${key}' is set`);
};
const ERROR_GET_ITEM = (errorChrome, key) => {
    return new StorageServiceError(ErrorCode.ERROR_GET_ITEM, errorChrome, `StorageService: could not get key '${key}'`);
};
const ERROR_SET_ITEM = (errorChrome, key, value) => {
    return new StorageServiceError(ErrorCode.ERROR_SET_ITEM, errorChrome, `StorageService: could not set value '${value}' for key '${key}'`);
};
const ERROR_REMOVE_ITEM = (errorChrome, key) => {
    return new StorageServiceError(ErrorCode.ERROR_REMOVE_ITEM, errorChrome, `StorageService: could not remove key '${key}'`);
};
const ERROR_CLEAR = (errorChrome) => {
    return new StorageServiceError(ErrorCode.ERROR_CLEAR, errorChrome, `StorageService: could not clear`);
};


/***/ }),
/* 282 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "useLoadedState": () => (/* binding */ useLoadedState),
/* harmony export */   "Loading": () => (/* binding */ Loading),
/* harmony export */   "Loaded": () => (/* binding */ Loaded),
/* harmony export */   "useObservedState": () => (/* binding */ useObservedState),
/* harmony export */   "useCachedState": () => (/* binding */ useCachedState),
/* harmony export */   "ValueCache": () => (/* binding */ ValueCache)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8);

// Note that this memoizes the loader promise since the common case is
// explicitly not wanting it to change between calls. This makes the API simpler
// while being slightly potentially surprising if the callback is expected to be
// evaluated multiple times (which we don't expect to be common).
function useLoadedState(loader, watchedVars = []) {
    // We keep the state that's bound together in the same useState so React
    // doesn't trigger renders when setting one but not the other.
    const [[loaded, value], setLoadedValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([false, null]);
    // The common case is to only want to call the loader once, so we memoize it
    // for the user to prevent all users from having to do that themselves.
    const memoLoader = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => loader(), [...watchedVars]);
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
        let active = true;
        (async () => {
            if (loaded)
                return;
            if (!active)
                return;
            const v = await memoLoader();
            if (!active)
                return;
            setLoadedValue([true, v]);
        })();
        return () => {
            active = false;
        };
    }, [memoLoader, loaded]);
    const setValue = (t) => setLoadedValue([true, t]);
    const reload = () => setLoadedValue([false, null]);
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(reload, [...watchedVars]);
    if (loaded) {
        return new Loaded(value, setValue, reload);
    }
    else {
        return new Loading(setValue, reload);
    }
}
class Loading {
    setValue;
    reload;
    isLoaded = false;
    constructor(setValue, reload) {
        this.setValue = setValue;
        this.reload = reload;
    }
    unwrapOrDefault(def) {
        return def;
    }
    map(_fn) {
        return new Loading(this.setValue, this.reload);
    }
}
class Loaded {
    value;
    setValue;
    reload;
    isLoaded = true;
    constructor(value, setValue, reload) {
        this.value = value;
        this.setValue = setValue;
        this.reload = reload;
    }
    unwrapOrDefault(_def) {
        return this.value;
    }
    map(fn) {
        return new Loaded(fn(this.value), this.setValue, this.reload);
    }
}
function useObservedState(observable) {
    const [hasValue, setHasValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
    const [value, setValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
        const sub = observable().subscribe((v) => {
            setValue(v);
            setHasValue(true);
        });
        return () => sub.unsubscribe();
    }, [observable]);
    if (hasValue) {
        return new Value(value);
    }
    else {
        return new NotEmitted();
    }
}
class NotEmitted {
    hasValue = false;
    unwrapOrDefault(def) {
        return def;
    }
}
class Value {
    value;
    hasValue = true;
    constructor(value) {
        this.value = value;
    }
    unwrapOrDefault(_) {
        return this.value;
    }
}
// React Hook that will as quickly as possible return a value from cache and
// continue to load the value from the source of truth once the useFor window
// has passed.
function useCachedState(args) {
    // We keep the state that's bound together in the same useState so React
    // doesn't trigger renders when setting one but not the other.
    const [[loaded, value], setLoadedValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([false, null]);
    const setValue = (v) => {
        setLoadedValue([true, v]);
        if (args.onValue != null)
            args.onValue(v);
        const shouldCache = args.cacheWhen ? args.cacheWhen(v) : true;
        if (shouldCache)
            args.cache.set(args.key, serialize(v));
    };
    const serialize = args.serialize || JSON.stringify;
    const deserialize = args.deserialize || JSON.parse;
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
        if (loaded)
            return;
        let active = true;
        const setIfActive = (v) => {
            if (!active)
                return;
            setValue(v);
        };
        (async () => {
            const fromCache = await args.cache.get(args.key);
            if (fromCache != null) {
                const [setAt, serialized] = fromCache;
                const value = deserialize(serialized);
                setIfActive(value);
                if (args.useFor != null) {
                    const waitFor = setAt + args.useFor * 1000 - new Date().getTime();
                    await new Promise((resolve) => setTimeout(resolve, Math.max(0, waitFor)));
                }
            }
            if (!active)
                return;
            const loadedValue = await args.loader();
            setIfActive(loadedValue);
        })();
        return () => {
            active = false;
        };
    }, 
    // The purpose of this hook is to minimize work. Providing no watched
    // arguments effectively memoizes the input object so the user doesn't
    // have to.
    []);
    const reload = async () => {
        await args.cache.remove(args.key);
        setLoadedValue([false, null]);
    };
    if (loaded) {
        return new Loaded(value, setValue, reload);
    }
    else {
        const immediateCache = args.cache.getImmediate(args.key);
        if (immediateCache == null) {
            return new Loading(setValue, reload);
        }
        else {
            const deserialized = deserialize(immediateCache[1]);
            // Use setTimeout since we are not allowed to set a state value during
            // a render.
            setTimeout(() => setValue(deserialized));
            return new Loaded(deserialized, setValue, reload);
        }
    }
}
class ValueCache {
    storage;
    memory = new Map();
    constructor(storage) {
        this.storage = storage;
        // We could load all values into memory on construction and wait at the top
        // level of the app for the loading to finish. That way we can show all the
        // cached values immediately and not flash loading screens for the ~40ms it
        // takes to load from storage.
        //
        // This would require:
        //   1. Cleaning up old cache values. Probably having to store when the
        //      item expires instead of when it was stored.
        //   2. Making a "StorageMap" class that supports iterating over all
        //      entries in the map without iterating over all keys in the storage.
        //   3. Actually waiting for the loading to finish at the top level of the
        //      app.
    }
    async get(key) {
        const immediate = this.getImmediate(key);
        if (immediate != null)
            return immediate;
        const s = await this.storage.getItem(`$value-cache/${key}`);
        if (s == null)
            return null;
        this.memory.set(key, s);
        return JSON.parse(s);
    }
    getImmediate(key) {
        const fromMemory = this.memory.get(key);
        return fromMemory && JSON.parse(fromMemory);
    }
    async set(key, value) {
        const now = new Date().getTime();
        const toStore = JSON.stringify([now, value]);
        this.memory.set(key, toStore);
        await this.storage.setItem(`$value-cache/${key}`, toStore);
    }
    async remove(key) {
        await this.storage.removeItem(`$value-cache/${key}`);
        this.memory.delete(key);
    }
}


/***/ }),
/* 283 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "WsProvider": () => (/* binding */ WsProvider)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);
/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(284);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(285);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(82);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(122);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(83);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(293);
/* harmony import */ var _polkadot_x_global__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(173);
/* harmony import */ var _polkadot_x_ws__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(294);
/* harmony import */ var _coder_index_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(291);
/* harmony import */ var _defaults_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(288);
/* harmony import */ var _lru_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(289);
/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(290);


// Copyright 2017-2021 @polkadot/rpc-provider authors & contributors
// SPDX-License-Identifier: Apache-2.0

/* eslint-disable camelcase */








const ALIASES = {
  chain_finalisedHead: 'chain_finalizedHead',
  chain_subscribeFinalisedHeads: 'chain_subscribeFinalizedHeads',
  chain_unsubscribeFinalisedHeads: 'chain_unsubscribeFinalizedHeads'
};
const RETRY_DELAY = 2500;
const MEGABYTE = 1024 * 1024;
const l = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.logger)('api-ws');

function eraseRecord(record, cb) {
  Object.keys(record).forEach(key => {
    if (cb) {
      cb(record[key]);
    }

    delete record[key];
  });
}
/**
 * # @polkadot/rpc-provider/ws
 *
 * @name WsProvider
 *
 * @description The WebSocket Provider allows sending requests using WebSocket to a WebSocket RPC server TCP port. Unlike the [[HttpProvider]], it does support subscriptions and allows listening to events such as new blocks or balance changes.
 *
 * @example
 * <BR>
 *
 * ```javascript
 * import Api from '@polkadot/api/promise';
 * import { WsProvider } from '@polkadot/rpc-provider/ws';
 *
 * const provider = new WsProvider('ws://127.0.0.1:9944');
 * const api = new Api(provider);
 * ```
 *
 * @see [[HttpProvider]]
 */


var _callCache = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("callCache");

var _coder = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("coder");

var _endpoints = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("endpoints");

var _headers = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("headers");

var _eventemitter = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("eventemitter");

var _handlers = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("handlers");

var _isReadyPromise = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("isReadyPromise");

var _waitingForId = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("waitingForId");

var _autoConnectMs = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("autoConnectMs");

var _endpointIndex = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("endpointIndex");

var _isConnected = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("isConnected");

var _subscriptions = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("subscriptions");

var _websocket = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("websocket");

var _send = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("send");

var _emit = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("emit");

var _onSocketClose = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("onSocketClose");

var _onSocketError = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("onSocketError");

var _onSocketMessage = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("onSocketMessage");

var _onSocketMessageResult = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("onSocketMessageResult");

var _onSocketMessageSubscribe = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("onSocketMessageSubscribe");

var _onSocketOpen = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("onSocketOpen");

var _resubscribe = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("resubscribe");

class WsProvider {
  /**
   * @param {string | string[]}  endpoint    The endpoint url. Usually `ws://ip:9944` or `wss://ip:9944`, may provide an array of endpoint strings.
   * @param {boolean} autoConnect Whether to connect automatically or not.
   */
  constructor(endpoint = _defaults_js__WEBPACK_IMPORTED_MODULE_4__["default"].WS_URL, autoConnectMs = RETRY_DELAY, headers = {}) {
    Object.defineProperty(this, _send, {
      value: _send2
    });
    Object.defineProperty(this, _callCache, {
      writable: true,
      value: new _lru_js__WEBPACK_IMPORTED_MODULE_5__.LRUCache()
    });
    Object.defineProperty(this, _coder, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _endpoints, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _headers, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _eventemitter, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _handlers, {
      writable: true,
      value: {}
    });
    Object.defineProperty(this, _isReadyPromise, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _waitingForId, {
      writable: true,
      value: {}
    });
    Object.defineProperty(this, _autoConnectMs, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _endpointIndex, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _isConnected, {
      writable: true,
      value: false
    });
    Object.defineProperty(this, _subscriptions, {
      writable: true,
      value: {}
    });
    Object.defineProperty(this, _websocket, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _emit, {
      writable: true,
      value: (type, ...args) => {
        (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _eventemitter)[_eventemitter].emit(type, ...args);
      }
    });
    Object.defineProperty(this, _onSocketClose, {
      writable: true,
      value: event => {
        const error = new Error(`disconnected from ${(0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _endpoints)[_endpoints][(0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _endpointIndex)[_endpointIndex]]}: ${event.code}:: ${event.reason || (0,_errors_js__WEBPACK_IMPORTED_MODULE_6__.getWSErrorString)(event.code)}`);

        if ((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _autoConnectMs)[_autoConnectMs] > 0) {
          l.error(error.message);
        }

        (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _isConnected)[_isConnected] = false;

        if ((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _websocket)[_websocket]) {
          (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _websocket)[_websocket].onclose = null;
          (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _websocket)[_websocket].onerror = null;
          (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _websocket)[_websocket].onmessage = null;
          (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _websocket)[_websocket].onopen = null;
          (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _websocket)[_websocket] = null;
        }

        (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _emit)[_emit]('disconnected'); // reject all hanging requests


        eraseRecord((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _handlers)[_handlers], h => h.callback(error, undefined));
        eraseRecord((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _waitingForId)[_waitingForId]);

        if ((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _autoConnectMs)[_autoConnectMs] > 0) {
          setTimeout(() => {
            this.connectWithRetry().catch(() => {// does not throw
            });
          }, (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _autoConnectMs)[_autoConnectMs]);
        }
      }
    });
    Object.defineProperty(this, _onSocketError, {
      writable: true,
      value: error => {
        l.debug(() => ['socket error', error]);

        (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _emit)[_emit]('error', error);
      }
    });
    Object.defineProperty(this, _onSocketMessage, {
      writable: true,
      value: message => {
        l.debug(() => ['received', message.data]);
        const response = JSON.parse(message.data);
        return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_7__.isUndefined)(response.method) ? (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _onSocketMessageResult)[_onSocketMessageResult](response) : (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _onSocketMessageSubscribe)[_onSocketMessageSubscribe](response);
      }
    });
    Object.defineProperty(this, _onSocketMessageResult, {
      writable: true,
      value: response => {
        const handler = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _handlers)[_handlers][response.id];

        if (!handler) {
          l.debug(() => `Unable to find handler for id=${response.id}`);
          return;
        }

        try {
          const {
            method,
            params,
            subscription
          } = handler;

          const result = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _coder)[_coder].decodeResponse(response); // first send the result - in case of subs, we may have an update
          // immediately if we have some queued results already


          handler.callback(null, result);

          if (subscription) {
            const subId = `${subscription.type}::${result}`;
            (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _subscriptions)[_subscriptions][subId] = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_8__.objectSpread)({}, subscription, {
              method,
              params
            }); // if we have a result waiting for this subscription already

            if ((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _waitingForId)[_waitingForId][subId]) {
              (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _onSocketMessageSubscribe)[_onSocketMessageSubscribe]((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _waitingForId)[_waitingForId][subId]);
            }
          }
        } catch (error) {
          handler.callback(error, undefined);
        }

        delete (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _handlers)[_handlers][response.id];
      }
    });
    Object.defineProperty(this, _onSocketMessageSubscribe, {
      writable: true,
      value: response => {
        const method = ALIASES[response.method] || response.method || 'invalid';
        const subId = `${method}::${response.params.subscription}`;

        const handler = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _subscriptions)[_subscriptions][subId];

        if (!handler) {
          // store the JSON, we could have out-of-order subid coming in
          (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _waitingForId)[_waitingForId][subId] = response;
          l.debug(() => `Unable to find handler for subscription=${subId}`);
          return;
        } // housekeeping


        delete (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _waitingForId)[_waitingForId][subId];

        try {
          const result = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _coder)[_coder].decodeResponse(response);

          handler.callback(null, result);
        } catch (error) {
          handler.callback(error, undefined);
        }
      }
    });
    Object.defineProperty(this, _onSocketOpen, {
      writable: true,
      value: () => {
        (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.assert)(!(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_10__.isNull)((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _websocket)[_websocket]), 'WebSocket cannot be null in onOpen');
        l.debug(() => ['connected to', (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _endpoints)[_endpoints][(0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _endpointIndex)[_endpointIndex]]]);
        (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _isConnected)[_isConnected] = true;

        (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _emit)[_emit]('connected');

        (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _resubscribe)[_resubscribe]();

        return true;
      }
    });
    Object.defineProperty(this, _resubscribe, {
      writable: true,
      value: () => {
        const subscriptions = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _subscriptions)[_subscriptions];

        (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _subscriptions)[_subscriptions] = {};
        Promise.all(Object.keys(subscriptions).map(async id => {
          const {
            callback,
            method,
            params,
            type
          } = subscriptions[id]; // only re-create subscriptions which are not in author (only area where
          // transactions are created, i.e. submissions such as 'author_submitAndWatchExtrinsic'
          // are not included (and will not be re-broadcast)

          if (type.startsWith('author_')) {
            return;
          }

          try {
            await this.subscribe(type, method, params, callback);
          } catch (error) {
            l.error(error);
          }
        })).catch(l.error);
      }
    });
    const endpoints = Array.isArray(endpoint) ? endpoint : [endpoint];
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.assert)(endpoints.length !== 0, 'WsProvider requires at least one Endpoint');
    endpoints.forEach(endpoint => {
      (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.assert)(/^(wss|ws):\/\//.test(endpoint), () => `Endpoint should start with 'ws://', received '${endpoint}'`);
    });
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _eventemitter)[_eventemitter] = new eventemitter3__WEBPACK_IMPORTED_MODULE_2__();
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _autoConnectMs)[_autoConnectMs] = autoConnectMs || 0;
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _coder)[_coder] = new _coder_index_js__WEBPACK_IMPORTED_MODULE_11__.RpcCoder();
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _endpointIndex)[_endpointIndex] = -1;
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _endpoints)[_endpoints] = endpoints;
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _headers)[_headers] = headers;
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _websocket)[_websocket] = null;

    if (autoConnectMs > 0) {
      this.connectWithRetry().catch(() => {// does not throw
      });
    }

    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _isReadyPromise)[_isReadyPromise] = new Promise(resolve => {
      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _eventemitter)[_eventemitter].once('connected', () => {
        resolve(this);
      });
    });
  }
  /**
   * @summary `true` when this provider supports subscriptions
   */


  get hasSubscriptions() {
    return true;
  }
  /**
   * @summary Whether the node is connected or not.
   * @return {boolean} true if connected
   */


  get isConnected() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _isConnected)[_isConnected];
  }
  /**
   * @description Promise that resolves the first time we are connected and loaded
   */


  get isReady() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _isReadyPromise)[_isReadyPromise];
  }
  /**
   * @description Returns a clone of the object
   */


  clone() {
    return new WsProvider((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _endpoints)[_endpoints]);
  }
  /**
   * @summary Manually connect
   * @description The [[WsProvider]] connects automatically by default, however if you decided otherwise, you may
   * connect manually using this method.
   */
  // eslint-disable-next-line @typescript-eslint/require-await


  async connect() {
    try {
      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _endpointIndex)[_endpointIndex] = ((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _endpointIndex)[_endpointIndex] + 1) % (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _endpoints)[_endpoints].length;
      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _websocket)[_websocket] = typeof _polkadot_x_global__WEBPACK_IMPORTED_MODULE_12__.xglobal.WebSocket !== 'undefined' && (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_13__.isChildClass)(_polkadot_x_global__WEBPACK_IMPORTED_MODULE_12__.xglobal.WebSocket, _polkadot_x_ws__WEBPACK_IMPORTED_MODULE_14__.WebSocket) ? new _polkadot_x_ws__WEBPACK_IMPORTED_MODULE_14__.WebSocket((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _endpoints)[_endpoints][(0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _endpointIndex)[_endpointIndex]]) // eslint-disable-next-line @typescript-eslint/ban-ts-comment
      // @ts-ignore - WS may be an instance of w3cwebsocket, which supports headers
      : new _polkadot_x_ws__WEBPACK_IMPORTED_MODULE_14__.WebSocket((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _endpoints)[_endpoints][(0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _endpointIndex)[_endpointIndex]], undefined, undefined, (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _headers)[_headers], undefined, {
        // default: true
        fragmentOutgoingMessages: true,
        // default: 16K (bump, the Node has issues with too many fragments, e.g. on setCode)
        fragmentationThreshold: 1 * MEGABYTE,
        // default: 1MiB (also align with maxReceivedMessageSize)
        maxReceivedFrameSize: 24 * MEGABYTE,
        // default: 8MB (however Polkadot api.query.staking.erasStakers.entries(356) is over that, 16M is ok there)
        maxReceivedMessageSize: 24 * MEGABYTE
      });
      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _websocket)[_websocket].onclose = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _onSocketClose)[_onSocketClose];
      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _websocket)[_websocket].onerror = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _onSocketError)[_onSocketError];
      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _websocket)[_websocket].onmessage = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _onSocketMessage)[_onSocketMessage];
      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _websocket)[_websocket].onopen = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _onSocketOpen)[_onSocketOpen];
    } catch (error) {
      l.error(error);

      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _emit)[_emit]('error', error);

      throw error;
    }
  }
  /**
   * @description Connect, never throwing an error, but rather forcing a retry
   */


  async connectWithRetry() {
    if ((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _autoConnectMs)[_autoConnectMs] > 0) {
      try {
        await this.connect();
      } catch (error) {
        setTimeout(() => {
          this.connectWithRetry().catch(() => {// does not throw
          });
        }, (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _autoConnectMs)[_autoConnectMs]);
      }
    }
  }
  /**
   * @description Manually disconnect from the connection, clearing auto-connect logic
   */
  // eslint-disable-next-line @typescript-eslint/require-await


  async disconnect() {
    // switch off autoConnect, we are in manual mode now
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _autoConnectMs)[_autoConnectMs] = 0;

    try {
      if ((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _websocket)[_websocket]) {
        // 1000 - Normal closure; the connection successfully completed
        (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _websocket)[_websocket].close(1000);
      }
    } catch (error) {
      l.error(error);

      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _emit)[_emit]('error', error);

      throw error;
    }
  }
  /**
   * @summary Listens on events after having subscribed using the [[subscribe]] function.
   * @param  {ProviderInterfaceEmitted} type Event
   * @param  {ProviderInterfaceEmitCb}  sub  Callback
   * @return unsubscribe function
   */


  on(type, sub) {
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _eventemitter)[_eventemitter].on(type, sub);

    return () => {
      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _eventemitter)[_eventemitter].removeListener(type, sub);
    };
  }
  /**
   * @summary Send JSON data using WebSockets to configured HTTP Endpoint or queue.
   * @param method The RPC methods to execute
   * @param params Encoded parameters as applicable for the method
   * @param subscription Subscription details (internally used)
   */


  send(method, params, isCacheable, subscription) {
    const body = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _coder)[_coder].encodeJson(method, params);

    let resultPromise = isCacheable ? (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _callCache)[_callCache].get(body) : null;

    if (!resultPromise) {
      resultPromise = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _send)[_send](body, method, params, subscription);

      if (isCacheable) {
        (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _callCache)[_callCache].set(body, resultPromise);
      }
    }

    return resultPromise;
  }

  /**
   * @name subscribe
   * @summary Allows subscribing to a specific event.
   *
   * @example
   * <BR>
   *
   * ```javascript
   * const provider = new WsProvider('ws://127.0.0.1:9944');
   * const rpc = new Rpc(provider);
   *
   * rpc.state.subscribeStorage([[storage.system.account, <Address>]], (_, values) => {
   *   console.log(values)
   * }).then((subscriptionId) => {
   *   console.log('balance changes subscription id: ', subscriptionId)
   * })
   * ```
   */
  subscribe(type, method, params, callback) {
    return this.send(method, params, false, {
      callback,
      type
    });
  }
  /**
   * @summary Allows unsubscribing to subscriptions made with [[subscribe]].
   */


  async unsubscribe(type, method, id) {
    const subscription = `${type}::${id}`; // FIXME This now could happen with re-subscriptions. The issue is that with a re-sub
    // the assigned id now does not match what the API user originally received. It has
    // a slight complication in solving - since we cannot rely on the send id, but rather
    // need to find the actual subscription id to map it

    if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_7__.isUndefined)((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _subscriptions)[_subscriptions][subscription])) {
      l.debug(() => `Unable to find active subscription=${subscription}`);
      return false;
    }

    delete (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _subscriptions)[_subscriptions][subscription];

    try {
      return this.isConnected && !(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_10__.isNull)((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _websocket)[_websocket]) ? this.send(method, [id]) : true;
    } catch (error) {
      return false;
    }
  }

}

async function _send2(json, method, params, subscription) {
  return new Promise((resolve, reject) => {
    try {
      (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.assert)(this.isConnected && !(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_10__.isNull)((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _websocket)[_websocket]), 'WebSocket is not connected');

      const id = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _coder)[_coder].getId();

      const callback = (error, result) => {
        error ? reject(error) : resolve(result);
      };

      l.debug(() => ['calling', method, json]);
      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _handlers)[_handlers][id] = {
        callback,
        method,
        params,
        subscription
      };

      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _websocket)[_websocket].send(json);
    } catch (error) {
      reject(error);
    }
  });
}

/***/ }),
/* 284 */
/***/ ((module) => {

"use strict";


var has = Object.prototype.hasOwnProperty
  , prefix = '~';

/**
 * Constructor to create a storage for our `EE` objects.
 * An `Events` instance is a plain object whose properties are event names.
 *
 * @constructor
 * @private
 */
function Events() {}

//
// We try to not inherit from `Object.prototype`. In some engines creating an
// instance in this way is faster than calling `Object.create(null)` directly.
// If `Object.create(null)` is not supported we prefix the event names with a
// character to make sure that the built-in object properties are not
// overridden or used as an attack vector.
//
if (Object.create) {
  Events.prototype = Object.create(null);

  //
  // This hack is needed because the `__proto__` property is still inherited in
  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.
  //
  if (!new Events().__proto__) prefix = false;
}

/**
 * Representation of a single event listener.
 *
 * @param {Function} fn The listener function.
 * @param {*} context The context to invoke the listener with.
 * @param {Boolean} [once=false] Specify if the listener is a one-time listener.
 * @constructor
 * @private
 */
function EE(fn, context, once) {
  this.fn = fn;
  this.context = context;
  this.once = once || false;
}

/**
 * Add a listener for a given event.
 *
 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} context The context to invoke the listener with.
 * @param {Boolean} once Specify if the listener is a one-time listener.
 * @returns {EventEmitter}
 * @private
 */
function addListener(emitter, event, fn, context, once) {
  if (typeof fn !== 'function') {
    throw new TypeError('The listener must be a function');
  }

  var listener = new EE(fn, context || emitter, once)
    , evt = prefix ? prefix + event : event;

  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;
  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);
  else emitter._events[evt] = [emitter._events[evt], listener];

  return emitter;
}

/**
 * Clear event by name.
 *
 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
 * @param {(String|Symbol)} evt The Event name.
 * @private
 */
function clearEvent(emitter, evt) {
  if (--emitter._eventsCount === 0) emitter._events = new Events();
  else delete emitter._events[evt];
}

/**
 * Minimal `EventEmitter` interface that is molded against the Node.js
 * `EventEmitter` interface.
 *
 * @constructor
 * @public
 */
function EventEmitter() {
  this._events = new Events();
  this._eventsCount = 0;
}

/**
 * Return an array listing the events for which the emitter has registered
 * listeners.
 *
 * @returns {Array}
 * @public
 */
EventEmitter.prototype.eventNames = function eventNames() {
  var names = []
    , events
    , name;

  if (this._eventsCount === 0) return names;

  for (name in (events = this._events)) {
    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);
  }

  if (Object.getOwnPropertySymbols) {
    return names.concat(Object.getOwnPropertySymbols(events));
  }

  return names;
};

/**
 * Return the listeners registered for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Array} The registered listeners.
 * @public
 */
EventEmitter.prototype.listeners = function listeners(event) {
  var evt = prefix ? prefix + event : event
    , handlers = this._events[evt];

  if (!handlers) return [];
  if (handlers.fn) return [handlers.fn];

  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {
    ee[i] = handlers[i].fn;
  }

  return ee;
};

/**
 * Return the number of listeners listening to a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Number} The number of listeners.
 * @public
 */
EventEmitter.prototype.listenerCount = function listenerCount(event) {
  var evt = prefix ? prefix + event : event
    , listeners = this._events[evt];

  if (!listeners) return 0;
  if (listeners.fn) return 1;
  return listeners.length;
};

/**
 * Calls each of the listeners registered for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Boolean} `true` if the event had listeners, else `false`.
 * @public
 */
EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {
  var evt = prefix ? prefix + event : event;

  if (!this._events[evt]) return false;

  var listeners = this._events[evt]
    , len = arguments.length
    , args
    , i;

  if (listeners.fn) {
    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);

    switch (len) {
      case 1: return listeners.fn.call(listeners.context), true;
      case 2: return listeners.fn.call(listeners.context, a1), true;
      case 3: return listeners.fn.call(listeners.context, a1, a2), true;
      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;
      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;
      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;
    }

    for (i = 1, args = new Array(len -1); i < len; i++) {
      args[i - 1] = arguments[i];
    }

    listeners.fn.apply(listeners.context, args);
  } else {
    var length = listeners.length
      , j;

    for (i = 0; i < length; i++) {
      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);

      switch (len) {
        case 1: listeners[i].fn.call(listeners[i].context); break;
        case 2: listeners[i].fn.call(listeners[i].context, a1); break;
        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;
        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;
        default:
          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {
            args[j - 1] = arguments[j];
          }

          listeners[i].fn.apply(listeners[i].context, args);
      }
    }
  }

  return true;
};

/**
 * Add a listener for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.on = function on(event, fn, context) {
  return addListener(this, event, fn, context, false);
};

/**
 * Add a one-time listener for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.once = function once(event, fn, context) {
  return addListener(this, event, fn, context, true);
};

/**
 * Remove the listeners of a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn Only remove the listeners that match this function.
 * @param {*} context Only remove the listeners that have this context.
 * @param {Boolean} once Only remove one-time listeners.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {
  var evt = prefix ? prefix + event : event;

  if (!this._events[evt]) return this;
  if (!fn) {
    clearEvent(this, evt);
    return this;
  }

  var listeners = this._events[evt];

  if (listeners.fn) {
    if (
      listeners.fn === fn &&
      (!once || listeners.once) &&
      (!context || listeners.context === context)
    ) {
      clearEvent(this, evt);
    }
  } else {
    for (var i = 0, events = [], length = listeners.length; i < length; i++) {
      if (
        listeners[i].fn !== fn ||
        (once && !listeners[i].once) ||
        (context && listeners[i].context !== context)
      ) {
        events.push(listeners[i]);
      }
    }

    //
    // Reset the array, or remove it completely if we have no more listeners.
    //
    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;
    else clearEvent(this, evt);
  }

  return this;
};

/**
 * Remove all listeners, or those of the specified event.
 *
 * @param {(String|Symbol)} [event] The event name.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {
  var evt;

  if (event) {
    evt = prefix ? prefix + event : event;
    if (this._events[evt]) clearEvent(this, evt);
  } else {
    this._events = new Events();
    this._eventsCount = 0;
  }

  return this;
};

//
// Alias methods names because people roll like that.
//
EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
EventEmitter.prototype.addListener = EventEmitter.prototype.on;

//
// Expose the prefix.
//
EventEmitter.prefixed = prefix;

//
// Allow `EventEmitter` to be imported as module namespace.
//
EventEmitter.EventEmitter = EventEmitter;

//
// Expose the module.
//
if (true) {
  module.exports = EventEmitter;
}


/***/ }),
/* 285 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "loggerFormat": () => (/* binding */ loggerFormat),
/* harmony export */   "logger": () => (/* binding */ logger)
/* harmony export */ });
/* harmony import */ var _format_formatDate_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(287);
/* harmony import */ var _is_bn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(237);
/* harmony import */ var _is_buffer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(176);
/* harmony import */ var _is_function_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(81);
/* harmony import */ var _is_object_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(286);
/* harmony import */ var _is_u8a_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(178);
/* harmony import */ var _u8a_toHex_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(196);
/* harmony import */ var _u8a_toU8a_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(166);
/* harmony import */ var _has_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(177);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0









const logTo = {
  debug: 'log',
  error: 'error',
  log: 'log',
  warn: 'warn'
};

function formatOther(value) {
  if (value && (0,_is_object_js__WEBPACK_IMPORTED_MODULE_0__.isObject)(value) && value.constructor === Object) {
    const result = {};

    for (const k of Object.keys(value)) {
      result[k] = loggerFormat(value[k]);
    }

    return result;
  }

  return value;
}

function loggerFormat(value) {
  if (Array.isArray(value)) {
    return value.map(loggerFormat);
  } else if ((0,_is_bn_js__WEBPACK_IMPORTED_MODULE_1__.isBn)(value)) {
    return value.toString();
  } else if ((0,_is_u8a_js__WEBPACK_IMPORTED_MODULE_2__.isU8a)(value) || (0,_is_buffer_js__WEBPACK_IMPORTED_MODULE_3__.isBuffer)(value)) {
    return (0,_u8a_toHex_js__WEBPACK_IMPORTED_MODULE_4__.u8aToHex)((0,_u8a_toU8a_js__WEBPACK_IMPORTED_MODULE_5__.u8aToU8a)(value));
  }

  return formatOther(value);
}

function formatWithLength(maxLength) {
  return v => {
    if (maxLength <= 0) {
      return v;
    }

    const r = `${v}`;
    return r.length < maxLength ? v : `${r.substr(0, maxLength)} ...`;
  };
}

function apply(log, type, values, maxSize = -1) {
  if (values.length === 1 && (0,_is_function_js__WEBPACK_IMPORTED_MODULE_6__.isFunction)(values[0])) {
    const fnResult = values[0]();
    return apply(log, type, Array.isArray(fnResult) ? fnResult : [fnResult], maxSize);
  }

  console[logTo[log]]((0,_format_formatDate_js__WEBPACK_IMPORTED_MODULE_7__.formatDate)(new Date()), type, ...values.map(loggerFormat).map(formatWithLength(maxSize)));
}

function noop() {// noop
}

function isDebugOn(e, type) {
  return !!e && (e === '*' || type === e || e.endsWith('*') && type.startsWith(e.slice(0, -1)));
}

function isDebugOff(e, type) {
  return !!e && e.startsWith('-') && (type === e.slice(1) || e.endsWith('*') && type.startsWith(e.slice(1, -1)));
}

function getDebugFlag(env, type) {
  let flag = false;

  for (const e of env) {
    if (isDebugOn(e, type)) {
      flag = true;
    } else if (isDebugOff(e, type)) {
      flag = false;
    }
  }

  return flag;
}

function parseEnv(type) {
  const env = (_has_js__WEBPACK_IMPORTED_MODULE_8__.hasProcess ? process : {}).env || {};
  const maxSize = parseInt(env.DEBUG_MAX || '-1', 10);
  return [getDebugFlag((env.DEBUG || '').toLowerCase().split(','), type), isNaN(maxSize) ? -1 : maxSize];
}
/**
 * @name Logger
 * @summary Creates a consistent log interface for messages
 * @description
 * Returns a `Logger` that has `.log`, `.error`, `.warn` and `.debug` (controlled with environment `DEBUG=typeA,typeB`) methods. Logging is done with a consistent prefix (type of logger, date) followed by the actual message using the underlying console.
 * @example
 * <BR>
 *
 * ```javascript
 * import { logger } from '@polkadot';
 *
 * const l = logger('test');
 * ```
 */


function logger(_type) {
  const type = `${_type.toUpperCase()}:`.padStart(16);
  const [isDebug, maxSize] = parseEnv(_type.toLowerCase());
  return {
    debug: isDebug ? (...values) => apply('debug', type, values, maxSize) : noop,
    error: (...values) => apply('error', type, values),
    log: (...values) => apply('log', type, values),
    noop,
    warn: (...values) => apply('warn', type, values)
  };
}

/***/ }),
/* 286 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isObject": () => (/* binding */ isObject)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isObject
 * @summary Tests for an `object`.
 * @description
 * Checks to see if the input value is a JavaScript object.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isObject } from '@polkadot/util';
 *
 * isObject({}); // => true
 * isObject('something'); // => false
 * ```
 */
function isObject(value) {
  return !!value && typeof value === 'object';
}

/***/ }),
/* 287 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "formatDate": () => (/* binding */ formatDate)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/** @internal */
function zeroPad(value) {
  return value.toString().padStart(2, '0');
}

function formatDate(date) {
  const year = date.getFullYear().toString();
  const month = zeroPad(date.getMonth() + 1);
  const day = zeroPad(date.getDate());
  const hour = zeroPad(date.getHours());
  const minute = zeroPad(date.getMinutes());
  const second = zeroPad(date.getSeconds());
  return `${year}-${month}-${day} ${hour}:${minute}:${second}`;
}

/***/ }),
/* 288 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/rpc-provider authors & contributors
// SPDX-License-Identifier: Apache-2.0
const HTTP_URL = 'http://127.0.0.1:9933';
const WS_URL = 'ws://127.0.0.1:9944';
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  HTTP_URL,
  WS_URL
});

/***/ }),
/* 289 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LRUCache": () => (/* binding */ LRUCache)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);


// Copyright 2017-2021 @polkadot/rpc-provider authors & contributors
// SPDX-License-Identifier: Apache-2.0
const DEFAULT_CAPACITY = 2048;

class LRUNode {
  constructor(key) {
    this.key = void 0;
    this.next = void 0;
    this.prev = void 0;
    this.key = key;
    this.next = this.prev = this;
  }

} // https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU


var _data = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("data");

var _refs = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("refs");

var _length = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("length");

var _head = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("head");

var _tail = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("tail");

var _toHead = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("toHead");

class LRUCache {
  constructor(capacity = DEFAULT_CAPACITY) {
    Object.defineProperty(this, _toHead, {
      value: _toHead2
    });
    this.capacity = void 0;
    Object.defineProperty(this, _data, {
      writable: true,
      value: new Map()
    });
    Object.defineProperty(this, _refs, {
      writable: true,
      value: new Map()
    });
    Object.defineProperty(this, _length, {
      writable: true,
      value: 0
    });
    Object.defineProperty(this, _head, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _tail, {
      writable: true,
      value: void 0
    });
    this.capacity = capacity;
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _head)[_head] = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _tail)[_tail] = new LRUNode('<empty>');
  }

  get length() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _length)[_length];
  }

  get lengthData() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _data)[_data].size;
  }

  get lengthRefs() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _refs)[_refs].size;
  }

  entries() {
    const keys = this.keys();
    const entries = new Array(keys.length);

    for (let i = 0; i < keys.length; i++) {
      const key = keys[i];
      entries[i] = [key, (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _data)[_data].get(key)];
    }

    return entries;
  }

  keys() {
    const keys = [];

    if ((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _length)[_length]) {
      let curr = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _head)[_head];

      while (curr !== (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _tail)[_tail]) {
        keys.push(curr.key);
        curr = curr.next;
      }

      keys.push(curr.key);
    }

    return keys;
  }

  get(key) {
    const data = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _data)[_data].get(key);

    if (data) {
      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _toHead)[_toHead](key);

      return data;
    }

    return null;
  }

  set(key, value) {
    if ((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _data)[_data].has(key)) {
      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _toHead)[_toHead](key);
    } else {
      const node = new LRUNode(key);

      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _refs)[_refs].set(node.key, node);

      if (this.length === 0) {
        (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _head)[_head] = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _tail)[_tail] = node;
      } else {
        (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _head)[_head].prev = node;
        node.next = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _head)[_head];
        (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _head)[_head] = node;
      }

      if ((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _length)[_length] === this.capacity) {
        (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _data)[_data].delete((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _tail)[_tail].key);

        (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _refs)[_refs].delete((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _tail)[_tail].key);

        (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _tail)[_tail] = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _tail)[_tail].prev;
      } else {
        (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _length)[_length] += 1;
      }
    }

    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _data)[_data].set(key, value);
  }

}

function _toHead2(key) {
  const ref = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _refs)[_refs].get(key);

  if (ref && ref !== (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _head)[_head]) {
    ref.prev.next = ref.next;
    ref.next.prev = ref.prev;
    ref.next = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _head)[_head];
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _head)[_head].prev = ref;
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _head)[_head] = ref;
  }
}

/***/ }),
/* 290 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getWSErrorString": () => (/* binding */ getWSErrorString)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/rpc-provider authors & contributors
// SPDX-License-Identifier: Apache-2.0
// from https://stackoverflow.com/questions/19304157/getting-the-reason-why-websockets-closed-with-close-code-1006
const known = {
  1000: 'Normal Closure',
  1001: 'Going Away',
  1002: 'Protocol Error',
  1003: 'Unsupported Data',
  1004: '(For future)',
  1005: 'No Status Received',
  1006: 'Abnormal Closure',
  1007: 'Invalid frame payload data',
  1008: 'Policy Violation',
  1009: 'Message too big',
  1010: 'Missing Extension',
  1011: 'Internal Error',
  1012: 'Service Restart',
  1013: 'Try Again Later',
  1014: 'Bad Gateway',
  1015: 'TLS Handshake'
};

function getUnmapped(code) {
  if (code <= 1999) {
    return '(For WebSocket standard)';
  } else if (code <= 2999) {
    return '(For WebSocket extensions)';
  } else if (code <= 3999) {
    return '(For libraries and frameworks)';
  } else if (code <= 4999) {
    return '(For applications)';
  }
}

function getWSErrorString(code) {
  if (code >= 0 && code <= 999) {
    return '(Unused)';
  }

  return known[code] || getUnmapped(code) || '(Unknown)';
}

/***/ }),
/* 291 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RpcCoder": () => (/* binding */ RpcCoder)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(82);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(169);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(292);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(124);


// Copyright 2017-2021 @polkadot/rpc-provider authors & contributors
// SPDX-License-Identifier: Apache-2.0


function formatErrorData(data) {
  if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(data)) {
    return '';
  }

  const formatted = `: ${(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.isString)(data) ? data.replace(/Error\("/g, '').replace(/\("/g, '(').replace(/"\)/g, ')').replace(/\(/g, ', ').replace(/\)/g, '') : (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.stringify)(data)}`; // We need some sort of cut-off here since these can be very large and
  // very nested, pick a number and trim the result display to it

  return formatted.length <= 256 ? formatted : `${formatted.substr(0, 255)}…`;
}
/** @internal */


var _id = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("id");

class RpcCoder {
  constructor() {
    Object.defineProperty(this, _id, {
      writable: true,
      value: 0
    });
  }

  decodeResponse(response) {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.assert)(response, 'Empty response object received');
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.assert)(response.jsonrpc === '2.0', 'Invalid jsonrpc field in decoded object');
    const isSubscription = !(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(response.params) && !(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(response.method);
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.assert)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.isNumber)(response.id) || isSubscription && ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.isNumber)(response.params.subscription) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.isString)(response.params.subscription)), 'Invalid id field in decoded object');

    this._checkError(response.error);

    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.assert)(!(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(response.result) || isSubscription, 'No result found in JsonRpc response');

    if (isSubscription) {
      this._checkError(response.params.error);

      return response.params.result;
    }

    return response.result;
  }

  encodeJson(method, params) {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.stringify)(this.encodeObject(method, params));
  }

  encodeObject(method, params) {
    return {
      id: ++(0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _id)[_id],
      jsonrpc: '2.0',
      method,
      params
    };
  }

  getId() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _id)[_id];
  }

  _checkError(error) {
    if (error) {
      const {
        code,
        data,
        message
      } = error;
      throw new Error(`${code}: ${message}${formatErrorData(data)}`);
    }
  }

}

/***/ }),
/* 292 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "stringify": () => (/* binding */ stringify)
/* harmony export */ });
/* harmony import */ var _is_bigInt_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(130);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/** @internal */

function replacer(_, v) {
  return (0,_is_bigInt_js__WEBPACK_IMPORTED_MODULE_0__.isBigInt)(v) ? v.toString() : v;
}
/**
 * @name stringify
 * @summary Performs a JSON.stringify, with BigInt handling
 * @description A wrapper for JSON.stringify that handles BigInt values transparently, converting them to string. No differences from the native JSON.stringify function otherwise.
 */


function stringify(value, space) {
  return JSON.stringify(value, replacer, space);
}

/***/ }),
/* 293 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isChildClass": () => (/* binding */ isChildClass)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isChildClass
 * @summary Tests if the child extends the parent Class
 * @description
 * Checks to see if the child Class extends the parent Class
 * @example
 * <BR>
 *
 * ```javascript
 * import { isChildClass } from '@polkadot/util';
 *
 * console.log('isChildClass', isChildClass(BN, BN); // => true
 * console.log('isChildClass', isChildClass(BN, Uint8Array); // => false
 * ```
 */
function isChildClass(Parent, Child) {
  // https://stackoverflow.com/questions/30993434/check-if-a-constructor-inherits-another-in-es6/30993664
  return Child // eslint-disable-next-line no-prototype-builtins
  ? Parent === Child || Parent.isPrototypeOf(Child) : false;
}

/***/ }),
/* 294 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),
/* harmony export */   "WebSocket": () => (/* binding */ WebSocket)
/* harmony export */ });
/* harmony import */ var _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(173);
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(295);
// Copyright 2017-2021 @polkadot/x-ws authors & contributors
// SPDX-License-Identifier: Apache-2.0


const WebSocket = _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__.xglobal.WebSocket;

/***/ }),
/* 295 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-ws authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/x-ws',
  version: '8.0.2'
};

/***/ }),
/* 296 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ApiPromise": () => (/* binding */ ApiPromise)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(122);
/* harmony import */ var _base_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(297);
/* harmony import */ var _Combinator_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(864);
/* harmony import */ var _decorateMethod_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(863);


// Copyright 2017-2021 @polkadot/api authors & contributors
// SPDX-License-Identifier: Apache-2.0




/**
 * # @polkadot/api/promise
 *
 * ## Overview
 *
 * @name ApiPromise
 * @description
 * ApiPromise is a standard JavaScript wrapper around the RPC and interfaces on the Polkadot network. As a full Promise-based, all interface calls return Promises, including the static `.create(...)`. Subscription calls utilise `(value) => {}` callbacks to pass through the latest values.
 *
 * The API is well suited to real-time applications where either the single-shot state is needed or use is to be made of the subscription-based features of Polkadot (and Substrate) clients.
 *
 * @see [[ApiRx]]
 *
 * ## Usage
 *
 * Making rpc calls -
 * <BR>
 *
 * ```javascript
 * import ApiPromise from '@polkadot/api/promise';
 *
 * // initialise via static create
 * const api = await ApiPromise.create();
 *
 * // make a subscription to the network head
 * api.rpc.chain.subscribeNewHeads((header) => {
 *   console.log(`Chain is at #${header.number}`);
 * });
 * ```
 * <BR>
 *
 * Subscribing to chain state -
 * <BR>
 *
 * ```javascript
 * import { ApiPromise, WsProvider } from '@polkadot/api';
 *
 * // initialise a provider with a specific endpoint
 * const provider = new WsProvider('wss://example.com:9944')
 *
 * // initialise via isReady & new with specific provider
 * const api = await new ApiPromise({ provider }).isReady;
 *
 * // retrieve the block target time
 * const blockPeriod = await api.query.timestamp.blockPeriod().toNumber();
 * let last = 0;
 *
 * // subscribe to the current block timestamp, updates automatically (callback provided)
 * api.query.timestamp.now((timestamp) => {
 *   const elapsed = last
 *     ? `, ${timestamp.toNumber() - last}s since last`
 *     : '';
 *
 *   last = timestamp.toNumber();
 *   console.log(`timestamp ${timestamp}${elapsed} (${blockPeriod}s target)`);
 * });
 * ```
 * <BR>
 *
 * Submitting a transaction -
 * <BR>
 *
 * ```javascript
 * import ApiPromise from '@polkadot/api/promise';
 *
 * ApiPromise.create().then((api) => {
 *   const [nonce] = await api.query.system.account(keyring.alice.address);
 *
 *   api.tx.balances
 *     // create transfer
 *     transfer(keyring.bob.address, 12345)
 *     // sign the transcation
 *     .sign(keyring.alice, { nonce })
 *     // send the transaction (optional status callback)
 *     .send((status) => {
 *       console.log(`current status ${status.type}`);
 *     })
 *     // retrieve the submitted extrinsic hash
 *     .then((hash) => {
 *       console.log(`submitted with hash ${hash}`);
 *     });
 * });
 * ```
 */

var _isReadyPromise = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("isReadyPromise");

var _isReadyOrErrorPromise = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("isReadyOrErrorPromise");

class ApiPromise extends _base_index_js__WEBPACK_IMPORTED_MODULE_2__.ApiBase {
  /**
   * @description Creates an instance of the ApiPromise class
   * @param options Options to create an instance. This can be either [[ApiOptions]] or
   * an [[WsProvider]].
   * @example
   * <BR>
   *
   * ```javascript
   * import Api from '@polkadot/api/promise';
   *
   * new Api().isReady.then((api) => {
   *   api.rpc.subscribeNewHeads((header) => {
   *     console.log(`new block #${header.number.toNumber()}`);
   *   });
   * });
   * ```
   */
  constructor(options) {
    super(options, 'promise', _decorateMethod_js__WEBPACK_IMPORTED_MODULE_3__.toPromiseMethod);
    Object.defineProperty(this, _isReadyPromise, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _isReadyOrErrorPromise, {
      writable: true,
      value: void 0
    });
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _isReadyPromise)[_isReadyPromise] = new Promise(resolve => {
      super.once('ready', () => resolve(this));
    });
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _isReadyOrErrorPromise)[_isReadyOrErrorPromise] = new Promise((resolve, reject) => {
      const tracker = (0,_decorateMethod_js__WEBPACK_IMPORTED_MODULE_3__.promiseTracker)(resolve, reject);
      super.once('ready', () => tracker.resolve(this));
      super.once('error', error => tracker.reject(error));
    });
  }
  /**
   * @description Creates an ApiPromise instance using the supplied provider. Returns an Promise containing the actual Api instance.
   * @param options options that is passed to the class contructor. Can be either [[ApiOptions]] or a
   * provider (see the constructor arguments)
   * @example
   * <BR>
   *
   * ```javascript
   * import Api from '@polkadot/api/promise';
   *
   * Api.create().then(async (api) => {
   *   const timestamp = await api.query.timestamp.now();
   *
   *   console.log(`lastest block timestamp ${timestamp}`);
   * });
   * ```
   */


  static create(options) {
    const instance = new ApiPromise(options);

    if (options && options.throwOnConnect) {
      return instance.isReadyOrError;
    } // Swallow any rejections on isReadyOrError
    // (in Node 15.x this creates issues, when not being looked at)


    instance.isReadyOrError.catch(() => {// ignore
    });
    return instance.isReady;
  }
  /**
   * @description Promise that resolves the first time we are connected and loaded
   */


  get isReady() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _isReadyPromise)[_isReadyPromise];
  }
  /**
   * @description Promise that resolves if we can connect, or reject if there is an error
   */


  get isReadyOrError() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _isReadyOrErrorPromise)[_isReadyOrErrorPromise];
  }
  /**
   * @description Returns a clone of this ApiPromise instance (new underlying provider connection)
   */


  clone() {
    return new ApiPromise((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.objectSpread)({}, this._options, {
      source: this
    }));
  }
  /**
   * @description Creates a combinator that can be used to combine the latest results from multiple subscriptions
   * @param fns An array of function to combine, each in the form of `(cb: (value: void)) => void`
   * @param callback A callback that will return an Array of all the values this combinator has been applied to
   * @example
   * <BR>
   *
   * ```javascript
   * const address = '5DTestUPts3kjeXSTMyerHihn1uwMfLj8vU8sqF7qYrFacT7';
   *
   * // combines values from balance & nonce as it updates
   * api.combineLatest([
   *   api.rpc.chain.subscribeNewHeads,
   *   (cb) => api.query.system.account(address, cb)
   * ], ([head, [balance, nonce]]) => {
   *   console.log(`#${head.number}: You have ${balance.free} units, with ${nonce} transactions sent`);
   * });
   * ```
   */
  // eslint-disable-next-line @typescript-eslint/require-await


  async combineLatest(fns, callback) {
    const combinator = new _Combinator_js__WEBPACK_IMPORTED_MODULE_5__.Combinator(fns, callback);
    return () => {
      combinator.unsubscribe();
    };
  }

}

/***/ }),
/* 297 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ApiBase": () => (/* binding */ ApiBase)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(169);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(122);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(196);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(166);
/* harmony import */ var _Getters_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(298);
// Copyright 2017-2021 @polkadot/api authors & contributors
// SPDX-License-Identifier: Apache-2.0


class ApiBase extends _Getters_js__WEBPACK_IMPORTED_MODULE_0__.Getters {
  /**
   * @description Create an instance of the class
   *
   * @param options Options object to create API instance or a Provider instance
   *
   * @example
   * <BR>
   *
   * ```javascript
   * import Api from '@polkadot/api/promise';
   *
   * const api = new Api().isReady();
   *
   * api.rpc.subscribeNewHeads((header) => {
   *   console.log(`new block #${header.number.toNumber()}`);
   * });
   * ```
   */
  constructor(options = {}, type, decorateMethod) {
    super(options, type, decorateMethod);
  }
  /**
   * @description Connect from the underlying provider, halting all network traffic
   */


  connect() {
    return this._rpcCore.connect();
  }
  /**
   * @description Disconnect from the underlying provider, halting all network traffic
   */


  disconnect() {
    this._unsubscribe();

    return this._rpcCore.disconnect();
  }
  /**
   * @description Set an external signer which will be used to sign extrinsic when account passed in is not KeyringPair
   */


  setSigner(signer) {
    this._rx.signer = signer;
  }
  /**
   * @description Signs a raw signer payload, string or Uint8Array
   */


  async sign(address, data, {
    signer
  } = {}) {
    if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isString)(address)) {
      const _signer = signer || this._rx.signer;

      (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.assert)(_signer === null || _signer === void 0 ? void 0 : _signer.signRaw, 'No signer exists with a signRaw interface. You possibly need to pass through an explicit keypair for the origin so it can be used for signing.');
      return (await _signer.signRaw((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.objectSpread)({
        type: 'bytes'
      }, data, {
        address
      }))).signature;
    }

    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.u8aToHex)(address.sign((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.u8aToU8a)(data.data)));
  }

}

/***/ }),
/* 298 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Getters": () => (/* binding */ Getters)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(80);
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(862);
/* harmony import */ var _find_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(640);
/* harmony import */ var _Init_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(299);
// Copyright 2017-2021 @polkadot/api authors & contributors
// SPDX-License-Identifier: Apache-2.0





function assertResult(value) {
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assertReturn)(value, 'Api needs to be initialized before using, listen on \'ready\'');
}

class Getters extends _Init_js__WEBPACK_IMPORTED_MODULE_1__.Init {
  /**
   * @description Contains the parameter types (constants) of all modules.
   *
   * The values are instances of the appropriate type and are accessible using `section`.`constantName`,
   *
   * @example
   * <BR>
   *
   * ```javascript
   * console.log(api.consts.democracy.enactmentPeriod.toString())
   * ```
   */
  get consts() {
    return assertResult(this._consts);
  }
  /**
   * @description Derived results that are injected into the API, allowing for combinations of various query results.
   *
   * @example
   * <BR>
   *
   * ```javascript
   * api.derive.chain.bestNumber((number) => {
   *   console.log('best number', number);
   * });
   * ```
   */


  get derive() {
    return assertResult(this._derive);
  }
  /**
   * @description Errors from metadata
   */


  get errors() {
    return assertResult(this._errors);
  }
  /**
   * @description Events from metadata
   */


  get events() {
    return assertResult(this._events);
  }
  /**
   * @description  Returns the version of extrinsics in-use on this chain
   */


  get extrinsicVersion() {
    return this._extrinsicType;
  }
  /**
   * @description Contains the genesis Hash of the attached chain. Apart from being useful to determine the actual chain, it can also be used to sign immortal transactions.
   */


  get genesisHash() {
    return assertResult(this._genesisHash);
  }
  /**
   * @description true is the underlying provider is connected
   */


  get isConnected() {
    return this._isConnected.getValue();
  }
  /**
   * @description The library information name & version (from package.json)
   */


  get libraryInfo() {
    return `${_packageInfo_js__WEBPACK_IMPORTED_MODULE_2__.packageInfo.name} v${_packageInfo_js__WEBPACK_IMPORTED_MODULE_2__.packageInfo.version}`;
  }
  /**
   * @description Contains all the chain state modules and their subsequent methods in the API. These are attached dynamically from the runtime metadata.
   *
   * All calls inside the namespace, is denoted by `section`.`method` and may take an optional query parameter. As an example, `api.query.timestamp.now()` (current block timestamp) does not take parameters, while `api.query.system.account(<accountId>)` (retrieving the associated nonce & balances for an account), takes the `AccountId` as a parameter.
   *
   * @example
   * <BR>
   *
   * ```javascript
   * api.query.system.account(<accountId>, ([nonce, balance]) => {
   *   console.log('new free balance', balance.free, 'new nonce', nonce);
   * });
   * ```
   */


  get query() {
    return assertResult(this._query);
  }
  /**
   * @description Allows for the querying of multiple storage entries and the combination thereof into a single result. This is a very optimal way to make multiple queries since it only makes a single connection to the node and retrieves the data over one subscription.
   *
   * @example
   * <BR>
   *
   * ```javascript
   * const unsub = await api.queryMulti(
   *   [
   *     // you can include the storage without any parameters
   *     api.query.balances.totalIssuance,
   *     // or you can pass parameters to the storage query
   *     [api.query.system.account, '5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY']
   *   ],
   *   ([existential, [, { free }]]) => {
   *     console.log(`You have ${free.sub(existential)} more than the existential deposit`);
   *
   *     unsub();
   *   }
   * );
   * ```
   */


  get queryMulti() {
    return assertResult(this._queryMulti);
  }
  /**
   * @description Contains all the raw rpc sections and their subsequent methods in the API as defined by the jsonrpc interface definitions. Unlike the dynamic `api.query` and `api.tx` sections, these methods are fixed (although extensible with node upgrades) and not determined by the runtime.
   *
   * RPC endpoints available here allow for the query of chain, node and system information, in addition to providing interfaces for the raw queries of state (using known keys) and the submission of transactions.
   *
   * @example
   * <BR>
   *
   * ```javascript
   * api.rpc.chain.subscribeNewHeads((header) => {
   *   console.log('new header', header);
   * });
   * ```
   */


  get rpc() {
    return assertResult(this._rpc);
  }
  /**
   * @description Contains the chain information for the current node.
   */


  get runtimeChain() {
    return assertResult(this._runtimeChain);
  }
  /**
   * @description Yields the current attached runtime metadata. Generally this is only used to construct extrinsics & storage, but is useful for current runtime inspection.
   */


  get runtimeMetadata() {
    return assertResult(this._runtimeMetadata);
  }
  /**
   * @description Contains the version information for the current runtime.
   */


  get runtimeVersion() {
    return assertResult(this._runtimeVersion);
  }
  /**
   * @description The underlying Rx API interface
   */


  get rx() {
    return assertResult(this._rx);
  }
  /**
   * @description The type of this API instance, either 'rxjs' or 'promise'
   */


  get type() {
    return this._type;
  }
  /**
   * @description Contains all the extrinsic modules and their subsequent methods in the API. It allows for the construction of transactions and the submission thereof. These are attached dynamically from the runtime metadata.
   *
   * @example
   * <BR>
   *
   * ```javascript
   * api.tx.balances
   *   .transfer(<recipientId>, <balance>)
   *   .signAndSend(<keyPair>, ({status}) => {
   *     console.log('tx status', status.asFinalized.toHex());
   *   });
   * ```
   */


  get tx() {
    return assertResult(this._extrinsics);
  }
  /**
   * @description Finds the definition for a specific [[CallFunction]] based on the index supplied
   */


  findCall(callIndex) {
    return (0,_find_js__WEBPACK_IMPORTED_MODULE_3__.findCall)(this.registry, callIndex);
  }
  /**
   * @description Finds the definition for a specific [[RegistryError]] based on the index supplied
   */


  findError(errorIndex) {
    return (0,_find_js__WEBPACK_IMPORTED_MODULE_3__.findError)(this.registry, errorIndex);
  }

}

/***/ }),
/* 299 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Init": () => (/* binding */ Init)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(860);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(660);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(599);
/* harmony import */ var _polkadot_types__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(302);
/* harmony import */ var _polkadot_types__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(362);
/* harmony import */ var _polkadot_types_known__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(380);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(285);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(122);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(240);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(228);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(196);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(82);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(292);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(837);
/* harmony import */ var _capabilities_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(861);
/* harmony import */ var _Decorate_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(300);


// Copyright 2017-2021 @polkadot/api authors & contributors
// SPDX-License-Identifier: Apache-2.0







const KEEPALIVE_INTERVAL = 10000;
const l = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.logger)('api/init');

function textToString(t) {
  return t.toString();
}

var _healthTimer = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("healthTimer");

var _registries = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("registries");

var _updateSub = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("updateSub");

var _waitingRegistries = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("waitingRegistries");

var _onProviderConnect = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("onProviderConnect");

var _onProviderDisconnect = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("onProviderDisconnect");

var _onProviderError = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("onProviderError");

class Init extends _Decorate_js__WEBPACK_IMPORTED_MODULE_3__.Decorate {
  constructor(options, type, decorateMethod) {
    super(options, type, decorateMethod); // all injected types added to the registry for overrides

    Object.defineProperty(this, _healthTimer, {
      writable: true,
      value: null
    });
    Object.defineProperty(this, _registries, {
      writable: true,
      value: []
    });
    Object.defineProperty(this, _updateSub, {
      writable: true,
      value: null
    });
    Object.defineProperty(this, _waitingRegistries, {
      writable: true,
      value: {}
    });
    Object.defineProperty(this, _onProviderConnect, {
      writable: true,
      value: async () => {
        this._isConnected.next(true);

        this.emit('connected');

        try {
          const [hasMeta, cryptoReady] = await Promise.all([this._loadMeta(), this._options.initWasm === false ? Promise.resolve(true) : (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_4__.cryptoWaitReady)()]);

          this._subscribeHealth();

          if (hasMeta && !this._isReady && cryptoReady) {
            this._isReady = true;
            this.emit('ready', this);
          }
        } catch (_error) {
          const error = new Error(`FATAL: Unable to initialize the API: ${_error.message}`);
          l.error(error);
          this.emit('error', error);
        }
      }
    });
    Object.defineProperty(this, _onProviderDisconnect, {
      writable: true,
      value: () => {
        this._isConnected.next(false);

        this._unsubscribeHealth();

        this.emit('disconnected');
      }
    });
    Object.defineProperty(this, _onProviderError, {
      writable: true,
      value: error => {
        this.emit('error', error);
      }
    });
    this.registry.setKnownTypes(options); // We only register the types (global) if this is not a cloned instance.
    // Do right up-front, so we get in the user types before we are actually
    // doing anything on-chain, this ensures we have the overrides in-place

    if (!options.source) {
      this.registerTypes(options.types);
    } else {
      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _registries)[_registries] = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(options.source, _registries)[_registries];
    }

    this._rpc = this._decorateRpc(this._rpcCore, this._decorateMethod);
    this._rx.rpc = this._decorateRpc(this._rpcCore, this._rxDecorateMethod);

    if (this.supportMulti) {
      this._queryMulti = this._decorateMulti(this._decorateMethod);
      this._rx.queryMulti = this._decorateMulti(this._rxDecorateMethod);
    }

    this._rx.signer = options.signer;

    this._rpcCore.setRegistrySwap(blockHash => this.getBlockRegistry(blockHash));

    if (this.hasSubscriptions) {
      this._rpcCore.provider.on('disconnected', (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _onProviderDisconnect)[_onProviderDisconnect]);

      this._rpcCore.provider.on('error', (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _onProviderError)[_onProviderError]);

      this._rpcCore.provider.on('connected', (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _onProviderConnect)[_onProviderConnect]);
    } else {
      l.warn('Api will be available in a limited mode since the provider does not support subscriptions');
    } // If the provider was instantiated earlier, and has already emitted a
    // 'connected' event, then the `on('connected')` won't fire anymore. To
    // cater for this case, we call manually `this._onProviderConnect`.


    if (this._rpcCore.provider.isConnected) {
      // eslint-disable-next-line @typescript-eslint/no-floating-promises
      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _onProviderConnect)[_onProviderConnect]();
    }
  }
  /**
   * @description Decorates a registry based on the runtime version
   */


  _initRegistry(registry, chain, version, metadata, chainProps) {
    registry.setChainProperties(chainProps || this.registry.getChainProperties());
    registry.setKnownTypes(this._options);
    registry.register((0,_polkadot_types_known__WEBPACK_IMPORTED_MODULE_5__.getSpecTypes)(registry, chain, version.specName, version.specVersion));
    registry.setHasher((0,_polkadot_types_known__WEBPACK_IMPORTED_MODULE_5__.getSpecHasher)(registry, chain, version.specName)); // for bundled types, pull through the aliases defined

    if (registry.knownTypes.typesBundle) {
      registry.knownTypes.typesAlias = (0,_polkadot_types_known__WEBPACK_IMPORTED_MODULE_5__.getSpecAlias)(registry, chain, version.specName);
    }

    registry.setMetadata(metadata, undefined, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.objectSpread)({}, (0,_polkadot_types_known__WEBPACK_IMPORTED_MODULE_5__.getSpecExtensions)(registry, chain, version.specName), this._options.signedExtensions));
  }
  /**
   * @description Returns the default versioned registry
   */


  _getDefaultRegistry() {
    // get the default registry version
    const thisRegistry = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _registries)[_registries].find(({
      isDefault
    }) => isDefault);

    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_7__.assert)(thisRegistry, 'Initialization error, cannot find the default registry');
    return thisRegistry;
  }
  /**
   * @description Returns a decorated API instance at a specific point in time
   */


  async at(blockHash, knownVersion) {
    const u8aHash = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_8__.u8aToU8a)(blockHash);
    const registry = await this.getBlockRegistry(u8aHash, knownVersion); // always create a new decoration - since we are pointing to a specific hash, this
    // means that all queries needs to use that hash (not a previous one already existing)

    return this._createDecorated(registry, true, null, u8aHash).decoratedApi;
  }

  _getBlockRegistryViaVersion(blockHash, version) {
    if (version) {
      // check for pre-existing registries. We also check specName, e.g. it
      // could be changed like in Westmint with upgrade from shell -> westmint
      const existingViaVersion = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _registries)[_registries].find(({
        specName,
        specVersion
      }) => specName.eq(version.specName) && specVersion.eq(version.specVersion));

      if (existingViaVersion) {
        existingViaVersion.lastBlockHash = blockHash;
        return existingViaVersion;
      }
    }

    return null;
  }

  async _getBlockRegistry(blockHash) {
    // ensure we have everything required
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_7__.assert)(this._genesisHash && this._runtimeVersion, 'Cannot retrieve data on an uninitialized chain'); // We have to assume that on the RPC layer the calls used here does not call back into
    // the registry swap, so getHeader & getRuntimeVersion should not be historic

    const header = this.registry.createType('HeaderPartial', this._genesisHash.eq(blockHash) ? {
      number: _polkadot_util__WEBPACK_IMPORTED_MODULE_9__.BN_ZERO,
      parentHash: this._genesisHash
    } : await (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.firstValueFrom)(this._rpcCore.chain.getHeader.raw(blockHash)));
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_7__.assert)(!header.parentHash.isEmpty, 'Unable to retrieve header and parent from supplied hash'); // get the runtime version, either on-chain or via an known upgrade history

    const [firstVersion, lastVersion] = (0,_polkadot_types_known__WEBPACK_IMPORTED_MODULE_5__.getUpgradeVersion)(this._genesisHash, header.number);
    const version = this.registry.createType('RuntimeVersionPartial', firstVersion && (lastVersion || firstVersion.specVersion.eq(this._runtimeVersion.specVersion)) ? {
      specName: this._runtimeVersion.specName,
      specVersion: firstVersion.specVersion
    } : await (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.firstValueFrom)(this._rpcCore.state.getRuntimeVersion.raw(header.parentHash)));

    const existingViaVersion = this._getBlockRegistryViaVersion(blockHash, version);

    if (existingViaVersion) {
      return existingViaVersion;
    } // nothing has been found, construct new


    const registry = new _polkadot_types__WEBPACK_IMPORTED_MODULE_11__.TypeRegistry(blockHash);
    const metadata = new _polkadot_types__WEBPACK_IMPORTED_MODULE_12__.Metadata(registry, await (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.firstValueFrom)(this._rpcCore.state.getMetadata.raw(header.parentHash)));

    this._initRegistry(registry, this._runtimeChain, version, metadata); // add our new registry


    const result = {
      lastBlockHash: blockHash,
      metadata,
      registry,
      specName: version.specName,
      specVersion: version.specVersion
    };

    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _registries)[_registries].push(result);

    return result;
  }
  /**
   * @description Sets up a registry based on the block hash defined
   */


  async getBlockRegistry(blockHash, knownVersion) {
    const existingViaHash = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _registries)[_registries].find(({
      lastBlockHash
    }) => lastBlockHash && (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_13__.u8aEq)(lastBlockHash, blockHash));

    if (existingViaHash) {
      return existingViaHash;
    }

    const existingViaVersion = this._getBlockRegistryViaVersion(blockHash, knownVersion);

    if (existingViaVersion) {
      return existingViaVersion;
    }

    const blockHashHex = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_14__.u8aToHex)(blockHash);

    let waiting = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _waitingRegistries)[_waitingRegistries][blockHashHex];

    if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_15__.isUndefined)(waiting)) {
      waiting = this._getBlockRegistry(blockHash);
      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _waitingRegistries)[_waitingRegistries][blockHashHex] = waiting; // when we have resolved, remove this from the waiting list

      waiting.then(() => {
        delete (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _waitingRegistries)[_waitingRegistries][blockHashHex];
      }).catch(() => undefined);
    }

    return waiting;
  }

  async _loadMeta() {
    var _this$_options$source;

    // on re-connection to the same chain, we don't want to re-do everything from chain again
    if (this._isReady) {
      return true;
    }

    this._unsubscribeUpdates(); // only load from on-chain if we are not a clone (default path), alternatively
    // just use the values from the source instance provided


    [this._genesisHash, this._runtimeMetadata] = (_this$_options$source = this._options.source) !== null && _this$_options$source !== void 0 && _this$_options$source._isReady ? await this._metaFromSource(this._options.source) : await this._metaFromChain(this._options.metadata);
    return this._initFromMeta(this._runtimeMetadata);
  } // eslint-disable-next-line @typescript-eslint/require-await


  async _metaFromSource(source) {
    this._extrinsicType = source.extrinsicVersion;
    this._runtimeChain = source.runtimeChain;
    this._runtimeVersion = source.runtimeVersion; // manually build a list of all available methods in this RPC, we are
    // going to filter on it to align the cloned RPC without making a call

    const sections = Object.keys(source.rpc);
    const rpcs = [];

    for (let s = 0; s < sections.length; s++) {
      const section = sections[s];
      const methods = Object.keys(source.rpc[section]);

      for (let m = 0; m < methods.length; m++) {
        rpcs.push(`${section}_${methods[m]}`);
      }
    }

    this._filterRpc(rpcs, (0,_polkadot_types_known__WEBPACK_IMPORTED_MODULE_5__.getSpecRpc)(this.registry, source.runtimeChain, source.runtimeVersion.specName));

    return [source.genesisHash, source.runtimeMetadata];
  }

  _detectCapabilities(registry, blockHash) {
    (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.firstValueFrom)((0,_capabilities_js__WEBPACK_IMPORTED_MODULE_16__.detectedCapabilities)(this._rx, blockHash)).then(types => {
      if (Object.keys(types).length) {
        registry.register(types);
        l.debug(() => `Capabilities detected${blockHash ? ` (${(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_14__.u8aToHex)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_8__.u8aToU8a)(blockHash))})` : ''}: ${(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_17__.stringify)(types)}`);
      }
    }).catch(undefined);
    return true;
  } // subscribe to metadata updates, inject the types on changes


  _subscribeUpdates() {
    if ((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _updateSub)[_updateSub] || !this.hasSubscriptions) {
      return;
    }

    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _updateSub)[_updateSub] = this._rpcCore.state.subscribeRuntimeVersion().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_18__.switchMap)(version => {
      var _this$_runtimeVersion;

      return (// only retrieve the metadata when the on-chain version has been changed
        (_this$_runtimeVersion = this._runtimeVersion) !== null && _this$_runtimeVersion !== void 0 && _this$_runtimeVersion.specVersion.eq(version.specVersion) ? (0,rxjs__WEBPACK_IMPORTED_MODULE_19__.of)(false) : this._rpcCore.state.getMetadata().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_20__.map)(metadata => {
          l.log(`Runtime version updated to spec=${version.specVersion.toString()}, tx=${version.transactionVersion.toString()}`);
          this._runtimeMetadata = metadata;
          this._runtimeVersion = version;
          this._rx.runtimeVersion = version; // update the default registry version

          const thisRegistry = this._getDefaultRegistry(); // setup the data as per the current versions


          thisRegistry.metadata = metadata;
          thisRegistry.specVersion = version.specVersion; // clear the registry types to ensure that we override correctly

          this._initRegistry(thisRegistry.registry.init(), this._runtimeChain, version, metadata);

          this._injectMetadata(thisRegistry, false);

          return this._detectCapabilities(thisRegistry.registry);
        }))
      );
    })).subscribe();
  }

  async _metaFromChain(optMetadata) {
    const [genesisHash, runtimeVersion, chain, chainProps, rpcMethods, chainMetadata] = await Promise.all([(0,rxjs__WEBPACK_IMPORTED_MODULE_10__.firstValueFrom)(this._rpcCore.chain.getBlockHash(0)), (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.firstValueFrom)(this._rpcCore.state.getRuntimeVersion()), (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.firstValueFrom)(this._rpcCore.system.chain()), (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.firstValueFrom)(this._rpcCore.system.properties()), (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.firstValueFrom)(this._rpcCore.rpc.methods()), optMetadata ? Promise.resolve(null) : (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.firstValueFrom)(this._rpcCore.state.getMetadata())]); // set our chain version & genesisHash as returned

    this._runtimeChain = chain;
    this._runtimeVersion = runtimeVersion;
    this._rx.runtimeVersion = runtimeVersion; // retrieve metadata, either from chain  or as pass-in via options

    const metadataKey = `${genesisHash.toHex() || '0x'}-${runtimeVersion.specVersion.toString()}`;
    const metadata = chainMetadata || (optMetadata && optMetadata[metadataKey] ? new _polkadot_types__WEBPACK_IMPORTED_MODULE_12__.Metadata(this.registry, optMetadata[metadataKey]) : await (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.firstValueFrom)(this._rpcCore.state.getMetadata())); // initializes the registry & RPC

    this._initRegistry(this.registry, chain, runtimeVersion, metadata, chainProps);

    this._filterRpc(rpcMethods.methods.map(textToString), (0,_polkadot_types_known__WEBPACK_IMPORTED_MODULE_5__.getSpecRpc)(this.registry, chain, runtimeVersion.specName));

    this._subscribeUpdates(); // setup the initial registry, when we have none


    if (!(0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _registries)[_registries].length) {
      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _registries)[_registries].push({
        isDefault: true,
        metadata,
        registry: this.registry,
        specName: runtimeVersion.specName,
        specVersion: runtimeVersion.specVersion
      });
    } // get unique types & validate


    metadata.getUniqTypes(this._options.throwOnUnknown || false);
    return [genesisHash, metadata];
  }

  _initFromMeta(metadata) {
    this._extrinsicType = metadata.asLatest.extrinsic.version.toNumber();
    this._rx.extrinsicType = this._extrinsicType;
    this._rx.genesisHash = this._genesisHash;
    this._rx.runtimeVersion = this._runtimeVersion; // must be set here
    // inject metadata and adjust the types as detected

    this._injectMetadata(this._getDefaultRegistry(), true); // derive is last, since it uses the decorated rx


    this._rx.derive = this._decorateDeriveRx(this._rxDecorateMethod);
    this._derive = this._decorateDerive(this._decorateMethod); // detect the on-chain capabilities

    this._detectCapabilities(this.registry);

    return true;
  }

  _subscribeHealth() {
    // Only enable the health keepalive on WS, not needed on HTTP
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _healthTimer)[_healthTimer] = this.hasSubscriptions ? setInterval(() => {
      (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.firstValueFrom)(this._rpcCore.system.health()).catch(() => undefined);
    }, KEEPALIVE_INTERVAL) : null;
  }

  _unsubscribeHealth() {
    if ((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _healthTimer)[_healthTimer]) {
      clearInterval((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _healthTimer)[_healthTimer]);
      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _healthTimer)[_healthTimer] = null;
    }
  }

  _unsubscribeUpdates() {
    if ((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _updateSub)[_updateSub]) {
      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _updateSub)[_updateSub].unsubscribe();

      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _updateSub)[_updateSub] = null;
    }
  }

  _unsubscribe() {
    this._unsubscribeHealth();

    this._unsubscribeUpdates();
  }

}

/***/ }),
/* 300 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Decorate": () => (/* binding */ Decorate)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(577);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(627);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(660);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(662);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(605);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(668);
/* harmony import */ var _polkadot_api_derive__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(671);
/* harmony import */ var _polkadot_rpc_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(600);
/* harmony import */ var _polkadot_rpc_core__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(624);
/* harmony import */ var _polkadot_rpc_provider__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(283);
/* harmony import */ var _polkadot_types__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(302);
/* harmony import */ var _polkadot_types__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(628);
/* harmony import */ var _polkadot_types__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(478);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(285);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(88);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(240);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(304);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(196);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(575);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(666);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(667);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(122);
/* harmony import */ var _submittable_index_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(641);
/* harmony import */ var _util_augmentObject_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(638);
/* harmony import */ var _util_decorate_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(836);
/* harmony import */ var _util_validate_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(661);
/* harmony import */ var _Events_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(301);
/* harmony import */ var _find_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(640);


// Copyright 2017-2021 @polkadot/api authors & contributors
// SPDX-License-Identifier: Apache-2.0












// the max amount of keys/values that we will retrieve at once
const PAGE_SIZE_K = 1000; // limit aligned with the 1k on the node (trie lookups are heavy)

const PAGE_SIZE_V = 250; // limited since the data may be very large (e.g. misfiring elections)

const l = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.logger)('api/init');
let instanceCounter = 0;

function getAtQueryFn(api, {
  method,
  section
}) {
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.assert)(api.rx.query[section] && api.rx.query[section][method], () => `query.${section}.${method} is not available in this version of the metadata`);
  return api.rx.query[section][method];
}

var _instanceId = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("instanceId");

var _registry = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("registry");

class Decorate extends _Events_js__WEBPACK_IMPORTED_MODULE_4__.Events {
  // HACK Use BN import so decorateDerive works... yes, wtf.
  // latest extrinsic version

  /**
   * This is the one and only method concrete children classes need to implement.
   * It's a higher-order function, which takes one argument
   * `method: Method extends (...args: any[]) => Observable<any>`
   * (and one optional `options`), and should return the user facing method.
   * For example:
   * - For ApiRx, `decorateMethod` should just be identity, because the input
   * function is already an Observable
   * - For ApiPromise, `decorateMethod` should return a function that takes all
   * the parameters from `method`, adds an optional `callback` argument, and
   * returns a Promise.
   *
   * We could easily imagine other user-facing interfaces, which are simply
   * implemented by transforming the Observable to Stream/Iterator/Kefir/Bacon
   * via `decorateMethod`.
   */

  /**
   * @description Create an instance of the class
   *
   * @param options Options object to create API instance or a Provider instance
   *
   * @example
   * <BR>
   *
   * ```javascript
   * import Api from '@polkadot/api/promise';
   *
   * const api = new Api().isReady();
   *
   * api.rpc.subscribeNewHeads((header) => {
   *   console.log(`new block #${header.number.toNumber()}`);
   * });
   * ```
   */
  constructor(options, type, decorateMethod) {
    var _options$source;

    super();
    Object.defineProperty(this, _instanceId, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _registry, {
      writable: true,
      value: void 0
    });
    this.__phantom = new _polkadot_util__WEBPACK_IMPORTED_MODULE_5__(0);
    this._consts = {};
    this._derive = void 0;
    this._errors = {};
    this._events = {};
    this._extrinsics = void 0;
    this._extrinsicType = 4;
    this._genesisHash = void 0;
    this._isConnected = void 0;
    this._isReady = false;
    this._options = void 0;
    this._query = {};
    this._queryMulti = void 0;
    this._rpc = void 0;
    this._rpcCore = void 0;
    this._runtimeChain = void 0;
    this._runtimeMetadata = void 0;
    this._runtimeVersion = void 0;
    this._rx = {
      consts: {},
      query: {},
      tx: {}
    };
    this._type = void 0;
    this._decorateMethod = void 0;

    this._rxDecorateMethod = method => {
      return method;
    };

    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _instanceId)[_instanceId] = `${++instanceCounter}`;
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _registry)[_registry] = ((_options$source = options.source) === null || _options$source === void 0 ? void 0 : _options$source.registry) || options.registry || new _polkadot_types__WEBPACK_IMPORTED_MODULE_6__.TypeRegistry();

    this._rx.queryAt = (blockHash, knownVersion) => (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.from)(this.at(blockHash, knownVersion)).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_8__.map)(a => a.rx.query));

    this._rx.registry = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _registry)[_registry];
    const thisProvider = options.source ? options.source._rpcCore.provider.clone() : options.provider || new _polkadot_rpc_provider__WEBPACK_IMPORTED_MODULE_9__.WsProvider();
    this._decorateMethod = decorateMethod;
    this._options = options;
    this._type = type; // The RPC interface decorates the known interfaces on init

    this._rpcCore = new _polkadot_rpc_core__WEBPACK_IMPORTED_MODULE_10__.RpcCore((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _instanceId)[_instanceId], (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _registry)[_registry], thisProvider, this._options.rpc);
    this._isConnected = new rxjs__WEBPACK_IMPORTED_MODULE_11__.BehaviorSubject(this._rpcCore.provider.isConnected);
    this._rx.hasSubscriptions = this._rpcCore.provider.hasSubscriptions;
  }

  /**
   * @description Return the current used registry
   */
  get registry() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _registry)[_registry];
  }
  /**
   * @description Creates an instance of a type as registered
   */


  createType(type, ...params) {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _registry)[_registry].createType(type, ...params);
  }
  /**
   * @description Register additional user-defined of chain-specific types in the type registry
   */


  registerTypes(types) {
    types && (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _registry)[_registry].register(types);
  }
  /**
   * @returns `true` if the API operates with subscriptions
   */


  get hasSubscriptions() {
    return this._rpcCore.provider.hasSubscriptions;
  }
  /**
   * @returns `true` if the API decorate multi-key queries
   */


  get supportMulti() {
    return this._rpcCore.provider.hasSubscriptions || !!this._rpcCore.state.queryStorageAt;
  }

  _createDecorated(registry, fromEmpty, decoratedApi, blockHash) {
    if (!decoratedApi) {
      decoratedApi = {
        consts: {},
        errors: {},
        events: {},
        query: {},
        registry: registry.registry,
        rx: {
          query: {}
        }
      };
    }

    if (!registry.decoratedMeta) {
      registry.decoratedMeta = (0,_polkadot_types__WEBPACK_IMPORTED_MODULE_12__.expandMetadata)(registry.registry, registry.metadata);
    }

    const storage = this._decorateStorage(registry.decoratedMeta, this._decorateMethod, blockHash);

    const storageRx = this._decorateStorage(registry.decoratedMeta, this._rxDecorateMethod, blockHash);

    (0,_util_augmentObject_js__WEBPACK_IMPORTED_MODULE_13__.augmentObject)('consts', registry.decoratedMeta.consts, decoratedApi.consts, fromEmpty);
    (0,_util_augmentObject_js__WEBPACK_IMPORTED_MODULE_13__.augmentObject)('errors', registry.decoratedMeta.errors, decoratedApi.errors, fromEmpty);
    (0,_util_augmentObject_js__WEBPACK_IMPORTED_MODULE_13__.augmentObject)('events', registry.decoratedMeta.events, decoratedApi.events, fromEmpty);
    (0,_util_augmentObject_js__WEBPACK_IMPORTED_MODULE_13__.augmentObject)('query', storage, decoratedApi.query, fromEmpty);
    (0,_util_augmentObject_js__WEBPACK_IMPORTED_MODULE_13__.augmentObject)('query', storageRx, decoratedApi.rx.query, fromEmpty);

    decoratedApi.findCall = callIndex => (0,_find_js__WEBPACK_IMPORTED_MODULE_14__.findCall)(registry.registry, callIndex);

    decoratedApi.findError = errorIndex => (0,_find_js__WEBPACK_IMPORTED_MODULE_14__.findError)(registry.registry, errorIndex);

    decoratedApi.queryMulti = blockHash ? this._decorateMultiAt(decoratedApi, this._decorateMethod, blockHash) : this._decorateMulti(this._decorateMethod);
    return {
      decoratedApi,
      decoratedMeta: registry.decoratedMeta
    };
  }

  _injectMetadata(registry, fromEmpty = false) {
    // clear the decoration, we are redoing it here
    if (fromEmpty || !registry.decoratedApi) {
      registry.decoratedApi = {
        consts: {},
        errors: {},
        events: {},
        query: {},
        registry: registry.registry,
        rx: {
          query: {}
        }
      };
    }

    const {
      decoratedApi,
      decoratedMeta
    } = this._createDecorated(registry, fromEmpty, registry.decoratedApi);

    this._consts = decoratedApi.consts;
    this._errors = decoratedApi.errors;
    this._events = decoratedApi.events;
    this._query = decoratedApi.query;
    this._rx.query = decoratedApi.rx.query;

    const tx = this._decorateExtrinsics(decoratedMeta, this._decorateMethod);

    const rxtx = this._decorateExtrinsics(decoratedMeta, this._rxDecorateMethod);

    if (fromEmpty || !this._extrinsics) {
      this._extrinsics = tx;
      this._rx.tx = rxtx;
    } else {
      (0,_util_augmentObject_js__WEBPACK_IMPORTED_MODULE_13__.augmentObject)('tx', tx, this._extrinsics, false);
      (0,_util_augmentObject_js__WEBPACK_IMPORTED_MODULE_13__.augmentObject)(null, rxtx, this._rx.tx, false);
    }

    (0,_util_augmentObject_js__WEBPACK_IMPORTED_MODULE_13__.augmentObject)(null, decoratedMeta.consts, this._rx.consts, fromEmpty);
  }
  /**
   * @deprecated
   * backwards compatible endpoint for metadata injection, may be removed in the future (However, it is still useful for testing injection)
   */


  injectMetadata(metadata, fromEmpty, registry) {
    this._injectMetadata({
      metadata,
      registry: registry || (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _registry)[_registry],
      specName: (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _registry)[_registry].createType('Text'),
      specVersion: _polkadot_util__WEBPACK_IMPORTED_MODULE_15__.BN_ZERO
    }, fromEmpty);
  }

  _decorateFunctionMeta(input, output) {
    output.meta = input.meta;
    output.method = input.method;
    output.section = input.section;
    output.toJSON = input.toJSON;

    if (input.callIndex) {
      output.callIndex = input.callIndex;
    }

    return output;
  } // Filter all RPC methods based on the results of the rpc_methods call. We do this in the following
  // manner to cater for both old and new:
  //   - when the number of entries are 0, only remove the ones with isOptional (account & contracts)
  //   - when non-zero, remove anything that is not in the array (we don't do this)


  _filterRpc(methods, additional) {
    // add any specific user-base RPCs
    if (Object.keys(additional).length !== 0) {
      this._rpcCore.addUserInterfaces(additional); // re-decorate, only adding any new additional interfaces


      this._decorateRpc(this._rpcCore, this._decorateMethod, this._rpc);

      this._decorateRpc(this._rpcCore, this._rxDecorateMethod, this._rx.rpc);
    }

    this._filterRpcMethods(methods);
  }

  _filterRpcMethods(exposed) {
    const hasResults = exposed.length !== 0;
    const allKnown = [...this._rpcCore.mapping.entries()];
    const allKeys = [];

    for (let i = 0; i < allKnown.length; i++) {
      const [, {
        alias,
        endpoint,
        method,
        pubsub,
        section
      }] = allKnown[i];
      allKeys.push(`${section}_${method}`);

      if (pubsub) {
        allKeys.push(`${section}_${pubsub[1]}`);
        allKeys.push(`${section}_${pubsub[2]}`);
      }

      if (alias) {
        allKeys.push(...alias);
      }

      if (endpoint) {
        allKeys.push(endpoint);
      }
    }

    const filterKey = k => !allKeys.includes(k);

    const unknown = exposed.filter(filterKey);

    if (unknown.length) {
      l.warn(`RPC methods not decorated: ${unknown.join(', ')}`);
    } // loop through all entries we have (populated in decorate) and filter as required
    // only remove when we have results and method missing, or with no results if optional


    for (let i = 0; i < allKnown.length; i++) {
      const [k, {
        method,
        section
      }] = allKnown[i];

      if (hasResults && !exposed.includes(k) && k !== 'rpc_methods') {
        if (this._rpc[section]) {
          delete this._rpc[section][method];
          delete this._rx.rpc[section][method];
        }
      }
    }
  }

  _decorateRpc(rpc, decorateMethod, input = {}) {
    const out = input;

    const decorateFn = (section, method) => {
      const source = rpc[section][method];
      const fn = decorateMethod(source, {
        methodName: method
      });
      fn.meta = source.meta;
      fn.raw = decorateMethod(source.raw, {
        methodName: method
      });
      return fn;
    };

    for (let s = 0; s < rpc.sections.length; s++) {
      const section = rpc.sections[s];

      if (!Object.prototype.hasOwnProperty.call(out, section)) {
        const methods = Object.keys(rpc[section]);

        const decorateInternal = method => decorateFn(section, method);

        for (let m = 0; m < methods.length; m++) {
          const method = methods[m]; //  skip subscriptions where we have a non-subscribe interface

          if (this.hasSubscriptions || !(method.startsWith('subscribe') || method.startsWith('unsubscribe'))) {
            if (!Object.prototype.hasOwnProperty.call(out, section)) {
              out[section] = {};
            }

            (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_16__.lazyMethod)(out[section], method, decorateInternal);
          }
        }
      }
    }

    return out;
  } // only be called if supportMulti is true


  _decorateMulti(decorateMethod) {
    // eslint-disable-next-line @typescript-eslint/no-unsafe-return
    return decorateMethod(calls => (this.hasSubscriptions ? this._rpcCore.state.subscribeStorage : this._rpcCore.state.queryStorageAt)(calls.map(args => Array.isArray(args) ? args[0].creator.meta.type.isPlain ? [args[0].creator] : args[0].creator.meta.type.asMap.hashers.length === 1 ? [args[0].creator, args.slice(1)] : [args[0].creator, ...args.slice(1)] : [args.creator])));
  }

  _decorateMultiAt(atApi, decorateMethod, blockHash) {
    // eslint-disable-next-line @typescript-eslint/no-unsafe-return
    return decorateMethod(calls => this._rpcCore.state.queryStorageAt(calls.map(args => {
      if (Array.isArray(args)) {
        const {
          creator
        } = getAtQueryFn(atApi, args[0].creator);
        return creator.meta.type.isPlain ? [creator] : creator.meta.type.asMap.hashers.length === 1 ? [creator, args.slice(1)] : [creator, ...args.slice(1)];
      }

      return [getAtQueryFn(atApi, args.creator).creator];
    }), blockHash));
  }

  _decorateExtrinsics({
    tx
  }, decorateMethod) {
    const result = (0,_submittable_index_js__WEBPACK_IMPORTED_MODULE_17__.createSubmittable)(this._type, this._rx, decorateMethod);

    const lazySection = section => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_16__.lazyMethods)({}, Object.keys(tx[section]), method => this._decorateExtrinsicEntry(tx[section][method], result));

    const sections = Object.keys(tx);

    for (let i = 0; i < sections.length; i++) {
      (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_16__.lazyMethod)(result, sections[i], lazySection);
    }

    return result;
  }

  _decorateExtrinsicEntry(method, creator) {
    const decorated = (...params) => creator(method(...params)); // pass through the `.is`


    decorated.is = other => method.is(other); // eslint-disable-next-line @typescript-eslint/no-unsafe-return


    return this._decorateFunctionMeta(method, decorated);
  }

  _decorateStorage({
    query,
    registry
  }, decorateMethod, blockHash) {
    const result = {};

    const lazySection = section => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_16__.lazyMethods)({}, Object.keys(query[section]), method => blockHash ? this._decorateStorageEntryAt(registry, query[section][method], decorateMethod, blockHash) : this._decorateStorageEntry(query[section][method], decorateMethod));

    const sections = Object.keys(query);

    for (let i = 0; i < sections.length; i++) {
      (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_16__.lazyMethod)(result, sections[i], lazySection);
    }

    return result;
  }

  _decorateStorageEntry(creator, decorateMethod) {
    const getArgs = (args, registry) => (0,_util_validate_js__WEBPACK_IMPORTED_MODULE_18__.extractStorageArgs)(registry || (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _registry)[_registry], creator, args);

    const getQueryAt = blockHash => (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.from)(this.at(blockHash)).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_8__.map)(api => getAtQueryFn(api, creator))); // Disable this where it occurs for each field we are decorating

    /* eslint-disable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment */


    const decorated = this._decorateStorageCall(creator, decorateMethod);

    decorated.creator = creator;
    decorated.at = decorateMethod((blockHash, ...args) => getQueryAt(blockHash).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_19__.switchMap)(q => q(...args))));
    decorated.hash = decorateMethod((...args) => this._rpcCore.state.getStorageHash(getArgs(args)));

    decorated.is = key => key.section === creator.section && key.method === creator.method;

    decorated.key = (...args) => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_20__.u8aToHex)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_21__.compactStripLength)(creator(...args))[1]);

    decorated.keyPrefix = (...args) => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_20__.u8aToHex)(creator.keyPrefix(...args));

    decorated.range = decorateMethod((range, ...args) => this._decorateStorageRange(decorated, args, range));
    decorated.size = decorateMethod((...args) => this._rpcCore.state.getStorageSize(getArgs(args)));
    decorated.sizeAt = decorateMethod((blockHash, ...args) => getQueryAt(blockHash).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_19__.switchMap)(q => this._rpcCore.state.getStorageSize(getArgs(args, q.creator.meta.registry), blockHash)))); // .keys() & .entries() only available on map types

    if (creator.iterKey && creator.meta.type.isMap) {
      decorated.entries = decorateMethod((0,_polkadot_rpc_core__WEBPACK_IMPORTED_MODULE_22__.memo)((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _instanceId)[_instanceId], (...args) => this._retrieveMapEntries(creator, null, args)));
      decorated.entriesAt = decorateMethod((0,_polkadot_rpc_core__WEBPACK_IMPORTED_MODULE_22__.memo)((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _instanceId)[_instanceId], (blockHash, ...args) => getQueryAt(blockHash).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_19__.switchMap)(q => this._retrieveMapEntries(q.creator, blockHash, args)))));
      decorated.entriesPaged = decorateMethod((0,_polkadot_rpc_core__WEBPACK_IMPORTED_MODULE_22__.memo)((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _instanceId)[_instanceId], opts => this._retrieveMapEntriesPaged(creator, opts)));
      decorated.keys = decorateMethod((0,_polkadot_rpc_core__WEBPACK_IMPORTED_MODULE_22__.memo)((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _instanceId)[_instanceId], (...args) => this._retrieveMapKeys(creator, null, args)));
      decorated.keysAt = decorateMethod((0,_polkadot_rpc_core__WEBPACK_IMPORTED_MODULE_22__.memo)((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _instanceId)[_instanceId], (blockHash, ...args) => getQueryAt(blockHash).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_19__.switchMap)(q => this._retrieveMapKeys(q.creator, blockHash, args)))));
      decorated.keysPaged = decorateMethod((0,_polkadot_rpc_core__WEBPACK_IMPORTED_MODULE_22__.memo)((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _instanceId)[_instanceId], opts => this._retrieveMapKeysPaged(creator, opts)));
    }

    if (this.supportMulti && creator.meta.type.isMap) {
      // When using double map storage function, user need to pass double map key as an array
      decorated.multi = decorateMethod(args => creator.meta.type.asMap.hashers.length === 1 ? this._retrieveMulti(args.map(a => [creator, [a]])) : this._retrieveMulti(args.map(a => [creator, a])));
    }
    /* eslint-enable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment */


    return this._decorateFunctionMeta(creator, decorated);
  }

  _decorateStorageEntryAt(registry, creator, decorateMethod, blockHash) {
    const getArgs = args => (0,_util_validate_js__WEBPACK_IMPORTED_MODULE_18__.extractStorageArgs)(registry, creator, args); // Disable this where it occurs for each field we are decorating

    /* eslint-disable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment */


    const decorated = decorateMethod((...args) => this._rpcCore.state.getStorage(getArgs(args), blockHash));
    decorated.creator = creator;
    decorated.hash = decorateMethod((...args) => this._rpcCore.state.getStorageHash(getArgs(args), blockHash));

    decorated.is = key => key.section === creator.section && key.method === creator.method;

    decorated.key = (...args) => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_20__.u8aToHex)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_21__.compactStripLength)(creator(creator.meta.type.isPlain ? undefined : args))[1]);

    decorated.keyPrefix = (...keys) => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_20__.u8aToHex)(creator.keyPrefix(...keys));

    decorated.size = decorateMethod((...args) => this._rpcCore.state.getStorageSize(getArgs(args), blockHash)); // .keys() & .entries() only available on map types

    if (creator.iterKey && creator.meta.type.isMap) {
      decorated.entries = decorateMethod((0,_polkadot_rpc_core__WEBPACK_IMPORTED_MODULE_22__.memo)((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _instanceId)[_instanceId], (...args) => this._retrieveMapEntries(creator, blockHash, args)));
      decorated.keys = decorateMethod((0,_polkadot_rpc_core__WEBPACK_IMPORTED_MODULE_22__.memo)((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _instanceId)[_instanceId], (...args) => this._retrieveMapKeys(creator, blockHash, args)));
    }
    /* eslint-enable @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment */


    return this._decorateFunctionMeta(creator, decorated);
  } // Decorate the base storage call. In the case or rxjs or promise-without-callback (await)
  // we make a subscription, alternatively we push this through a single-shot query


  _decorateStorageCall(creator, decorateMethod) {
    return decorateMethod((...args) => {
      return this.hasSubscriptions ? this._rpcCore.state.subscribeStorage([(0,_util_validate_js__WEBPACK_IMPORTED_MODULE_18__.extractStorageArgs)((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _registry)[_registry], creator, args)]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_8__.map)(([data]) => data) // extract first/only result from list
      ) : this._rpcCore.state.getStorage((0,_util_validate_js__WEBPACK_IMPORTED_MODULE_18__.extractStorageArgs)((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _registry)[_registry], creator, args));
    }, {
      methodName: creator.method,
      overrideNoSub: (...args) => this._rpcCore.state.getStorage((0,_util_validate_js__WEBPACK_IMPORTED_MODULE_18__.extractStorageArgs)((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _registry)[_registry], creator, args))
    });
  }

  _decorateStorageRange(decorated, args, range) {
    const outputType = (0,_polkadot_types__WEBPACK_IMPORTED_MODULE_23__.unwrapStorageType)((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _registry)[_registry], decorated.creator.meta.type, decorated.creator.meta.modifier.isOptional);
    return this._rpcCore.state.queryStorage([decorated.key(...args)], ...range).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_8__.map)(result => result.map(([blockHash, [value]]) => [blockHash, this.createType(outputType, value.isSome ? value.unwrap().toHex() : undefined)])));
  } // retrieve a set of values for a specific set of keys - here we chunk the keys into PAGE_SIZE sizes


  _retrieveMulti(keys) {
    if (!keys.length) {
      return (0,rxjs__WEBPACK_IMPORTED_MODULE_24__.of)([]);
    }

    const queryCall = this.hasSubscriptions ? this._rpcCore.state.subscribeStorage : this._rpcCore.state.queryStorageAt;
    return (0,rxjs__WEBPACK_IMPORTED_MODULE_25__.combineLatest)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_26__.arrayChunk)(keys, PAGE_SIZE_V).map(keys => queryCall(keys))).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_8__.map)(_polkadot_util__WEBPACK_IMPORTED_MODULE_27__.arrayFlatten));
  }

  _retrieveMapKeys({
    iterKey,
    meta,
    method,
    section
  }, at, args) {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.assert)(iterKey && meta.type.isMap, 'keys can only be retrieved on maps');
    const headKey = iterKey(...args).toHex();
    const startSubject = new rxjs__WEBPACK_IMPORTED_MODULE_11__.BehaviorSubject(headKey);
    const queryCall = at ? startKey => this._rpcCore.state.getKeysPaged(headKey, PAGE_SIZE_K, startKey, at) : startKey => this._rpcCore.state.getKeysPaged(headKey, PAGE_SIZE_K, startKey);

    const setMeta = key => key.setMeta(meta, section, method);

    return startSubject.pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_19__.switchMap)(queryCall), (0,rxjs__WEBPACK_IMPORTED_MODULE_8__.map)(keys => keys.map(setMeta)), (0,rxjs__WEBPACK_IMPORTED_MODULE_28__.tap)(keys => {
      setTimeout(() => {
        keys.length === PAGE_SIZE_K ? startSubject.next(keys[PAGE_SIZE_K - 1].toHex()) : startSubject.complete();
      }, 0);
    }), (0,rxjs__WEBPACK_IMPORTED_MODULE_29__.toArray)(), // toArray since we want to startSubject to be completed
    (0,rxjs__WEBPACK_IMPORTED_MODULE_8__.map)(_polkadot_util__WEBPACK_IMPORTED_MODULE_27__.arrayFlatten));
  }

  _retrieveMapKeysPaged({
    iterKey,
    meta,
    method,
    section
  }, opts) {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.assert)(iterKey && meta.type.isMap, 'keys can only be retrieved on maps');
    const headKey = iterKey(...opts.args).toHex();

    const setMeta = key => key.setMeta(meta, section, method);

    return this._rpcCore.state.getKeysPaged(headKey, opts.pageSize, opts.startKey || headKey).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_8__.map)(keys => keys.map(setMeta)));
  }

  _retrieveMapEntries(entry, at, args) {
    const query = at ? keyset => this._rpcCore.state.queryStorageAt(keyset, at) : keyset => this._rpcCore.state.queryStorageAt(keyset);
    return this._retrieveMapKeys(entry, at, args).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_19__.switchMap)(keys => keys.length ? (0,rxjs__WEBPACK_IMPORTED_MODULE_25__.combineLatest)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_26__.arrayChunk)(keys, PAGE_SIZE_V).map(query)).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_8__.map)(valsArr => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_27__.arrayFlatten)(valsArr).map((value, index) => [keys[index], value]))) : (0,rxjs__WEBPACK_IMPORTED_MODULE_24__.of)([])));
  }

  _retrieveMapEntriesPaged(entry, opts) {
    return this._retrieveMapKeysPaged(entry, opts).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_19__.switchMap)(keys => keys.length ? this._rpcCore.state.queryStorageAt(keys).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_8__.map)(valsArr => valsArr.map((value, index) => [keys[index], value]))) : (0,rxjs__WEBPACK_IMPORTED_MODULE_24__.of)([])));
  }

  _decorateDeriveRx(decorateMethod) {
    var _this$_runtimeVersion, _this$_options$typesB, _this$_options$typesB2, _this$_options$typesB3;

    const specName = (_this$_runtimeVersion = this._runtimeVersion) === null || _this$_runtimeVersion === void 0 ? void 0 : _this$_runtimeVersion.specName.toString(); // Pull in derive from api-derive

    const available = (0,_polkadot_api_derive__WEBPACK_IMPORTED_MODULE_30__.getAvailableDerives)((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _instanceId)[_instanceId], this._rx, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_31__.objectSpread)({}, this._options.derives, (_this$_options$typesB = this._options.typesBundle) === null || _this$_options$typesB === void 0 ? void 0 : (_this$_options$typesB2 = _this$_options$typesB.spec) === null || _this$_options$typesB2 === void 0 ? void 0 : (_this$_options$typesB3 = _this$_options$typesB2[specName || '']) === null || _this$_options$typesB3 === void 0 ? void 0 : _this$_options$typesB3.derives));
    return (0,_util_decorate_js__WEBPACK_IMPORTED_MODULE_32__.decorateDeriveSections)(decorateMethod, available);
  }

  _decorateDerive(decorateMethod) {
    return (0,_util_decorate_js__WEBPACK_IMPORTED_MODULE_32__.decorateDeriveSections)(decorateMethod, this._rx.derive);
  }
  /**
   * Put the `this.onCall` function of ApiRx here, because it is needed by
   * `api._rx`.
   */


}

/***/ }),
/* 301 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Events": () => (/* binding */ Events)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);
/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(284);


// Copyright 2017-2021 @polkadot/api authors & contributors
// SPDX-License-Identifier: Apache-2.0


var _eventemitter = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("eventemitter");

class Events {
  constructor() {
    Object.defineProperty(this, _eventemitter, {
      writable: true,
      value: new eventemitter3__WEBPACK_IMPORTED_MODULE_2__()
    });
  }

  emit(type, ...args) {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _eventemitter)[_eventemitter].emit(type, ...args);
  }
  /**
   * @description Attach an eventemitter handler to listen to a specific event
   *
   * @param type The type of event to listen to. Available events are `connected`, `disconnected`, `ready` and `error`
   * @param handler The callback to be called when the event fires. Depending on the event type, it could fire with additional arguments.
   *
   * @example
   * <BR>
   *
   * ```javascript
   * api.on('connected', (): void => {
   *   console.log('API has been connected to the endpoint');
   * });
   *
   * api.on('disconnected', (): void => {
   *   console.log('API has been disconnected from the endpoint');
   * });
   * ```
   */


  on(type, handler) {
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _eventemitter)[_eventemitter].on(type, handler);

    return this;
  }
  /**
   * @description Remove the given eventemitter handler
   *
   * @param type The type of event the callback was attached to. Available events are `connected`, `disconnected`, `ready` and `error`
   * @param handler The callback to unregister.
   *
   * @example
   * <BR>
   *
   * ```javascript
   * const handler = (): void => {
   *  console.log('Connected !);
   * };
   *
   * // Start listening
   * api.on('connected', handler);
   *
   * // Stop listening
   * api.off('connected', handler);
   * ```
   */


  off(type, handler) {
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _eventemitter)[_eventemitter].removeListener(type, handler);

    return this;
  }
  /**
   * @description Attach an one-time eventemitter handler to listen to a specific event
   *
   * @param type The type of event to listen to. Available events are `connected`, `disconnected`, `ready` and `error`
   * @param handler The callback to be called when the event fires. Depending on the event type, it could fire with additional arguments.
   *
   * @example
   * <BR>
   *
   * ```javascript
   * api.once('connected', (): void => {
   *   console.log('API has been connected to the endpoint');
   * });
   *
   * api.once('disconnected', (): void => {
   *   console.log('API has been disconnected from the endpoint');
   * });
   * ```
   */


  once(type, handler) {
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _eventemitter)[_eventemitter].once(type, handler);

    return this;
  }

}

/***/ }),
/* 302 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TypeRegistry": () => (/* binding */ TypeRegistry)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(285);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(303);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(304);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(122);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(369);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(81);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(169);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(292);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(240);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(327);
/* harmony import */ var _codec_DoNotConstruct_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(567);
/* harmony import */ var _codec_Json_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(361);
/* harmony import */ var _codec_Raw_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(410);
/* harmony import */ var _extrinsic_signedExtensions_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(355);
/* harmony import */ var _generic_Event_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(310);
/* harmony import */ var _index_types_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(417);
/* harmony import */ var _interfaces_definitions_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(486);
/* harmony import */ var _metadata_decorate_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(306);
/* harmony import */ var _metadata_decorate_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(323);
/* harmony import */ var _metadata_decorate_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(326);
/* harmony import */ var _metadata_Metadata_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(362);
/* harmony import */ var _metadata_PortableRegistry_index_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(408);
/* harmony import */ var _createClass_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(560);
/* harmony import */ var _createType_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(576);
/* harmony import */ var _lazy_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(305);


// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
















const l = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.logger)('registry');

function valueToString(v) {
  return v.toString();
}

function getFieldArgs(lookup, fields) {
  const args = new Array(fields.length);

  for (let i = 0; i < fields.length; i++) {
    args[i] = lookup.getTypeDef(fields[i].type).type;
  }

  return args;
}

function clearRecord(record) {
  const keys = Object.keys(record);

  for (let i = 0; i < keys.length; i++) {
    delete record[keys[i]];
  }
}

function getVariantStringIdx({
  index
}) {
  return index.toString();
} // create error mapping from metadata


function injectErrors(_, {
  lookup,
  pallets
}, version, result) {
  clearRecord(result);

  for (let i = 0; i < pallets.length; i++) {
    const {
      errors,
      index,
      name
    } = pallets[i];

    if (errors.isSome) {
      const sectionName = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.stringCamelCase)(name);
      (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.lazyMethod)(result, version >= 12 ? index.toNumber() : i, () => (0,_lazy_js__WEBPACK_IMPORTED_MODULE_5__.lazyVariants)(lookup, errors.unwrap(), getVariantStringIdx, ({
        docs,
        fields,
        index,
        name
      }) => ({
        args: getFieldArgs(lookup, fields),
        docs: docs.map(valueToString),
        fields,
        index: index.toNumber(),
        method: name.toString(),
        name: name.toString(),
        section: sectionName
      })));
    }
  }
} // create event classes from metadata


function injectEvents(registry, {
  lookup,
  pallets
}, version, result) {
  const filtered = pallets.filter(_metadata_decorate_index_js__WEBPACK_IMPORTED_MODULE_6__.filterEventsSome);
  clearRecord(result);

  for (let i = 0; i < filtered.length; i++) {
    const {
      events,
      index,
      name
    } = filtered[i];
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.lazyMethod)(result, version >= 12 ? index.toNumber() : i, () => (0,_lazy_js__WEBPACK_IMPORTED_MODULE_5__.lazyVariants)(lookup, events.unwrap(), getVariantStringIdx, variant => {
      const meta = registry.createType('EventMetadataLatest', (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_7__.objectSpread)({}, variant, {
        args: getFieldArgs(lookup, variant.fields)
      }));
      return class extends _generic_Event_js__WEBPACK_IMPORTED_MODULE_8__.GenericEventData {
        constructor(registry, value) {
          super(registry, value, meta, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.stringCamelCase)(name), variant.name.toString());
        }

      };
    }));
  }
} // create extrinsic mapping from metadata


function injectExtrinsics(registry, {
  lookup,
  pallets
}, version, result) {
  const filtered = pallets.filter(_metadata_decorate_index_js__WEBPACK_IMPORTED_MODULE_9__.filterCallsSome);
  clearRecord(result);

  for (let i = 0; i < filtered.length; i++) {
    const {
      calls,
      index,
      name
    } = filtered[i];
    const sectionIndex = version >= 12 ? index.toNumber() : i;
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.lazyMethod)(result, sectionIndex, () => (0,_lazy_js__WEBPACK_IMPORTED_MODULE_5__.lazyVariants)(lookup, calls.unwrap(), getVariantStringIdx, variant => (0,_metadata_decorate_index_js__WEBPACK_IMPORTED_MODULE_9__.createCallFunction)(registry, lookup, variant, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.stringCamelCase)(name), sectionIndex)));
  }
} // extract additional properties from the metadata


function extractProperties(registry, metadata) {
  var _constants$system;

  const original = registry.getChainProperties();
  const constants = (0,_metadata_decorate_index_js__WEBPACK_IMPORTED_MODULE_10__.decorateConstants)(registry, metadata.asLatest, metadata.version);
  const ss58Format = (_constants$system = constants.system) === null || _constants$system === void 0 ? void 0 : _constants$system.ss58Prefix;

  if (!ss58Format) {
    return original;
  }

  const {
    tokenDecimals,
    tokenSymbol
  } = original || {};
  return registry.createType('ChainProperties', {
    ss58Format,
    tokenDecimals,
    tokenSymbol
  });
}

var _classes = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("classes");

var _definitions = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("definitions");

var _lookup = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("lookup");

var _metadata = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("metadata");

var _metadataVersion = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("metadataVersion");

var _metadataCalls = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("metadataCalls");

var _metadataErrors = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("metadataErrors");

var _metadataEvents = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("metadataEvents");

var _unknownTypes = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("unknownTypes");

var _chainProperties = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("chainProperties");

var _hasher = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("hasher");

var _knownDefaults = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("knownDefaults");

var _knownDefinitions = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("knownDefinitions");

var _knownTypes = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("knownTypes");

var _signedExtensions = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("signedExtensions");

var _userExtensions = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("userExtensions");

class TypeRegistry {
  constructor(createdAtHash) {
    Object.defineProperty(this, _classes, {
      writable: true,
      value: new Map()
    });
    Object.defineProperty(this, _definitions, {
      writable: true,
      value: new Map()
    });
    Object.defineProperty(this, _lookup, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _metadata, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _metadataVersion, {
      writable: true,
      value: 0
    });
    Object.defineProperty(this, _metadataCalls, {
      writable: true,
      value: {}
    });
    Object.defineProperty(this, _metadataErrors, {
      writable: true,
      value: {}
    });
    Object.defineProperty(this, _metadataEvents, {
      writable: true,
      value: {}
    });
    Object.defineProperty(this, _unknownTypes, {
      writable: true,
      value: new Map()
    });
    Object.defineProperty(this, _chainProperties, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _hasher, {
      writable: true,
      value: _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_11__.blake2AsU8a
    });
    Object.defineProperty(this, _knownDefaults, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _knownDefinitions, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _knownTypes, {
      writable: true,
      value: {}
    });
    Object.defineProperty(this, _signedExtensions, {
      writable: true,
      value: _extrinsic_signedExtensions_index_js__WEBPACK_IMPORTED_MODULE_12__.fallbackExtensions
    });
    Object.defineProperty(this, _userExtensions, {
      writable: true,
      value: void 0
    });
    this.createdAtHash = void 0;
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _knownDefaults)[_knownDefaults] = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_7__.objectSpread)({
      Json: _codec_Json_js__WEBPACK_IMPORTED_MODULE_13__.Json,
      Metadata: _metadata_Metadata_js__WEBPACK_IMPORTED_MODULE_14__.Metadata,
      PortableRegistry: _metadata_PortableRegistry_index_js__WEBPACK_IMPORTED_MODULE_15__.PortableRegistry,
      Raw: _codec_Raw_js__WEBPACK_IMPORTED_MODULE_16__.Raw
    }, _index_types_js__WEBPACK_IMPORTED_MODULE_17__);
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _knownDefinitions)[_knownDefinitions] = _interfaces_definitions_js__WEBPACK_IMPORTED_MODULE_18__;
    this.init();

    if (createdAtHash) {
      this.createdAtHash = this.createType('Hash', createdAtHash);
    }
  }

  init() {
    // start clean
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _classes)[_classes] = new Map();
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _definitions)[_definitions] = new Map();
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _unknownTypes)[_unknownTypes] = new Map();
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _knownTypes)[_knownTypes] = {}; // register know, first classes then on-demand-created definitions

    this.register((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _knownDefaults)[_knownDefaults]);
    const allKnown = Object.values((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _knownDefinitions)[_knownDefinitions]);

    for (let i = 0; i < allKnown.length; i++) {
      this.register(allKnown[i].types);
    }

    return this;
  }

  get chainDecimals() {
    var _classPrivateFieldLoo;

    if ((_classPrivateFieldLoo = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _chainProperties)[_chainProperties]) !== null && _classPrivateFieldLoo !== void 0 && _classPrivateFieldLoo.tokenDecimals.isSome) {
      const allDecimals = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _chainProperties)[_chainProperties].tokenDecimals.unwrap();

      if (allDecimals.length) {
        return allDecimals.map(b => b.toNumber());
      }
    }

    return [12];
  }

  get chainSS58() {
    var _classPrivateFieldLoo2;

    return (_classPrivateFieldLoo2 = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _chainProperties)[_chainProperties]) !== null && _classPrivateFieldLoo2 !== void 0 && _classPrivateFieldLoo2.ss58Format.isSome ? (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _chainProperties)[_chainProperties].ss58Format.unwrap().toNumber() : undefined;
  }

  get chainTokens() {
    var _classPrivateFieldLoo3;

    if ((_classPrivateFieldLoo3 = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _chainProperties)[_chainProperties]) !== null && _classPrivateFieldLoo3 !== void 0 && _classPrivateFieldLoo3.tokenSymbol.isSome) {
      const allTokens = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _chainProperties)[_chainProperties].tokenSymbol.unwrap();

      if (allTokens.length) {
        return allTokens.map(valueToString);
      }
    }

    return [_polkadot_util__WEBPACK_IMPORTED_MODULE_19__.formatBalance.getDefaults().unit];
  }
  /**
   * @description Returns tru if the type is in a Compat format
   */


  isLookupType(value) {
    return /Lookup\d+$/.test(value);
  }
  /**
   * @description Creates a lookup string from the supplied id
   */


  createLookupType(lookupId) {
    return `Lookup${lookupId.toString()}`;
  }

  get knownTypes() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _knownTypes)[_knownTypes];
  }

  get lookup() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _lookup)[_lookup] || this.metadata.lookup;
  }

  get metadata() {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_20__.assert)((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _metadata)[_metadata], 'Metadata has not been set on this registry');
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _metadata)[_metadata];
  }

  get unknownTypes() {
    return [...(0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _unknownTypes)[_unknownTypes].keys()];
  }

  get signedExtensions() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _signedExtensions)[_signedExtensions];
  }
  /**
   * @describe Creates an instance of the class
   */


  createClass(type) {
    return (0,_createClass_js__WEBPACK_IMPORTED_MODULE_21__.createClass)(this, type);
  }
  /**
   * @description Creates an instance of a type as registered
   */


  createType(type, ...params) {
    return this.createTypeUnsafe(type, params);
  }
  /**
   * @description Creates an instance of a type as registered
   */


  createTypeUnsafe(type, params, options) {
    return (0,_createType_js__WEBPACK_IMPORTED_MODULE_22__.createTypeUnsafe)(this, type, params, options);
  } // find a specific call


  findMetaCall(callIndex) {
    const [section, method] = [callIndex[0], callIndex[1]];
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_20__.assertReturn)((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _metadataCalls)[_metadataCalls][`${section}`] && (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _metadataCalls)[_metadataCalls][`${section}`][`${method}`], () => `findMetaCall: Unable to find Call with index [${section}, ${method}]/[${callIndex.toString()}]`);
  } // finds an error


  findMetaError(errorIndex) {
    const [section, method] = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_23__.isU8a)(errorIndex) ? [errorIndex[0], errorIndex[1]] : [errorIndex.index.toNumber(), errorIndex.error.toNumber()];
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_20__.assertReturn)((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _metadataErrors)[_metadataErrors][`${section}`] && (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _metadataErrors)[_metadataErrors][`${section}`][`${method}`], () => `findMetaError: Unable to find Error with index [${section}, ${method}]/[${errorIndex.toString()}]`);
  }

  findMetaEvent(eventIndex) {
    const [section, method] = [eventIndex[0], eventIndex[1]];
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_20__.assertReturn)((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _metadataEvents)[_metadataEvents][`${section}`] && (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _metadataEvents)[_metadataEvents][`${section}`][`${method}`], () => `findMetaEvent: Unable to find Event with index [${section}, ${method}]/[${eventIndex.toString()}]`);
  }

  get(name, withUnknown, knownTypeDef) {
    let Type = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _classes)[_classes].get(name); // we have not already created the type, attempt it


    if (!Type) {
      const definition = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _definitions)[_definitions].get(name);

      let BaseType; // we have a definition, so create the class now (lazily)

      if (definition) {
        BaseType = (0,_createClass_js__WEBPACK_IMPORTED_MODULE_21__.createClass)(this, definition);
      } else if (knownTypeDef) {
        BaseType = (0,_createClass_js__WEBPACK_IMPORTED_MODULE_21__.constructTypeClass)(this, knownTypeDef);
      } else if (withUnknown) {
        l.warn(`Unable to resolve type ${name}, it will fail on construction`);

        (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _unknownTypes)[_unknownTypes].set(name, true);

        BaseType = _codec_DoNotConstruct_js__WEBPACK_IMPORTED_MODULE_24__.DoNotConstruct["with"](name);
      }

      if (BaseType) {
        // NOTE If we didn't extend here, we would have strange artifacts. An example is
        // Balance, with this, new Balance() instanceof u128 is true, but Balance !== u128
        // Additionally, we now pass through the registry, which is a link to ourselves
        Type = class extends BaseType {};

        (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _classes)[_classes].set(name, Type);
      }
    }

    return Type;
  }

  getChainProperties() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _chainProperties)[_chainProperties];
  }

  getClassName(Type) {
    // we cannot rely on export order (anymore, since babel/core 7.15.8), so in the case of
    // items such as u32 & U32, we get the lowercase versions here... not quite as optimal
    // (previously this used to be a simple find & return)
    const names = [];

    for (const [name, Clazz] of (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _classes)[_classes].entries()) {
      if (Type === Clazz) {
        names.push(name);
      }
    } // both sort and reverse are done in-place


    names.sort().reverse();
    return names.length ? names[0] : undefined;
  }

  getDefinition(typeName) {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _definitions)[_definitions].get(typeName);
  }

  getModuleInstances(specName, moduleName) {
    var _classPrivateFieldLoo4, _classPrivateFieldLoo5, _classPrivateFieldLoo6, _classPrivateFieldLoo7, _classPrivateFieldLoo8;

    return (_classPrivateFieldLoo4 = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _knownTypes)[_knownTypes]) === null || _classPrivateFieldLoo4 === void 0 ? void 0 : (_classPrivateFieldLoo5 = _classPrivateFieldLoo4.typesBundle) === null || _classPrivateFieldLoo5 === void 0 ? void 0 : (_classPrivateFieldLoo6 = _classPrivateFieldLoo5.spec) === null || _classPrivateFieldLoo6 === void 0 ? void 0 : (_classPrivateFieldLoo7 = _classPrivateFieldLoo6[specName]) === null || _classPrivateFieldLoo7 === void 0 ? void 0 : (_classPrivateFieldLoo8 = _classPrivateFieldLoo7.instances) === null || _classPrivateFieldLoo8 === void 0 ? void 0 : _classPrivateFieldLoo8[moduleName];
  }

  getOrThrow(name, msg) {
    const Clazz = this.get(name);
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_20__.assert)(Clazz, msg || `type ${name} not found`);
    return Clazz;
  }

  getOrUnknown(name) {
    return this.get(name, true);
  }

  getSignedExtensionExtra() {
    return (0,_extrinsic_signedExtensions_index_js__WEBPACK_IMPORTED_MODULE_12__.expandExtensionTypes)((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _signedExtensions)[_signedExtensions], 'payload', (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _userExtensions)[_userExtensions]);
  }

  getSignedExtensionTypes() {
    return (0,_extrinsic_signedExtensions_index_js__WEBPACK_IMPORTED_MODULE_12__.expandExtensionTypes)((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _signedExtensions)[_signedExtensions], 'extrinsic', (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _userExtensions)[_userExtensions]);
  }

  hasClass(name) {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _classes)[_classes].has(name);
  }

  hasDef(name) {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _definitions)[_definitions].has(name);
  }

  hasType(name) {
    return !(0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _unknownTypes)[_unknownTypes].get(name) && (this.hasClass(name) || this.hasDef(name));
  }

  hash(data) {
    return this.createType('CodecHash', (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _hasher)[_hasher](data));
  }

  // eslint-disable-next-line no-dupe-class-members
  register(arg1, arg2) {
    // NOTE Constructors appear as functions here
    if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_25__.isFunction)(arg1)) {
      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _classes)[_classes].set(arg1.name, arg1);
    } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_26__.isString)(arg1)) {
      (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_20__.assert)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_25__.isFunction)(arg2), () => `Expected class definition passed to '${arg1}' registration`);
      (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_20__.assert)(arg1 !== arg2.toString(), () => `Unable to register circular ${arg1} === ${arg1}`);

      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _classes)[_classes].set(arg1, arg2);
    } else {
      this._registerObject(arg1);
    }
  }

  _registerObject(obj) {
    const entries = Object.entries(obj);

    for (let e = 0; e < entries.length; e++) {
      const [name, type] = entries[e];

      if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_25__.isFunction)(type)) {
        // This _looks_ a bit funny, but `typeof Clazz === 'function'
        (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _classes)[_classes].set(name, type);
      } else {
        const def = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_26__.isString)(type) ? type : (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_27__.stringify)(type);
        (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_20__.assert)(name !== def, () => `Unable to register circular ${name} === ${def}`); // we already have this type, remove the classes registered for it

        if ((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _classes)[_classes].has(name)) {
          (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _classes)[_classes].delete(name);
        }

        (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _definitions)[_definitions].set(name, def);
      }
    }
  } // sets the chain properties


  setChainProperties(properties) {
    if (properties) {
      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _chainProperties)[_chainProperties] = properties;
    }
  }

  setHasher(hasher) {
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _hasher)[_hasher] = hasher || _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_11__.blake2AsU8a;
  }

  setKnownTypes(knownTypes) {
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _knownTypes)[_knownTypes] = knownTypes;
  }

  setLookup(lookup) {
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _lookup)[_lookup] = lookup;
  } // sets the metadata


  setMetadata(metadata, signedExtensions, userExtensions) {
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _metadata)[_metadata] = metadata.asLatest;
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _metadataVersion)[_metadataVersion] = metadata.version;
    injectExtrinsics(this, (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _metadata)[_metadata], (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _metadataVersion)[_metadataVersion], (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _metadataCalls)[_metadataCalls]);
    injectErrors(this, (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _metadata)[_metadata], (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _metadataVersion)[_metadataVersion], (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _metadataErrors)[_metadataErrors]);
    injectEvents(this, (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _metadata)[_metadata], (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _metadataVersion)[_metadataVersion], (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _metadataEvents)[_metadataEvents]); // setup the available extensions

    this.setSignedExtensions(signedExtensions || ((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _metadata)[_metadata].extrinsic.version.gt(_polkadot_util__WEBPACK_IMPORTED_MODULE_28__.BN_ZERO) // FIXME Use the extension and their injected types
    ? (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _metadata)[_metadata].extrinsic.signedExtensions.map(({
      identifier
    }) => identifier.toString()) : _extrinsic_signedExtensions_index_js__WEBPACK_IMPORTED_MODULE_12__.fallbackExtensions), userExtensions); // setup the chain properties with format overrides

    this.setChainProperties(extractProperties(this, metadata));
  } // sets the available signed extensions


  setSignedExtensions(signedExtensions = _extrinsic_signedExtensions_index_js__WEBPACK_IMPORTED_MODULE_12__.fallbackExtensions, userExtensions) {
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _signedExtensions)[_signedExtensions] = signedExtensions;
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _userExtensions)[_userExtensions] = userExtensions;
    const unknown = (0,_extrinsic_signedExtensions_index_js__WEBPACK_IMPORTED_MODULE_12__.findUnknownExtensions)((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _signedExtensions)[_signedExtensions], (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _userExtensions)[_userExtensions]);

    if (unknown.length) {
      l.warn(`Unknown signed extensions ${unknown.join(', ')} found, treating them as no-effect`);
    }
  }

}

/***/ }),
/* 303 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "stringCamelCase": () => (/* binding */ stringCamelCase),
/* harmony export */   "stringPascalCase": () => (/* binding */ stringPascalCase)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
const RE_WHITE = /[-_., ]+/g;
const RE_WORDS = /(?:^\w|[A-Z]|\b\w)/g;
const RE_JOIN = /\s/g; // Adapted from https://stackoverflow.com/a/2970667
//
// this is not as optimal as the original (we split into multiple), however
// it does pass the tests (which the original doesn't) and it is still 10+x
// improvement over the original camelcase npm package (at running)
//
// original: 20.88 μs/op
//     this:  1.67 μs/op
//
// Caveat of this: only Ascii, but acceptable for the intended usecase

function converter(fn) {
  return value => value.toString().replace(RE_WHITE, ' ').replace(RE_WORDS, fn).replace(RE_JOIN, '');
}
/**
 * @name stringCamelCase
 * @summary Convert a dash/dot/underscore/space separated Ascii string/String to camelCase
 */


const stringCamelCase = converter((w, i) => i ? w.toUpperCase() : w.toLowerCase());
/**
 * @name stringPascalCase
 * @summary Convert a dash/dot/underscore/space separated Ascii string/String to PascalCase
 */

const stringPascalCase = converter(w => w.toUpperCase());

/***/ }),
/* 304 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "lazyMethod": () => (/* binding */ lazyMethod),
/* harmony export */   "lazyMethods": () => (/* binding */ lazyMethods)
/* harmony export */ });
/* harmony import */ var _is_undefined_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(82);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

function lazyMethod(result, item, creator, getName) {
  const name = getName ? getName(item) : item.toString();
  let value;
  Object.defineProperty(result, name, {
    // This allows for re-configuration with the embedded defineProperty below
    // and ensures that on tested browsers and Node, it _will_ be redefined
    // and thus short-circuited for future access
    configurable: true,
    enumerable: true,
    // Use a function here, we don't want to capture the outer this, i.e.
    // don't use arrow functions in this context since we have a this inside
    get: function () {
      // This check should _always_ be false and unneeded, since we override
      // with a value below ... however we ensure we are quire vigilant against
      // all environment failures, so we are rather be safe than sorry
      if ((0,_is_undefined_js__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(value)) {
        value = creator(item);

        try {
          // re-define the property as a value, next time around this
          // getter will only return the computed value
          Object.defineProperty(this, name, {
            value
          });
        } catch {// ignore any errors, since this _should_ not happen due to
          // the "configurable" property above. But if it ever does
          // from here-on we will be the cached value the next time
          // around (with a very slight dip in performance)
        }
      }

      return value;
    }
  });
}
function lazyMethods(result, items, creator, getName) {
  for (let i = 0; i < items.length; i++) {
    lazyMethod(result, items[i], creator, getName);
  }

  return result;
}

/***/ }),
/* 305 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "lazyVariants": () => (/* binding */ lazyVariants)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(304);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

function lazyVariants(lookup, {
  type
}, getName, creator) {
  const result = {};
  const variants = lookup.getSiType(type).def.asVariant.variants;

  for (let i = 0; i < variants.length; i++) {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.lazyMethod)(result, variants[i], creator, getName);
  }

  return result;
}

/***/ }),
/* 306 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "filterEventsSome": () => (/* binding */ filterEventsSome),
/* harmony export */   "decorateEvents": () => (/* binding */ decorateEvents)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(304);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(303);
/* harmony import */ var _create_lazy_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(305);
/* harmony import */ var _errors_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(309);
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(307);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0




function filterEventsSome({
  events
}) {
  return events.isSome;
}
/** @internal */

function decorateEvents(registry, {
  lookup,
  pallets
}, version) {
  const result = {};
  const filtered = pallets.filter(filterEventsSome);

  for (let i = 0; i < filtered.length; i++) {
    const {
      events,
      index,
      name
    } = filtered[i];
    const sectionIndex = version >= 12 ? index.toNumber() : i;
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.lazyMethod)(result, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.stringCamelCase)(name), () => (0,_create_lazy_js__WEBPACK_IMPORTED_MODULE_2__.lazyVariants)(lookup, events.unwrap(), _util_js__WEBPACK_IMPORTED_MODULE_3__.objectNameToString, variant => ({
      is: eventRecord => sectionIndex === eventRecord.index[0] && variant.index.eq(eventRecord.index[1]),
      meta: registry.createType('EventMetadataLatest', (0,_errors_index_js__WEBPACK_IMPORTED_MODULE_4__.variantToMeta)(lookup, variant))
    })));
  }

  return result;
}

/***/ }),
/* 307 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "objectNameFirstLower": () => (/* binding */ objectNameFirstLower),
/* harmony export */   "objectNameToCamel": () => (/* binding */ objectNameToCamel),
/* harmony export */   "objectNameToString": () => (/* binding */ objectNameToString)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(308);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(303);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

function objectNameFirstLower({
  name
}) {
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.stringLowerFirst)(name);
}
function objectNameToCamel({
  name
}) {
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.stringCamelCase)(name);
}
function objectNameToString({
  name
}) {
  return name.toString();
}

/***/ }),
/* 308 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "stringLowerFirst": () => (/* binding */ stringLowerFirst),
/* harmony export */   "stringUpperFirst": () => (/* binding */ stringUpperFirst)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
function converter(fn) {
  return value => value ? fn(value[0]) + value.slice(1) : '';
}
/**
 * @name stringLowerFirst
 * @summary Lowercase the first letter of a string
 * @description
 * Lowercase the first letter of a string
 * @example
 * <BR>
 *
 * ```javascript
 * import { stringLowerFirst } from '@polkadot/util';
 *
 * stringLowerFirst('ABC'); // => 'aBC'
 * ```
 */


const stringLowerFirst = converter(s => s.toLowerCase());
/**
 * @name stringUpperFirst
 * @summary Uppercase the first letter of a string
 * @description
 * Lowercase the first letter of a string
 * @example
 * <BR>
 *
 * ```javascript
 * import { stringUpperFirst } from '@polkadot/util';
 *
 * stringUpperFirst('abc'); // => 'Abc'
 * ```
 */

const stringUpperFirst = converter(s => s.toUpperCase());

/***/ }),
/* 309 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "variantToMeta": () => (/* binding */ variantToMeta),
/* harmony export */   "decorateErrors": () => (/* binding */ decorateErrors)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(122);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(304);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(303);
/* harmony import */ var _create_lazy_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(305);
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(307);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0



function variantToMeta(lookup, variant) {
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({
    args: variant.fields.map(({
      type
    }) => lookup.getTypeDef(type).type)
  }, variant);
}
/** @internal */

function decorateErrors(registry, {
  lookup,
  pallets
}, version) {
  const result = {};

  for (let i = 0; i < pallets.length; i++) {
    const {
      errors,
      index,
      name
    } = pallets[i];

    if (errors.isSome) {
      const sectionIndex = version >= 12 ? index.toNumber() : i;
      (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.lazyMethod)(result, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.stringCamelCase)(name), () => (0,_create_lazy_js__WEBPACK_IMPORTED_MODULE_3__.lazyVariants)(lookup, errors.unwrap(), _util_js__WEBPACK_IMPORTED_MODULE_4__.objectNameToString, variant => ({
        is: ({
          error,
          index
        }) => index.eq(sectionIndex) && error.eq(variant.index),
        meta: registry.createType('ErrorMetadataLatest', variantToMeta(lookup, variant))
      })));
    }
  }

  return result;
}

/***/ }),
/* 310 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GenericEventData": () => (/* binding */ GenericEventData),
/* harmony export */   "GenericEvent": () => (/* binding */ GenericEvent)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(122);
/* harmony import */ var _codec_Struct_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(319);
/* harmony import */ var _codec_Tuple_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(312);
/* harmony import */ var _primitive_Null_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(311);


// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0





/** @internal */
function decodeEvent(registry, value) {
  if (!value || !value.length) {
    return {
      DataType: _primitive_Null_js__WEBPACK_IMPORTED_MODULE_2__.Null
    };
  }

  const index = value.subarray(0, 2);
  return {
    DataType: registry.findMetaEvent(index),
    value: {
      data: value.subarray(2),
      index
    }
  };
}
/**
 * @name GenericEventData
 * @description
 * Wrapper for the actual data that forms part of an [[Event]]
 */


var _meta = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("meta");

var _method = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("method");

var _section = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("section");

var _typeDef = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("typeDef");

class GenericEventData extends _codec_Tuple_js__WEBPACK_IMPORTED_MODULE_3__.Tuple {
  constructor(registry, value, meta, section = '<unknown>', method = '<unknown>') {
    const fields = (meta === null || meta === void 0 ? void 0 : meta.fields) || [];
    super(registry, fields.map(({
      type
    }) => registry.createLookupType(type)), value);
    Object.defineProperty(this, _meta, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _method, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _section, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _typeDef, {
      writable: true,
      value: void 0
    });
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _meta)[_meta] = meta;
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _method)[_method] = method;
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _section)[_section] = section;
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _typeDef)[_typeDef] = fields.map(({
      type
    }) => registry.lookup.getTypeDef(type));
  }
  /**
   * @description The wrapped [[EventMetadata]]
   */


  get meta() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _meta)[_meta];
  }
  /**
   * @description The method as a string
   */


  get method() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _method)[_method];
  }
  /**
   * @description The section as a string
   */


  get section() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _section)[_section];
  }
  /**
   * @description The [[TypeDef]] for this event
   */


  get typeDef() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _typeDef)[_typeDef];
  }

}
/**
 * @name GenericEvent
 * @description
 * A representation of a system event. These are generated via the [[Metadata]] interfaces and
 * specific to a specific Substrate runtime
 */

class GenericEvent extends _codec_Struct_js__WEBPACK_IMPORTED_MODULE_4__.Struct {
  // Currently we _only_ decode from Uint8Array, since we expect it to
  // be used via EventRecord
  constructor(registry, _value) {
    const {
      DataType,
      value
    } = decodeEvent(registry, _value);
    super(registry, {
      index: 'EventId',
      // eslint-disable-next-line sort-keys
      data: DataType
    }, value);
  }
  /**
   * @description The wrapped [[EventData]]
   */


  get data() {
    return this.get('data');
  }
  /**
   * @description The [[EventId]], identifying the raw event
   */


  get index() {
    return this.get('index');
  }
  /**
   * @description The [[EventMetadata]] with the documentation
   */


  get meta() {
    return this.data.meta;
  }
  /**
   * @description The method string identifying the event
   */


  get method() {
    return this.data.method;
  }
  /**
   * @description The section string identifying the event
   */


  get section() {
    return this.data.section;
  }
  /**
   * @description The [[TypeDef]] for the event
   */


  get typeDef() {
    return this.data.typeDef;
  }
  /**
   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
   */


  toHuman(isExpanded) {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.objectSpread)({
      method: this.method,
      section: this.section
    }, isExpanded ? {
      docs: this.meta.docs.map(d => d.toString())
    } : null, super.toHuman(isExpanded));
  }

}

/***/ }),
/* 311 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Null": () => (/* binding */ Null)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(83);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name Null
 * @description
 * Implements a type that does not contain anything (apart from `null`)
 */

class Null {
  // Added for compatibility reasons, e.g. see Option
  constructor(registry) {
    this.registry = void 0;
    this.createdAtHash = void 0;
    this.initialU8aLength = 0;
    this.registry = registry;
  }
  /**
   * @description The length of the value when encoded as a Uint8Array
   */


  get encodedLength() {
    return 0;
  }
  /**
   * @description returns a hash of the contents
   */


  get hash() {
    throw new Error('.hash is not implemented on Null');
  }
  /**
   * @description Checks if the value is an empty value (always true)
   */


  get isEmpty() {
    return true;
  }
  /**
   * @description Compares the value of the input to see if there is a match
   */


  eq(other) {
    return other instanceof Null || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.isNull)(other);
  }
  /**
   * @description Returns a hex string representation of the value
   */


  toHex() {
    return '0x';
  }
  /**
   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
   */


  toHuman() {
    return this.toJSON();
  }
  /**
   * @description Converts the Object to JSON, typically used for RPC transfers
   */


  toJSON() {
    return null;
  }
  /**
   * @description Returns the base runtime type name for this instance
   */


  toRawType() {
    return 'Null';
  }
  /**
   * @description Returns the string representation of the value
   */


  toString() {
    return '';
  }
  /**
   * @description Encodes the value as a Uint8Array as per the SCALE specifications
   * @param isBare true when the value has none of the type-specific prefixes (internal)
   */
  // eslint-disable-next-line @typescript-eslint/no-unused-vars


  toU8a(isBare) {
    return new Uint8Array();
  }

}

/***/ }),
/* 312 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Tuple": () => (/* binding */ Tuple)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(126);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(81);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(169);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(292);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(197);
/* harmony import */ var _AbstractArray_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(314);
/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(313);
/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(317);
/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(318);


// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0




/** @internal */
function decodeTuple(registry, Classes, value) {
  if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isU8a)(value) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.isHex)(value)) {
    return (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_4__.decodeU8a)(registry, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.u8aToU8a)(value), Classes);
  }

  const Types = Array.isArray(Classes) ? Classes : Object.values(Classes);
  return [Types.map((Type, index) => {
    try {
      const entry = value === null || value === void 0 ? void 0 : value[index];

      if (entry instanceof Type) {
        return entry;
      }

      return new Type(registry, entry);
    } catch (error) {
      throw new Error(`Tuple: failed on ${index}:: ${error.message}`);
    }
  }), 0];
}
/**
 * @name Tuple
 * @description
 * A Tuple defines an anonymous fixed-length array, where each element has its
 * own type. It extends the base JS `Array` object.
 */


var _Types = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("Types");

class Tuple extends _AbstractArray_js__WEBPACK_IMPORTED_MODULE_6__.AbstractArray {
  constructor(registry, Types, value) {
    const Classes = Array.isArray(Types) ? Types.map(t => (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_7__.typeToConstructor)(registry, t)) : (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_8__.isFunction)(Types) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.isString)(Types) ? [(0,_utils_index_js__WEBPACK_IMPORTED_MODULE_7__.typeToConstructor)(registry, Types)] : (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_10__.mapToTypeMap)(registry, Types);
    const [values, decodedLength] = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isU8a)(value) ? (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_4__.decodeU8a)(registry, value, Classes) : decodeTuple(registry, Classes, value);
    super(registry, values, decodedLength);
    Object.defineProperty(this, _Types, {
      writable: true,
      value: void 0
    });
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _Types)[_Types] = Classes;
  }

  static with(Types) {
    return class extends Tuple {
      constructor(registry, value) {
        super(registry, Types, value);
      }

    };
  }
  /**
   * @description The length of the value when encoded as a Uint8Array
   */


  get encodedLength() {
    let total = 0;

    for (let i = 0; i < this.length; i++) {
      total += this[i].encodedLength;
    }

    return total;
  }
  /**
   * @description The types definition of the tuple
   */


  get Types() {
    return Array.isArray((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _Types)[_Types]) ? (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _Types)[_Types].map(T => new T(this.registry).toRawType()) : Object.keys((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _Types)[_Types]);
  }
  /**
   * @description Returns the base runtime type name for this instance
   */


  toRawType() {
    const types = (Array.isArray((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _Types)[_Types]) ? (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _Types)[_Types] : Object.values((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _Types)[_Types])).map(T => this.registry.getClassName(T) || new T(this.registry).toRawType());
    return `(${types.join(',')})`;
  }
  /**
   * @description Returns the string representation of the value
   */


  toString() {
    // Overwrite the default toString representation of Array.
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_11__.stringify)(this.toJSON());
  }
  /**
   * @description Encodes the value as a Uint8Array as per the SCALE specifications
   * @param isBare true when the value has none of the type-specific prefixes (internal)
   */


  toU8a(isBare) {
    const encoded = new Array(this.length);

    for (let i = 0; i < this.length; i++) {
      encoded[i] = this[i].toU8a(isBare);
    }

    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_12__.u8aConcat)(...encoded);
  }

}

/***/ }),
/* 313 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "decodeU8a": () => (/* binding */ decodeU8a),
/* harmony export */   "decodeU8aVec": () => (/* binding */ decodeU8aVec)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(196);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0


function formatFailure(error, type, u8a, key) {
  return `decodeU8a: failed at ${(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToHex)(u8a)}…${key ? ` on ${key}` : ''}${type ? `: ${type}` : ''}:: ${error.message}`;
}

function getRawType(registry, Type) {
  try {
    return new Type(registry).toRawType();
  } catch {
    return null;
  }
}
/**
 * Given an u8a, and an array of Type constructors, decode the u8a against the
 * types, and return an array of decoded values.
 *
 * @param u8a - The u8a to decode.
 * @param result - The result array (will be returned with values pushed)
 * @param types - The array of Constructor to decode the U8a against.
 */


function decodeU8a(registry, u8a, types, withZip) {
  const [Types, keys] = Array.isArray(types) ? [types, []] : [Object.values(types), Object.keys(types)];
  const result = new Array(Types.length);
  let offset = 0;

  for (let i = 0; i < Types.length; i++) {
    try {
      const value = new Types[i](registry, u8a.subarray(offset));
      offset += value.initialU8aLength || value.encodedLength;
      result[i] = withZip ? [keys[i], value] : value;
    } catch (error) {
      throw new Error(formatFailure(error, getRawType(registry, Types[i]), u8a.subarray(offset, offset + 16), keys[i]));
    }
  }

  return [result, offset];
} // Split from decodeU8a since this is specialized to 1 instance ... yes duplication, but
// since we have to do less checks (and these are intensive anyway), much faster

function decodeU8aVec(registry, u8a, start, Type, count) {
  const result = new Array(count);
  let offset = start;

  for (let i = 0; i < count; i++) {
    try {
      const value = new Type(registry, u8a.subarray(offset));
      offset += value.initialU8aLength || value.encodedLength;
      result[i] = value;
    } catch (error) {
      throw new Error(formatFailure(error, getRawType(registry, Type), u8a.subarray(offset, offset + 16)));
    }
  }

  return [result, offset, offset - start];
}

/***/ }),
/* 314 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AbstractArray": () => (/* binding */ AbstractArray)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(239);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(196);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(197);
/* harmony import */ var _utils_compareArray_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(315);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0


/**
 * @name AbstractArray
 * @description
 * This manages codec arrays. It is an extension to Array, providing
 * specific encoding/decoding on top of the base type.
 * @noInheritDoc
 */

class AbstractArray extends Array {
  constructor(registry, values, initialU8aLength) {
    super(values.length); // explicitly set the values here - this removes the need for any extra allocations

    this.registry = void 0;
    this.createdAtHash = void 0;
    this.initialU8aLength = void 0;

    for (let i = 0; i < values.length; i++) {
      this[i] = values[i];
    }

    this.registry = registry;
    this.initialU8aLength = initialU8aLength;
  }
  /**
   * @description The length of the value when encoded as a Uint8Array
   */


  get encodedLength() {
    // We need to loop through all entries since they may have a variable length themselves,
    // e.g. when a Vec or Compact is contained withing, it has a variable length based on data
    let total = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.compactToU8a)(this.length).length;

    for (let i = 0; i < this.length; i++) {
      total += this[i].encodedLength;
    }

    return total;
  }
  /**
   * @description returns a hash of the contents
   */


  get hash() {
    return this.registry.hash(this.toU8a());
  }
  /**
   * @description Checks if the value is an empty value
   */


  get isEmpty() {
    return this.length === 0;
  }
  /**
   * @description The length of the value
   */


  get length() {
    // only included here since we ignore inherited docs
    return super.length;
  }
  /**
   * @description Compares the value of the input to see if there is a match
   */


  eq(other) {
    return (0,_utils_compareArray_js__WEBPACK_IMPORTED_MODULE_1__.compareArray)(this, other);
  }
  /**
   * @description Converts the Object to an standard JavaScript Array
   */


  toArray() {
    return Array.from(this);
  }
  /**
   * @description Returns a hex string representation of the value
   */


  toHex() {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aToHex)(this.toU8a());
  }
  /**
   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
   */


  toHuman(isExtended) {
    const result = new Array(this.length);

    for (let i = 0; i < this.length; i++) {
      result[i] = this[i].toHuman(isExtended);
    }

    return result;
  }
  /**
   * @description Converts the Object to JSON, typically used for RPC transfers
   */


  toJSON() {
    const result = new Array(this.length);

    for (let i = 0; i < this.length; i++) {
      result[i] = this[i].toJSON();
    }

    return result;
  }
  /**
   * @description Returns the base runtime type name for this instance
   */


  /**
   * @description Returns the string representation of the value
   */
  toString() {
    const result = new Array(this.length);

    for (let i = 0; i < this.length; i++) {
      result[i] = this[i].toString();
    }

    return `[${result.join(', ')}]`;
  }
  /**
   * @description Encodes the value as a Uint8Array as per the SCALE specifications
   * @param isBare true when the value has none of the type-specific prefixes (internal)
   */


  toU8a(isBare) {
    const encoded = new Array(this.length);

    for (let i = 0; i < this.length; i++) {
      encoded[i] = this[i].toU8a(isBare);
    }

    return isBare ? (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.u8aConcat)(...encoded) : (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.u8aConcat)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.compactToU8a)(this.length), ...encoded);
  } // Below are methods that we override. When we do a `new Vec(...).map()`,
  // we want it to return an Array. We only override the methods that return a
  // new instance.

  /**
   * @description Concatenates two arrays
   */


  concat(other) {
    return this.toArray().concat(other instanceof AbstractArray ? other.toArray() : other);
  }
  /**
   * @description Filters the array with the callback
   */


  filter(callbackfn, thisArg) {
    return this.toArray().filter(callbackfn, thisArg);
  }
  /**
   * @description Maps the array with the callback
   */


  map(callbackfn, thisArg) {
    return this.toArray().map(callbackfn, thisArg);
  }
  /**
   * @description Checks if the array includes a specific value
   */


  includes(check) {
    return this.some(value => value.eq(check));
  }
  /**
   * @description Returns a slice of an array
   */


  slice(start, end) {
    return this.toArray().slice(start, end);
  }

}

/***/ }),
/* 315 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "compareArray": () => (/* binding */ compareArray)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(82);
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(316);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

 // NOTE These are used internally and when comparing objects, expects that
// when the second is an Codec[] that the first has to be as well

function compareArray(a, b) {
  if (Array.isArray(b)) {
    return a.length === b.length && (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(a.find((v, index) => (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.hasEq)(v) ? !v.eq(b[index]) : v !== b[index]));
  }

  return false;
}

/***/ }),
/* 316 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "hasEq": () => (/* binding */ hasEq)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(81);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

function hasEq(o) {
  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.isFunction)(o.eq);
}

/***/ }),
/* 317 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "typeToConstructor": () => (/* binding */ typeToConstructor)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(169);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

function typeToConstructor(registry, type) {
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.isString)(type) ? registry.createClass(type) : type;
}

/***/ }),
/* 318 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "mapToTypeMap": () => (/* binding */ mapToTypeMap)
/* harmony export */ });
/* harmony import */ var _typeToConstructor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(317);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @description takes an input map of the form `{ [string]: string | Constructor }` and returns a map of `{ [string]: Constructor }`
 */

function mapToTypeMap(registry, input) {
  const entries = Object.entries(input);
  const output = {};

  for (let i = 0; i < entries.length; i++) {
    output[entries[i][0]] = (0,_typeToConstructor_js__WEBPACK_IMPORTED_MODULE_0__.typeToConstructor)(registry, entries[i][1]);
  }

  return output;
}

/***/ }),
/* 319 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Struct": () => (/* binding */ Struct)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(286);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(292);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(82);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(303);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(126);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(320);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(196);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(81);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(128);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(197);
/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(318);
/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(313);
/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(321);
/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(322);


// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0



/** @internal */
function decodeStructFromObject(registry, Types, value, jsonMap) {
  let jsonObj;
  const inputKeys = Object.keys(Types);
  const typeofArray = Array.isArray(value);
  const typeofMap = value instanceof Map;
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.assert)(typeofArray || typeofMap || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.isObject)(value), () => `Struct: Cannot decode value ${(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.stringify)(value)} (typeof ${typeof value}), expected an input object, map or array`);
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.assert)(!typeofArray || value.length === inputKeys.length, () => `Struct: Unable to map ${(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.stringify)(value)} array to object with known keys ${inputKeys.join(', ')}`);
  const raw = new Array(inputKeys.length);

  for (let i = 0; i < inputKeys.length; i++) {
    const key = inputKeys[i];
    const jsonKey = jsonMap.get(key) || key;
    const Type = Types[key];
    let assign;

    try {
      if (typeofArray) {
        assign = value[i];
      } else if (typeofMap) {
        assign = jsonKey && value.get(jsonKey);
      } else {
        assign = jsonKey && value[jsonKey];

        if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(assign)) {
          if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(jsonObj)) {
            const entries = Object.entries(value);
            jsonObj = {};

            for (let e = 0; e < entries.length; e++) {
              jsonObj[(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.stringCamelCase)(entries[e][0])] = entries[e][1];
            }
          }

          assign = jsonKey && jsonObj[jsonKey];
        }
      }

      raw[i] = [key, assign instanceof Type ? assign : new Type(registry, assign)];
    } catch (error) {
      let type = Type.name;

      try {
        type = new Type(registry).toRawType();
      } catch (error) {// ignore
      }

      throw new Error(`Struct: failed on ${jsonKey}: ${type}:: ${error.message}`);
    }
  }

  return [raw, 0];
}
/**
 * @name Struct
 * @description
 * A Struct defines an Object with key-value pairs - where the values are Codec values. It removes
 * a lot of repetition from the actual coding, define a structure type, pass it the key/Codec
 * values in the constructor and it manages the decoding. It is important that the constructor
 * values matches 100% to the order in th Rust code, i.e. don't go crazy and make it alphabetical,
 * it needs to decoded in the specific defined order.
 * @noInheritDoc
 */


var _jsonMap = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("jsonMap");

var _Types = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("Types");

class Struct extends Map {
  constructor(registry, Types, value, jsonMap = new Map()) {
    const typeMap = (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_7__.mapToTypeMap)(registry, Types);
    const [decoded, decodedLength] = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_8__.isU8a)(value) ? (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_9__.decodeU8a)(registry, value, typeMap, true) : (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_10__.isHex)(value) ? (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_9__.decodeU8a)(registry, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_11__.u8aToU8a)(value), typeMap, true) : value instanceof Struct ? [value, 0] : decodeStructFromObject(registry, typeMap, value || {}, jsonMap);
    super(decoded);
    this.registry = void 0;
    this.createdAtHash = void 0;
    this.initialU8aLength = void 0;
    Object.defineProperty(this, _jsonMap, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _Types, {
      writable: true,
      value: void 0
    });
    this.registry = registry;
    this.initialU8aLength = decodedLength;
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _jsonMap)[_jsonMap] = jsonMap;
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _Types)[_Types] = typeMap;
  }

  static with(Types, jsonMap) {
    const keys = Object.keys(Types);
    return class extends Struct {
      constructor(registry, value) {
        super(registry, Types, value, jsonMap);
        (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_12__.objectProperties)(this, keys, k => this.get(k));
      }

    };
  }
  /**
   * @description The available keys for this struct
   */


  get defKeys() {
    return Object.keys((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _Types)[_Types]);
  }
  /**
   * @description Checks if the value is an empty value
   */


  get isEmpty() {
    for (const v of this.values()) {
      if (!v.isEmpty) {
        return false;
      }
    }

    return true;
  }
  /**
   * @description Returns the Type description of the structure
   */


  get Type() {
    const result = {};
    const defs = Object.entries((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _Types)[_Types]);

    for (let i = 0; i < defs.length; i++) {
      const [key, Type] = defs[i];
      result[key] = new Type(this.registry).toRawType();
    }

    return result;
  }
  /**
   * @description The length of the value when encoded as a Uint8Array
   */


  get encodedLength() {
    let total = 0;

    for (const v of this.values()) {
      total += v.encodedLength;
    }

    return total;
  }
  /**
   * @description returns a hash of the contents
   */


  get hash() {
    return this.registry.hash(this.toU8a());
  }
  /**
   * @description Compares the value of the input to see if there is a match
   */


  eq(other) {
    return (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_13__.compareMap)(this, other);
  }
  /**
   * @description Returns a specific names entry in the structure
   * @param name The name of the entry to retrieve
   */


  get(name) {
    return super.get(name);
  }
  /**
   * @description Returns the values of a member at a specific index (Rather use get(name) for performance)
   */


  getAtIndex(index) {
    return this.toArray()[index];
  }
  /**
   * @description Converts the Object to an standard JavaScript Array
   */


  toArray() {
    return [...this.values()];
  }
  /**
   * @description Returns a hex string representation of the value
   */


  toHex() {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_14__.u8aToHex)(this.toU8a());
  }
  /**
   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
   */


  toHuman(isExtended) {
    const json = {};

    for (const [k, v] of this.entries()) {
      json[k] = v && v.toHuman(isExtended);
    }

    return json;
  }
  /**
   * @description Converts the Object to JSON, typically used for RPC transfers
   */


  toJSON() {
    const json = {};

    for (const [k, v] of this.entries()) {
      const jsonKey = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _jsonMap)[_jsonMap].get(k) || k;
      json[jsonKey] = v && v.toJSON();
    }

    return json;
  }
  /**
   * @description Returns the base runtime type name for this instance
   */


  toRawType() {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.stringify)((0,_utils_index_js__WEBPACK_IMPORTED_MODULE_15__.typesToMap)(this.registry, (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _Types)[_Types]));
  }
  /**
   * @description Returns the string representation of the value
   */


  toString() {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.stringify)(this.toJSON());
  }
  /**
   * @description Encodes the value as a Uint8Array as per the SCALE specifications
   * @param isBare true when the value has none of the type-specific prefixes (internal)
   */


  toU8a(isBare) {
    const encoded = [];

    for (const [k, v] of this.entries()) {
      if (v && (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_16__.isFunction)(v.toU8a)) {
        encoded.push(v.toU8a(!isBare || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_17__.isBoolean)(isBare) ? isBare : isBare[k]));
      }
    }

    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_18__.u8aConcat)(...encoded);
  }

}

/***/ }),
/* 320 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "objectProperty": () => (/* binding */ objectProperty),
/* harmony export */   "objectProperties": () => (/* binding */ objectProperties)
/* harmony export */ });
/* harmony import */ var _is_undefined_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(82);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name objectProperty
 * @summary Assign a get property on the input object
 */

function objectProperty(that, key, getter) {
  // We use both the hasOwnProperty as well as isUndefined checks here, since it may be set
  // in inherited classes and _Own_ properties refers to the class only, not only parents
  if (!Object.prototype.hasOwnProperty.call(that, key) && (0,_is_undefined_js__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(that[key])) {
    Object.defineProperty(that, key, {
      enumerable: true,
      // Since we don't use any additional this internally, we can use arrow (unlike lazy)
      // Unlike in lazy, we always call into the upper function, i.e. this method
      // does not cache old values (it is expected to be used for dynamic values)
      get: () => getter(key)
    });
  }
}
/**
 * @name objectProperties
 * @summary Assign get properties on the input object
 */

function objectProperties(that, keys, getter) {
  for (let i = 0; i < keys.length; i++) {
    objectProperty(that, keys[i], k => getter(k, i));
  }
}

/***/ }),
/* 321 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "compareMap": () => (/* binding */ compareMap)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(82);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(286);
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(316);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0



function hasMismatch(a, b) {
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(a) || ((0,_util_js__WEBPACK_IMPORTED_MODULE_1__.hasEq)(a) ? !a.eq(b) : a !== b);
}

function notEntry(value) {
  return !Array.isArray(value) || value.length !== 2;
}

function compareMapArray(a, b) {
  // equal number of entries and each entry in the array should match
  return a.size === b.length && !b.some(e => notEntry(e) || hasMismatch(a.get(e[0]), e[1]));
} // NOTE These are used internally and when comparing objects, expects that
// when the second is an Map<string, Codec> that the first has to be as well


function compareMap(a, b) {
  if (Array.isArray(b)) {
    return compareMapArray(a, b);
  } else if (b instanceof Map) {
    return compareMapArray(a, [...b.entries()]);
  } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isObject)(b)) {
    return compareMapArray(a, Object.entries(b));
  }

  return false;
}

/***/ }),
/* 322 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "typesToMap": () => (/* binding */ typesToMap)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
function typesToMap(registry, Types) {
  const entries = Object.entries(Types);
  const result = {};

  for (let i = 0; i < entries.length; i++) {
    const [key, Type] = entries[i];
    result[key] = registry.getClassName(Type) || new Type(registry).toRawType();
  }

  return result;
}

/***/ }),
/* 323 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "filterCallsSome": () => (/* binding */ filterCallsSome),
/* harmony export */   "createCallFunction": () => (/* binding */ createCallFunction),
/* harmony export */   "decorateExtrinsics": () => (/* binding */ decorateExtrinsics)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(122);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(303);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(304);
/* harmony import */ var _create_lazy_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(305);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(324);
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(307);
/* harmony import */ var _createUnchecked_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(325);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0





function filterCallsSome({
  calls
}) {
  return calls.isSome;
}
function createCallFunction(registry, lookup, variant, sectionName, sectionIndex) {
  const {
    fields,
    index
  } = variant;
  const args = new Array(fields.length);

  for (let a = 0; a < fields.length; a++) {
    const {
      name,
      type,
      typeName
    } = fields[a];
    args[a] = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({
      name: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.stringCamelCase)(name.unwrapOr(`param${a}`)),
      type: (0,_util_index_js__WEBPACK_IMPORTED_MODULE_2__.getSiName)(lookup, type)
    }, typeName.isSome ? {
      typeName: typeName.unwrap()
    } : null);
  }

  return (0,_createUnchecked_js__WEBPACK_IMPORTED_MODULE_3__.createUnchecked)(registry, sectionName, new Uint8Array([sectionIndex, index.toNumber()]), registry.createType('FunctionMetadataLatest', (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({
    args
  }, variant)));
}
/** @internal */

function decorateExtrinsics(registry, {
  lookup,
  pallets
}, version) {
  const result = {};
  const filtered = pallets.filter(filterCallsSome);

  for (let i = 0; i < filtered.length; i++) {
    const {
      calls,
      index,
      name
    } = filtered[i];
    const sectionName = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.stringCamelCase)(name);
    const sectionIndex = version >= 12 ? index.toNumber() : i;
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.lazyMethod)(result, sectionName, () => (0,_create_lazy_js__WEBPACK_IMPORTED_MODULE_5__.lazyVariants)(lookup, calls.unwrap(), _util_js__WEBPACK_IMPORTED_MODULE_6__.objectNameToCamel, variant => createCallFunction(registry, lookup, variant, sectionName, sectionIndex)));
  }

  return result;
}

/***/ }),
/* 324 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getSiName": () => (/* binding */ getSiName)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
function getSiName(lookup, type) {
  const typeDef = lookup.getTypeDef(type);
  return typeDef.lookupName || typeDef.type;
}

/***/ }),
/* 325 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createUnchecked": () => (/* binding */ createUnchecked)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(303);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(80);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0


function isTx(tx, callIndex) {
  return tx.callIndex[0] === callIndex[0] && tx.callIndex[1] === callIndex[1];
}
/** @internal */


function createUnchecked(registry, section, callIndex, callMetadata) {
  const expectedArgs = callMetadata.fields;
  const funcName = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.stringCamelCase)(callMetadata.name);

  const extrinsicFn = (...args) => {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(expectedArgs.length === args.length, () => `Extrinsic ${section}.${funcName} expects ${expectedArgs.length} arguments, got ${args.length}.`);
    return registry.createType('Call', {
      args,
      callIndex
    }, callMetadata);
  };

  extrinsicFn.is = tx => isTx(tx, callIndex);

  extrinsicFn.callIndex = callIndex;
  extrinsicFn.meta = callMetadata;
  extrinsicFn.method = funcName;
  extrinsicFn.section = section;

  extrinsicFn.toJSON = () => callMetadata.toJSON();

  return extrinsicFn;
}

/***/ }),
/* 326 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "decorateConstants": () => (/* binding */ decorateConstants)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(304);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(303);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(167);
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(307);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0


/** @internal */
// eslint-disable-next-line @typescript-eslint/no-unused-vars

function decorateConstants(registry, {
  pallets
}, _version) {
  const result = {};

  for (let i = 0; i < pallets.length; i++) {
    const {
      constants,
      name
    } = pallets[i];

    if (!constants.isEmpty) {
      (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.lazyMethod)(result, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.stringCamelCase)(name), () => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.lazyMethods)({}, constants, constant => {
        const codec = registry.createTypeUnsafe(registry.createLookupType(constant.type), [(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.hexToU8a)(constant.value.toHex())]);
        codec.meta = constant;
        return codec;
      }, _util_js__WEBPACK_IMPORTED_MODULE_3__.objectNameToCamel));
    }
  }

  return result;
}

/***/ }),
/* 327 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "blake2AsU8a": () => (/* binding */ blake2AsU8a),
/* harmony export */   "blake2AsHex": () => (/* binding */ blake2AsHex)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(177);
/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(328);
/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(354);
/* harmony import */ var _noble_hashes_lib_blake2b_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(350);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0





/**
 * @name blake2AsU8a
 * @summary Creates a blake2b u8a from the input.
 * @description
 * From a `Uint8Array` input, create the blake2b and return the result as a u8a with the specified `bitLength`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { blake2AsU8a } from '@polkadot/util-crypto';
 *
 * blake2AsU8a('abc'); // => [0xba, 0x80, 0xa5, 0x3f, 0x98, 0x1c, 0x4d, 0x0d]
 * ```
 */
function blake2AsU8a(data, bitLength = 256, key, onlyJs) {
  const byteLength = Math.ceil(bitLength / 8);
  const u8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(data);
  return !_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.hasBigInt || !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.isReady)() ? (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.blake2b)(u8a, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(key), byteLength) : (0,_noble_hashes_lib_blake2b_js__WEBPACK_IMPORTED_MODULE_3__.blake2b)(u8a, {
    dkLen: byteLength,
    key: key || undefined
  });
}
/**
 * @name blake2AsHex
 * @description Creates a blake2b hex from the input.
 */

const blake2AsHex = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_4__.createAsHex)(blake2AsU8a);

/***/ }),
/* 328 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),
/* harmony export */   "bip39Generate": () => (/* binding */ bip39Generate),
/* harmony export */   "bip39ToEntropy": () => (/* binding */ bip39ToEntropy),
/* harmony export */   "bip39ToMiniSecret": () => (/* binding */ bip39ToMiniSecret),
/* harmony export */   "bip39ToSeed": () => (/* binding */ bip39ToSeed),
/* harmony export */   "bip39Validate": () => (/* binding */ bip39Validate),
/* harmony export */   "ed25519KeypairFromSeed": () => (/* binding */ ed25519KeypairFromSeed),
/* harmony export */   "ed25519Sign": () => (/* binding */ ed25519Sign),
/* harmony export */   "ed25519Verify": () => (/* binding */ ed25519Verify),
/* harmony export */   "sr25519DeriveKeypairHard": () => (/* binding */ sr25519DeriveKeypairHard),
/* harmony export */   "sr25519DeriveKeypairSoft": () => (/* binding */ sr25519DeriveKeypairSoft),
/* harmony export */   "sr25519DerivePublicSoft": () => (/* binding */ sr25519DerivePublicSoft),
/* harmony export */   "sr25519KeypairFromSeed": () => (/* binding */ sr25519KeypairFromSeed),
/* harmony export */   "sr25519Sign": () => (/* binding */ sr25519Sign),
/* harmony export */   "sr25519Verify": () => (/* binding */ sr25519Verify),
/* harmony export */   "sr25519Agree": () => (/* binding */ sr25519Agree),
/* harmony export */   "vrfSign": () => (/* binding */ vrfSign),
/* harmony export */   "vrfVerify": () => (/* binding */ vrfVerify),
/* harmony export */   "blake2b": () => (/* binding */ blake2b),
/* harmony export */   "hmacSha256": () => (/* binding */ hmacSha256),
/* harmony export */   "hmacSha512": () => (/* binding */ hmacSha512),
/* harmony export */   "keccak256": () => (/* binding */ keccak256),
/* harmony export */   "keccak512": () => (/* binding */ keccak512),
/* harmony export */   "pbkdf2": () => (/* binding */ pbkdf2),
/* harmony export */   "scrypt": () => (/* binding */ scrypt),
/* harmony export */   "sha256": () => (/* binding */ sha256),
/* harmony export */   "sha512": () => (/* binding */ sha512),
/* harmony export */   "twox": () => (/* binding */ twox),
/* harmony export */   "isReady": () => (/* binding */ isReady),
/* harmony export */   "waitReady": () => (/* binding */ waitReady)
/* harmony export */ });
/* harmony import */ var _polkadot_wasm_crypto_asmjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(161);
/* harmony import */ var _polkadot_wasm_crypto_wasm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(156);
/* harmony import */ var _bridge_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(330);
/* harmony import */ var _imports_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(347);
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(329);
// Copyright 2019-2021 @polkadot/wasm-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0





const PTR_VEC = 8;
const wasmPromise = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.initWasm)(_polkadot_wasm_crypto_wasm__WEBPACK_IMPORTED_MODULE_2__.wasmBytes, _polkadot_wasm_crypto_asmjs__WEBPACK_IMPORTED_MODULE_3__.asmJsInit, _imports_js__WEBPACK_IMPORTED_MODULE_4__).catch(() => null);
const bip39Generate = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => words => {
  wasm.ext_bip39_generate(PTR_VEC, words);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultString)();
});
const bip39ToEntropy = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => phrase => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocString)(phrase);
  wasm.ext_bip39_to_entropy(PTR_VEC, ptr0, len0);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const bip39ToMiniSecret = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (phrase, password) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocString)(phrase);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocString)(password);
  wasm.ext_bip39_to_mini_secret(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const bip39ToSeed = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (phrase, password) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocString)(phrase);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocString)(password);
  wasm.ext_bip39_to_seed(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const bip39Validate = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => phrase => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocString)(phrase);
  const ret = wasm.ext_bip39_validate(ptr0, len0);
  return ret !== 0;
});
const ed25519KeypairFromSeed = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => seed => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(seed);
  wasm.ext_ed_from_seed(PTR_VEC, ptr0, len0);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const ed25519Sign = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (pubkey, seckey, message) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pubkey);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(seckey);
  const [ptr2, len2] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(message);
  wasm.ext_ed_sign(PTR_VEC, ptr0, len0, ptr1, len1, ptr2, len2);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const ed25519Verify = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (signature, message, pubkey) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(signature);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(message);
  const [ptr2, len2] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pubkey);
  const ret = wasm.ext_ed_verify(ptr0, len0, ptr1, len1, ptr2, len2);
  return ret !== 0;
});
const sr25519DeriveKeypairHard = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (pair, cc) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pair);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(cc);
  wasm.ext_sr_derive_keypair_hard(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const sr25519DeriveKeypairSoft = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (pair, cc) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pair);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(cc);
  wasm.ext_sr_derive_keypair_soft(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const sr25519DerivePublicSoft = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (pubkey, cc) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pubkey);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(cc);
  wasm.ext_sr_derive_public_soft(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const sr25519KeypairFromSeed = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => seed => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(seed);
  wasm.ext_sr_from_seed(PTR_VEC, ptr0, len0);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const sr25519Sign = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (pubkey, secret, message) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pubkey);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(secret);
  const [ptr2, len2] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(message);
  wasm.ext_sr_sign(PTR_VEC, ptr0, len0, ptr1, len1, ptr2, len2);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const sr25519Verify = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (signature, message, pubkey) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(signature);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(message);
  const [ptr2, len2] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pubkey);
  const ret = wasm.ext_sr_verify(ptr0, len0, ptr1, len1, ptr2, len2);
  return ret !== 0;
});
const sr25519Agree = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (pubkey, secret) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pubkey);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(secret);
  wasm.ext_sr_agree(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const vrfSign = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (secret, context, message, extra) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(secret);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(context);
  const [ptr2, len2] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(message);
  const [ptr3, len3] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(extra);
  wasm.ext_vrf_sign(PTR_VEC, ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const vrfVerify = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (pubkey, context, message, extra, outAndProof) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pubkey);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(context);
  const [ptr2, len2] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(message);
  const [ptr3, len3] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(extra);
  const [ptr4, len4] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(outAndProof);
  const ret = wasm.ext_vrf_verify(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4);
  return ret !== 0;
});
const blake2b = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (data, key, size) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(key);
  wasm.ext_blake2b(PTR_VEC, ptr0, len0, ptr1, len1, size);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const hmacSha256 = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (key, data) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(key);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  wasm.ext_hmac_sha256(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const hmacSha512 = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (key, data) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(key);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  wasm.ext_hmac_sha512(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const keccak256 = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => data => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  wasm.ext_keccak256(PTR_VEC, ptr0, len0);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const keccak512 = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => data => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  wasm.ext_keccak512(PTR_VEC, ptr0, len0);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const pbkdf2 = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (data, salt, rounds) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(salt);
  wasm.ext_pbkdf2(PTR_VEC, ptr0, len0, ptr1, len1, rounds);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const scrypt = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (password, salt, log2n, r, p) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(password);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(salt);
  wasm.ext_scrypt(PTR_VEC, ptr0, len0, ptr1, len1, log2n, r, p);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const sha256 = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => data => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  wasm.ext_sha256(PTR_VEC, ptr0, len0);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const sha512 = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => data => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  wasm.ext_sha512(PTR_VEC, ptr0, len0);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const twox = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (data, rounds) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  wasm.ext_twox(PTR_VEC, ptr0, len0, rounds);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
function isReady() {
  return !!(0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.getWasm)();
}
function waitReady() {
  return wasmPromise.then(() => isReady());
}

/***/ }),
/* 329 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/wasm-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/wasm-crypto',
  version: '4.4.1'
};

/***/ }),
/* 330 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "initWasm": () => (/* binding */ initWasm),
/* harmony export */   "withWasm": () => (/* binding */ withWasm),
/* harmony export */   "getWasm": () => (/* binding */ getWasm),
/* harmony export */   "getInt32": () => (/* binding */ getInt32),
/* harmony export */   "getUint8": () => (/* binding */ getUint8),
/* harmony export */   "getU8a": () => (/* binding */ getU8a),
/* harmony export */   "getString": () => (/* binding */ getString),
/* harmony export */   "allocU8a": () => (/* binding */ allocU8a),
/* harmony export */   "allocString": () => (/* binding */ allocString),
/* harmony export */   "resultU8a": () => (/* binding */ resultU8a),
/* harmony export */   "resultString": () => (/* binding */ resultString)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(331);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(335);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(341);
// Copyright 2019-2021 @polkadot/wasm-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/* eslint-disable @typescript-eslint/no-non-null-assertion */

let wasm = null;
let cachegetInt32 = null;
let cachegetUint8 = null;
async function initWasm(wasmBytes, asmFn, wbg) {
  try {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)(typeof WebAssembly !== 'undefined' && wasmBytes && wasmBytes.length, 'WebAssembly is not available in your environment');
    const source = await WebAssembly.instantiate(wasmBytes, {
      wbg
    });
    wasm = source.instance.exports;
  } catch (error) {
    // if we have a valid supplied asm.js, return that
    if (asmFn) {
      wasm = asmFn(wbg);
    } else {
      console.error('FATAL: Unable to initialize @polkadot/wasm-crypto');
      console.error(error);
      wasm = null;
    }
  }
} // FIXME We really would love to clean this up and have a sign like (wasm, ...params) => T
// Alas, TypeScript foo is not that great today, so we sadly have an extra closure here

function withWasm(fn) {
  return (...params) => {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)(wasm, 'The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces.');
    return fn(wasm)(...params);
  };
}
function getWasm() {
  return wasm;
}
function getInt32() {
  if (cachegetInt32 === null || cachegetInt32.buffer !== wasm.memory.buffer) {
    cachegetInt32 = new Int32Array(wasm.memory.buffer);
  }

  return cachegetInt32;
}
function getUint8() {
  if (cachegetUint8 === null || cachegetUint8.buffer !== wasm.memory.buffer) {
    cachegetUint8 = new Uint8Array(wasm.memory.buffer);
  }

  return cachegetUint8;
}
function getU8a(ptr, len) {
  return getUint8().subarray(ptr / 1, ptr / 1 + len);
}
function getString(ptr, len) {
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToString)(getU8a(ptr, len));
}
function allocU8a(arg) {
  const ptr = wasm.__wbindgen_malloc(arg.length * 1);

  getUint8().set(arg, ptr / 1);
  return [ptr, arg.length];
}
function allocString(arg) {
  return allocU8a((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.stringToU8a)(arg));
}
function resultU8a() {
  const r0 = getInt32()[8 / 4 + 0];
  const r1 = getInt32()[8 / 4 + 1];
  const ret = getU8a(r0, r1).slice();

  wasm.__wbindgen_free(r0, r1 * 1);

  return ret;
}
function resultString() {
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToString)(resultU8a());
}

/***/ }),
/* 331 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "assert": () => (/* binding */ assert),
/* harmony export */   "assertReturn": () => (/* binding */ assertReturn)
/* harmony export */ });
/* harmony import */ var _is_function_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(332);
/* harmony import */ var _is_null_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(334);
/* harmony import */ var _is_undefined_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(333);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0




/**
 * @name assert
 * @summary Checks for a valid test, if not Error is thrown.
 * @description
 * Checks that `test` is a truthy value. If value is falsy (`null`, `undefined`, `false`, ...), it throws an Error with the supplied `message`. When `test` passes, `true` is returned.
 * @example
 * <BR>
 *
 * ```javascript
 * const { assert } from '@polkadot/util';
 *
 * assert(true, 'True should be true'); // passes
 * assert(false, 'False should not be true'); // Error thrown
 * assert(false, () => 'message'); // Error with 'message'
 * ```
 */
function assert(condition, message) {
  if (!condition) {
    throw new Error((0,_is_function_js__WEBPACK_IMPORTED_MODULE_0__.isFunction)(message) ? message() : message);
  }
}
/**
 * @name assertReturn
 * @description Returns when the value is not undefined/null, otherwise throws assertion error
 */

function assertReturn(value, message) {
  assert(!(0,_is_undefined_js__WEBPACK_IMPORTED_MODULE_1__.isUndefined)(value) && !(0,_is_null_js__WEBPACK_IMPORTED_MODULE_2__.isNull)(value), message);
  return value;
}

/***/ }),
/* 332 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isFunction": () => (/* binding */ isFunction)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
// eslint-disable-next-line @typescript-eslint/ban-types

/**
 * @name isFunction
 * @summary Tests for a `function`.
 * @description
 * Checks to see if the input value is a JavaScript function.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isFunction } from '@polkadot/util';
 *
 * isFunction(() => false); // => true
 * ```
 */
function isFunction(value) {
  return typeof value === 'function';
}

/***/ }),
/* 333 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isUndefined": () => (/* binding */ isUndefined)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isUndefined
 * @summary Tests for a `undefined` values.
 * @description
 * Checks to see if the input value is `undefined`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isUndefined } from '@polkadot/util';
 *
 * console.log('isUndefined', isUndefined(void(0))); // => true
 * ```
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function isUndefined(value) {
  return typeof value === 'undefined';
}

/***/ }),
/* 334 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isNull": () => (/* binding */ isNull)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isNull
 * @summary Tests for a `null` values.
 * @description
 * Checks to see if the input value is `null`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isNull } from '@polkadot/util';
 *
 * console.log('isNull', isNull(null)); // => true
 * ```
 */
function isNull(value) {
  return value === null;
}

/***/ }),
/* 335 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "u8aToString": () => (/* binding */ u8aToString)
/* harmony export */ });
/* harmony import */ var _polkadot_x_textdecoder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(336);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

const decoder = new _polkadot_x_textdecoder__WEBPACK_IMPORTED_MODULE_0__.TextDecoder('utf-8');
/**
 * @name u8aToString
 * @summary Creates a utf-8 string from a Uint8Array object.
 * @description
 * `UInt8Array` input values return the actual decoded utf-8 string. `null` or `undefined` values returns an empty string.
 * @example
 * <BR>
 *
 * ```javascript
 * import { u8aToString } from '@polkadot/util';
 *
 * u8aToString(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0x6f])); // hello
 * ```
 */

function u8aToString(value) {
  return !(value !== null && value !== void 0 && value.length) ? '' : decoder.decode(value);
}

/***/ }),
/* 336 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),
/* harmony export */   "TextDecoder": () => (/* binding */ TextDecoder)
/* harmony export */ });
/* harmony import */ var _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(338);
/* harmony import */ var _fallback_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(340);
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(337);
// Copyright 2017-2021 @polkadot/x-textencoder authors & contributors
// SPDX-License-Identifier: Apache-2.0



const TextDecoder = typeof _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__.xglobal.TextDecoder === 'undefined' ? _fallback_js__WEBPACK_IMPORTED_MODULE_2__.TextDecoder : _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__.xglobal.TextDecoder;

/***/ }),
/* 337 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-textdecoder authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/x-textdecoder',
  version: '8.0.4'
};

/***/ }),
/* 338 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),
/* harmony export */   "xglobal": () => (/* binding */ xglobal)
/* harmony export */ });
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(339);
// Copyright 2017-2021 @polkadot/x-global authors & contributors
// SPDX-License-Identifier: Apache-2.0


function evaluateThis(fn) {
  return fn('return this');
}

const xglobal = typeof globalThis !== 'undefined' ? globalThis : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : evaluateThis(Function);

/***/ }),
/* 339 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-global authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/x-global',
  version: '8.0.4'
};

/***/ }),
/* 340 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TextDecoder": () => (/* binding */ TextDecoder)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-textencoder authors & contributors
// SPDX-License-Identifier: Apache-2.0
// This is very limited, only handling Ascii values
class TextDecoder {
  // eslint-disable-next-line @typescript-eslint/no-unused-vars,no-useless-constructor
  constructor(_) {// nothing
  }

  decode(value) {
    let result = '';

    for (let i = 0; i < value.length; i++) {
      result += String.fromCharCode(value[i]);
    }

    return result;
  }

}

/***/ }),
/* 341 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "stringToU8a": () => (/* binding */ stringToU8a)
/* harmony export */ });
/* harmony import */ var _polkadot_x_textencoder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(342);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

const encoder = new _polkadot_x_textencoder__WEBPACK_IMPORTED_MODULE_0__.TextEncoder();
/**
 * @name stringToU8a
 * @summary Creates a Uint8Array object from a utf-8 string.
 * @description
 * String input values return the actual encoded `UInt8Array`. `null` or `undefined` values returns an empty encoded array.
 * @example
 * <BR>
 *
 * ```javascript
 * import { stringToU8a } from '@polkadot/util';
 *
 * stringToU8a('hello'); // [0x68, 0x65, 0x6c, 0x6c, 0x6f]
 * ```
 */
// eslint-disable-next-line @typescript-eslint/ban-types

function stringToU8a(value) {
  return value ? encoder.encode(value.toString()) : new Uint8Array();
}

/***/ }),
/* 342 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),
/* harmony export */   "TextEncoder": () => (/* binding */ TextEncoder)
/* harmony export */ });
/* harmony import */ var _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(344);
/* harmony import */ var _fallback_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(346);
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(343);
// Copyright 2017-2021 @polkadot/x-textencoder authors & contributors
// SPDX-License-Identifier: Apache-2.0



const TextEncoder = typeof _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__.xglobal.TextEncoder === 'undefined' ? _fallback_js__WEBPACK_IMPORTED_MODULE_2__.TextEncoder : _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__.xglobal.TextEncoder;

/***/ }),
/* 343 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-textencoder authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/x-textencoder',
  version: '8.0.4'
};

/***/ }),
/* 344 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),
/* harmony export */   "xglobal": () => (/* binding */ xglobal)
/* harmony export */ });
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(345);
// Copyright 2017-2021 @polkadot/x-global authors & contributors
// SPDX-License-Identifier: Apache-2.0


function evaluateThis(fn) {
  return fn('return this');
}

const xglobal = typeof globalThis !== 'undefined' ? globalThis : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : evaluateThis(Function);

/***/ }),
/* 345 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-global authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/x-global',
  version: '8.0.4'
};

/***/ }),
/* 346 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TextEncoder": () => (/* binding */ TextEncoder)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-textencoder authors & contributors
// SPDX-License-Identifier: Apache-2.0
// This is very limited, only handling Ascii values
class TextEncoder {
  encode(value) {
    const u8a = new Uint8Array(value.length);

    for (let i = 0; i < value.length; i++) {
      u8a[i] = value.charCodeAt(i);
    }

    return u8a;
  }

}

/***/ }),
/* 347 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__wbindgen_is_undefined": () => (/* binding */ __wbindgen_is_undefined),
/* harmony export */   "__wbg_self_1b7a39e3a92c949c": () => (/* binding */ __wbg_self_1b7a39e3a92c949c),
/* harmony export */   "__wbg_require_604837428532a733": () => (/* binding */ __wbg_require_604837428532a733),
/* harmony export */   "__wbg_crypto_968f1772287e2df0": () => (/* binding */ __wbg_crypto_968f1772287e2df0),
/* harmony export */   "__wbg_getRandomValues_a3d34b4fee3c2869": () => (/* binding */ __wbg_getRandomValues_a3d34b4fee3c2869),
/* harmony export */   "__wbg_getRandomValues_f5e14ab7ac8e995d": () => (/* binding */ __wbg_getRandomValues_f5e14ab7ac8e995d),
/* harmony export */   "__wbg_randomFillSync_d5bd2d655fdf256a": () => (/* binding */ __wbg_randomFillSync_d5bd2d655fdf256a),
/* harmony export */   "__wbindgen_object_drop_ref": () => (/* binding */ __wbindgen_object_drop_ref),
/* harmony export */   "abort": () => (/* binding */ abort)
/* harmony export */ });
/* harmony import */ var _polkadot_x_randomvalues__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(348);
/* harmony import */ var _bridge_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(330);
// Copyright 2019-2021 @polkadot/wasm-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/* eslint-disable camelcase */


const DEFAULT_CRYPTO = {
  getRandomValues: _polkadot_x_randomvalues__WEBPACK_IMPORTED_MODULE_0__.getRandomValues
};
const DEFAULT_SELF = {
  crypto: DEFAULT_CRYPTO
};
const heap = new Array(32).fill(undefined).concat(undefined, null, true, false);
let heapNext = heap.length;

function getObject(idx) {
  return heap[idx];
}

function dropObject(idx) {
  if (idx < 36) {
    return;
  }

  heap[idx] = heapNext;
  heapNext = idx;
}

function takeObject(idx) {
  const ret = getObject(idx);
  dropObject(idx);
  return ret;
}

function addObject(obj) {
  if (heapNext === heap.length) {
    heap.push(heap.length + 1);
  }

  const idx = heapNext;
  heapNext = heap[idx];
  heap[idx] = obj;
  return idx;
}

function __wbindgen_is_undefined(idx) {
  return getObject(idx) === undefined;
}
function __wbg_self_1b7a39e3a92c949c() {
  return addObject(DEFAULT_SELF);
}
function __wbg_require_604837428532a733(ptr, len) {
  throw new Error(`Unable to require ${(0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.getString)(ptr, len)}`);
} // eslint-disable-next-line @typescript-eslint/no-unused-vars

function __wbg_crypto_968f1772287e2df0(_idx) {
  return addObject(DEFAULT_CRYPTO);
} // eslint-disable-next-line @typescript-eslint/no-unused-vars

function __wbg_getRandomValues_a3d34b4fee3c2869(_idx) {
  return addObject(DEFAULT_CRYPTO.getRandomValues);
} // eslint-disable-next-line @typescript-eslint/no-unused-vars

function __wbg_getRandomValues_f5e14ab7ac8e995d(_arg0, ptr, len) {
  DEFAULT_CRYPTO.getRandomValues((0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.getU8a)(ptr, len));
} // eslint-disable-next-line @typescript-eslint/no-unused-vars

function __wbg_randomFillSync_d5bd2d655fdf256a(_idx, _ptr, _len) {
  throw new Error('randomFillsync is not available'); // getObject(idx).randomFillSync(getU8a(ptr, len));
}
function __wbindgen_object_drop_ref(idx) {
  takeObject(idx);
}
function abort() {
  throw new Error('abort');
}

/***/ }),
/* 348 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),
/* harmony export */   "getRandomValues": () => (/* binding */ getRandomValues)
/* harmony export */ });
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(349);
// Copyright 2017-2021 @polkadot/x-randomvalues authors & contributors
// SPDX-License-Identifier: Apache-2.0

function getRandomValues(arr) {
  return crypto.getRandomValues(arr);
}

/***/ }),
/* 349 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-randomvalues authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/x-randomvalues',
  version: '8.0.4'
};

/***/ }),
/* 350 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "blake2b": () => (/* binding */ blake2b)
/* harmony export */ });
/* harmony import */ var _blake2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(353);
/* harmony import */ var _u64_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(351);
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(352);
/*! noble-hashes - MIT License (c) 2021 Paul Miller (paulmillr.com) */
// https://github.com/paulmillr/noble-hashes/pull/13


 // Same as SHA-512 but LE
// prettier-ignore

const IV = new Uint32Array([0xf3bcc908, 0x6a09e667, 0x84caa73b, 0xbb67ae85, 0xfe94f82b, 0x3c6ef372, 0x5f1d36f1, 0xa54ff53a, 0xade682d1, 0x510e527f, 0x2b3e6c1f, 0x9b05688c, 0xfb41bd6b, 0x1f83d9ab, 0x137e2179, 0x5be0cd19]); // Temporary buffer

const BUF = new Uint32Array(32); // Mixing function G splitted in two halfs

function G1(a, b, c, d, msg, x) {
  // NOTE: V is LE here
  const Xl = msg[x],
        Xh = msg[x + 1]; // prettier-ignore

  let Al = BUF[2 * a],
      Ah = BUF[2 * a + 1]; // prettier-ignore

  let Bl = BUF[2 * b],
      Bh = BUF[2 * b + 1]; // prettier-ignore

  let Cl = BUF[2 * c],
      Ch = BUF[2 * c + 1]; // prettier-ignore

  let Dl = BUF[2 * d],
      Dh = BUF[2 * d + 1]; // prettier-ignore
  // v[a] = (v[a] + v[b] + x) | 0;

  let ll = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add3L(Al, Bl, Xl);
  Ah = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add3H(ll, Ah, Bh, Xh);
  Al = ll | 0; // v[d] = rotr(v[d] ^ v[a], 32)

  ({
    Dh,
    Dl
  } = {
    Dh: Dh ^ Ah,
    Dl: Dl ^ Al
  });
  ({
    Dh,
    Dl
  } = {
    Dh: _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotr32H(Dh, Dl),
    Dl: _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotr32L(Dh, Dl)
  }); // v[c] = (v[c] + v[d]) | 0;

  ({
    h: Ch,
    l: Cl
  } = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add(Ch, Cl, Dh, Dl)); // v[b] = rotr(v[b] ^ v[c], 24)

  ({
    Bh,
    Bl
  } = {
    Bh: Bh ^ Ch,
    Bl: Bl ^ Cl
  });
  ({
    Bh,
    Bl
  } = {
    Bh: _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrSH(Bh, Bl, 24),
    Bl: _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrSL(Bh, Bl, 24)
  });
  BUF[2 * a] = Al, BUF[2 * a + 1] = Ah;
  BUF[2 * b] = Bl, BUF[2 * b + 1] = Bh;
  BUF[2 * c] = Cl, BUF[2 * c + 1] = Ch;
  BUF[2 * d] = Dl, BUF[2 * d + 1] = Dh;
}

function G2(a, b, c, d, msg, x) {
  // NOTE: V is LE here
  const Xl = msg[x],
        Xh = msg[x + 1]; // prettier-ignore

  let Al = BUF[2 * a],
      Ah = BUF[2 * a + 1]; // prettier-ignore

  let Bl = BUF[2 * b],
      Bh = BUF[2 * b + 1]; // prettier-ignore

  let Cl = BUF[2 * c],
      Ch = BUF[2 * c + 1]; // prettier-ignore

  let Dl = BUF[2 * d],
      Dh = BUF[2 * d + 1]; // prettier-ignore
  // v[a] = (v[a] + v[b] + x) | 0;

  let ll = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add3L(Al, Bl, Xl);
  Ah = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add3H(ll, Ah, Bh, Xh);
  Al = ll | 0; // v[d] = rotr(v[d] ^ v[a], 16)

  ({
    Dh,
    Dl
  } = {
    Dh: Dh ^ Ah,
    Dl: Dl ^ Al
  });
  ({
    Dh,
    Dl
  } = {
    Dh: _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrSH(Dh, Dl, 16),
    Dl: _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrSL(Dh, Dl, 16)
  }); // v[c] = (v[c] + v[d]) | 0;

  ({
    h: Ch,
    l: Cl
  } = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add(Ch, Cl, Dh, Dl)); // v[b] = rotr(v[b] ^ v[c], 63)

  ({
    Bh,
    Bl
  } = {
    Bh: Bh ^ Ch,
    Bl: Bl ^ Cl
  });
  ({
    Bh,
    Bl
  } = {
    Bh: _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrBH(Bh, Bl, 63),
    Bl: _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrBL(Bh, Bl, 63)
  });
  BUF[2 * a] = Al, BUF[2 * a + 1] = Ah;
  BUF[2 * b] = Bl, BUF[2 * b + 1] = Bh;
  BUF[2 * c] = Cl, BUF[2 * c + 1] = Ch;
  BUF[2 * d] = Dl, BUF[2 * d + 1] = Dh;
}

class BLAKE2b extends _blake2_js__WEBPACK_IMPORTED_MODULE_1__.BLAKE2 {
  // Same as SHA-512, but LE
  constructor(opts = {}) {
    super(128, opts.dkLen === undefined ? 64 : opts.dkLen, opts, 64, 16, 16);
    this.v0l = IV[0] | 0;
    this.v0h = IV[1] | 0;
    this.v1l = IV[2] | 0;
    this.v1h = IV[3] | 0;
    this.v2l = IV[4] | 0;
    this.v2h = IV[5] | 0;
    this.v3l = IV[6] | 0;
    this.v3h = IV[7] | 0;
    this.v4l = IV[8] | 0;
    this.v4h = IV[9] | 0;
    this.v5l = IV[10] | 0;
    this.v5h = IV[11] | 0;
    this.v6l = IV[12] | 0;
    this.v6h = IV[13] | 0;
    this.v7l = IV[14] | 0;
    this.v7h = IV[15] | 0;
    const keyLength = opts.key ? opts.key.length : 0;
    this.v0l ^= this.outputLen | keyLength << 8 | 0x01 << 16 | 0x01 << 24;

    if (opts.salt) {
      const salt = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.u32)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.toBytes)(opts.salt));
      this.v4l ^= salt[0];
      this.v4h ^= salt[1];
      this.v5l ^= salt[2];
      this.v5h ^= salt[3];
    }

    if (opts.personalization) {
      const pers = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.u32)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.toBytes)(opts.personalization));
      this.v6l ^= pers[0];
      this.v6h ^= pers[1];
      this.v7l ^= pers[2];
      this.v7h ^= pers[3];
    }

    if (opts.key) {
      // Pad to blockLen and update
      const tmp = new Uint8Array(this.blockLen);
      tmp.set((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.toBytes)(opts.key));
      this.update(tmp);
    }
  } // prettier-ignore


  get() {
    let {
      v0l,
      v0h,
      v1l,
      v1h,
      v2l,
      v2h,
      v3l,
      v3h,
      v4l,
      v4h,
      v5l,
      v5h,
      v6l,
      v6h,
      v7l,
      v7h
    } = this;
    return [v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h];
  } // prettier-ignore


  set(v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h) {
    this.v0l = v0l | 0;
    this.v0h = v0h | 0;
    this.v1l = v1l | 0;
    this.v1h = v1h | 0;
    this.v2l = v2l | 0;
    this.v2h = v2h | 0;
    this.v3l = v3l | 0;
    this.v3h = v3h | 0;
    this.v4l = v4l | 0;
    this.v4h = v4h | 0;
    this.v5l = v5l | 0;
    this.v5h = v5h | 0;
    this.v6l = v6l | 0;
    this.v6h = v6h | 0;
    this.v7l = v7l | 0;
    this.v7h = v7h | 0;
  }

  compress(msg, offset, isLast) {
    this.get().forEach((v, i) => BUF[i] = v); // First half from state.

    BUF.set(IV, 16); // Second half from IV.

    let {
      h,
      l
    } = _u64_js__WEBPACK_IMPORTED_MODULE_0__.fromBig(BigInt(this.length));
    BUF[24] = IV[8] ^ l; // Low word of the offset.

    BUF[25] = IV[9] ^ h; // High word.
    // Invert all bits for last block

    if (isLast) {
      BUF[28] = ~BUF[28];
      BUF[29] = ~BUF[29];
    }

    let j = 0;
    const s = _blake2_js__WEBPACK_IMPORTED_MODULE_1__.SIGMA;

    for (let i = 0; i < 12; i++) {
      G1(0, 4, 8, 12, msg, offset + 2 * s[j++]);
      G2(0, 4, 8, 12, msg, offset + 2 * s[j++]);
      G1(1, 5, 9, 13, msg, offset + 2 * s[j++]);
      G2(1, 5, 9, 13, msg, offset + 2 * s[j++]);
      G1(2, 6, 10, 14, msg, offset + 2 * s[j++]);
      G2(2, 6, 10, 14, msg, offset + 2 * s[j++]);
      G1(3, 7, 11, 15, msg, offset + 2 * s[j++]);
      G2(3, 7, 11, 15, msg, offset + 2 * s[j++]);
      G1(0, 5, 10, 15, msg, offset + 2 * s[j++]);
      G2(0, 5, 10, 15, msg, offset + 2 * s[j++]);
      G1(1, 6, 11, 12, msg, offset + 2 * s[j++]);
      G2(1, 6, 11, 12, msg, offset + 2 * s[j++]);
      G1(2, 7, 8, 13, msg, offset + 2 * s[j++]);
      G2(2, 7, 8, 13, msg, offset + 2 * s[j++]);
      G1(3, 4, 9, 14, msg, offset + 2 * s[j++]);
      G2(3, 4, 9, 14, msg, offset + 2 * s[j++]);
    }

    this.v0l ^= BUF[0] ^ BUF[16];
    this.v0h ^= BUF[1] ^ BUF[17];
    this.v1l ^= BUF[2] ^ BUF[18];
    this.v1h ^= BUF[3] ^ BUF[19];
    this.v2l ^= BUF[4] ^ BUF[20];
    this.v2h ^= BUF[5] ^ BUF[21];
    this.v3l ^= BUF[6] ^ BUF[22];
    this.v3h ^= BUF[7] ^ BUF[23];
    this.v4l ^= BUF[8] ^ BUF[24];
    this.v4h ^= BUF[9] ^ BUF[25];
    this.v5l ^= BUF[10] ^ BUF[26];
    this.v5h ^= BUF[11] ^ BUF[27];
    this.v6l ^= BUF[12] ^ BUF[28];
    this.v6h ^= BUF[13] ^ BUF[29];
    this.v7l ^= BUF[14] ^ BUF[30];
    this.v7h ^= BUF[15] ^ BUF[31];
    BUF.fill(0);
  }

  destroy() {
    this.destroyed = true;
    this.buffer32.fill(0);
    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  }

}

const blake2b = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapConstructorWithOpts)(opts => new BLAKE2b(opts));

/***/ }),
/* 351 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fromBig": () => (/* binding */ fromBig),
/* harmony export */   "split": () => (/* binding */ split),
/* harmony export */   "toBig": () => (/* binding */ toBig),
/* harmony export */   "shrSH": () => (/* binding */ shrSH),
/* harmony export */   "shrSL": () => (/* binding */ shrSL),
/* harmony export */   "rotrSH": () => (/* binding */ rotrSH),
/* harmony export */   "rotrSL": () => (/* binding */ rotrSL),
/* harmony export */   "rotrBH": () => (/* binding */ rotrBH),
/* harmony export */   "rotrBL": () => (/* binding */ rotrBL),
/* harmony export */   "rotr32H": () => (/* binding */ rotr32H),
/* harmony export */   "rotr32L": () => (/* binding */ rotr32L),
/* harmony export */   "rotlSH": () => (/* binding */ rotlSH),
/* harmony export */   "rotlSL": () => (/* binding */ rotlSL),
/* harmony export */   "rotlBH": () => (/* binding */ rotlBH),
/* harmony export */   "rotlBL": () => (/* binding */ rotlBL),
/* harmony export */   "add": () => (/* binding */ add),
/* harmony export */   "add3L": () => (/* binding */ add3L),
/* harmony export */   "add3H": () => (/* binding */ add3H),
/* harmony export */   "add4L": () => (/* binding */ add4L),
/* harmony export */   "add4H": () => (/* binding */ add4H),
/* harmony export */   "add5L": () => (/* binding */ add5L),
/* harmony export */   "add5H": () => (/* binding */ add5H)
/* harmony export */ });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(352);
/*! noble-hashes - MIT License (c) 2021 Paul Miller (paulmillr.com) */
// https://github.com/paulmillr/noble-hashes/pull/13


const U32_MASK64 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__._n)(2 ** 32 - 1);

const _32n = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__._n)(32);

function fromBig(n, le = false) {
  if (le) return {
    h: Number(n & U32_MASK64),
    l: Number(n >> _32n & U32_MASK64)
  };
  return {
    h: Number(n >> _32n & U32_MASK64) | 0,
    l: Number(n & U32_MASK64) | 0
  };
}
function split(lst, le = false) {
  let [Ah, Al] = [new Uint32Array(lst.length), new Uint32Array(lst.length)];

  for (let i = 0; i < lst.length; i++) {
    const {
      h,
      l
    } = fromBig(lst[i], le);
    [Ah[i], Al[i]] = [h, l];
  }

  return [Ah, Al];
}
const toBig = (h, l) => BigInt(h >>> 0) << _32n | BigInt(l >>> 0); // for Shift in [0, 32)

const shrSH = (h, l, s) => h >>> s;
const shrSL = (h, l, s) => h << 32 - s | l >>> s; // Right rotate for Shift in [1, 32)

const rotrSH = (h, l, s) => h >>> s | l << 32 - s;
const rotrSL = (h, l, s) => h << 32 - s | l >>> s; // Right rotate for Shift in (32, 64), NOTE: 32 is special case.

const rotrBH = (h, l, s) => h << 64 - s | l >>> s - 32;
const rotrBL = (h, l, s) => h >>> s - 32 | l << 64 - s; // Right rotate for shift===32 (just swaps l&h)

const rotr32H = (h, l) => l;
const rotr32L = (h, l) => h; // Left rotate for Shift in [1, 32)

const rotlSH = (h, l, s) => h << s | l >>> 32 - s;
const rotlSL = (h, l, s) => l << s | h >>> 32 - s; // Left rotate for Shift in (32, 64), NOTE: 32 is special case.

const rotlBH = (h, l, s) => l << s - 32 | h >>> 64 - s;
const rotlBL = (h, l, s) => h << s - 32 | l >>> 64 - s; // JS uses 32-bit signed integers for bitwise operations which means we cannot
// simple take carry out of low bit sum by shift, we need to use division.

function add(Ah, Al, Bh, Bl) {
  const l = (Al >>> 0) + (Bl >>> 0);
  return {
    h: Ah + Bh + (l / 2 ** 32 | 0) | 0,
    l: l | 0
  };
} // Addition with more than 2 elements

const add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);
const add3H = (low, Ah, Bh, Ch) => Ah + Bh + Ch + (low / 2 ** 32 | 0) | 0;
const add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);
const add4H = (low, Ah, Bh, Ch, Dh) => Ah + Bh + Ch + Dh + (low / 2 ** 32 | 0) | 0;
const add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);
const add5H = (low, Ah, Bh, Ch, Dh, Eh) => Ah + Bh + Ch + Dh + Eh + (low / 2 ** 32 | 0) | 0;

/***/ }),
/* 352 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "_n": () => (/* binding */ _n),
/* harmony export */   "u8": () => (/* binding */ u8),
/* harmony export */   "u32": () => (/* binding */ u32),
/* harmony export */   "createView": () => (/* binding */ createView),
/* harmony export */   "rotr": () => (/* binding */ rotr),
/* harmony export */   "isLE": () => (/* binding */ isLE),
/* harmony export */   "bytesToHex": () => (/* binding */ bytesToHex),
/* harmony export */   "nextTick": () => (/* binding */ nextTick),
/* harmony export */   "asyncLoop": () => (/* binding */ asyncLoop),
/* harmony export */   "toBytes": () => (/* binding */ toBytes),
/* harmony export */   "assertNumber": () => (/* binding */ assertNumber),
/* harmony export */   "assertBool": () => (/* binding */ assertBool),
/* harmony export */   "assertHash": () => (/* binding */ assertHash),
/* harmony export */   "Hash": () => (/* binding */ Hash),
/* harmony export */   "checkOpts": () => (/* binding */ checkOpts),
/* harmony export */   "wrapConstructor": () => (/* binding */ wrapConstructor),
/* harmony export */   "wrapConstructorWithOpts": () => (/* binding */ wrapConstructorWithOpts),
/* harmony export */   "crypto": () => (/* binding */ crypto),
/* harmony export */   "randomBytes": () => (/* binding */ randomBytes)
/* harmony export */ });
/*! noble-hashes - MIT License (c) 2021 Paul Miller (paulmillr.com) */
// https://github.com/paulmillr/noble-hashes/pull/13
// prettier-ignore
// helper to protect against older bundlers
const _n = typeof BigInt !== 'undefined' ? BigInt : () => Number.NaN; // Cast array to different type

const u8 = arr => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);
const u32 = arr => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4)); // Cast array to view

const createView = arr => new DataView(arr.buffer, arr.byteOffset, arr.byteLength); // The rotate right (circular right shift) operation for uint32

const rotr = (word, shift) => word << 32 - shift | word >>> shift;
const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44; // There is almost no big endian hardware, but js typed arrays uses platform specific endianess.
// So, just to be sure not to corrupt anything.

if (!isLE) throw new Error('Non little-endian hardware is not supported');
const hexes = Array.from({
  length: 256
}, (v, i) => i.toString(16).padStart(2, '0'));
function bytesToHex(uint8a) {
  // pre-caching chars could speed this up 6x.
  let hex = '';

  for (let i = 0; i < uint8a.length; i++) {
    hex += hexes[uint8a[i]];
  }

  return hex;
} // Currently avoid insertion of polyfills with packers (browserify/webpack/etc)
// But setTimeout is pretty slow, maybe worth to investigate howto do minimal polyfill here

const nextTick = (() => {
  const nodeRequire = typeof module !== 'undefined' && typeof module.require === 'function' && module.require.bind(module);

  try {
    if (nodeRequire) {
      const {
        setImmediate
      } = nodeRequire('timers');
      return () => new Promise(resolve => setImmediate(resolve));
    }
  } catch (e) {}

  return () => new Promise(resolve => setTimeout(resolve, 0));
})(); // Returns control to thread each 'tick' ms to avoid blocking

async function asyncLoop(iters, tick, cb) {
  let ts = Date.now();

  for (let i = 0; i < iters; i++) {
    cb(i); // Date.now() is not monotonic, so in case if clock goes backwards we return return control too

    const diff = Date.now() - ts;
    if (diff >= 0 && diff < tick) continue;
    await nextTick();
    ts += diff;
  }
}
function toBytes(data) {
  if (typeof data === 'string') data = new TextEncoder().encode(data);
  if (!(data instanceof Uint8Array)) throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);
  return data;
}
function assertNumber(n) {
  if (!Number.isSafeInteger(n)) throw new Error(`Wrong integer: ${n}`);
}
function assertBool(b) {
  if (typeof b !== 'boolean') {
    throw new Error(`Expected boolean, not ${b}`);
  }
}
function assertHash(hash) {
  if (typeof hash !== 'function' || typeof hash.init !== 'function') throw new Error('Hash should be wrapped by utils.wrapConstructor');
  assertNumber(hash.outputLen);
  assertNumber(hash.blockLen);
} // For runtime check if class implements interface

class Hash {
  constructor() {
    this.blockLen = void 0;
    this.outputLen = void 0;
  }

  // Safe version that clones internal state
  clone() {
    return this._cloneInto();
  }

}

// Check if object doens't have custom constructor (like Uint8Array/Array)
const isPlainObject = obj => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;

function checkOpts(def, _opts) {
  if (_opts !== undefined && (typeof _opts !== 'object' || !isPlainObject(_opts))) throw new TypeError('Options should be object or undefined');
  const opts = Object.assign(def, _opts);
  return opts;
}
function wrapConstructor(hashConstructor) {
  const hashC = message => hashConstructor().update(toBytes(message)).digest();

  const tmp = hashConstructor();
  hashC.outputLen = tmp.outputLen;
  hashC.blockLen = tmp.blockLen;

  hashC.create = () => hashConstructor();

  hashC.init = hashC.create;
  return hashC;
}
function wrapConstructorWithOpts(hashCons) {
  const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();

  const tmp = hashCons({});
  hashC.outputLen = tmp.outputLen;
  hashC.blockLen = tmp.blockLen;

  hashC.create = opts => hashCons(opts);

  hashC.init = hashC.create;
  return hashC;
}
const crypto = (() => {
  const webCrypto = typeof self === 'object' && 'crypto' in self ? self.crypto : undefined;
  const nodeRequire = typeof module !== 'undefined' && typeof require === 'function';
  return {
    node: nodeRequire && !webCrypto ? require('crypto') : undefined,
    web: webCrypto
  };
})();
function randomBytes(bytesLength = 32) {
  if (crypto.web) {
    return crypto.web.getRandomValues(new Uint8Array(bytesLength));
  } else if (crypto.node) {
    return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);
  } else {
    throw new Error("The environment doesn't have randomBytes function");
  }
}

/***/ }),
/* 353 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SIGMA": () => (/* binding */ SIGMA),
/* harmony export */   "BLAKE2": () => (/* binding */ BLAKE2)
/* harmony export */ });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(352);
/*! noble-hashes - MIT License (c) 2021 Paul Miller (paulmillr.com) */
// https://github.com/paulmillr/noble-hashes/pull/13
 // prettier-ignore

const SIGMA = new Uint8Array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, // For BLAKE2b, the two extra permutations for rounds 10 and 11 are SIGMA[10..11] = SIGMA[0..1].
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3]);
class BLAKE2 extends _utils_js__WEBPACK_IMPORTED_MODULE_0__.Hash {
  constructor(blockLen, outputLen, opts = {}, keyLen, saltLen, persLen) {
    super();
    this.blockLen = blockLen;
    this.outputLen = outputLen;
    this.buffer = void 0;
    this.buffer32 = void 0;
    this.length = 0;
    this.pos = 0;
    this.finished = false;
    this.destroyed = false;
    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertNumber)(blockLen);
    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertNumber)(outputLen);
    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertNumber)(keyLen);
    if (outputLen < 0 || outputLen > keyLen) throw new Error('Blake2: outputLen bigger than keyLen');
    if (opts.key !== undefined && (opts.key.length < 1 || opts.key.length > keyLen)) throw new Error(`Key should be up 1..${keyLen} byte long or undefined`);
    if (opts.salt !== undefined && opts.salt.length !== saltLen) throw new Error(`Salt should be ${saltLen} byte long or undefined`);
    if (opts.personalization !== undefined && opts.personalization.length !== persLen) throw new Error(`Personalization should be ${persLen} byte long or undefined`);
    this.buffer32 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.u32)(this.buffer = new Uint8Array(blockLen));
  }

  update(data) {
    if (this.destroyed) throw new Error('instance is destroyed'); // Main difference with other hashes: there is flag for last block,
    // so we cannot process current block before we know that there
    // is the next one. This significantly complicates logic and reduces ability
    // to do zero-copy processing

    const {
      finished,
      blockLen,
      buffer,
      buffer32
    } = this;
    if (finished) throw new Error('digest() was already called');
    data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.toBytes)(data);
    const len = data.length;

    for (let pos = 0; pos < len;) {
      // If buffer is full and we still have input (don't process last block, same as blake2s)
      if (this.pos === blockLen) {
        this.compress(buffer32, 0, false);
        this.pos = 0;
      }

      const take = Math.min(blockLen - this.pos, len - pos);
      const dataOffset = data.byteOffset + pos; // full block && aligned to 4 bytes && not last in input

      if (take === blockLen && !(dataOffset % 4) && pos + take < len) {
        const data32 = new Uint32Array(data.buffer, dataOffset, Math.floor((len - pos) / 4));

        for (let pos32 = 0; pos + blockLen < len; pos32 += buffer32.length, pos += blockLen) {
          this.length += blockLen;
          this.compress(data32, pos32, false);
        }

        continue;
      }

      buffer.set(data.subarray(pos, pos + take), this.pos);
      this.pos += take;
      this.length += take;
      pos += take;
    }

    return this;
  }

  digestInto(out) {
    if (this.destroyed) throw new Error('instance is destroyed');
    if (!(out instanceof Uint8Array) || out.length < this.outputLen) throw new Error('_Blake2: Invalid output buffer');
    const {
      finished,
      pos,
      buffer32
    } = this;
    if (finished) throw new Error('digest() was already called');
    this.finished = true; // Padding

    this.buffer.subarray(pos).fill(0);
    this.compress(buffer32, 0, true);
    const out32 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.u32)(out);
    this.get().forEach((v, i) => out32[i] = v);
  }

  digest() {
    const {
      buffer,
      outputLen
    } = this;
    this.digestInto(buffer);
    const res = buffer.slice(0, outputLen);
    this.destroy();
    return res;
  }

  _cloneInto(to) {
    const {
      buffer,
      length,
      finished,
      destroyed,
      outputLen,
      pos
    } = this;
    to || (to = new this.constructor({
      dkLen: outputLen
    }));
    to.set(...this.get());
    to.length = length;
    to.finished = finished;
    to.destroyed = destroyed;
    to.outputLen = outputLen;
    to.buffer.set(buffer);
    to.pos = pos;
    return to;
  }

}

/***/ }),
/* 354 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAsHex": () => (/* binding */ createAsHex),
/* harmony export */   "createBitHasher": () => (/* binding */ createBitHasher)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(196);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
 // eslint-disable-next-line @typescript-eslint/no-explicit-any

function createAsHex(fn) {
  return (...args) => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToHex)(fn(...args));
}
function createBitHasher(bitLength, fn) {
  return (data, onlyJs) => fn(data, bitLength, onlyJs);
}

/***/ }),
/* 355 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "allExtensions": () => (/* binding */ allExtensions),
/* harmony export */   "fallbackExtensions": () => (/* binding */ fallbackExtensions),
/* harmony export */   "findUnknownExtensions": () => (/* binding */ findUnknownExtensions),
/* harmony export */   "expandExtensionTypes": () => (/* binding */ expandExtensionTypes)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(122);
/* harmony import */ var _polkadot_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(358);
/* harmony import */ var _shell_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(359);
/* harmony import */ var _statemint_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(360);
/* harmony import */ var _substrate_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(356);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0




 // A mapping of the known signed extensions to the extra fields that they
// contain. Unlike in the actual extensions, we define the extra fields not
// as a Tuple, but rather as a struct so they can be named. These will be
// expanded into the various fields when added to the payload (we only
// support V4 onwards with these, V3 and earlier are deemed fixed))

const allExtensions = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, _substrate_js__WEBPACK_IMPORTED_MODULE_1__.substrate, _polkadot_js__WEBPACK_IMPORTED_MODULE_2__.polkadot, _shell_js__WEBPACK_IMPORTED_MODULE_3__.shell, _statemint_js__WEBPACK_IMPORTED_MODULE_4__.statemint); // the v4 signed extensions prior to the point of exposing these to the
// metadata. This may not match 100% with the current defaults and are used
// when not specified in the metadata (which is for very old chains). The
// order is important here, as applied by default

const fallbackExtensions = ['CheckVersion', 'CheckGenesis', 'CheckEra', 'CheckNonce', 'CheckWeight', 'ChargeTransactionPayment', 'CheckBlockGasLimit'];
function findUnknownExtensions(extensions, userExtensions = {}) {
  const names = [...Object.keys(allExtensions), ...Object.keys(userExtensions)];
  return extensions.filter(k => !names.includes(k));
}
function expandExtensionTypes(extensions, type, userExtensions = {}) {
  return extensions // Always allow user extensions first - these should provide overrides
  .map(k => userExtensions[k] || allExtensions[k]).filter(info => !!info).reduce((result, info) => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)(result, info[type]), {});
}

/***/ }),
/* 356 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "substrate": () => (/* binding */ substrate)
/* harmony export */ });
/* harmony import */ var _emptyCheck_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(357);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

const CheckMortality = {
  extrinsic: {
    era: 'ExtrinsicEra'
  },
  payload: {
    blockHash: 'Hash'
  }
};
const substrate = {
  ChargeTransactionPayment: {
    extrinsic: {
      tip: 'Compact<Balance>'
    },
    payload: {}
  },
  CheckBlockGasLimit: _emptyCheck_js__WEBPACK_IMPORTED_MODULE_0__.emptyCheck,
  CheckEra: CheckMortality,
  CheckGenesis: {
    extrinsic: {},
    payload: {
      genesisHash: 'Hash'
    }
  },
  CheckMortality,
  CheckNonce: {
    extrinsic: {
      nonce: 'Compact<Index>'
    },
    payload: {}
  },
  CheckSpecVersion: {
    extrinsic: {},
    payload: {
      specVersion: 'u32'
    }
  },
  CheckTxVersion: {
    extrinsic: {},
    payload: {
      transactionVersion: 'u32'
    }
  },
  CheckVersion: {
    extrinsic: {},
    payload: {
      specVersion: 'u32'
    }
  },
  CheckWeight: _emptyCheck_js__WEBPACK_IMPORTED_MODULE_0__.emptyCheck,
  LockStakingStatus: _emptyCheck_js__WEBPACK_IMPORTED_MODULE_0__.emptyCheck,
  ValidateEquivocationReport: _emptyCheck_js__WEBPACK_IMPORTED_MODULE_0__.emptyCheck
};

/***/ }),
/* 357 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "emptyCheck": () => (/* binding */ emptyCheck)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
const emptyCheck = {
  extrinsic: {},
  payload: {}
};

/***/ }),
/* 358 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "polkadot": () => (/* binding */ polkadot)
/* harmony export */ });
/* harmony import */ var _emptyCheck_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(357);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

const polkadot = {
  LimitParathreadCommits: _emptyCheck_js__WEBPACK_IMPORTED_MODULE_0__.emptyCheck,
  OnlyStakingAndClaims: _emptyCheck_js__WEBPACK_IMPORTED_MODULE_0__.emptyCheck,
  PrevalidateAttests: _emptyCheck_js__WEBPACK_IMPORTED_MODULE_0__.emptyCheck,
  RestrictFunctionality: _emptyCheck_js__WEBPACK_IMPORTED_MODULE_0__.emptyCheck,
  TransactionCallFilter: _emptyCheck_js__WEBPACK_IMPORTED_MODULE_0__.emptyCheck,
  ValidateDoubleVoteReports: _emptyCheck_js__WEBPACK_IMPORTED_MODULE_0__.emptyCheck
};

/***/ }),
/* 359 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "shell": () => (/* binding */ shell)
/* harmony export */ });
/* harmony import */ var _emptyCheck_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(357);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

const shell = {
  DisallowSigned: _emptyCheck_js__WEBPACK_IMPORTED_MODULE_0__.emptyCheck
};

/***/ }),
/* 360 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "statemint": () => (/* binding */ statemint)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
const statemint = {
  ChargeAssetTxPayment: {
    extrinsic: {
      tip: 'Compact<Balance>',
      // eslint-disable-next-line sort-keys
      assetId: 'Option<AssetId>'
    },
    payload: {}
  }
};

/***/ }),
/* 361 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Json": () => (/* binding */ Json)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(320);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(81);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(292);
/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(321);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0


/** @internal */

function decodeJson(value) {
  return Object.entries(value || {});
}
/**
 * @name Json
 * @description
 * Wraps the a JSON structure retrieve via RPC. It extends the standard JS Map with. While it
 * implements a Codec, it is limited in that it can only be used with input objects via RPC,
 * i.e. no hex decoding. Unlike a struct, this waps a JSON object with unknown keys
 * @noInheritDoc
 */


class Json extends Map {
  constructor(registry, value) {
    const decoded = decodeJson(value);
    super(decoded);
    this.registry = void 0;
    this.createdAtHash = void 0;
    this.registry = registry;
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectProperties)(this, decoded.map(([k]) => k), k => this.get(k));
  }
  /**
   * @description Always 0, never encodes as a Uint8Array
   */


  get encodedLength() {
    return 0;
  }
  /**
   * @description returns a hash of the contents
   */


  get hash() {
    return this.registry.hash(this.toU8a());
  }
  /**
   * @description Checks if the value is an empty value
   */


  get isEmpty() {
    return [...this.keys()].length === 0;
  }
  /**
   * @description Compares the value of the input to see if there is a match
   */


  eq(other) {
    return (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_1__.compareMap)(this, other);
  }
  /**
   * @description Unimplemented, will throw
   */


  toHex() {
    throw new Error('Unimplemented');
  }
  /**
   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
   */


  toHuman() {
    return [...this.entries()].reduce((json, [key, value]) => {
      json[key] = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isFunction)(value.toHuman) ? value.toHuman() : value;
      return json;
    }, {});
  }
  /**
   * @description Converts the Object to JSON, typically used for RPC transfers
   */


  toJSON() {
    return [...this.entries()].reduce((json, [key, value]) => {
      json[key] = value;
      return json;
    }, {});
  }
  /**
   * @description Returns the base runtime type name for this instance
   */


  toRawType() {
    return 'Json';
  }
  /**
   * @description Returns the string representation of the value
   */


  toString() {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.stringify)(this.toJSON());
  }
  /**
   * @description Unimplemented, will throw
   */
  // eslint-disable-next-line @typescript-eslint/no-unused-vars


  toU8a(isBare) {
    throw new Error('Unimplemented');
  }

}

/***/ }),
/* 362 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Metadata": () => (/* binding */ Metadata)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(126);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(178);
/* harmony import */ var _MetadataVersioned_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(363);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

 // magic u32 preceding the version id

const VERSION_IDX = 4; // magic + lowest supported version

const EMPTY_METADATA = new Uint8Array([0x6d, 0x65, 0x74, 0x61, 9]);
const EMPTY_U8A = new Uint8Array();

function toU8a(value = EMPTY_U8A) {
  if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.isHex)(value)) {
    return toU8a((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToU8a)(value));
  } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isU8a)(value)) {
    return value.length === 0 ? EMPTY_METADATA : value;
  }

  throw new Error('Invalid type passed to Metadata constructor');
}

function decodeMetadata(registry, _value) {
  if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isU8a)(_value) || !_value || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.isHex)(_value)) {
    const value = toU8a(_value);
    const version = value[VERSION_IDX];

    try {
      return new _MetadataVersioned_js__WEBPACK_IMPORTED_MODULE_3__.MetadataVersioned(registry, value);
    } catch (error) {
      // This is an f-ing hack as a follow-up to another ugly hack
      // https://github.com/polkadot-js/api/commit/a9211690be6b68ad6c6dad7852f1665cadcfa5b2
      // when we fail on V9, try to re-parse it as v10... yes... HACK
      if (version === 9) {
        value[VERSION_IDX] = 10;
        return decodeMetadata(registry, value);
      }

      throw error;
    }
  }

  return new _MetadataVersioned_js__WEBPACK_IMPORTED_MODULE_3__.MetadataVersioned(registry, _value);
}
/**
 * @name Metadata
 * @description
 * The versioned runtime metadata as a decoded structure
 */


class Metadata extends _MetadataVersioned_js__WEBPACK_IMPORTED_MODULE_3__.MetadataVersioned {
  constructor(registry, value) {
    super(registry, decodeMetadata(registry, value));
  }

}

/***/ }),
/* 363 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MetadataVersioned": () => (/* binding */ MetadataVersioned)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(80);
/* harmony import */ var _codec_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(319);
/* harmony import */ var _v9_toV10_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(374);
/* harmony import */ var _v10_toV11_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(375);
/* harmony import */ var _v11_toV12_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(376);
/* harmony import */ var _v12_toV13_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(377);
/* harmony import */ var _v13_toV14_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(378);
/* harmony import */ var _v14_toLatest_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(399);
/* harmony import */ var _MagicNumber_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(364);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(373);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(400);


// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0










const LATEST_VERSION = 14;
/**
 * @name MetadataVersioned
 * @description
 * The versioned runtime metadata as a decoded structure
 */

var _converted = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("converted");

var _assertVersion = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("assertVersion");

var _getVersion = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("getVersion");

var _metadata = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("metadata");

class MetadataVersioned extends _codec_index_js__WEBPACK_IMPORTED_MODULE_2__.Struct {
  constructor(registry, value) {
    // console.time('MetadataVersioned')
    super(registry, {
      magicNumber: _MagicNumber_js__WEBPACK_IMPORTED_MODULE_3__.MagicNumber,
      metadata: 'MetadataAll'
    }, value); // console.timeEnd('MetadataVersioned')

    Object.defineProperty(this, _converted, {
      writable: true,
      value: new Map()
    });
    Object.defineProperty(this, _assertVersion, {
      writable: true,
      value: version => {
        (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.assert)(this.version <= version, () => `Cannot convert metadata from version ${this.version} to ${version}`);
        return this.version === version;
      }
    });
    Object.defineProperty(this, _getVersion, {
      writable: true,
      value: (version, fromPrev) => {
        const asCurr = `asV${version}`;
        const asPrev = version === 'latest' ? `asV${LATEST_VERSION}` : `asV${version - 1}`;

        if (version !== 'latest' && (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _assertVersion)[_assertVersion](version)) {
          return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _metadata)[_metadata]()[asCurr];
        }

        if (!(0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _converted)[_converted].has(version)) {
          (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _converted)[_converted].set(version, fromPrev(this.registry, this[asPrev], this.version));
        }

        return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _converted)[_converted].get(version);
      }
    });
    Object.defineProperty(this, _metadata, {
      writable: true,
      value: () => {
        return this.get('metadata');
      }
    });
  }

  /**
   * @description Returns the wrapped metadata as a limited calls-only (latest) version
   */
  get asCallsOnly() {
    return new MetadataVersioned(this.registry, {
      magicNumber: this.magicNumber,
      metadata: this.registry.createType('MetadataAll', (0,_util_index_js__WEBPACK_IMPORTED_MODULE_5__.toCallsOnly)(this.registry, this.asLatest), LATEST_VERSION)
    });
  }
  /**
   * @description Returns the wrapped metadata as a V9 object
   */


  get asV9() {
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _assertVersion)[_assertVersion](9);

    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _metadata)[_metadata]().asV9;
  }
  /**
   * @description Returns the wrapped values as a V10 object
   */


  get asV10() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _getVersion)[_getVersion](10, _v9_toV10_js__WEBPACK_IMPORTED_MODULE_6__.toV10);
  }
  /**
   * @description Returns the wrapped values as a V11 object
   */


  get asV11() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _getVersion)[_getVersion](11, _v10_toV11_js__WEBPACK_IMPORTED_MODULE_7__.toV11);
  }
  /**
   * @description Returns the wrapped values as a V12 object
   */


  get asV12() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _getVersion)[_getVersion](12, _v11_toV12_js__WEBPACK_IMPORTED_MODULE_8__.toV12);
  }
  /**
   * @description Returns the wrapped values as a V13 object
   */


  get asV13() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _getVersion)[_getVersion](13, _v12_toV13_js__WEBPACK_IMPORTED_MODULE_9__.toV13);
  }
  /**
   * @description Returns the wrapped values as a V14 object
   */


  get asV14() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _getVersion)[_getVersion](14, _v13_toV14_js__WEBPACK_IMPORTED_MODULE_10__.toV14);
  }
  /**
   * @description Returns the wrapped values as a latest version object
   */


  get asLatest() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _getVersion)[_getVersion]('latest', _v14_toLatest_js__WEBPACK_IMPORTED_MODULE_11__.toLatest);
  }
  /**
   * @description The magicNumber for the Metadata (known constant)
   */


  get magicNumber() {
    return this.get('magicNumber');
  }
  /**
   * @description the metadata version this structure represents
   */


  get version() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _metadata)[_metadata]().index;
  }

  getUniqTypes(throwError) {
    return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_12__.getUniqTypes)(this.registry, this.asLatest, throwError);
  }
  /**
   * @description Converts the Object to JSON, typically used for RPC transfers
   */


  toJSON() {
    // HACK(y): ensure that we apply the aliases if we have not done so already, this is
    // needed to ensure we have the correct overrides (which is only applied in toLatest)
    // eslint-disable-next-line no-unused-expressions
    this.asLatest;
    return super.toJSON();
  }

}

/***/ }),
/* 364 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MAGIC_NUMBER": () => (/* binding */ MAGIC_NUMBER),
/* harmony export */   "MagicNumber": () => (/* binding */ MagicNumber)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(80);
/* harmony import */ var _primitive_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(365);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0


const MAGIC_NUMBER = 0x6174656d; // `meta`, reversed for Little Endian encoding

class MagicNumber extends _primitive_index_js__WEBPACK_IMPORTED_MODULE_0__.u32 {
  constructor(registry, value) {
    super(registry, value);

    if (!this.isEmpty) {
      (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(this.eq(MAGIC_NUMBER), () => `MagicNumber mismatch: expected ${registry.createType('u32', MAGIC_NUMBER).toHex()}, found ${this.toHex()}`);
    }
  }

}

/***/ }),
/* 365 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "u32": () => (/* binding */ u32)
/* harmony export */ });
/* harmony import */ var _codec_UInt_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(366);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name u32
 * @description
 * A 32-bit unsigned integer
 */

class u32 extends _codec_UInt_js__WEBPACK_IMPORTED_MODULE_0__.UInt["with"](32) {
  constructor(...args) {
    super(...args);
    this.__UIntType = 'u32';
  }

}

/***/ }),
/* 366 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UInt": () => (/* binding */ UInt)
/* harmony export */ });
/* harmony import */ var _AbstractInt_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(367);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name UInt
 * @description
 * A generic unsigned integer codec. For Substrate all numbers are Little Endian encoded,
 * this handles the encoding and decoding of those numbers. Upon construction
 * the bitLength is provided and any additional use keeps the number to this
 * length. This extends `BN`, so all methods available on a normal `BN` object
 * is available here.
 * @noInheritDoc
 */

class UInt extends _AbstractInt_js__WEBPACK_IMPORTED_MODULE_0__.AbstractInt {
  static with(bitLength, typeName) {
    return class extends UInt {
      constructor(registry, value) {
        super(registry, value, bitLength);
      }

      toRawType() {
        return typeName || super.toRawType();
      }

    };
  }

}

/***/ }),
/* 367 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DEFAULT_UINT_BITS": () => (/* binding */ DEFAULT_UINT_BITS),
/* harmony export */   "AbstractInt": () => (/* binding */ AbstractInt)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(88);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(240);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(215);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(237);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(126);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(127);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(125);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(368);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(369);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(372);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(121);


// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

const DEFAULT_UINT_BITS = 64; // Maximum allowed integer for JS is 2^53 - 1, set limit at 52
// In this case however, we always print any >32 as hex

const MAX_NUMBER_BITS = 52;
const MUL_P = new _polkadot_util__WEBPACK_IMPORTED_MODULE_2__(10000);
const FORMATTERS = [['Perquintill', _polkadot_util__WEBPACK_IMPORTED_MODULE_3__.BN_QUINTILL], ['Perbill', _polkadot_util__WEBPACK_IMPORTED_MODULE_3__.BN_BILLION], ['Permill', _polkadot_util__WEBPACK_IMPORTED_MODULE_3__.BN_MILLION], ['Percent', _polkadot_util__WEBPACK_IMPORTED_MODULE_3__.BN_HUNDRED]];

function toPercentage(value, divisor) {
  return `${(value.mul(MUL_P).div(divisor).toNumber() / 100).toFixed(2)}%`;
}
/** @internal */


function decodeAbstractInt(value, bitLength, isNegative) {
  if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.isU8a)(value)) {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.u8aToBn)(value.subarray(0, bitLength / 8), {
      isLe: true,
      isNegative
    }).toString();
  } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.isBn)(value)) {
    return value.toString();
  } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_7__.isHex)(value, -1, true)) {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_8__.hexToBn)(value, {
      isLe: false,
      isNegative
    }).toString();
  }

  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.bnToBn)(value).toString();
}
/**
 * @name AbstractInt
 * @ignore
 * @noInheritDoc
 */


var _bitLength = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("bitLength");

var _isSigned = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("isSigned");

class AbstractInt extends _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ {
  constructor(registry, value = 0, bitLength = DEFAULT_UINT_BITS, isSigned = false) {
    // Construct via a string, which will be passed in the BN constructor.
    // It would be ideal to actually return a BN, but there is an issue:
    // https://github.com/indutny/bn.js/issues/206
    super( // shortcut isU8a as used in SCALE decoding
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.isU8a)(value) ? (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.u8aToBn)(value.subarray(0, bitLength / 8), {
      isLe: true,
      isNegative: isSigned
    }).toString() : decodeAbstractInt(value, bitLength, isSigned));
    this.registry = void 0;
    this.createdAtHash = void 0;
    this.encodedLength = void 0;
    Object.defineProperty(this, _bitLength, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _isSigned, {
      writable: true,
      value: void 0
    });
    this.registry = registry;
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _bitLength)[_bitLength] = bitLength;
    this.encodedLength = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _bitLength)[_bitLength] / 8;
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _isSigned)[_isSigned] = isSigned;
    const isPositive = this.gte(_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.BN_ZERO);
    const maxBits = bitLength - (isSigned && isPositive ? 1 : 0);
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_10__.assert)(isSigned || isPositive, () => `${this.toRawType()}: Negative number passed to unsigned type`);
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_10__.assert)(super.bitLength() <= maxBits, () => `${this.toRawType()}: Input too large. Found input with ${super.bitLength()} bits, expected ${maxBits}`);
  }
  /**
   * @description returns a hash of the contents
   */


  get hash() {
    return this.registry.hash(this.toU8a());
  }
  /**
   * @description Checks if the value is a zero value (align elsewhere)
   */


  get isEmpty() {
    return this.isZero();
  }
  /**
   * @description Checks if the value is an unsigned type
   */


  get isUnsigned() {
    return !(0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _isSigned)[_isSigned];
  }
  /**
   * @description Returns the number of bits in the value
   */


  bitLength() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _bitLength)[_bitLength];
  }
  /**
   * @description Compares the value of the input to see if there is a match
   */
  // eslint-disable-next-line @typescript-eslint/no-explicit-any


  eq(other) {
    // Here we are actually overriding the built-in .eq to take care of both
    // number and BN inputs (no `.eqn` needed) - numbers will be converted
    return super.eq((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_7__.isHex)(other) ? (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_8__.hexToBn)(other.toString(), {
      isLe: false,
      isNegative: (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _isSigned)[_isSigned]
    }) : (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.bnToBn)(other));
  }
  /**
   * @description True if this value is the max of the type
   */


  isMax() {
    const u8a = this.toU8a().filter(b => b === 0xff);
    return u8a.length === (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _bitLength)[_bitLength] / 8;
  }
  /**
   * @description Returns a BigInt representation of the number
   */


  toBigInt() {
    return BigInt(this.toString());
  }
  /**
   * @description Returns the BN representation of the number. (Compatibility)
   */


  toBn() {
    return this;
  }
  /**
   * @description Returns a hex string representation of the value
   */


  toHex(isLe = false) {
    // For display/JSON, this is BE, for compare, use isLe
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_11__.bnToHex)(this, {
      bitLength: this.bitLength(),
      isLe,
      isNegative: !this.isUnsigned
    });
  }
  /**
   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
   */
  // eslint-disable-next-line @typescript-eslint/no-unused-vars


  toHuman(isExpanded) {
    const rawType = this.toRawType();

    if (rawType === 'Balance') {
      return this.isMax() ? 'everything' // FIXME In the case of multiples we need some way of detecting which instance this belongs
      // to. as it stands we will always format (incorrectly) against the first token defined
      : (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_12__.formatBalance)(this, {
        decimals: this.registry.chainDecimals[0],
        withSi: true,
        withUnit: this.registry.chainTokens[0]
      });
    }

    const [, divisor] = FORMATTERS.find(([type]) => type === rawType) || [];
    return divisor ? toPercentage(this, divisor) : (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_13__.formatNumber)(this);
  }
  /**
   * @description Converts the Object to JSON, typically used for RPC transfers
   */


  toJSON(onlyHex = false) {
    // FIXME this return type should by string | number, however BN returns string
    // Options here are
    //   - super.bitLength() - the actual used bits
    //   - this.#bitLength - the type bits (this should be used, however contracts RPC is problematic)
    return onlyHex || super.bitLength() > MAX_NUMBER_BITS ? this.toHex() : this.toNumber();
  }
  /**
   * @description Returns the base runtime type name for this instance
   */


  toRawType() {
    // NOTE In the case of balances, which have a special meaning on the UI
    // and can be interpreted differently, return a specific value for it so
    // underlying it always matches (no matter which length it actually is)
    return this instanceof this.registry.createClass('Balance') ? 'Balance' : `${this.isUnsigned ? 'u' : 'i'}${this.bitLength()}`;
  }
  /**
   * @description Returns the string representation of the value
   * @param base The base to use for the conversion
   */


  toString(base) {
    // only included here since we do not inherit docs
    return super.toString(base);
  }
  /**
   * @description Encodes the value as a Uint8Array as per the SCALE specifications
   * @param isBare true when the value has none of the type-specific prefixes (internal)
   */
  // eslint-disable-next-line @typescript-eslint/no-unused-vars


  toU8a(isBare) {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_14__.bnToU8a)(this, {
      bitLength: this.bitLength(),
      isLe: true,
      isNegative: !this.isUnsigned
    });
  }

}

/***/ }),
/* 368 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "bnToHex": () => (/* binding */ bnToHex)
/* harmony export */ });
/* harmony import */ var _is_number_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(124);
/* harmony import */ var _object_spread_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(122);
/* harmony import */ var _u8a_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(196);
/* harmony import */ var _toU8a_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(121);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0




const ZERO_STR = '0x00';
const DEFAULT_OPTS = {
  bitLength: -1,
  isLe: false,
  isNegative: false
};
/**
 * @name bnToHex
 * @summary Creates a hex value from a BN.js bignumber object.
 * @description
 * `null` inputs returns a `0x` result, BN values return the actual value as a `0x` prefixed hex value. Anything that is not a BN object throws an error. With `bitLength` set, it fixes the number to the specified length.
 * @example
 * <BR>
 *
 * ```javascript
 * import BN from 'bn.js';
 * import { bnToHex } from '@polkadot/util';
 *
 * bnToHex(new BN(0x123456)); // => '0x123456'
 * ```
 */

function bnToHex(value, arg1 = DEFAULT_OPTS, arg2) {
  if (!value) {
    return ZERO_STR;
  }

  return (0,_u8a_index_js__WEBPACK_IMPORTED_MODULE_0__.u8aToHex)((0,_toU8a_js__WEBPACK_IMPORTED_MODULE_1__.bnToU8a)(value, (0,_object_spread_js__WEBPACK_IMPORTED_MODULE_2__.objectSpread)( // We spread here, the default for hex values is BE (JSONRPC via substrate)
  {
    isLe: false,
    isNegative: false
  }, (0,_is_number_js__WEBPACK_IMPORTED_MODULE_3__.isNumber)(arg1) ? {
    bitLength: arg1,
    isLe: arg2
  } : arg1)));
}



/***/ }),
/* 369 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "formatBalance": () => (/* binding */ formatBalance)
/* harmony export */ });
/* harmony import */ var _bn_toBn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(125);
/* harmony import */ var _is_boolean_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(128);
/* harmony import */ var _is_undefined_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(82);
/* harmony import */ var _formatDecimal_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(371);
/* harmony import */ var _si_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(370);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0





const DEFAULT_DECIMALS = 0;
const DEFAULT_UNIT = _si_js__WEBPACK_IMPORTED_MODULE_0__.SI[_si_js__WEBPACK_IMPORTED_MODULE_0__.SI_MID].text;
let defaultDecimals = DEFAULT_DECIMALS;
let defaultUnit = DEFAULT_UNIT; // Formats a string/number with <prefix>.<postfix><type> notation

function _formatBalance(input, options = true, optDecimals = defaultDecimals) {
  let text = (0,_bn_toBn_js__WEBPACK_IMPORTED_MODULE_1__.bnToBn)(input).toString();

  if (text.length === 0 || text === '0') {
    return '0';
  } // strip the negative sign so we can work with clean groupings, re-add this in the
  // end when we return the result (from here on we work with positive numbers)


  const isNegative = text[0].startsWith('-');

  if (isNegative) {
    text = text.substr(1);
  } // extract options - the boolean case is for backwards-compat


  const {
    decimals = optDecimals,
    forceUnit = undefined,
    withSi = true,
    withSiFull = false,
    withUnit = true
  } = (0,_is_boolean_js__WEBPACK_IMPORTED_MODULE_2__.isBoolean)(options) ? {
    withSi: options
  } : options; // NOTE We start at midpoint (8) minus 1 - this means that values display as
  // 123.456 instead of 0.123k (so always 6 relevant). Additionally we use ceil
  // so there are at most 3 decimal before the decimal separator

  const si = (0,_si_js__WEBPACK_IMPORTED_MODULE_0__.calcSi)(text, decimals, forceUnit);
  const mid = text.length - (decimals + si.power);
  const prefix = text.substr(0, mid);
  const padding = mid < 0 ? 0 - mid : 0;
  const postfix = `${`${new Array(padding + 1).join('0')}${text}`.substr(mid < 0 ? 0 : mid)}0000`.substr(0, 4);
  const units = withSi || withSiFull ? si.value === '-' ? withUnit ? ` ${(0,_is_boolean_js__WEBPACK_IMPORTED_MODULE_2__.isBoolean)(withUnit) ? si.text : withUnit}` : '' : ` ${withSiFull ? si.text : si.value}${withUnit ? `${withSiFull ? ' ' : ''}${(0,_is_boolean_js__WEBPACK_IMPORTED_MODULE_2__.isBoolean)(withUnit) ? _si_js__WEBPACK_IMPORTED_MODULE_0__.SI[_si_js__WEBPACK_IMPORTED_MODULE_0__.SI_MID].text : withUnit}` : ''}` : '';
  return `${isNegative ? '-' : ''}${(0,_formatDecimal_js__WEBPACK_IMPORTED_MODULE_3__.formatDecimal)(prefix || '0')}.${postfix}${units}`;
}

const formatBalance = _formatBalance; // eslint-disable-next-line @typescript-eslint/unbound-method

formatBalance.calcSi = (text, decimals = defaultDecimals) => (0,_si_js__WEBPACK_IMPORTED_MODULE_0__.calcSi)(text, decimals); // eslint-disable-next-line @typescript-eslint/unbound-method


formatBalance.findSi = _si_js__WEBPACK_IMPORTED_MODULE_0__.findSi; // eslint-disable-next-line @typescript-eslint/unbound-method

formatBalance.getDefaults = () => {
  return {
    decimals: defaultDecimals,
    unit: defaultUnit
  };
}; // get allowable options to display in a dropdown
// eslint-disable-next-line @typescript-eslint/unbound-method


formatBalance.getOptions = (decimals = defaultDecimals) => {
  return _si_js__WEBPACK_IMPORTED_MODULE_0__.SI.filter(({
    power
  }) => power < 0 ? decimals + power >= 0 : true);
}; // Sets the default decimals to use for formatting (ui-wide)
// eslint-disable-next-line @typescript-eslint/unbound-method


formatBalance.setDefaults = ({
  decimals,
  unit
}) => {
  defaultDecimals = (0,_is_undefined_js__WEBPACK_IMPORTED_MODULE_4__.isUndefined)(decimals) ? defaultDecimals : Array.isArray(decimals) ? decimals[0] : decimals;
  defaultUnit = (0,_is_undefined_js__WEBPACK_IMPORTED_MODULE_4__.isUndefined)(unit) ? defaultUnit : Array.isArray(unit) ? unit[0] : unit;
  _si_js__WEBPACK_IMPORTED_MODULE_0__.SI[_si_js__WEBPACK_IMPORTED_MODULE_0__.SI_MID].text = defaultUnit;
};



/***/ }),
/* 370 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SI_MID": () => (/* binding */ SI_MID),
/* harmony export */   "SI": () => (/* binding */ SI),
/* harmony export */   "findSi": () => (/* binding */ findSi),
/* harmony export */   "calcSi": () => (/* binding */ calcSi)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
const SI_MID = 8;
const SI = [{
  power: -24,
  text: 'yocto',
  value: 'y'
}, {
  power: -21,
  text: 'zepto',
  value: 'z'
}, {
  power: -18,
  text: 'atto',
  value: 'a'
}, {
  power: -15,
  text: 'femto',
  value: 'f'
}, {
  power: -12,
  text: 'pico',
  value: 'p'
}, {
  power: -9,
  text: 'nano',
  value: 'n'
}, {
  power: -6,
  text: 'micro',
  value: 'µ'
}, {
  power: -3,
  text: 'milli',
  value: 'm'
}, {
  power: 0,
  text: 'Unit',
  value: '-'
}, // position 8
{
  power: 3,
  text: 'Kilo',
  value: 'k'
}, {
  power: 6,
  text: 'Mill',
  value: 'M'
}, // Mega, M
{
  power: 9,
  text: 'Bill',
  value: 'B'
}, // Giga, G
{
  power: 12,
  text: 'Tril',
  value: 'T'
}, // Tera, T
{
  power: 15,
  text: 'Peta',
  value: 'P'
}, {
  power: 18,
  text: 'Exa',
  value: 'E'
}, {
  power: 21,
  text: 'Zeta',
  value: 'Z'
}, {
  power: 24,
  text: 'Yotta',
  value: 'Y'
}]; // Given a SI type (e.g. k, m, Y) find the SI definition

function findSi(type) {
  // use a loop here, better RN support (which doesn't have [].find)
  for (let i = 0; i < SI.length; i++) {
    if (SI[i].value === type) {
      return SI[i];
    }
  }

  return SI[SI_MID];
}
function calcSi(text, decimals, forceUnit) {
  if (forceUnit) {
    return findSi(forceUnit);
  }

  const siDefIndex = SI_MID - 1 + Math.ceil((text.length - decimals) / 3);
  return SI[siDefIndex] || SI[siDefIndex < 0 ? 0 : SI.length - 1];
}

/***/ }),
/* 371 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "formatDecimal": () => (/* binding */ formatDecimal)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
// eslint-disable-next-line prefer-regex-literals
const NUMBER_REGEX = new RegExp('(\\d+?)(?=(\\d{3})+(?!\\d)|$)', 'g');
function formatDecimal(value) {
  // We can do this by adjusting the regx, however for the sake of clarity
  // we rather strip and re-add the negative sign in the output
  const isNegative = value[0].startsWith('-');
  const matched = isNegative ? value.substr(1).match(NUMBER_REGEX) : value.match(NUMBER_REGEX);
  return matched ? `${isNegative ? '-' : ''}${matched.join(',')}` : value;
}

/***/ }),
/* 372 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "formatNumber": () => (/* binding */ formatNumber)
/* harmony export */ });
/* harmony import */ var _bn_toBn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(125);
/* harmony import */ var _formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(371);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0


function formatNumber(value) {
  return (0,_formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__.formatDecimal)((0,_bn_toBn_js__WEBPACK_IMPORTED_MODULE_1__.bnToBn)(value).toString());
}

/***/ }),
/* 373 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "toCallsOnly": () => (/* binding */ toCallsOnly)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
function trimDocs(docs) {
  const strings = docs.map(d => d.toString().trim());
  const firstEmpty = strings.findIndex(d => !d.length);
  return firstEmpty === -1 ? strings : strings.slice(0, firstEmpty);
}
/** @internal */


function toCallsOnly(registry, {
  extrinsic,
  lookup,
  pallets
}) {
  return registry.createType('MetadataLatest', {
    extrinsic,
    lookup: {
      types: lookup.types.map(({
        id,
        type
      }) => registry.createType('PortableType', {
        id,
        type: { ...type,
          docs: trimDocs(type.docs)
        }
      }))
    },
    pallets: pallets.map(({
      calls,
      index,
      name
    }) => ({
      calls: registry.createType('Option<PalletCallMetadataLatest>', calls.unwrapOr(null)),
      index,
      name
    }))
  }).toJSON();
}

/***/ }),
/* 374 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "toV10": () => (/* binding */ toV10)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// migrate a storage hasher type
// see https://github.com/paritytech/substrate/pull/4462

/** @internal */
function createStorageHasher(registry, hasher) {
  // Blake2_128_Concat has been added at index 2, so we increment all the
  // indexes greater than 2
  if (hasher.toNumber() >= 2) {
    return registry.createType('StorageHasherV10', hasher.toNumber() + 1);
  }

  return registry.createType('StorageHasherV10', hasher);
}
/** @internal */


function createStorageType(registry, entryType) {
  if (entryType.isMap) {
    return [{ ...entryType.asMap,
      hasher: createStorageHasher(registry, entryType.asMap.hasher)
    }, 1];
  }

  if (entryType.isDoubleMap) {
    return [{ ...entryType.asDoubleMap,
      hasher: createStorageHasher(registry, entryType.asDoubleMap.hasher),
      key2Hasher: createStorageHasher(registry, entryType.asDoubleMap.key2Hasher)
    }, 2];
  }

  return [entryType.asPlain, 0];
}
/** @internal */


function convertModule(registry, mod) {
  const storage = mod.storage.unwrapOr(null);
  return registry.createType('ModuleMetadataV10', { ...mod,
    storage: storage ? { ...storage,
      items: storage.items.map(item => ({ ...item,
        type: registry.createType('StorageEntryTypeV10', ...createStorageType(registry, item.type))
      }))
    } : null
  });
}
/** @internal */


function toV10(registry, {
  modules
}) {
  return registry.createType('MetadataV10', {
    modules: modules.map(mod => convertModule(registry, mod))
  });
}

/***/ }),
/* 375 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "toV11": () => (/* binding */ toV11)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/** @internal */
function toV11(registry, {
  modules
}) {
  return registry.createType('MetadataV11', {
    // This is new in V11, pass V0 here - something non-existing, telling the API to use
    // the fallback for this information (on-chain detection)
    extrinsic: {
      signedExtensions: [],
      version: 0
    },
    modules
  });
}

/***/ }),
/* 376 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "toV12": () => (/* binding */ toV12)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @internal
 **/
function toV12(registry, {
  extrinsic,
  modules
}) {
  return registry.createType('MetadataV12', {
    extrinsic,
    modules: modules.map(mod => registry.createType('ModuleMetadataV12', { ...mod,
      index: 255
    }))
  });
}

/***/ }),
/* 377 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "toV13": () => (/* binding */ toV13)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @internal
 **/
function toV13(registry, metadata) {
  return registry.createType('MetadataV13', metadata);
}

/***/ }),
/* 378 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "toV14": () => (/* binding */ toV14)
/* harmony export */ });
/* harmony import */ var _polkadot_types_known__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(379);
/* harmony import */ var _polkadot_types_known__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(380);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(303);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0


const BOXES = [['<', '>'], ['<', ','], [',', '>'], ['(', ')'], ['(', ','], [',', ','], [',', ')']];
/**
 * Creates a compatible type mapping
 * @internal
 **/

function compatType(compatTypes, _type) {
  const type = _type.toString();

  const index = compatTypes.findIndex(({
    def
  }) => def.HistoricMetaCompat === type);

  if (index !== -1) {
    return index;
  }

  return compatTypes.push({
    def: {
      HistoricMetaCompat: type
    }
  }) - 1;
}

function makeTupleType(compatTypes, entries) {
  return compatTypes.push({
    def: {
      Tuple: entries
    }
  }) - 1;
}

function makeVariantType(modName, variantType, compatTypes, variants) {
  return compatTypes.push({
    def: {
      Variant: {
        variants
      }
    },
    path: [`pallet_${modName.toString()}`, 'pallet', variantType]
  }) - 1;
}
/**
 * @internal
 * generate & register the OriginCaller type
 **/


function registerOriginCaller(registry, modules, metaVersion) {
  registry.register({
    OriginCaller: {
      _enum: modules.map((mod, index) => [mod.name.toString(), metaVersion >= 12 ? mod.index.toNumber() : index]).sort((a, b) => a[1] - b[1]).reduce((result, [name, index]) => {
        for (let i = Object.keys(result).length; i < index; i++) {
          result[`Empty${i}`] = 'Null';
        }

        result[name] = _polkadot_types_known__WEBPACK_IMPORTED_MODULE_0__.knownOrigins[name] || 'Null';
        return result;
      }, {})
    }
  });
}
/**
 * Find and apply the correct type override
 * @internal
 **/


function setTypeOverride(sectionTypes, types) {
  types.forEach(type => {
    const override = Object.keys(sectionTypes).find(aliased => type.eq(aliased));

    if (override) {
      type.setOverride(sectionTypes[override]);
    } else {
      // FIXME: NOT happy with this approach, but gets over the initial hump cased by (Vec<Announcement>,BalanceOf)
      const orig = type.toString();
      const alias = Object.entries(sectionTypes).reduce((result, [src, dst]) => BOXES.reduce((result, [a, z]) => result.replace(`${a}${src}${z}`, `${a}${dst}${z}`), result), orig);

      if (orig !== alias) {
        type.setOverride(alias);
      }
    }
  });
}
/**
 * Apply module-specific type overrides (always be done as part of toV14)
 * @internal
 **/


function convertCalls(compatTypes, registry, modName, calls, sectionTypes) {
  const variants = calls.map(({
    args,
    docs,
    name
  }, index) => {
    setTypeOverride(sectionTypes, args.map(({
      type
    }) => type));
    return registry.createType('SiVariant', {
      docs,
      fields: args.map(({
        name,
        type
      }) => registry.createType('SiField', {
        name,
        type: compatType(compatTypes, type)
      })),
      index,
      name
    });
  });
  return registry.createType('PalletCallMetadataV14', {
    type: makeVariantType(modName, 'Call', compatTypes, variants)
  });
}
/**
 * Apply module-specific type overrides (always be done as part of toV14)
 * @internal
 */


function convertConstants(compatTypes, registry, constants, sectionTypes) {
  return constants.map(({
    docs,
    name,
    type,
    value
  }) => {
    setTypeOverride(sectionTypes, [type]);
    return registry.createType('PalletConstantMetadataV14', {
      docs,
      name,
      type: compatType(compatTypes, type),
      value
    });
  });
}
/**
 * Apply module-specific type overrides (always be done as part of toV14)
 * @internal
 */
// eslint-disable-next-line @typescript-eslint/no-unused-vars


function convertErrors(compatTypes, registry, modName, errors, _sectionTypes) {
  const variants = errors.map(({
    docs,
    name
  }, index) => registry.createType('SiVariant', {
    docs,
    fields: [],
    index,
    name
  }));
  return registry.createType('PalletErrorMetadataV14', {
    type: makeVariantType(modName, 'Error', compatTypes, variants)
  });
}
/**
 * Apply module-specific type overrides (always be done as part of toV14)
 * @internal
 **/


function convertEvents(compatTypes, registry, modName, events, sectionTypes) {
  const variants = events.map(({
    args,
    docs,
    name
  }, index) => {
    setTypeOverride(sectionTypes, args);
    return registry.createType('SiVariant', {
      docs,
      fields: args.map(t => registry.createType('SiField', {
        type: compatType(compatTypes, t)
      })),
      index,
      name
    });
  });
  return registry.createType('PalletEventMetadataV14', {
    type: makeVariantType(modName, 'Event', compatTypes, variants)
  });
}

function createMapEntry(compatTypes, registry, sectionTypes, {
  hashers,
  keys,
  value
}) {
  setTypeOverride(sectionTypes, [value, ...(Array.isArray(keys) ? keys : [keys])]);
  return registry.createType('StorageEntryTypeV14', {
    Map: {
      hashers,
      key: hashers.length === 1 ? compatType(compatTypes, keys[0]) : makeTupleType(compatTypes, keys.map(t => compatType(compatTypes, t))),
      value: compatType(compatTypes, value)
    }
  });
}
/**
 * Apply module-specific storage type overrides (always part of toV14)
 * @internal
 **/


function convertStorage(compatTypes, registry, {
  items,
  prefix
}, sectionTypes) {
  return registry.createType('PalletStorageMetadataV14', {
    items: items.map(({
      docs,
      fallback,
      modifier,
      name,
      type
    }) => {
      let entryType;

      if (type.isPlain) {
        const plain = type.asPlain;
        setTypeOverride(sectionTypes, [plain]);
        entryType = registry.createType('StorageEntryTypeV14', {
          Plain: compatType(compatTypes, plain)
        });
      } else if (type.isMap) {
        const map = type.asMap;
        entryType = createMapEntry(compatTypes, registry, sectionTypes, {
          hashers: [map.hasher],
          keys: [map.key],
          value: map.value
        });
      } else if (type.isDoubleMap) {
        const dm = type.asDoubleMap;
        entryType = createMapEntry(compatTypes, registry, sectionTypes, {
          hashers: [dm.hasher, dm.key2Hasher],
          keys: [dm.key1, dm.key2],
          value: dm.value
        });
      } else {
        const nm = type.asNMap;
        entryType = createMapEntry(compatTypes, registry, sectionTypes, {
          hashers: nm.hashers,
          keys: nm.keyVec,
          value: nm.value
        });
      }

      return registry.createType('StorageEntryMetadataV14', {
        docs,
        fallback,
        modifier,
        name,
        type: entryType
      });
    }),
    prefix
  });
}
/** @internal */
// eslint-disable-next-line @typescript-eslint/no-unused-vars


function convertExtrinsic(registry, {
  signedExtensions,
  version
}) {
  return registry.createType('ExtrinsicMetadataV14', {
    signedExtensions: signedExtensions.map(identifier => ({
      identifier,
      type: 0 // we don't map the fields at all

    })),
    type: 0,
    // Map to extrinsic like in v14?
    version: version
  });
}
/** @internal */


function createPallet(compatTypes, registry, mod, {
  calls,
  constants,
  errors,
  events,
  storage
}) {
  const sectionTypes = (0,_polkadot_types_known__WEBPACK_IMPORTED_MODULE_1__.getModuleTypes)(registry, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.stringCamelCase)(mod.name));
  return registry.createType('PalletMetadataV14', {
    calls: calls && convertCalls(compatTypes, registry, mod.name, calls, sectionTypes),
    constants: convertConstants(compatTypes, registry, constants, sectionTypes),
    errors: errors && convertErrors(compatTypes, registry, mod.name, errors, sectionTypes),
    events: events && convertEvents(compatTypes, registry, mod.name, events, sectionTypes),
    index: mod.index,
    name: mod.name,
    storage: storage && convertStorage(compatTypes, registry, storage, sectionTypes)
  });
}
/**
 * Convert the Metadata to v14
 * @internal
 **/


function toV14(registry, v13, metaVersion) {
  const compatTypes = [];
  compatType(compatTypes, 'Null'); // position 0 always has Null

  registerOriginCaller(registry, v13.modules, metaVersion);
  const extrinsic = convertExtrinsic(registry, v13.extrinsic);
  const pallets = v13.modules.map(mod => createPallet(compatTypes, registry, mod, {
    calls: mod.calls.unwrapOr(null),
    constants: mod.constants,
    errors: mod.errors.length ? mod.errors : null,
    events: mod.events.unwrapOr(null),
    storage: mod.storage.unwrapOr(null)
  }));
  return registry.createType('MetadataV14', {
    extrinsic,
    lookup: {
      types: compatTypes.map((type, id) => registry.createType('PortableType', {
        id,
        type
      }))
    },
    pallets
  });
}

/***/ }),
/* 379 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "knownOrigins": () => (/* binding */ knownOrigins)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// We want predictive ordering (manually managed)

/* eslint-disable sort-keys */
// FIXME: Need some sort of solution for specifying these
// Since we don't have insight into the origin specification, we can only define what we know about
// in a pure Substrate/Polkadot implementation, any other custom origins won't be handled at all
const knownOrigins = {
  //
  // (1) Defaults from Substrate
  //
  Council: 'CollectiveOrigin',
  System: 'SystemOrigin',
  TechnicalCommittee: 'CollectiveOrigin',
  //
  // (2) Defaults from Polkadot
  //
  Xcm: 'XcmOrigin',
  XcmPallet: 'XcmOrigin',
  //
  // (3) Defaults from Acala
  //
  Authority: 'AuthorityOrigin',
  GeneralCouncil: 'CollectiveOrigin'
};

/***/ }),
/* 380 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "knownOrigins": () => (/* reexport safe */ _knownOrigins_js__WEBPACK_IMPORTED_MODULE_0__.knownOrigins),
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_1__.packageInfo),
/* harmony export */   "mapXcmTypes": () => (/* reexport safe */ _xcm_js__WEBPACK_IMPORTED_MODULE_2__.mapXcmTypes),
/* harmony export */   "getModuleTypes": () => (/* binding */ getModuleTypes),
/* harmony export */   "getSpecExtensions": () => (/* binding */ getSpecExtensions),
/* harmony export */   "getSpecTypes": () => (/* binding */ getSpecTypes),
/* harmony export */   "getSpecHasher": () => (/* binding */ getSpecHasher),
/* harmony export */   "getSpecRpc": () => (/* binding */ getSpecRpc),
/* harmony export */   "getSpecAlias": () => (/* binding */ getSpecAlias),
/* harmony export */   "getUpgradeVersion": () => (/* binding */ getUpgradeVersion)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(82);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(83);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(122);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(125);
/* harmony import */ var _chain_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(394);
/* harmony import */ var _modules_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(383);
/* harmony import */ var _spec_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(384);
/* harmony import */ var _upgrades_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(395);
/* harmony import */ var _knownOrigins_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(379);
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(381);
/* harmony import */ var _xcm_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(382);
// Copyright 2017-2021 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0







 // flatten a VersionedType[] into a Record<string, string>

/** @internal */

function filterVersions(versions = [], specVersion) {
  return versions.filter(({
    minmax: [min, max]
  }) => ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(min) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.isNull)(min) || specVersion >= min) && ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(max) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.isNull)(max) || specVersion <= max)).reduce((result, {
    types
  }) => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.objectSpread)(result, types), {});
}
/**
 * @description Get types for specific modules (metadata override)
 */


function getModuleTypes({
  knownTypes
}, section) {
  var _knownTypes$typesAlia;

  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.objectSpread)({}, _modules_js__WEBPACK_IMPORTED_MODULE_6__["default"][section], (_knownTypes$typesAlia = knownTypes.typesAlias) === null || _knownTypes$typesAlia === void 0 ? void 0 : _knownTypes$typesAlia[section]);
}
/**
 * @description Based on the chain and runtimeVersion, get the applicable signed extensions (ready for registration)
 */

function getSpecExtensions({
  knownTypes
}, chainName, specName) {
  var _knownTypes$typesBund, _knownTypes$typesBund2, _knownTypes$typesBund3, _knownTypes$typesBund4, _knownTypes$typesBund5, _knownTypes$typesBund6;

  const _chainName = chainName.toString();

  const _specName = specName.toString();

  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.objectSpread)({}, (_knownTypes$typesBund = knownTypes.typesBundle) === null || _knownTypes$typesBund === void 0 ? void 0 : (_knownTypes$typesBund2 = _knownTypes$typesBund.spec) === null || _knownTypes$typesBund2 === void 0 ? void 0 : (_knownTypes$typesBund3 = _knownTypes$typesBund2[_specName]) === null || _knownTypes$typesBund3 === void 0 ? void 0 : _knownTypes$typesBund3.signedExtensions, (_knownTypes$typesBund4 = knownTypes.typesBundle) === null || _knownTypes$typesBund4 === void 0 ? void 0 : (_knownTypes$typesBund5 = _knownTypes$typesBund4.chain) === null || _knownTypes$typesBund5 === void 0 ? void 0 : (_knownTypes$typesBund6 = _knownTypes$typesBund5[_chainName]) === null || _knownTypes$typesBund6 === void 0 ? void 0 : _knownTypes$typesBund6.signedExtensions);
}
/**
 * @description Based on the chain and runtimeVersion, get the applicable types (ready for registration)
 */

function getSpecTypes({
  knownTypes
}, chainName, specName, specVersion) {
  var _knownTypes$typesBund7, _knownTypes$typesBund8, _knownTypes$typesBund9, _knownTypes$typesBund10, _knownTypes$typesBund11, _knownTypes$typesBund12, _knownTypes$typesSpec, _knownTypes$typesChai;

  const _chainName = chainName.toString();

  const _specName = specName.toString();

  const _specVersion = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_7__.bnToBn)(specVersion).toNumber(); // The order here is always, based on -
  //   - spec then chain
  //   - typesBundle takes higher precedence
  //   - types is the final catch-all override


  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.objectSpread)({}, filterVersions(_spec_index_js__WEBPACK_IMPORTED_MODULE_8__["default"][_specName], _specVersion), filterVersions(_chain_index_js__WEBPACK_IMPORTED_MODULE_9__["default"][_chainName], _specVersion), filterVersions((_knownTypes$typesBund7 = knownTypes.typesBundle) === null || _knownTypes$typesBund7 === void 0 ? void 0 : (_knownTypes$typesBund8 = _knownTypes$typesBund7.spec) === null || _knownTypes$typesBund8 === void 0 ? void 0 : (_knownTypes$typesBund9 = _knownTypes$typesBund8[_specName]) === null || _knownTypes$typesBund9 === void 0 ? void 0 : _knownTypes$typesBund9.types, _specVersion), filterVersions((_knownTypes$typesBund10 = knownTypes.typesBundle) === null || _knownTypes$typesBund10 === void 0 ? void 0 : (_knownTypes$typesBund11 = _knownTypes$typesBund10.chain) === null || _knownTypes$typesBund11 === void 0 ? void 0 : (_knownTypes$typesBund12 = _knownTypes$typesBund11[_chainName]) === null || _knownTypes$typesBund12 === void 0 ? void 0 : _knownTypes$typesBund12.types, _specVersion), (_knownTypes$typesSpec = knownTypes.typesSpec) === null || _knownTypes$typesSpec === void 0 ? void 0 : _knownTypes$typesSpec[_specName], (_knownTypes$typesChai = knownTypes.typesChain) === null || _knownTypes$typesChai === void 0 ? void 0 : _knownTypes$typesChai[_chainName], knownTypes.types);
}
function getSpecHasher({
  knownTypes
}, chainName, specName) {
  var _knownTypes$typesBund13, _knownTypes$typesBund14, _knownTypes$typesBund15, _knownTypes$typesBund16, _knownTypes$typesBund17, _knownTypes$typesBund18;

  const _chainName = chainName.toString();

  const _specName = specName.toString();

  return knownTypes.hasher || ((_knownTypes$typesBund13 = knownTypes.typesBundle) === null || _knownTypes$typesBund13 === void 0 ? void 0 : (_knownTypes$typesBund14 = _knownTypes$typesBund13.chain) === null || _knownTypes$typesBund14 === void 0 ? void 0 : (_knownTypes$typesBund15 = _knownTypes$typesBund14[_chainName]) === null || _knownTypes$typesBund15 === void 0 ? void 0 : _knownTypes$typesBund15.hasher) || ((_knownTypes$typesBund16 = knownTypes.typesBundle) === null || _knownTypes$typesBund16 === void 0 ? void 0 : (_knownTypes$typesBund17 = _knownTypes$typesBund16.spec) === null || _knownTypes$typesBund17 === void 0 ? void 0 : (_knownTypes$typesBund18 = _knownTypes$typesBund17[_specName]) === null || _knownTypes$typesBund18 === void 0 ? void 0 : _knownTypes$typesBund18.hasher) || null;
}
/**
 * @description Based on the chain and runtimeVersion, get the applicable rpc definitions (ready for registration)
 */

function getSpecRpc({
  knownTypes
}, chainName, specName) {
  var _knownTypes$typesBund19, _knownTypes$typesBund20, _knownTypes$typesBund21, _knownTypes$typesBund22, _knownTypes$typesBund23, _knownTypes$typesBund24;

  const _chainName = chainName.toString();

  const _specName = specName.toString();

  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.objectSpread)({}, (_knownTypes$typesBund19 = knownTypes.typesBundle) === null || _knownTypes$typesBund19 === void 0 ? void 0 : (_knownTypes$typesBund20 = _knownTypes$typesBund19.spec) === null || _knownTypes$typesBund20 === void 0 ? void 0 : (_knownTypes$typesBund21 = _knownTypes$typesBund20[_specName]) === null || _knownTypes$typesBund21 === void 0 ? void 0 : _knownTypes$typesBund21.rpc, (_knownTypes$typesBund22 = knownTypes.typesBundle) === null || _knownTypes$typesBund22 === void 0 ? void 0 : (_knownTypes$typesBund23 = _knownTypes$typesBund22.chain) === null || _knownTypes$typesBund23 === void 0 ? void 0 : (_knownTypes$typesBund24 = _knownTypes$typesBund23[_chainName]) === null || _knownTypes$typesBund24 === void 0 ? void 0 : _knownTypes$typesBund24.rpc);
}
/**
 * @description Based on the chain and runtimeVersion, get the applicable alias definitions (ready for registration)
 */

function getSpecAlias({
  knownTypes
}, chainName, specName) {
  var _knownTypes$typesBund25, _knownTypes$typesBund26, _knownTypes$typesBund27, _knownTypes$typesBund28, _knownTypes$typesBund29, _knownTypes$typesBund30;

  const _chainName = chainName.toString();

  const _specName = specName.toString(); // as per versions, first spec, then chain then finally non-versioned


  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.objectSpread)({}, (_knownTypes$typesBund25 = knownTypes.typesBundle) === null || _knownTypes$typesBund25 === void 0 ? void 0 : (_knownTypes$typesBund26 = _knownTypes$typesBund25.spec) === null || _knownTypes$typesBund26 === void 0 ? void 0 : (_knownTypes$typesBund27 = _knownTypes$typesBund26[_specName]) === null || _knownTypes$typesBund27 === void 0 ? void 0 : _knownTypes$typesBund27.alias, (_knownTypes$typesBund28 = knownTypes.typesBundle) === null || _knownTypes$typesBund28 === void 0 ? void 0 : (_knownTypes$typesBund29 = _knownTypes$typesBund28.chain) === null || _knownTypes$typesBund29 === void 0 ? void 0 : (_knownTypes$typesBund30 = _knownTypes$typesBund29[_chainName]) === null || _knownTypes$typesBund30 === void 0 ? void 0 : _knownTypes$typesBund30.alias, knownTypes.typesAlias);
}
/**
 * @description Returns a version record for known chains where upgrades are being tracked
 */

function getUpgradeVersion(genesisHash, blockNumber) {
  const known = _upgrades_index_js__WEBPACK_IMPORTED_MODULE_10__["default"].find(u => genesisHash.eq(u.genesisHash));
  return known ? [known.versions.reduce((last, version) => {
    return blockNumber.gt(version.blockNumber) ? version : last;
  }, undefined), known.versions.find(version => blockNumber.lte(version.blockNumber))] : [undefined, undefined];
}

/***/ }),
/* 381 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/types-known',
  version: '6.10.1'
};

/***/ }),
/* 382 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "XCM_MAPPINGS": () => (/* binding */ XCM_MAPPINGS),
/* harmony export */   "mapXcmTypes": () => (/* binding */ mapXcmTypes)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(122);
// Copyright 2017-2021 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0

const XCM_MAPPINGS = ['AssetInstance', 'Fungibility', 'Junction', 'Junctions', 'MultiAsset', 'MultiAssetFilter', 'MultiLocation', 'Response', 'WildFungibility', 'WildMultiAsset', 'Xcm', 'XcmError', 'XcmOrder'];
function mapXcmTypes(version) {
  return XCM_MAPPINGS.reduce((all, key) => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)(all, {
    [key]: `${key}${version}`
  }), {});
}

/***/ }),
/* 383 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0
// type overrides for modules (where duplication between modules exist)
const typesModules = {
  assets: {
    Approval: 'AssetApproval',
    ApprovalKey: 'AssetApprovalKey',
    Balance: 'TAssetBalance',
    DestroyWitness: 'AssetDestroyWitness'
  },
  babe: {
    EquivocationProof: 'BabeEquivocationProof'
  },
  balances: {
    Status: 'BalanceStatus'
  },
  beefy: {
    AuthorityId: 'BeefyId'
  },
  contracts: {
    StorageKey: 'ContractStorageKey'
  },
  electionProviderMultiPhase: {
    Phase: 'ElectionPhase'
  },
  ethereum: {
    Block: 'EthBlock',
    Header: 'EthHeader',
    Receipt: 'EthReceipt',
    Transaction: 'EthTransaction',
    TransactionStatus: 'EthTransactionStatus'
  },
  evm: {
    Account: 'EvmAccount',
    Log: 'EvmLog',
    Vicinity: 'EvmVicinity'
  },
  grandpa: {
    Equivocation: 'GrandpaEquivocation',
    EquivocationProof: 'GrandpaEquivocationProof'
  },
  identity: {
    Judgement: 'IdentityJudgement'
  },
  inclusion: {
    ValidatorIndex: 'ParaValidatorIndex'
  },
  paraDisputes: {
    ValidatorIndex: 'ParaValidatorIndex'
  },
  paraInclusion: {
    ValidatorIndex: 'ParaValidatorIndex'
  },
  paraScheduler: {
    ValidatorIndex: 'ParaValidatorIndex'
  },
  paraShared: {
    ValidatorIndex: 'ParaValidatorIndex'
  },
  parachains: {
    Id: 'ParaId'
  },
  parasDisputes: {
    ValidatorIndex: 'ParaValidatorIndex'
  },
  parasInclusion: {
    ValidatorIndex: 'ParaValidatorIndex'
  },
  parasScheduler: {
    ValidatorIndex: 'ParaValidatorIndex'
  },
  parasShared: {
    ValidatorIndex: 'ParaValidatorIndex'
  },
  proposeParachain: {
    Proposal: 'ParachainProposal'
  },
  proxy: {
    Announcement: 'ProxyAnnouncement'
  },
  scheduler: {
    ValidatorIndex: 'ParaValidatorIndex'
  },
  shared: {
    ValidatorIndex: 'ParaValidatorIndex'
  },
  society: {
    Judgement: 'SocietyJudgement',
    Vote: 'SocietyVote'
  },
  staking: {
    Compact: 'CompactAssignments'
  },
  treasury: {
    Proposal: 'TreasuryProposal'
  },
  xcm: {
    AssetId: 'XcmAssetId'
  },
  xcmPallet: {
    AssetId: 'XcmAssetId'
  }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (typesModules);

/***/ }),
/* 384 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _centrifuge_chain_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(385);
/* harmony import */ var _kusama_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(386);
/* harmony import */ var _node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(387);
/* harmony import */ var _node_template_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(388);
/* harmony import */ var _polkadot_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(389);
/* harmony import */ var _rococo_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(390);
/* harmony import */ var _shell_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(391);
/* harmony import */ var _statemint_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(392);
/* harmony import */ var _westend_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(393);
// Copyright 2017-2021 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0








 // Type overrides for specific spec types & versions as given in runtimeVersion

const typesSpec = {
  'centrifuge-chain': _centrifuge_chain_js__WEBPACK_IMPORTED_MODULE_0__["default"],
  kusama: _kusama_js__WEBPACK_IMPORTED_MODULE_1__["default"],
  node: _node_js__WEBPACK_IMPORTED_MODULE_2__["default"],
  'node-template': _node_template_js__WEBPACK_IMPORTED_MODULE_3__["default"],
  polkadot: _polkadot_js__WEBPACK_IMPORTED_MODULE_4__["default"],
  rococo: _rococo_js__WEBPACK_IMPORTED_MODULE_5__["default"],
  shell: _shell_js__WEBPACK_IMPORTED_MODULE_6__["default"],
  statemine: _statemint_js__WEBPACK_IMPORTED_MODULE_7__["default"],
  statemint: _statemint_js__WEBPACK_IMPORTED_MODULE_7__["default"],
  westend: _westend_js__WEBPACK_IMPORTED_MODULE_8__["default"],
  westmint: _statemint_js__WEBPACK_IMPORTED_MODULE_7__["default"]
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (typesSpec);

/***/ }),
/* 385 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(122);
// Copyright 2017-2021 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0

/* eslint-disable sort-keys */

const sharedTypes = {
  // Anchor
  AnchorData: {
    anchoredBlock: 'u64',
    docRoot: 'H256',
    id: 'H256'
  },
  PreCommitData: {
    expirationBlock: 'u64',
    identity: 'H256',
    signingRoot: 'H256'
  },
  // Fees
  Fee: {
    key: 'Hash',
    price: 'Balance'
  },
  // MultiAccount
  MultiAccountData: {
    deposit: 'Balance',
    depositor: 'AccountId',
    signatories: 'Vec<AccountId>',
    threshold: 'u16'
  },
  // Bridge
  ChainId: 'u8',
  DepositNonce: 'u64',
  ResourceId: '[u8; 32]',
  'chainbridge::ChainId': 'u8',
  // NFT
  RegistryId: 'H160',
  TokenId: 'U256',
  AssetId: {
    registryId: 'RegistryId',
    tokenId: 'TokenId'
  },
  AssetInfo: {
    metadata: 'Bytes'
  },
  MintInfo: {
    anchorId: 'Hash',
    proofs: 'Vec<ProofMint>',
    staticHashes: '[Hash; 3]'
  },
  Proof: {
    leafHash: 'H256',
    sortedHashes: 'H256'
  },
  ProofMint: {
    hashes: 'Vec<Hash>',
    property: 'Bytes',
    salt: '[u8; 32]',
    value: 'Bytes'
  },
  RegistryInfo: {
    fields: 'Vec<Bytes>',
    ownerCanBurn: 'bool'
  },
  ProxyType: {
    _enum: ['Any', 'NonTransfer', 'Governance', 'Staking', 'NonProxy']
  }
};
const standaloneTypes = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, sharedTypes, {
  AccountInfo: 'AccountInfoWithRefCount',
  Address: 'LookupSource',
  LookupSource: 'IndicesLookupSource',
  Multiplier: 'Fixed64',
  RefCount: 'RefCountTo259'
});
const versioned = [{
  minmax: [240, 243],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, standaloneTypes, {
    ProxyType: {
      _enum: ['Any', 'NonTransfer', 'Governance', 'Staking', 'Vesting']
    }
  })
}, {
  minmax: [244, 999],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, standaloneTypes)
}, {
  minmax: [1000, undefined],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, sharedTypes)
}];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (versioned);

/***/ }),
/* 386 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(122);
/* harmony import */ var _xcm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(382);
// Copyright 2017-2021 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0

/* eslint-disable sort-keys */


const sharedTypes = {
  CompactAssignments: 'CompactAssignmentsWith24',
  RawSolution: 'RawSolutionWith24',
  Keys: 'SessionKeys6',
  ProxyType: {
    _enum: ['Any', 'NonTransfer', 'Governance', 'Staking', 'IdentityJudgement', 'CancelProxy', 'Auction']
  }
};
const addrIndicesTypes = {
  AccountInfo: 'AccountInfoWithRefCount',
  Address: 'LookupSource',
  CompactAssignments: 'CompactAssignmentsWith16',
  RawSolution: 'RawSolutionWith16',
  Keys: 'SessionKeys5',
  LookupSource: 'IndicesLookupSource',
  ValidatorPrefs: 'ValidatorPrefsWithCommission'
};
const addrAccountIdTypes = {
  AccountInfo: 'AccountInfoWithRefCount',
  Address: 'AccountId',
  CompactAssignments: 'CompactAssignmentsWith16',
  RawSolution: 'RawSolutionWith16',
  Keys: 'SessionKeys5',
  LookupSource: 'AccountId',
  ValidatorPrefs: 'ValidatorPrefsWithCommission'
};
const versioned = [{
  // 1020 is first CC3
  minmax: [1019, 1031],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, addrIndicesTypes, {
    BalanceLock: 'BalanceLockTo212',
    CompactAssignments: 'CompactAssignmentsTo257',
    DispatchError: 'DispatchErrorTo198',
    DispatchInfo: 'DispatchInfoTo244',
    Heartbeat: 'HeartbeatTo244',
    IdentityInfo: 'IdentityInfoTo198',
    Keys: 'SessionKeys5',
    Multiplier: 'Fixed64',
    OpenTip: 'OpenTipTo225',
    RefCount: 'RefCountTo259',
    ReferendumInfo: 'ReferendumInfoTo239',
    SlashingSpans: 'SlashingSpansTo204',
    StakingLedger: 'StakingLedgerTo223',
    Votes: 'VotesTo230',
    Weight: 'u32'
  })
}, {
  minmax: [1032, 1042],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, addrIndicesTypes, {
    BalanceLock: 'BalanceLockTo212',
    CompactAssignments: 'CompactAssignmentsTo257',
    DispatchInfo: 'DispatchInfoTo244',
    Heartbeat: 'HeartbeatTo244',
    Keys: 'SessionKeys5',
    Multiplier: 'Fixed64',
    OpenTip: 'OpenTipTo225',
    RefCount: 'RefCountTo259',
    ReferendumInfo: 'ReferendumInfoTo239',
    SlashingSpans: 'SlashingSpansTo204',
    StakingLedger: 'StakingLedgerTo223',
    Votes: 'VotesTo230',
    Weight: 'u32'
  })
}, {
  // actual at 1045 (1043-1044 is dev)
  minmax: [1043, 1045],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, addrIndicesTypes, {
    BalanceLock: 'BalanceLockTo212',
    CompactAssignments: 'CompactAssignmentsTo257',
    DispatchInfo: 'DispatchInfoTo244',
    Heartbeat: 'HeartbeatTo244',
    Keys: 'SessionKeys5',
    Multiplier: 'Fixed64',
    OpenTip: 'OpenTipTo225',
    RefCount: 'RefCountTo259',
    ReferendumInfo: 'ReferendumInfoTo239',
    StakingLedger: 'StakingLedgerTo223',
    Votes: 'VotesTo230',
    Weight: 'u32'
  })
}, {
  minmax: [1046, 1054],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, sharedTypes, addrAccountIdTypes, {
    CompactAssignments: 'CompactAssignmentsTo257',
    DispatchInfo: 'DispatchInfoTo244',
    Heartbeat: 'HeartbeatTo244',
    Multiplier: 'Fixed64',
    OpenTip: 'OpenTipTo225',
    RefCount: 'RefCountTo259',
    ReferendumInfo: 'ReferendumInfoTo239',
    StakingLedger: 'StakingLedgerTo240',
    Weight: 'u32'
  })
}, {
  minmax: [1055, 1056],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, sharedTypes, addrAccountIdTypes, {
    CompactAssignments: 'CompactAssignmentsTo257',
    DispatchInfo: 'DispatchInfoTo244',
    Heartbeat: 'HeartbeatTo244',
    Multiplier: 'Fixed64',
    OpenTip: 'OpenTipTo225',
    RefCount: 'RefCountTo259',
    StakingLedger: 'StakingLedgerTo240',
    Weight: 'u32'
  })
}, {
  minmax: [1057, 1061],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, sharedTypes, addrAccountIdTypes, {
    CompactAssignments: 'CompactAssignmentsTo257',
    DispatchInfo: 'DispatchInfoTo244',
    Heartbeat: 'HeartbeatTo244',
    OpenTip: 'OpenTipTo225',
    RefCount: 'RefCountTo259'
  })
}, {
  minmax: [1062, 2012],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, sharedTypes, addrAccountIdTypes, {
    CompactAssignments: 'CompactAssignmentsTo257',
    OpenTip: 'OpenTipTo225',
    RefCount: 'RefCountTo259'
  })
}, {
  minmax: [2013, 2022],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, sharedTypes, addrAccountIdTypes, {
    CompactAssignments: 'CompactAssignmentsTo257',
    RefCount: 'RefCountTo259'
  })
}, {
  minmax: [2023, 2024],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, sharedTypes, addrAccountIdTypes, {
    RefCount: 'RefCountTo259'
  })
}, {
  minmax: [2025, 2027],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, sharedTypes, addrAccountIdTypes)
}, {
  minmax: [2028, 2029],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, sharedTypes, {
    AccountInfo: 'AccountInfoWithDualRefCount',
    CompactAssignments: 'CompactAssignmentsWith16',
    RawSolution: 'RawSolutionWith16'
  })
}, {
  minmax: [2030, 9000],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, sharedTypes, {
    CompactAssignments: 'CompactAssignmentsWith16',
    RawSolution: 'RawSolutionWith16'
  })
}, {
  minmax: [9010, 9099],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, sharedTypes, (0,_xcm_js__WEBPACK_IMPORTED_MODULE_1__.mapXcmTypes)('V0'))
}, {
  // jump from 9100 to 9110, however align with Rococo
  minmax: [9100, 9105],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, sharedTypes, (0,_xcm_js__WEBPACK_IMPORTED_MODULE_1__.mapXcmTypes)('V1'))
}, {
  // metadata v14
  minmax: [9106, undefined],
  types: {}
}];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (versioned);

/***/ }),
/* 387 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0

/* eslint-disable sort-keys */
const versioned = [{
  minmax: [0, undefined],
  types: {// nothing, API tracks master
  }
}];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (versioned);

/***/ }),
/* 388 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0

/* eslint-disable sort-keys */
const versioned = [{
  minmax: [0, undefined],
  types: {// nothing, API tracks master
  }
}];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (versioned);

/***/ }),
/* 389 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(122);
// Copyright 2017-2021 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0

/* eslint-disable sort-keys */

const sharedTypes = {
  CompactAssignments: 'CompactAssignmentsWith16',
  RawSolution: 'RawSolutionWith16',
  Keys: 'SessionKeys6',
  ProxyType: {
    _enum: {
      Any: 0,
      NonTransfer: 1,
      Governance: 2,
      Staking: 3,
      UnusedSudoBalances: 4,
      IdentityJudgement: 5,
      CancelProxy: 6,
      Auction: 7
    }
  }
};
const addrAccountIdTypes = {
  AccountInfo: 'AccountInfoWithRefCount',
  Address: 'AccountId',
  Keys: 'SessionKeys5',
  LookupSource: 'AccountId',
  ValidatorPrefs: 'ValidatorPrefsWithCommission'
}; // these are override types for Polkadot

const versioned = [{
  minmax: [0, 12],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, sharedTypes, addrAccountIdTypes, {
    CompactAssignments: 'CompactAssignmentsTo257',
    OpenTip: 'OpenTipTo225',
    RefCount: 'RefCountTo259'
  })
}, {
  minmax: [13, 22],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, sharedTypes, addrAccountIdTypes, {
    CompactAssignments: 'CompactAssignmentsTo257',
    RefCount: 'RefCountTo259'
  })
}, {
  minmax: [23, 24],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, sharedTypes, addrAccountIdTypes, {
    RefCount: 'RefCountTo259'
  })
}, {
  minmax: [25, 27],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, sharedTypes, addrAccountIdTypes)
}, {
  minmax: [28, 29],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, sharedTypes, {
    AccountInfo: 'AccountInfoWithDualRefCount'
  })
}, {
  minmax: [30, 9109],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, sharedTypes)
}, {
  // metadata v14
  minmax: [9110, undefined],
  types: {}
}];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (versioned);

/***/ }),
/* 390 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(122);
/* harmony import */ var _xcm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(382);
// Copyright 2017-2021 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0

/* eslint-disable sort-keys */

 // structs need to be in order

/* eslint-disable sort-keys */

const sharedTypes = {
  FullIdentification: '()',
  // No staking, only session (as per config)
  Keys: 'SessionKeys7B'
};
const versioned = [{
  minmax: [0, 200],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, sharedTypes, {
    AccountInfo: 'AccountInfoWithDualRefCount',
    Address: 'AccountId',
    LookupSource: 'AccountId'
  })
}, {
  minmax: [201, 214],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, sharedTypes, {
    AccountInfo: 'AccountInfoWithDualRefCount'
  })
}, {
  minmax: [215, 228],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, sharedTypes, {
    Keys: 'SessionKeys6'
  })
}, {
  minmax: [229, 9099],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, sharedTypes, (0,_xcm_js__WEBPACK_IMPORTED_MODULE_1__.mapXcmTypes)('V0'))
}, {
  minmax: [9100, 9105],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, sharedTypes, (0,_xcm_js__WEBPACK_IMPORTED_MODULE_1__.mapXcmTypes)('V1'))
}, {
  // metadata v14
  minmax: [9106, undefined],
  types: {}
}];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (versioned);

/***/ }),
/* 391 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0

/* eslint-disable sort-keys */
const versioned = [{
  minmax: [0, undefined],
  types: {// nothing, limited runtime
  }
}];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (versioned);

/***/ }),
/* 392 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(122);
/* harmony import */ var _xcm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(382);
// Copyright 2017-2021 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0

/* eslint-disable sort-keys */


const sharedTypes = {
  TAssetBalance: 'u128',
  ProxyType: {
    _enum: ['Any', 'NonTransfer', 'CancelProxy', 'Assets', 'AssetOwner', 'AssetManager', 'Staking']
  }
}; // these are override types for Statemine, Statemint, Westmint

const versioned = [{
  minmax: [0, 3],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, sharedTypes, (0,_xcm_js__WEBPACK_IMPORTED_MODULE_1__.mapXcmTypes)('V0'))
}, {
  minmax: [4, 5],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, sharedTypes, (0,_xcm_js__WEBPACK_IMPORTED_MODULE_1__.mapXcmTypes)('V1'))
}, {
  // metadata V14
  minmax: [500, undefined],
  types: {}
}];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (versioned);

/***/ }),
/* 393 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(122);
/* harmony import */ var _xcm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(382);
// Copyright 2017-2021 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0

/* eslint-disable sort-keys */


const sharedTypes = {
  // 16 validators
  CompactAssignments: 'CompactAssignmentsWith16',
  RawSolution: 'RawSolutionWith16',
  // general
  Keys: 'SessionKeys6',
  ProxyType: {
    _enum: ['Any', 'NonTransfer', 'Staking', 'SudoBalances', 'IdentityJudgement', 'CancelProxy']
  }
};
const addrAccountIdTypes = {
  AccountInfo: 'AccountInfoWithRefCount',
  Address: 'AccountId',
  CompactAssignments: 'CompactAssignmentsWith16',
  LookupSource: 'AccountId',
  Keys: 'SessionKeys5',
  RawSolution: 'RawSolutionWith16',
  ValidatorPrefs: 'ValidatorPrefsWithCommission'
};
const versioned = [{
  minmax: [1, 2],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, sharedTypes, addrAccountIdTypes, {
    CompactAssignments: 'CompactAssignmentsTo257',
    DispatchInfo: 'DispatchInfoTo244',
    Heartbeat: 'HeartbeatTo244',
    Multiplier: 'Fixed64',
    OpenTip: 'OpenTipTo225',
    RefCount: 'RefCountTo259',
    Weight: 'u32'
  })
}, {
  minmax: [3, 22],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, sharedTypes, addrAccountIdTypes, {
    CompactAssignments: 'CompactAssignmentsTo257',
    DispatchInfo: 'DispatchInfoTo244',
    Heartbeat: 'HeartbeatTo244',
    OpenTip: 'OpenTipTo225',
    RefCount: 'RefCountTo259'
  })
}, {
  minmax: [23, 42],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, sharedTypes, addrAccountIdTypes, {
    CompactAssignments: 'CompactAssignmentsTo257',
    DispatchInfo: 'DispatchInfoTo244',
    Heartbeat: 'HeartbeatTo244',
    RefCount: 'RefCountTo259'
  })
}, {
  minmax: [43, 44],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, sharedTypes, addrAccountIdTypes, {
    DispatchInfo: 'DispatchInfoTo244',
    Heartbeat: 'HeartbeatTo244',
    RefCount: 'RefCountTo259'
  })
}, {
  minmax: [45, 47],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, sharedTypes, addrAccountIdTypes)
}, {
  minmax: [48, 49],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, sharedTypes, {
    AccountInfo: 'AccountInfoWithDualRefCount'
  })
}, {
  minmax: [50, 9099],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, sharedTypes, (0,_xcm_js__WEBPACK_IMPORTED_MODULE_1__.mapXcmTypes)('V0'))
}, {
  minmax: [9100, 9105],
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, sharedTypes, (0,_xcm_js__WEBPACK_IMPORTED_MODULE_1__.mapXcmTypes)('V1'))
}, {
  // metadata v14
  minmax: [9106, undefined],
  types: {}
}];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (versioned);

/***/ }),
/* 394 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Type overrides based on specific nodes
const typesChain = {};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (typesChain);

/***/ }),
/* 395 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _polkadot_networks__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(185);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(292);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(167);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(88);
/* harmony import */ var _kusama_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(396);
/* harmony import */ var _polkadot_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(397);
/* harmony import */ var _westend_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(398);
// Copyright 2017-2021 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0





const allKnown = {
  kusama: _kusama_js__WEBPACK_IMPORTED_MODULE_0__["default"],
  polkadot: _polkadot_js__WEBPACK_IMPORTED_MODULE_1__["default"],
  westend: _westend_js__WEBPACK_IMPORTED_MODULE_2__["default"]
}; // testnets are not available in the networks map

const NET_EXTRA = {
  westend: {
    genesisHash: ['0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e']
  }
};
/** @internal */

function checkOrder(network, versions) {
  const ooo = versions.filter((curr, index) => {
    const prev = versions[index - 1];
    return index === 0 ? false : curr[0] <= prev[0] || curr[1] <= prev[1];
  });
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.assert)(!ooo.length, () => `${network}: Mismatched upgrade ordering: ${(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.stringify)(ooo)}`);
  return versions;
}
/** @internal */


function mapRaw([network, versions]) {
  const chain = _polkadot_networks__WEBPACK_IMPORTED_MODULE_5__.selectableNetworks.find(n => n.network === network) || NET_EXTRA[network];
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.assert)(chain, () => `Unable to find info for chain ${network}`);
  return {
    genesisHash: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.hexToU8a)(chain.genesisHash[0]),
    network,
    versions: checkOrder(network, versions).map(([blockNumber, specVersion]) => ({
      blockNumber: new _polkadot_util__WEBPACK_IMPORTED_MODULE_7__(blockNumber),
      specVersion: new _polkadot_util__WEBPACK_IMPORTED_MODULE_7__(specVersion)
    }))
  };
} // Type overrides for specific spec types & versions as given in runtimeVersion


const upgrades = Object.entries(allKnown).map(mapRaw);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (upgrades);

/***/ }),
/* 396 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0
const upgrades = [[0, 1020], [26669, 1021], [38245, 1022], [54248, 1023], [59659, 1024], [67651, 1025], [82191, 1027], [83238, 1028], [101503, 1029], [203466, 1030], [295787, 1031], [461692, 1032], [504329, 1033], [569327, 1038], [587687, 1039], [653183, 1040], [693488, 1042], [901442, 1045], [1375086, 1050], [1445458, 1051], [1472960, 1052], [1475648, 1053], [1491596, 1054], [1574408, 1055], [2064961, 1058], [2201991, 1062], [2671528, 2005], [2704202, 2007], [2728002, 2008], [2832534, 2011], [2962294, 2012], [3240000, 2013], [3274408, 2015], [3323565, 2019], [3534175, 2022], [3860281, 2023], [4143129, 2024], [4401242, 2025], [4841367, 2026], [5961600, 2027], [6137912, 2028], [6561855, 2029], [7100891, 2030], [7468792, 9010], [7668600, 9030], [7812476, 9040], [8010981, 9050], [8073833, 9070], [8555825, 9080], [8945245, 9090], [9611377, 9100], [9625129, 9111], [9866422, 9122]];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (upgrades);

/***/ }),
/* 397 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0
const upgrades = [[0, 0], [29231, 1], [188836, 5], [199405, 6], [214264, 7], [244358, 8], [303079, 9], [314201, 10], [342400, 11], [443963, 12], [528470, 13], [687751, 14], [746085, 15], [787923, 16], [799302, 17], [1205128, 18], [1603423, 23], [1733218, 24], [2005673, 25], [2436698, 26], [3613564, 27], [3899547, 28], [4345767, 29], [4876134, 30], [5661442, 9050], [6321619, 9080], [6713249, 9090], [7217907, 9100], [7229126, 9110], [7560558, 9122]];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (upgrades);

/***/ }),
/* 398 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types-known authors & contributors
// SPDX-License-Identifier: Apache-2.0
const upgrades = [[214356, 4], [392764, 7], [409740, 8], [809976, 20], [877581, 24], [879238, 25], [889472, 26], [902937, 27], [932751, 28], [991142, 29], [1030162, 31], [1119657, 32], [1199282, 33], [1342534, 34], [1392263, 35], [1431703, 36], [1433369, 37], [1490972, 41], [2087397, 43], [2316688, 44], [2549864, 45], [3925782, 46], [3925843, 47], [4207800, 48], [4627944, 49], [5124076, 50], [5478664, 900], [5482450, 9000], [5584305, 9010], [5784566, 9030], [5879822, 9031], [5896856, 9032], [5897316, 9033], [6117927, 9050], [6210274, 9070], [6379314, 9080], [6979141, 9090], [7568453, 9100], [7766394, 9111], [7911691, 9120], [7968866, 9121], [7982889, 9122]];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (upgrades);

/***/ }),
/* 399 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "toLatest": () => (/* binding */ toLatest)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * Convert the Metadata (which is an alias) to latest
 * @internal
 **/
// eslint-disable-next-line @typescript-eslint/no-unused-vars
function toLatest(registry, v14, _metaVersion) {
  return v14;
}

/***/ }),
/* 400 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getUniqTypes": () => (/* binding */ getUniqTypes)
/* harmony export */ });
/* harmony import */ var _flattenUniq_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(402);
/* harmony import */ var _validateTypes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(401);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0


/** @internal */

function extractTypes(lookup, types) {
  return types.map(({
    type
  }) => lookup.getTypeDef(type).type);
}
/** @internal */


function extractFieldTypes(lookup, type) {
  return lookup.getSiType(type).def.asVariant.variants.map(({
    fields
  }) => extractTypes(lookup, fields));
}
/** @internal */


function getPalletNames({
  lookup,
  pallets
}) {
  return pallets.reduce((all, {
    calls,
    constants,
    events,
    storage
  }) => {
    all.push([extractTypes(lookup, constants)]);

    if (calls.isSome) {
      all.push(extractFieldTypes(lookup, calls.unwrap().type));
    }

    if (events.isSome) {
      all.push(extractFieldTypes(lookup, events.unwrap().type));
    }

    if (storage.isSome) {
      all.push(storage.unwrap().items.map(({
        type
      }) => {
        if (type.isPlain) {
          return [lookup.getTypeDef(type.asPlain).type];
        }

        const {
          hashers,
          key,
          value
        } = type.asMap;
        return hashers.length === 1 ? [lookup.getTypeDef(value).type, lookup.getTypeDef(key).type] : [lookup.getTypeDef(value).type, ...lookup.getSiType(key).def.asTuple.map(t => lookup.getTypeDef(t).type)];
      }));
    }

    return all;
  }, []);
}
/** @internal */


function getUniqTypes(registry, meta, throwError) {
  return (0,_validateTypes_js__WEBPACK_IMPORTED_MODULE_0__.validateTypes)(registry, throwError, (0,_flattenUniq_js__WEBPACK_IMPORTED_MODULE_1__.flattenUniq)(getPalletNames(meta)));
}

/***/ }),
/* 401 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "validateTypes": () => (/* binding */ validateTypes)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(285);
/* harmony import */ var _extractTypes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(403);
/* harmony import */ var _flattenUniq_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(402);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0



const l = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.logger)('metadata');
/** @internal */

function validateTypes(registry, throwError, types) {
  const missing = (0,_flattenUniq_js__WEBPACK_IMPORTED_MODULE_1__.flattenUniq)((0,_extractTypes_js__WEBPACK_IMPORTED_MODULE_2__.extractTypes)(types)).filter(type => !registry.hasType(type)).sort();

  if (missing.length !== 0) {
    const message = `Unknown types found, no types for ${missing.join(', ')}`;

    if (throwError) {
      throw new Error(message);
    } else {
      l.warn(message);
    }
  }

  return types;
}

/***/ }),
/* 402 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "flattenUniq": () => (/* binding */ flattenUniq)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/** @internal */
function flattenUniq(list, result = []) {
  for (let i = 0; i < list.length; i++) {
    const entry = list[i];

    if (Array.isArray(entry)) {
      flattenUniq(entry, result);
    } else {
      result.push(entry);
    }
  }

  return [...new Set(result)];
}

/***/ }),
/* 403 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "extractTypes": () => (/* binding */ extractTypes)
/* harmony export */ });
/* harmony import */ var _create_getTypeDef_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(404);
/* harmony import */ var _create_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(405);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// we are attempting to avoid circular refs, hence the path import



function extractSubSingle({
  lookupName,
  type
}) {
  return extractTypes([lookupName || type]);
}

function extractSubArray(types) {
  return extractTypes(types.map(({
    lookupName,
    type
  }) => lookupName || type));
}
/** @internal */


function extractTypes(types) {
  return types.map(type => {
    const decoded = (0,_create_getTypeDef_js__WEBPACK_IMPORTED_MODULE_0__.getTypeDef)(type);

    switch (decoded.info) {
      case _create_types_js__WEBPACK_IMPORTED_MODULE_1__.TypeDefInfo.Plain:
        return decoded.lookupName || decoded.type;

      case _create_types_js__WEBPACK_IMPORTED_MODULE_1__.TypeDefInfo.BTreeSet:
      case _create_types_js__WEBPACK_IMPORTED_MODULE_1__.TypeDefInfo.Compact:
      case _create_types_js__WEBPACK_IMPORTED_MODULE_1__.TypeDefInfo.Option:
      case _create_types_js__WEBPACK_IMPORTED_MODULE_1__.TypeDefInfo.Vec:
      case _create_types_js__WEBPACK_IMPORTED_MODULE_1__.TypeDefInfo.VecFixed:
      case _create_types_js__WEBPACK_IMPORTED_MODULE_1__.TypeDefInfo.WrapperOpaque:
        return extractSubSingle(decoded.sub);

      case _create_types_js__WEBPACK_IMPORTED_MODULE_1__.TypeDefInfo.BTreeMap:
      case _create_types_js__WEBPACK_IMPORTED_MODULE_1__.TypeDefInfo.Enum:
      case _create_types_js__WEBPACK_IMPORTED_MODULE_1__.TypeDefInfo.HashMap:
      case _create_types_js__WEBPACK_IMPORTED_MODULE_1__.TypeDefInfo.Result:
      case _create_types_js__WEBPACK_IMPORTED_MODULE_1__.TypeDefInfo.Set:
      case _create_types_js__WEBPACK_IMPORTED_MODULE_1__.TypeDefInfo.Struct:
      case _create_types_js__WEBPACK_IMPORTED_MODULE_1__.TypeDefInfo.Tuple:
        return extractSubArray(decoded.sub);

      default:
        throw new Error(`Unhandled: Unable to create and validate type from ${type} (info=${_create_types_js__WEBPACK_IMPORTED_MODULE_1__.TypeDefInfo[decoded.info]})`);
    }
  });
}

/***/ }),
/* 404 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getTypeDef": () => (/* binding */ getTypeDef)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(169);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(124);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(122);
/* harmony import */ var _sanitize_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(407);
/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(405);
/* harmony import */ var _typeSplit_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(406);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0




const MAX_NESTED = 64;
const KNOWN_INTERNALS = ['_alias', '_fallback'];

function getTypeString(typeOrObj) {
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.isString)(typeOrObj) ? typeOrObj.toString() : JSON.stringify(typeOrObj);
}

function isRustEnum(details) {
  const values = Object.values(details);

  if (values.some(v => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isNumber)(v))) {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.assert)(values.every(v => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isNumber)(v) && v >= 0 && v <= 255), 'Invalid number-indexed enum definition');
    return false;
  }

  return true;
} // decode an enum of either of the following forms
//  { _enum: ['A', 'B', 'C'] }
//  { _enum: { A: AccountId, B: Balance, C: u32 } }
//  { _enum: { A: 1, B: 2 } }


function _decodeEnum(value, details, count) {
  value.info = _types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.Enum; // not as pretty, but remain compatible with oo7 for both struct and Array types

  if (Array.isArray(details)) {
    value.sub = details.map((name, index) => ({
      index,
      info: _types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.Plain,
      name,
      type: 'Null'
    }));
  } else if (isRustEnum(details)) {
    value.sub = Object.entries(details).map(([name, typeOrObj], index) => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.objectSpread)({}, getTypeDef(getTypeString(typeOrObj || 'Null'), {
      name
    }, count), {
      index
    }));
  } else {
    value.sub = Object.entries(details).map(([name, index]) => ({
      index,
      info: _types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.Plain,
      name,
      type: 'Null'
    }));
  }

  return value;
} // decode a set of the form
//   { _set: { A: 0b0001, B: 0b0010, C: 0b0100 } }


function _decodeSet(value, details) {
  value.info = _types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.Set;
  value.length = details._bitLength;
  value.sub = Object.entries(details).filter(([name]) => !name.startsWith('_')).map(([name, index]) => ({
    index,
    info: _types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.Plain,
    name,
    type: 'Null'
  }));
  return value;
} // decode a struct, set or enum
// eslint-disable-next-line @typescript-eslint/no-unused-vars


function _decodeStruct(value, type, _, count) {
  const parsed = JSON.parse(type);
  const keys = Object.keys(parsed);

  if (keys.length === 1 && keys[0] === '_enum') {
    return _decodeEnum(value, parsed[keys[0]], count);
  } else if (keys.length === 1 && keys[0] === '_set') {
    return _decodeSet(value, parsed[keys[0]]);
  }

  value.alias = parsed._alias ? new Map(Object.entries(parsed._alias)) : undefined;
  value.fallbackType = parsed._fallback;
  value.sub = keys.filter(name => !KNOWN_INTERNALS.includes(name)).map(name => getTypeDef(getTypeString(parsed[name]), {
    name
  }, count));
  return value;
} // decode a fixed vector, e.g. [u8;32]
// eslint-disable-next-line @typescript-eslint/no-unused-vars


function _decodeFixedVec(value, type, _, count) {
  const max = type.length - 1;
  let index = -1;
  let inner = 0;

  for (let i = 1; i < max && index === -1; i++) {
    if (type[i] === ';' && inner === 0) {
      index = i;
    } else if (['[', '(', '<'].includes(type[i])) {
      inner++;
    } else if ([']', ')', '>'].includes(type[i])) {
      inner--;
    }
  }

  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.assert)(index !== -1, () => `${type}: Unable to extract location of ';'`);
  const vecType = type.substr(1, index - 1);
  const [strLength, displayName] = type.substr(index + 1, max - index - 1).split(';');
  const length = parseInt(strLength.trim(), 10); // as a first round, only u8 via u8aFixed, we can add more support

  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.assert)(length <= 256, () => `${type}: Only support for [Type; <length>], where length <= 256`);
  value.displayName = displayName;
  value.length = length;
  value.sub = getTypeDef(vecType, {}, count);
  return value;
}

function _decodeRange(value, _, subType) {
  const Type = getTypeDef(subType);
  value.sub = [Type, Type];
  return value;
} // decode a tuple


function _decodeTuple(value, _, subType, count) {
  value.sub = subType.length === 0 ? [] : (0,_typeSplit_js__WEBPACK_IMPORTED_MODULE_5__.typeSplit)(subType).map(inner => getTypeDef(inner, {}, count));
  return value;
} // decode a Int/UInt<bitLength[, name]>
// eslint-disable-next-line @typescript-eslint/no-unused-vars


function _decodeAnyInt(value, type, _, clazz) {
  const [strLength, displayName] = type.substr(clazz.length + 1, type.length - clazz.length - 1 - 1).split(',');
  const length = parseInt(strLength.trim(), 10); // as a first round, only u8 via u8aFixed, we can add more support

  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.assert)(length <= 8192 && length % 8 === 0, () => `${type}: Only support for ${clazz}<bitLength>, where length <= 8192 and a power of 8, found ${length}`);
  value.displayName = displayName;
  value.length = length;
  return value;
}

function _decodeInt(value, type, subType) {
  return _decodeAnyInt(value, type, subType, 'Int');
}

function _decodeUInt(value, type, subType) {
  return _decodeAnyInt(value, type, subType, 'UInt');
} // eslint-disable-next-line @typescript-eslint/no-unused-vars


function _decodeDoNotConstruct(value, type, _) {
  const NAME_LENGTH = 'DoNotConstruct'.length;
  value.displayName = type.substr(NAME_LENGTH + 1, type.length - NAME_LENGTH - 1 - 1);
  return value;
}

function hasWrapper(type, [start, end]) {
  return type.substr(0, start.length) === start && type.substr(-1 * end.length) === end;
}

const nestedExtraction = [['[', ']', _types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.VecFixed, _decodeFixedVec], ['{', '}', _types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.Struct, _decodeStruct], ['(', ')', _types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.Tuple, _decodeTuple], // the inner for these are the same as tuple, multiple values
['BTreeMap<', '>', _types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.BTreeMap, _decodeTuple], ['HashMap<', '>', _types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.HashMap, _decodeTuple], ['Int<', '>', _types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.Int, _decodeInt], // Not sure about these, have a specific implementation?
['Range<', '>', _types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.Tuple, _decodeRange], ['RangeInclusive<', '>', _types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.Tuple, _decodeRange], ['Result<', '>', _types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.Result, _decodeTuple], ['UInt<', '>', _types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.UInt, _decodeUInt], ['DoNotConstruct<', '>', _types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.DoNotConstruct, _decodeDoNotConstruct]];
const wrappedExtraction = [['BTreeSet<', '>', _types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.BTreeSet], ['Compact<', '>', _types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.Compact], ['Linkage<', '>', _types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.Linkage], ['Option<', '>', _types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.Option], ['Vec<', '>', _types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.Vec], ['WrapperOpaque<', '>', _types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.WrapperOpaque]];

function extractSubType(type, [start, end]) {
  return type.substr(start.length, type.length - start.length - end.length);
} // eslint-disable-next-line @typescript-eslint/ban-types


function getTypeDef(_type, {
  displayName,
  name
} = {}, count = 0) {
  // create the type via Type, allowing types to be sanitized
  const type = (0,_sanitize_js__WEBPACK_IMPORTED_MODULE_6__.sanitize)(_type);
  const value = {
    displayName,
    info: _types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.Plain,
    name,
    type
  };
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.assert)(++count !== MAX_NESTED, 'getTypeDef: Maximum nested limit reached');
  const nested = nestedExtraction.find(nested => hasWrapper(type, nested));

  if (nested) {
    value.info = nested[2];
    return nested[3](value, type, extractSubType(type, nested), count);
  }

  const wrapped = wrappedExtraction.find(wrapped => hasWrapper(type, wrapped));

  if (wrapped) {
    value.info = wrapped[2];
    value.sub = getTypeDef(extractSubType(type, wrapped), {}, count);
  }

  return value;
}

/***/ }),
/* 405 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TypeDefInfo": () => (/* binding */ TypeDefInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
let TypeDefInfo;

(function (TypeDefInfo) {
  TypeDefInfo[TypeDefInfo["BTreeMap"] = 0] = "BTreeMap";
  TypeDefInfo[TypeDefInfo["BTreeSet"] = 1] = "BTreeSet";
  TypeDefInfo[TypeDefInfo["Compact"] = 2] = "Compact";
  TypeDefInfo[TypeDefInfo["DoNotConstruct"] = 3] = "DoNotConstruct";
  TypeDefInfo[TypeDefInfo["Enum"] = 4] = "Enum";
  TypeDefInfo[TypeDefInfo["HashMap"] = 5] = "HashMap";
  TypeDefInfo[TypeDefInfo["Int"] = 6] = "Int";
  TypeDefInfo[TypeDefInfo["Linkage"] = 7] = "Linkage";
  TypeDefInfo[TypeDefInfo["Null"] = 8] = "Null";
  TypeDefInfo[TypeDefInfo["Option"] = 9] = "Option";
  TypeDefInfo[TypeDefInfo["Plain"] = 10] = "Plain";
  TypeDefInfo[TypeDefInfo["Range"] = 11] = "Range";
  TypeDefInfo[TypeDefInfo["Result"] = 12] = "Result";
  TypeDefInfo[TypeDefInfo["Set"] = 13] = "Set";
  TypeDefInfo[TypeDefInfo["Si"] = 14] = "Si";
  TypeDefInfo[TypeDefInfo["Struct"] = 15] = "Struct";
  TypeDefInfo[TypeDefInfo["Tuple"] = 16] = "Tuple";
  TypeDefInfo[TypeDefInfo["UInt"] = 17] = "UInt";
  TypeDefInfo[TypeDefInfo["Vec"] = 18] = "Vec";
  TypeDefInfo[TypeDefInfo["VecFixed"] = 19] = "VecFixed";
  TypeDefInfo[TypeDefInfo["WrapperOpaque"] = 20] = "WrapperOpaque";
})(TypeDefInfo || (TypeDefInfo = {}));

/***/ }),
/* 406 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "typeSplit": () => (/* binding */ typeSplit)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(80);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0


function isNotNested(...counters) {
  return !counters.some(counter => counter !== 0);
} // safely split a string on ', ' while taking care of any nested occurences


function typeSplit(type) {
  let [cDepth, fDepth, sDepth, tDepth, start] = [0, 0, 0, 0, 0];
  const result = [];

  const extract = index => {
    if (isNotNested(cDepth, fDepth, sDepth, tDepth)) {
      result.push(type.substr(start, index - start).trim());
      start = index + 1;
    }
  };

  for (let index = 0; index < type.length; index++) {
    switch (type[index]) {
      // if we are not nested, add the type
      case ',':
        extract(index);
        break;
      // adjust compact/vec (and friends) depth

      case '<':
        cDepth++;
        break;

      case '>':
        cDepth--;
        break;
      // adjust fixed vec depths

      case '[':
        fDepth++;
        break;

      case ']':
        fDepth--;
        break;
      // adjust struct depth

      case '{':
        sDepth++;
        break;

      case '}':
        sDepth--;
        break;
      // adjust tuple depth

      case '(':
        tDepth++;
        break;

      case ')':
        tDepth--;
        break;
    }
  }

  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)(isNotNested(cDepth, fDepth, sDepth, tDepth), () => `Invalid definition (missing terminators) found in ${type}`); // the final leg of the journey

  result.push(type.substr(start, type.length - start).trim());
  return result;
}

/***/ }),
/* 407 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "findClosing": () => (/* binding */ findClosing),
/* harmony export */   "alias": () => (/* binding */ alias),
/* harmony export */   "cleanupCompact": () => (/* binding */ cleanupCompact),
/* harmony export */   "flattenSingleTuple": () => (/* binding */ flattenSingleTuple),
/* harmony export */   "removeExtensions": () => (/* binding */ removeExtensions),
/* harmony export */   "removeColons": () => (/* binding */ removeColons),
/* harmony export */   "removeGenerics": () => (/* binding */ removeGenerics),
/* harmony export */   "removePairOf": () => (/* binding */ removePairOf),
/* harmony export */   "removeTraits": () => (/* binding */ removeTraits),
/* harmony export */   "removeWrap": () => (/* binding */ removeWrap),
/* harmony export */   "sanitize": () => (/* binding */ sanitize)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
const BOUNDED = ['BTreeMap', 'BTreeSet', 'HashMap', 'Vec'];
const ALLOWED_BOXES = BOUNDED.concat(['Compact', 'DoNotConstruct', 'Int', 'Linkage', 'Range', 'RangeInclusive', 'Result', 'Option', 'UInt', 'WrapperOpaque']);
const BOX_PRECEDING = ['<', '(', '[', '"', ',', ' ']; // start of vec, tuple, fixed array, part of struct def or in tuple

const mappings = [// alias <T::InherentOfflineReport as InherentOfflineReport>::Inherent -> InherentOfflineReport
alias('<T::InherentOfflineReport as InherentOfflineReport>::Inherent', 'InherentOfflineReport', false), alias('VecDeque<', 'Vec<', false), // <T::Balance as HasCompact>
cleanupCompact(), // Change BoundedVec<Type, Size> to Vec<Type>
removeExtensions('Bounded', true), // Change WeakVec<Type> to Vec<Type>
removeExtensions('Weak', false), // Remove all the trait prefixes
removeTraits(), // remove PairOf<T> -> (T, T)
removePairOf(), // remove boxing, `Box<Proposal>` -> `Proposal`
removeWrap('Box<'), // remove generics, `MisbehaviorReport<Hash, BlockNumber>` -> `MisbehaviorReport`
removeGenerics(), // alias String -> Text (compat with jsonrpc methods)
alias('String', 'Text'), // alias Vec<u8> -> Bytes
alias('Vec<u8>', 'Bytes'), alias('&\\[u8\\]', 'Bytes'), alias("&'static\\[u8\\]", 'Bytes'), // alias RawAddress -> Address
alias('RawAddress', 'Address'), // lookups, mapped to Address/AccountId as appropriate in runtime
alias('Lookup::Source', 'LookupSource'), alias('Lookup::Target', 'LookupTarget'), // HACK duplication between contracts & primitives, however contracts prefixed with exec
alias('exec::StorageKey', 'ContractStorageKey'), // flattens tuples with one value, `(AccountId)` -> `AccountId`
flattenSingleTuple(), // converts ::Type to Type, <T as Trait<I>>::Proposal -> Proposal
removeColons()]; // given a starting index, find the closing >

function findClosing(value, start) {
  let depth = 0;

  for (let index = start; index < value.length; index++) {
    if (value[index] === '>') {
      if (!depth) {
        return index;
      }

      depth--;
    } else if (value[index] === '<') {
      depth++;
    }
  }

  throw new Error(`Unable to find closing matching <> on '${value}' (start ${start})`);
}
function alias(src, dest, withChecks = true) {
  const from = new RegExp(`(^${src}|${BOX_PRECEDING.map(box => `\\${box}${src}`).join('|')})`, 'g');

  const to = src => {
    from.lastIndex = 0;
    return withChecks && BOX_PRECEDING.includes(src[0]) ? `${src[0]}${dest}` : dest;
  };

  return value => value.replace(from, to);
}
function cleanupCompact() {
  return value => {
    for (let index = 0; index < value.length; index++) {
      if (value[index] === '<') {
        const end = findClosing(value, index + 1) - 14;

        if (value.substr(end, 14) === ' as HasCompact') {
          value = `Compact<${value.substr(index + 1, end - index - 1)}>`;
        }
      }
    }

    return value;
  };
}
function flattenSingleTuple() {
  const from1 = /,\)/g;
  const from2 = /\(([^,]+)\)/;
  return value => {
    from1.lastIndex = 0;
    return value // tuples may have trailing commas, e.g. (u32, BlockNumber, )
    .replace(from1, ')') // change (u32) -> u32
    .replace(from2, '$1');
  };
}

function replaceTagWith(value, matcher, replacer) {
  let index = -1;

  while (true) {
    index = value.indexOf(matcher, index + 1);

    if (index === -1) {
      return value;
    }

    const start = index + matcher.length;
    const end = findClosing(value, start);
    value = `${value.substr(0, index)}${replacer(value.substr(start, end - start))}${value.substr(end + 1)}`;
  }
} // remove the Bounded* or Weak* wrappers


function removeExtensions(type, isSized) {
  return value => BOUNDED.reduce((value, tag) => replaceTagWith(value, `${type}${tag}<`, inner => {
    const parts = inner.split(',').map(s => s.trim()).filter(s => s);

    if (isSized) {
      parts.pop();
    }

    return `${tag}<${parts.join(',')}>`;
  }), value);
}
function removeColons() {
  return (value, {
    allowNamespaces
  } = {}) => {
    let index = 0;

    while (index !== -1) {
      index = value.indexOf('::');

      if (index === 0) {
        value = value.substr(2);
      } else if (index !== -1) {
        if (allowNamespaces) {
          return value;
        }

        let start = index;

        while (start !== -1 && !BOX_PRECEDING.includes(value[start])) {
          start--;
        }

        value = `${value.substr(0, start + 1)}${value.substr(index + 2)}`;
      }
    }

    return value;
  };
}
function removeGenerics() {
  return value => {
    for (let index = 0; index < value.length; index++) {
      if (value[index] === '<') {
        // check against the allowed wrappers, be it Vec<..>, Option<...> ...
        const box = ALLOWED_BOXES.find(box => {
          const start = index - box.length;
          return start >= 0 && value.substr(start, box.length) === box && ( // make sure it is stand-alone, i.e. don't catch ElectionResult<...> as Result<...>
          start === 0 || BOX_PRECEDING.includes(value[start - 1]));
        }); // we have not found anything, unwrap generic innards

        if (!box) {
          const end = findClosing(value, index + 1);
          value = `${value.substr(0, index)}${value.substr(end + 1)}`;
        }
      }
    }

    return value;
  };
} // remove the PairOf wrappers

function removePairOf() {
  const replacer = inner => `(${inner},${inner})`;

  return value => replaceTagWith(value, 'PairOf<', replacer);
} // remove the type traits

function removeTraits() {
  const from1 = /\s/g;
  const from2 = /(T|Self)::/g;
  const from3 = /<(T|Self)asTrait>::/g;
  const from4 = /<Tas[a-z]+::Trait>::/g;
  const from5 = /<LookupasStaticLookup>/g;
  const from6 = /::Type/g;
  return value => {
    from1.lastIndex = 0;
    from2.lastIndex = 0;
    from3.lastIndex = 0;
    from4.lastIndex = 0;
    from5.lastIndex = 0;
    from6.lastIndex = 0;
    return value // remove all whitespaces
    .replace(from1, '') // anything `T::<type>` to end up as `<type>`
    .replace(from2, '') // replace `<T as Trait>::` (whitespaces were removed above)
    .replace(from3, '') // replace `<T as something::Trait>::` (whitespaces were removed above)
    .replace(from4, '') // replace <Lookup as StaticLookup>
    .replace(from5, 'Lookup') // replace `<...>::Type`
    .replace(from6, '');
  };
} // remove wrapping values, i.e. Box<Proposal> -> Proposal

function removeWrap(check) {
  const replacer = inner => inner;

  return value => replaceTagWith(value, check, replacer);
}
const sanitizeMap = new Map(); // eslint-disable-next-line @typescript-eslint/ban-types

function sanitize(value, options) {
  let result = value.toString();

  if (!options) {
    const memoized = sanitizeMap.get(result);

    if (memoized) {
      return memoized;
    }
  }

  for (let i = 0; i < mappings.length; i++) {
    result = mappings[i](result, options);
  }

  result = result.trim();

  if (!options) {
    sanitizeMap.set(value.toString(), result);
  }

  return result;
}

/***/ }),
/* 408 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PortableRegistry": () => (/* binding */ PortableRegistry)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(303);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(169);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(124);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(292);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(122);
/* harmony import */ var _codec_Struct_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(319);
/* harmony import */ var _create_encodeTypes_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(409);
/* harmony import */ var _create_getTypeDef_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(404);
/* harmony import */ var _create_sanitize_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(407);
/* harmony import */ var _types_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(405);


// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0





 // Just a placeholder for a type.unrwapOr()

const TYPE_UNWRAP = {
  toNumber: () => -1
}; // Alias the primitive enum with out known values

const PRIMITIVE_ALIAS = {
  Char: 'u32',
  // Rust char is 4-bytes
  Str: 'Text'
}; // These are types where we have a specific decoding/encoding override + helpers

const PATHS_ALIAS = splitNamespace([// These come in different forms
//   - node_runtime::Call
//   - polkadot_runtime::Call
//   - node_template_runtime::Call
//   - interbtc_runtime_parachain::Call
'*_runtime_*::Call', '*_runtime_*::Event', // these have a specific encoding or logic (for pallets)
'pallet_democracy::vote::Vote', 'pallet_identity::types::Data', // these are well-known types with additional encoding
'sp_core::crypto::AccountId32', 'sp_runtime::generic::era::Era', 'sp_runtime::multiaddress::MultiAddress', // ethereum overrides (Frontier, Moonbeam, Polkadot claims)
'account::AccountId20', 'polkadot_runtime_common::claims::EthereumAddress', // shorten some well-known types
'primitive_types::*', 'sp_arithmetic::per_things::*', // ink!
'ink_env::types::*']); // Mappings for types that should be converted to set via BitVec

const PATHS_SET = splitNamespace(['pallet_identity::types::BitFlags']); // These we never use these as top-level names, they are wrappers

const WRAPPERS = ['BoundedBTreeMap', 'BoundedVec', 'Box', 'BTreeMap', 'Cow', 'Result', 'Option', 'WeakBoundedVec', 'WrapperOpaque']; // These are reserved and/or conflicts with built-in Codec or JS definitions

const RESERVED = ['entries', 'hash', 'keys', 'new', 'size']; // Remove these from all paths at index 1

const PATH_RM_INDEX_1 = ['generic', 'misc', 'pallet', 'traits', 'types'];

function splitNamespace(values) {
  return values.map(v => v.split('::'));
}

function createNamespace({
  path
}) {
  return sanitizeDocs(path).join('::');
}

function sanitizeDocs(docs) {
  return docs.map(d => d.toString());
}

function matchParts(first, second) {
  return first.length === second.length && first.every((a, index) => {
    const b = second[index].toString();

    if (a === '*' || a === b) {
      return true;
    }

    if (a.includes('*') && a.includes('_') && b.includes('_')) {
      let suba = a.split('_');
      let subb = b.split('_'); // match initial *'s to multiples if we have a match for the other

      if (suba[0] === '*') {
        const indexOf = subb.indexOf(suba[1]);

        if (indexOf !== -1) {
          suba = suba.slice(1);
          subb = subb.slice(indexOf);
        }
      } // check for * matches at the end, adjust accordingly


      if (suba.length === 2 && suba[1] === '*' && suba[0] === subb[0]) {
        return true;
      }

      return matchParts(suba, subb);
    }

    return false;
  });
} // check if the path matches the PATHS_ALIAS (with wildcards)


function getAliasPath(path) {
  // TODO We need to handle ink! Balance in some way
  return path.length && PATHS_ALIAS.some(p => matchParts(p, path)) ? path[path.length - 1].toString() : null;
}

function hasNoDupes(input) {
  for (let i = 0; i < input.length; i++) {
    const [ai, an] = input[i];

    for (let j = 0; j < input.length; j++) {
      const [bi, bn] = input[j]; // if the indexes are not the same and the names match, we have a dupe

      if (ai !== bi && an === bn) {
        return false;
      }
    }
  }

  return true;
}

function removeDuplicateNames(lookup, names) {
  const rewrite = {};
  return names.map(([lookupIndex, name, params]) => {
    if (!name) {
      return null;
    } // those where the name is matching (since name is filtered, these all do have names)


    const allSame = names.filter(([, oName]) => name === oName); // are there among matching names

    const anyDiff = allSame.some(([oIndex,, oParams]) => lookupIndex !== oIndex && (params.length !== oParams.length || params.some((p, index) => !p.name.eq(oParams[index].name) || p.type.unwrapOr(TYPE_UNWRAP).toNumber() !== oParams[index].type.unwrapOr(TYPE_UNWRAP).toNumber()))); // everything matches, we can combine these

    if (!anyDiff || !allSame[0][2].length) {
      return [lookupIndex, name, params];
    } // find the first parameter that yields differences


    const paramIdx = allSame[0][2].findIndex(({
      type
    }, index) => allSame.every(([,, params]) => params[index].type.isSome) && allSame.every(([,, params], aIndex) => aIndex === 0 || !params[index].type.eq(type))); // No param found that is different

    if (paramIdx === -1) {
      return [lookupIndex, name, params];
    } // see if using the param type helps


    const adjusted = new Array(allSame.length);

    for (let i = 0; i < allSame.length; i++) {
      const [oIndex, oName, oParams] = allSame[i];
      const {
        def,
        path
      } = lookup.getSiType(oParams[paramIdx].type.unwrap());

      if (!def.isPrimitive && !path.length) {
        return null;
      }

      adjusted[i] = [oIndex, def.isPrimitive ? `${oName}${def.asPrimitive.toString()}` : `${oName}${path[path.length - 1].toString()}`, params];
    }

    if (hasNoDupes(adjusted)) {
      for (let i = 0; i < adjusted.length; i++) {
        const [index, name] = adjusted[i];
        rewrite[index] = name;
      }

      return [lookupIndex, name, params];
    }

    return null;
  }).filter(n => !!n).map(([lookupIndex, name, params]) => [lookupIndex, rewrite[lookupIndex] || name, params]);
}

function extractName(types, {
  id,
  type: {
    params,
    path
  }
}) {
  // if we have no path or determined as a wrapper, we just skip it
  if (!path.length || WRAPPERS.includes(path[path.length - 1].toString())) {
    return null;
  }

  const parts = path.map(p => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.stringPascalCase)(p)).filter((p, index) => {
    const lower = p.toLowerCase();
    return ( // Remove ::{generic, misc, pallet, traits, types}::
    index !== 1 || !PATH_RM_INDEX_1.includes(lower)) && ( // sp_runtime::generic::digest::Digest -> sp_runtime::generic::Digest
    // sp_runtime::multiaddress::MultiAddress -> sp_runtime::MultiAddress
    index === path.length - 1 || lower !== path[index + 1].toLowerCase());
  });
  let typeName = parts.join(''); // do magic for RawOrigin lookup, e.g. pallet_collective::RawOrigin

  if (parts.length === 2 && parts[1] === 'RawOrigin' && params.length === 2 && params[1].type.isSome) {
    const instanceType = types[params[1].type.unwrap().toNumber()];

    if (instanceType.type.path.length === 2) {
      typeName = `${typeName}${instanceType.type.path[1].toString()}`;
    }
  }

  return [id.toNumber(), typeName, params];
}

function registerTypes(lookup, lookups, names, params) {
  // Register the types we extracted
  lookup.registry.register(lookups); // Try and extract the AccountId/Address/Signature type from UncheckedExtrinsic

  if (params.SpRuntimeUncheckedExtrinsic) {
    // Address, Call, Signature, Extra
    const [addrParam,, sigParam] = params.SpRuntimeUncheckedExtrinsic;
    const siAddress = lookup.getSiType(addrParam.type.unwrap());
    const siSignature = lookup.getSiType(sigParam.type.unwrap());
    const nsSignature = createNamespace(siSignature);
    let nsAccountId = createNamespace(siAddress);
    const isMultiAddress = nsAccountId === 'sp_runtime::multiaddress::MultiAddress'; // With multiaddress, we check the first type param again

    if (isMultiAddress) {
      // AccountId, AccountIndex
      const [idParam] = siAddress.params;
      nsAccountId = createNamespace(lookup.getSiType(idParam.type.unwrap()));
    }

    lookup.registry.register({
      AccountId: ['sp_core::crypto::AccountId32'].includes(nsAccountId) ? 'AccountId32' : ['account::AccountId20', 'primitive_types::H160'].includes(nsAccountId) ? 'AccountId20' : 'AccountId32',
      // other, default to AccountId32
      Address: isMultiAddress ? 'MultiAddress' : 'AccountId',
      ExtrinsicSignature: ['sp_runtime::MultiSignature'].includes(nsSignature) ? 'MultiSignature' : names[sigParam.type.unwrap().toNumber()] || 'MultiSignature'
    });
  }
}

function extractTypeInfo(lookup, portable) {
  const nameInfo = [];
  const types = {};

  for (let i = 0; i < portable.length; i++) {
    const type = portable[i];
    const extracted = extractName(portable, portable[i]);

    if (extracted) {
      nameInfo.push(extracted);
    }

    types[type.id.toNumber()] = type;
  }

  const dedup = removeDuplicateNames(lookup, nameInfo);
  const lookups = {};
  const names = {};
  const params = {};

  for (let i = 0; i < dedup.length; i++) {
    const [lookupIndex, name, p] = dedup[i];
    names[lookupIndex] = name;
    lookups[name] = lookup.registry.createLookupType(lookupIndex);
    params[name] = p;
  }

  return [types, lookups, names, params];
}

var _names = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("names");

var _typeDefs = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("typeDefs");

var _types = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("types");

var _createSiDef = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("createSiDef");

var _getLookupId = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("getLookupId");

var _extract = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("extract");

var _extractArray = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("extractArray");

var _extractBitSequence = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("extractBitSequence");

var _extractCompact = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("extractCompact");

var _extractComposite = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("extractComposite");

var _extractCompositeSet = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("extractCompositeSet");

var _extractFields = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("extractFields");

var _extractFieldsAlias = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("extractFieldsAlias");

var _extractHistoric = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("extractHistoric");

var _extractPrimitive = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("extractPrimitive");

var _extractAliasPath = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("extractAliasPath");

var _extractSequence = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("extractSequence");

var _extractTuple = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("extractTuple");

var _extractVariant = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("extractVariant");

var _extractVariantEnum = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("extractVariantEnum");

class PortableRegistry extends _codec_Struct_js__WEBPACK_IMPORTED_MODULE_3__.Struct {
  constructor(registry, value) {
    // console.time('PortableRegistry')
    super(registry, {
      types: 'Vec<PortableType>'
    }, value);
    Object.defineProperty(this, _extractVariantEnum, {
      value: _extractVariantEnum2
    });
    Object.defineProperty(this, _extractVariant, {
      value: _extractVariant2
    });
    Object.defineProperty(this, _extractTuple, {
      value: _extractTuple2
    });
    Object.defineProperty(this, _extractSequence, {
      value: _extractSequence2
    });
    Object.defineProperty(this, _extractAliasPath, {
      value: _extractAliasPath2
    });
    Object.defineProperty(this, _extractPrimitive, {
      value: _extractPrimitive2
    });
    Object.defineProperty(this, _extractHistoric, {
      value: _extractHistoric2
    });
    Object.defineProperty(this, _extractFieldsAlias, {
      value: _extractFieldsAlias2
    });
    Object.defineProperty(this, _extractFields, {
      value: _extractFields2
    });
    Object.defineProperty(this, _extractCompositeSet, {
      value: _extractCompositeSet2
    });
    Object.defineProperty(this, _extractComposite, {
      value: _extractComposite2
    });
    Object.defineProperty(this, _extractCompact, {
      value: _extractCompact2
    });
    Object.defineProperty(this, _extractBitSequence, {
      value: _extractBitSequence2
    });
    Object.defineProperty(this, _extractArray, {
      value: _extractArray2
    });
    Object.defineProperty(this, _extract, {
      value: _extract2
    });
    Object.defineProperty(this, _getLookupId, {
      value: _getLookupId2
    });
    Object.defineProperty(this, _createSiDef, {
      value: _createSiDef2
    });
    Object.defineProperty(this, _names, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _typeDefs, {
      writable: true,
      value: {}
    });
    Object.defineProperty(this, _types, {
      writable: true,
      value: void 0
    });
    const [types, lookups, names, _params] = extractTypeInfo(this, this.types);
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _names)[_names] = names;
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _types)[_types] = types;
    registerTypes(this, lookups, names, _params); // console.timeEnd('PortableRegistry')
  }

  get names() {
    return Object.values((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _names)[_names]);
  }
  /**
   * @description The types of the registry
   */


  get types() {
    return this.get('types');
  }
  /**
   * @description Returns the name for a specific lookup
   */


  getName(lookupId) {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _names)[_names][(0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _getLookupId)[_getLookupId](lookupId)];
  }
  /**
   * @description Finds a specific type in the registry
   */


  getSiType(lookupId) {
    // NOTE catch-22 - this may already be used as part of the constructor, so
    // ensure that we have actually initialized it correctly
    const found = ((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _types)[_types] || this.types)[(0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _getLookupId)[_getLookupId](lookupId)];

    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.assert)(found, () => `PortableRegistry: Unable to find type with lookupId ${lookupId.toString()}`);
    return found.type;
  }
  /**
   * @description Lookup the type definition for the index
   */


  getTypeDef(lookupId) {
    const lookupIndex = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _getLookupId)[_getLookupId](lookupId);

    if (!(0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _typeDefs)[_typeDefs][lookupIndex]) {
      const lookupName = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _names)[_names][lookupIndex];

      const empty = {
        info: _types_index_js__WEBPACK_IMPORTED_MODULE_5__.TypeDefInfo.DoNotConstruct,
        lookupIndex,
        lookupName,
        type: this.registry.createLookupType(lookupIndex)
      }; // Set named items since we will get into circular lookups along the way

      if (lookupName) {
        (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _typeDefs)[_typeDefs][lookupIndex] = empty;
      }

      const extracted = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _extract)[_extract](this.getSiType(lookupId), lookupIndex); // For non-named items, we only set this right at the end


      if (!lookupName) {
        (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _typeDefs)[_typeDefs][lookupIndex] = empty;
      }

      Object.keys(extracted).forEach(k => {
        if (k !== 'lookupName' || extracted[k]) {
          // these are safe since we are looking through the keys as set
          (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _typeDefs)[_typeDefs][lookupIndex][k] = extracted[k];
        }
      }); // don't set lookupName on lower-level, we want to always direct to the type

      if (extracted.info === _types_index_js__WEBPACK_IMPORTED_MODULE_5__.TypeDefInfo.Plain) {
        (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _typeDefs)[_typeDefs][lookupIndex].lookupNameRoot = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _typeDefs)[_typeDefs][lookupIndex].lookupName;
        delete (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _typeDefs)[_typeDefs][lookupIndex].lookupName;
      }
    }

    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _typeDefs)[_typeDefs][lookupIndex];
  }

}

function _createSiDef2(lookupId) {
  const typeDef = this.getTypeDef(lookupId);
  const lookupIndex = lookupId.toNumber(); // Setup for a lookup on complex types

  return [_types_index_js__WEBPACK_IMPORTED_MODULE_5__.TypeDefInfo.DoNotConstruct, _types_index_js__WEBPACK_IMPORTED_MODULE_5__.TypeDefInfo.Enum, _types_index_js__WEBPACK_IMPORTED_MODULE_5__.TypeDefInfo.Struct].includes(typeDef.info) && typeDef.lookupName ? {
    docs: typeDef.docs,
    info: _types_index_js__WEBPACK_IMPORTED_MODULE_5__.TypeDefInfo.Si,
    lookupIndex,
    lookupName: (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _names)[_names][lookupIndex],
    type: this.registry.createLookupType(lookupId)
  } : typeDef;
}

function _getLookupId2(lookupId) {
  if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.isString)(lookupId)) {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.assert)(this.registry.isLookupType(lookupId), () => `PortableRegistry: Expected a lookup string type, found ${lookupId}`);
    return parseInt(lookupId.replace('Lookup', ''), 10);
  } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_7__.isNumber)(lookupId)) {
    return lookupId;
  }

  return lookupId.toNumber();
}

function _extract2(type, lookupIndex) {
  const namespace = [...type.path].join('::');
  let typeDef;
  const aliasType = getAliasPath(type.path);

  try {
    if (aliasType) {
      typeDef = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _extractAliasPath)[_extractAliasPath](lookupIndex, aliasType);
    } else if (type.def.isArray) {
      typeDef = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _extractArray)[_extractArray](lookupIndex, type.def.asArray);
    } else if (type.def.isBitSequence) {
      typeDef = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _extractBitSequence)[_extractBitSequence](lookupIndex, type.def.asBitSequence);
    } else if (type.def.isCompact) {
      typeDef = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _extractCompact)[_extractCompact](lookupIndex, type.def.asCompact);
    } else if (type.def.isComposite) {
      typeDef = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _extractComposite)[_extractComposite](lookupIndex, type, type.def.asComposite);
    } else if (type.def.isHistoricMetaCompat) {
      typeDef = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _extractHistoric)[_extractHistoric](lookupIndex, type.def.asHistoricMetaCompat);
    } else if (type.def.isPrimitive) {
      typeDef = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _extractPrimitive)[_extractPrimitive](lookupIndex, type);
    } else if (type.def.isSequence) {
      typeDef = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _extractSequence)[_extractSequence](lookupIndex, type.def.asSequence);
    } else if (type.def.isTuple) {
      typeDef = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _extractTuple)[_extractTuple](lookupIndex, type.def.asTuple);
    } else if (type.def.isVariant) {
      typeDef = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _extractVariant)[_extractVariant](lookupIndex, type, type.def.asVariant);
    } else {
      throw new Error(`No SiTypeDef handler for ${type.def.toString()}`);
    }
  } catch (error) {
    throw new Error(`PortableRegistry: ${lookupIndex}${namespace ? ` (${namespace})` : ''}: Error extracting ${(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_8__.stringify)(type)}: ${error.message}`);
  }

  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.objectSpread)({
    docs: sanitizeDocs(type.docs),
    namespace
  }, typeDef);
}

function _extractArray2(_, {
  len: length,
  type
}) {
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.assert)(!length || length.toNumber() <= 256, 'Only support for [Type; <length>], where length <= 256');
  return (0,_create_encodeTypes_js__WEBPACK_IMPORTED_MODULE_10__.withTypeString)(this.registry, {
    info: _types_index_js__WEBPACK_IMPORTED_MODULE_5__.TypeDefInfo.VecFixed,
    length: length.toNumber(),
    sub: (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _createSiDef)[_createSiDef](type)
  });
}

function _extractBitSequence2(_, {
  bitOrderType,
  bitStoreType
}) {
  const bitOrder = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _createSiDef)[_createSiDef](bitOrderType);

  const bitStore = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _createSiDef)[_createSiDef](bitStoreType); // NOTE: Currently the BitVec type is one-way only, i.e. we only use it to decode, not
  // re-encode stuff. As such we ignore the msb/lsb identifier given by bitOrderType, or rather
  // we don't pass it though at all


  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.assert)(['bitvec::order::Lsb0', 'bitvec::order::Msb0'].includes(bitOrder.namespace || ''), () => `Unexpected bitOrder found as ${bitOrder.namespace || '<unknown>'}`);
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.assert)(bitStore.info === _types_index_js__WEBPACK_IMPORTED_MODULE_5__.TypeDefInfo.Plain && bitStore.type === 'u8', () => `Only u8 bitStore is currently supported, found ${bitStore.type}`);
  return {
    info: _types_index_js__WEBPACK_IMPORTED_MODULE_5__.TypeDefInfo.Plain,
    type: 'BitVec'
  };
}

function _extractCompact2(_, {
  type
}) {
  return (0,_create_encodeTypes_js__WEBPACK_IMPORTED_MODULE_10__.withTypeString)(this.registry, {
    info: _types_index_js__WEBPACK_IMPORTED_MODULE_5__.TypeDefInfo.Compact,
    sub: (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _createSiDef)[_createSiDef](type)
  });
}

function _extractComposite2(lookupIndex, {
  params,
  path
}, {
  fields
}) {
  const specialVariant = path[0].toString();

  if (path.length === 1 && specialVariant === 'BTreeMap') {
    return (0,_create_encodeTypes_js__WEBPACK_IMPORTED_MODULE_10__.withTypeString)(this.registry, {
      info: _types_index_js__WEBPACK_IMPORTED_MODULE_5__.TypeDefInfo.BTreeMap,
      sub: params.map(({
        type
      }) => (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _createSiDef)[_createSiDef](type.unwrap()))
    });
  } else if (['Range', 'RangeInclusive'].includes(specialVariant)) {
    return (0,_create_encodeTypes_js__WEBPACK_IMPORTED_MODULE_10__.withTypeString)(this.registry, {
      info: _types_index_js__WEBPACK_IMPORTED_MODULE_5__.TypeDefInfo.Range,
      sub: fields.map(({
        name,
        type,
        typeName
      }, index) => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.objectSpread)({
        name: name.isSome ? name.unwrap().toString() : ['start', 'end'][index]
      }, (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _createSiDef)[_createSiDef](type), typeName.isSome ? {
        typeName: (0,_create_sanitize_js__WEBPACK_IMPORTED_MODULE_11__.sanitize)(typeName.unwrap())
      } : null))
    });
  } else if (path.length) {
    if (path[path.length - 1].toString() === 'WrapperOpaque') {
      return (0,_create_encodeTypes_js__WEBPACK_IMPORTED_MODULE_10__.withTypeString)(this.registry, {
        info: _types_index_js__WEBPACK_IMPORTED_MODULE_5__.TypeDefInfo.WrapperOpaque,
        sub: (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _createSiDef)[_createSiDef](params[0].type.unwrap())
      });
    } else if (path[path.length - 1].toString() === 'WrapperKeepOpaque') {
      return {
        info: _types_index_js__WEBPACK_IMPORTED_MODULE_5__.TypeDefInfo.Plain,
        type: 'Bytes'
      };
    }
  }

  return PATHS_SET.some(p => matchParts(p, path)) ? (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _extractCompositeSet)[_extractCompositeSet](lookupIndex, params, fields) : (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _extractFields)[_extractFields](lookupIndex, fields);
}

function _extractCompositeSet2(_, params, fields) {
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.assert)(params.length === 1 && fields.length === 1, 'Set handling expects param/field as single entries');
  return (0,_create_encodeTypes_js__WEBPACK_IMPORTED_MODULE_10__.withTypeString)(this.registry, {
    info: _types_index_js__WEBPACK_IMPORTED_MODULE_5__.TypeDefInfo.Set,
    length: this.registry.createType(this.registry.createLookupType(fields[0].type)).bitLength(),
    sub: this.getSiType(params[0].type.unwrap()).def.asVariant.variants.map(({
      index,
      name
    }) => ({
      // This will be an issue > 2^53 - 1 ... don't have those (yet)
      index: index.toNumber(),
      info: _types_index_js__WEBPACK_IMPORTED_MODULE_5__.TypeDefInfo.Plain,
      name: name.toString(),
      type: 'Null'
    }))
  });
}

function _extractFields2(lookupIndex, fields) {
  let isStruct = true;
  let isTuple = true;

  for (let f = 0; f < fields.length; f++) {
    const {
      name
    } = fields[f];
    isStruct = isStruct && name.isSome;
    isTuple = isTuple && name.isNone;
  }

  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.assert)(isTuple || isStruct, 'Invalid fields type detected, expected either Tuple (all unnamed) or Struct (all named)');

  if (fields.length === 0) {
    return {
      info: _types_index_js__WEBPACK_IMPORTED_MODULE_5__.TypeDefInfo.Null,
      type: 'Null'
    };
  } else if (isTuple && fields.length === 1) {
    const typeDef = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _createSiDef)[_createSiDef](fields[0].type);

    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.objectSpread)({}, typeDef, lookupIndex === -1 ? {} : {
      lookupIndex,
      lookupName: (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _names)[_names][lookupIndex],
      lookupNameRoot: typeDef.lookupName
    }, fields[0].typeName.isSome ? {
      typeName: (0,_create_sanitize_js__WEBPACK_IMPORTED_MODULE_11__.sanitize)(fields[0].typeName.unwrap())
    } : null);
  }

  const [sub, alias] = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _extractFieldsAlias)[_extractFieldsAlias](fields);

  return (0,_create_encodeTypes_js__WEBPACK_IMPORTED_MODULE_10__.withTypeString)(this.registry, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.objectSpread)({
    info: isTuple // Tuple check first
    ? _types_index_js__WEBPACK_IMPORTED_MODULE_5__.TypeDefInfo.Tuple : _types_index_js__WEBPACK_IMPORTED_MODULE_5__.TypeDefInfo.Struct
  }, alias.size ? {
    alias
  } : null, lookupIndex === -1 ? {} : {
    lookupIndex,
    lookupName: (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _names)[_names][lookupIndex]
  }, {
    sub
  }));
}

function _extractFieldsAlias2(fields) {
  const alias = new Map();
  const sub = new Array(fields.length);

  for (let i = 0; i < fields.length; i++) {
    const {
      docs,
      name,
      type,
      typeName
    } = fields[i];

    const typeDef = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _createSiDef)[_createSiDef](type);

    if (name.isNone) {
      sub[i] = typeDef;
    } else {
      let nameField = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.stringCamelCase)(name.unwrap());
      let nameOrig = null;

      if (nameField.includes('#')) {
        nameOrig = nameField;
        nameField = nameOrig.replace(/#/g, '_');
      } else if (RESERVED.includes(nameField)) {
        nameOrig = nameField;
        nameField = `${nameField}_`;
      }

      if (nameOrig) {
        alias.set(nameField, nameOrig);
      }

      sub[i] = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.objectSpread)({}, typeDef, {
        docs: sanitizeDocs(docs),
        name: nameField
      }, typeName.isSome ? {
        typeName: (0,_create_sanitize_js__WEBPACK_IMPORTED_MODULE_11__.sanitize)(typeName.unwrap())
      } : null);
    }
  }

  return [sub, alias];
}

function _extractHistoric2(_, type) {
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.objectSpread)({}, (0,_create_getTypeDef_js__WEBPACK_IMPORTED_MODULE_12__.getTypeDef)(type), {
    displayName: type.toString(),
    isFromSi: true
  });
}

function _extractPrimitive2(_, type) {
  const typeStr = type.def.asPrimitive.type.toString();
  return {
    info: _types_index_js__WEBPACK_IMPORTED_MODULE_5__.TypeDefInfo.Plain,
    type: PRIMITIVE_ALIAS[typeStr] || typeStr.toLowerCase()
  };
}

function _extractAliasPath2(_, type) {
  return {
    info: _types_index_js__WEBPACK_IMPORTED_MODULE_5__.TypeDefInfo.Plain,
    type
  };
}

function _extractSequence2(lookupIndex, {
  type
}) {
  const sub = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _createSiDef)[_createSiDef](type);

  if (sub.type === 'u8') {
    return {
      info: _types_index_js__WEBPACK_IMPORTED_MODULE_5__.TypeDefInfo.Plain,
      type: 'Bytes'
    };
  }

  return (0,_create_encodeTypes_js__WEBPACK_IMPORTED_MODULE_10__.withTypeString)(this.registry, {
    info: _types_index_js__WEBPACK_IMPORTED_MODULE_5__.TypeDefInfo.Vec,
    lookupIndex,
    lookupName: (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _names)[_names][lookupIndex],
    sub
  });
}

function _extractTuple2(lookupIndex, ids) {
  if (ids.length === 0) {
    return {
      info: _types_index_js__WEBPACK_IMPORTED_MODULE_5__.TypeDefInfo.Null,
      type: 'Null'
    };
  } else if (ids.length === 1) {
    return this.getTypeDef(ids[0]);
  }

  const sub = ids.map(type => (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _createSiDef)[_createSiDef](type));
  return (0,_create_encodeTypes_js__WEBPACK_IMPORTED_MODULE_10__.withTypeString)(this.registry, {
    info: _types_index_js__WEBPACK_IMPORTED_MODULE_5__.TypeDefInfo.Tuple,
    lookupIndex,
    lookupName: (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _names)[_names][lookupIndex],
    sub
  });
}

function _extractVariant2(lookupIndex, {
  params,
  path
}, {
  variants
}) {
  const specialVariant = path[0].toString();

  if (specialVariant === 'Option') {
    return (0,_create_encodeTypes_js__WEBPACK_IMPORTED_MODULE_10__.withTypeString)(this.registry, {
      info: _types_index_js__WEBPACK_IMPORTED_MODULE_5__.TypeDefInfo.Option,
      sub: (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _createSiDef)[_createSiDef](params[0].type.unwrap())
    });
  } else if (specialVariant === 'Result') {
    return (0,_create_encodeTypes_js__WEBPACK_IMPORTED_MODULE_10__.withTypeString)(this.registry, {
      info: _types_index_js__WEBPACK_IMPORTED_MODULE_5__.TypeDefInfo.Result,
      sub: params.map(({
        type
      }, index) => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.objectSpread)({
        name: ['Ok', 'Error'][index]
      }, (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _createSiDef)[_createSiDef](type.unwrap())))
    });
  } else if (variants.length === 0) {
    return {
      info: _types_index_js__WEBPACK_IMPORTED_MODULE_5__.TypeDefInfo.Null,
      type: 'Null'
    };
  }

  return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _extractVariantEnum)[_extractVariantEnum](lookupIndex, variants);
}

function _extractVariantEnum2(lookupIndex, variants) {
  const sub = []; // we may get entries out of order, arrange them first before creating with gaps filled
  // NOTE: Since we mutate, use a copy of the array as an input

  [...variants].sort((a, b) => a.index.cmp(b.index)).forEach(({
    fields,
    index,
    name
  }) => {
    const desired = index.toNumber();

    while (sub.length !== desired) {
      sub.push({
        index: sub.length,
        info: _types_index_js__WEBPACK_IMPORTED_MODULE_5__.TypeDefInfo.Null,
        name: `__Unused${sub.length}`,
        type: 'Null'
      });
    }

    sub.push((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.objectSpread)((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _extractFields)[_extractFields](-1, fields), {
      index: index.toNumber(),
      name: name.toString()
    }));
  });
  return (0,_create_encodeTypes_js__WEBPACK_IMPORTED_MODULE_10__.withTypeString)(this.registry, {
    info: _types_index_js__WEBPACK_IMPORTED_MODULE_5__.TypeDefInfo.Enum,
    lookupIndex,
    lookupName: (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _names)[_names][lookupIndex],
    sub
  });
}

/***/ }),
/* 409 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "paramsNotation": () => (/* binding */ paramsNotation),
/* harmony export */   "encodeTypeDef": () => (/* binding */ encodeTypeDef),
/* harmony export */   "withTypeString": () => (/* binding */ withTypeString)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(292);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(122);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(82);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(124);
/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(405);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0



const stringIdentity = value => value.toString();

const INFO_WRAP = ['BTreeMap', 'BTreeSet', 'Compact', 'HashMap', 'Option', 'Result', 'Vec'];
function paramsNotation(outer, inner, transform = stringIdentity) {
  return `${outer}${inner ? `<${(Array.isArray(inner) ? inner : [inner]).map(transform).join(', ')}>` : ''}`;
}

function encodeWithParams(registry, typeDef, outer) {
  const {
    info,
    sub
  } = typeDef;

  switch (info) {
    case _types_js__WEBPACK_IMPORTED_MODULE_0__.TypeDefInfo.BTreeMap:
    case _types_js__WEBPACK_IMPORTED_MODULE_0__.TypeDefInfo.BTreeSet:
    case _types_js__WEBPACK_IMPORTED_MODULE_0__.TypeDefInfo.Compact:
    case _types_js__WEBPACK_IMPORTED_MODULE_0__.TypeDefInfo.HashMap:
    case _types_js__WEBPACK_IMPORTED_MODULE_0__.TypeDefInfo.Linkage:
    case _types_js__WEBPACK_IMPORTED_MODULE_0__.TypeDefInfo.Option:
    case _types_js__WEBPACK_IMPORTED_MODULE_0__.TypeDefInfo.Result:
    case _types_js__WEBPACK_IMPORTED_MODULE_0__.TypeDefInfo.Vec:
    case _types_js__WEBPACK_IMPORTED_MODULE_0__.TypeDefInfo.WrapperOpaque:
      return paramsNotation(outer, sub, p => encodeTypeDef(registry, p));
  }

  throw new Error(`Unable to encode ${(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.stringify)(typeDef)} with params`);
}

function encodeSubTypes(registry, sub, asEnum, extra) {
  const names = sub.map(({
    name
  }) => name);
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.assert)(names.every(n => !!n), () => `Subtypes does not have consistent names, ${names.join(', ')}`);
  const inner = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.objectSpread)({}, extra);

  for (let i = 0; i < sub.length; i++) {
    const def = sub[i];
    inner[def.name] = encodeTypeDef(registry, def);
  }

  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.stringify)(asEnum ? {
    _enum: inner
  } : inner);
} // We setup a record here to ensure we have comprehensive coverage (any item not covered will result
// in a compile-time error with the missing index)


const encoders = {
  [_types_js__WEBPACK_IMPORTED_MODULE_0__.TypeDefInfo.BTreeMap]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'BTreeMap'),
  [_types_js__WEBPACK_IMPORTED_MODULE_0__.TypeDefInfo.BTreeSet]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'BTreeSet'),
  [_types_js__WEBPACK_IMPORTED_MODULE_0__.TypeDefInfo.Compact]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Compact'),
  [_types_js__WEBPACK_IMPORTED_MODULE_0__.TypeDefInfo.DoNotConstruct]: (registry, {
    displayName,
    lookupIndex,
    lookupName
  }) => `DoNotConstruct<${lookupName || displayName || ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.isUndefined)(lookupIndex) ? 'Unknown' : registry.createLookupType(lookupIndex))}>`,
  [_types_js__WEBPACK_IMPORTED_MODULE_0__.TypeDefInfo.Enum]: (registry, {
    sub
  }) => {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.assert)(sub && Array.isArray(sub), 'Unable to encode Enum type'); // c-like enums have all Null entries
    // TODO We need to take the disciminant into account and auto-add empty entries

    return sub.every(({
      type
    }) => type === 'Null') ? (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.stringify)({
      _enum: sub.map(({
        name
      }, index) => `${name || `Empty${index}`}`)
    }) : encodeSubTypes(registry, sub, true);
  },
  [_types_js__WEBPACK_IMPORTED_MODULE_0__.TypeDefInfo.HashMap]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'HashMap'),
  [_types_js__WEBPACK_IMPORTED_MODULE_0__.TypeDefInfo.Int]: (registry, {
    length = 32
  }) => `Int<${length}>`,
  [_types_js__WEBPACK_IMPORTED_MODULE_0__.TypeDefInfo.Linkage]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Linkage'),
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  [_types_js__WEBPACK_IMPORTED_MODULE_0__.TypeDefInfo.Null]: (registry, typeDef) => 'Null',
  [_types_js__WEBPACK_IMPORTED_MODULE_0__.TypeDefInfo.Option]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Option'),
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  [_types_js__WEBPACK_IMPORTED_MODULE_0__.TypeDefInfo.Plain]: (registry, {
    displayName,
    type
  }) => displayName || type,
  [_types_js__WEBPACK_IMPORTED_MODULE_0__.TypeDefInfo.Range]: (registry, typeDef) => encodeWithParams(registry, typeDef, typeDef.type.includes('RangeInclusive') ? 'RangeInclusive' : 'Range'),
  [_types_js__WEBPACK_IMPORTED_MODULE_0__.TypeDefInfo.Result]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Result'),
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  [_types_js__WEBPACK_IMPORTED_MODULE_0__.TypeDefInfo.Set]: (registry, {
    length = 8,
    sub
  }) => {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.assert)(sub && Array.isArray(sub), 'Unable to encode Set type');
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.stringify)({
      _set: sub.reduce((all, {
        index,
        name
      }, count) => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.objectSpread)(all, {
        [`${name || `Unknown${index || count}`}`]: index || count
      }), {
        _bitLength: length || 8
      })
    });
  },
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  [_types_js__WEBPACK_IMPORTED_MODULE_0__.TypeDefInfo.Si]: (registry, {
    lookupName,
    type
  }) => lookupName || type,
  [_types_js__WEBPACK_IMPORTED_MODULE_0__.TypeDefInfo.Struct]: (registry, {
    alias,
    sub
  }) => {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.assert)(sub && Array.isArray(sub), 'Unable to encode Struct type');
    return encodeSubTypes(registry, sub, false, alias ? {
      _alias: [...alias.entries()].reduce((all, [k, v]) => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.objectSpread)(all, {
        [k]: v
      }), {})
    } : {});
  },
  [_types_js__WEBPACK_IMPORTED_MODULE_0__.TypeDefInfo.Tuple]: (registry, {
    sub
  }) => {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.assert)(sub && Array.isArray(sub), 'Unable to encode Tuple type');
    return `(${sub.map(type => encodeTypeDef(registry, type)).join(',')})`;
  },
  [_types_js__WEBPACK_IMPORTED_MODULE_0__.TypeDefInfo.UInt]: (registry, {
    length = 32
  }) => `UInt<${length}>`,
  [_types_js__WEBPACK_IMPORTED_MODULE_0__.TypeDefInfo.Vec]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'Vec'),
  [_types_js__WEBPACK_IMPORTED_MODULE_0__.TypeDefInfo.VecFixed]: (registry, {
    length,
    sub
  }) => {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.assert)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.isNumber)(length) && !(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.isUndefined)(sub) && !Array.isArray(sub), 'Unable to encode VecFixed type');
    return `[${sub.type};${length}]`;
  },
  [_types_js__WEBPACK_IMPORTED_MODULE_0__.TypeDefInfo.WrapperOpaque]: (registry, typeDef) => encodeWithParams(registry, typeDef, 'WrapperOpaque')
};

function encodeType(registry, typeDef, withLookup = true) {
  return withLookup && typeDef.lookupName ? typeDef.lookupName : encoders[typeDef.info](registry, typeDef);
}

function encodeTypeDef(registry, typeDef) {
  // In the case of contracts we do have the unfortunate situation where the displayName would
  // refer to "Option" when it is an option. For these, string it out, only using when actually
  // not a top-level element to be used
  return typeDef.displayName && !INFO_WRAP.some(i => typeDef.displayName === i) ? typeDef.displayName : encodeType(registry, typeDef);
}
function withTypeString(registry, typeDef) {
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.objectSpread)({}, typeDef, {
    type: encodeType(registry, typeDef, false)
  });
}

/***/ }),
/* 410 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Raw": () => (/* binding */ Raw)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(411);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(82);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(412);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(196);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(413);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name Raw
 * @description
 * A basic wrapper around Uint8Array, with no frills and no fuss. It does differ
 * from other implementations where it will consume the full Uint8Array as passed to it.
 * As such it is meant to be subclassed where the wrapper takes care of the
 * actual lengths instead of used directly.
 * @noInheritDoc
 */

class Raw extends Uint8Array {
  constructor(registry, value, initialU8aLength) {
    super((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(value));
    this.registry = void 0;
    this.createdAtHash = void 0;
    this.initialU8aLength = void 0;
    this.registry = registry;
    this.initialU8aLength = initialU8aLength;
  }
  /**
   * @description The length of the value when encoded as a Uint8Array
   */


  get encodedLength() {
    return this.length;
  }
  /**
   * @description returns a hash of the contents
   */


  get hash() {
    return this.registry.hash(this.toU8a());
  }
  /**
   * @description Returns true if the wrapped value contains only ASCII printable characters
   */


  get isAscii() {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isAscii)(this);
  }
  /**
   * @description Returns true if the type wraps an empty/default all-0 value
   */


  get isEmpty() {
    return !this.length || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(this.find(b => !!b));
  }
  /**
   * @description Returns true if the wrapped value contains only utf8 characters
   */


  get isUtf8() {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.isUtf8)(this);
  }
  /**
   * @description The length of the value
   */


  get length() {
    // only included here since we ignore inherited docs
    return super.length;
  }
  /**
   * @description Returns the number of bits in the value
   */


  bitLength() {
    return this.length * 8;
  }
  /**
   * @description Compares the value of the input to see if there is a match
   */


  eq(other) {
    if (other instanceof Uint8Array) {
      return this.length === other.length && !this.some((b, index) => b !== other[index]);
    }

    return this.eq((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(other));
  }
  /**
   * @description Create a new slice from the actual buffer. (compat)
   * @param start The position to start at
   * @param end The position to end at
   */


  slice(start, end) {
    // Like subarray below, we have to follow this approach since we are extending the TypeArray.
    // This happens especially when it comes to further extensions, the length may be an override
    return Uint8Array.from(this).slice(start, end);
  }
  /**
   * @description Create a new subarray from the actual buffer. (compat)
   * @param begin The position to start at
   * @param end The position to end at
   */


  subarray(begin, end) {
    return Uint8Array.from(this).subarray(begin, end);
  }
  /**
   * @description Returns a hex string representation of the value
   */


  toHex() {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.u8aToHex)(this);
  }
  /**
   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
   */


  toHuman() {
    if (this.isAscii) {
      const text = this.toUtf8(); // ensure we didn't end up with multibyte codepoints

      if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isAscii)(text)) {
        return text;
      }
    }

    return this.toJSON();
  }
  /**
   * @description Converts the Object to JSON, typically used for RPC transfers
   */


  toJSON() {
    return this.toHex();
  }
  /**
   * @description Returns the base runtime type name for this instance
   */


  toRawType() {
    return 'Raw';
  }
  /**
   * @description Returns the string representation of the value
   */


  toString() {
    return this.toHex();
  }
  /**
   * @description Encodes the value as a Uint8Array as per the SCALE specifications
   * @param isBare true when the value has none of the type-specific prefixes (internal)
   */
  // eslint-disable-next-line @typescript-eslint/no-unused-vars


  toU8a(isBare) {
    return Uint8Array.from(this);
  }
  /**
   * @description Returns the wrapped data as a UTF-8 string
   */


  toUtf8() {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.assert)(this.isUtf8, 'The character sequence is not a valid Utf8 string');
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.u8aToString)(this);
  }

}

/***/ }),
/* 411 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isAscii": () => (/* binding */ isAscii)
/* harmony export */ });
/* harmony import */ var _u8a_toU8a_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(166);
/* harmony import */ var _hex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(126);
/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(169);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0



const FORMAT = [9, 10, 13];
/** @internal */

function isAsciiByte(b) {
  return b < 127 && (b >= 32 || FORMAT.includes(b));
}

function isAsciiChar(s) {
  return isAsciiByte(s.charCodeAt(0));
}
/**
 * @name isAscii
 * @summary Tests if the input is printable ASCII
 * @description
 * Checks to see if the input string or Uint8Array is printable ASCII, 32-127 + formatters
 */


function isAscii(value) {
  const isStringIn = (0,_string_js__WEBPACK_IMPORTED_MODULE_0__.isString)(value);

  if (value) {
    return isStringIn && !(0,_hex_js__WEBPACK_IMPORTED_MODULE_1__.isHex)(value) ? value.toString().split('').every(isAsciiChar) : (0,_u8a_toU8a_js__WEBPACK_IMPORTED_MODULE_2__.u8aToU8a)(value).every(isAsciiByte);
  }

  return isStringIn;
}

/***/ }),
/* 412 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isUtf8": () => (/* binding */ isUtf8)
/* harmony export */ });
/* harmony import */ var _u8a_toU8a_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(166);
/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(169);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Adapted from https://github.com/JulienPalard/is_utf8/blob/master/is_utf8.c


/**
 * @name isUtf8
 * @summary Tests if the input is valid Utf8
 * @description
 * Checks to see if the input string or Uint8Array is valid Utf8
 */

function isUtf8(value) {
  if (!value) {
    return (0,_string_js__WEBPACK_IMPORTED_MODULE_0__.isString)(value);
  }

  const u8a = (0,_u8a_toU8a_js__WEBPACK_IMPORTED_MODULE_1__.u8aToU8a)(value);
  const len = u8a.length;
  let i = 0;

  while (i < len) {
    if (u8a[i] <= 0x7F)
      /* 00..7F */
      {
        i += 1;
      } else if (u8a[i] >= 0xC2 && u8a[i] <= 0xDF)
      /* C2..DF 80..BF */
      {
        if (i + 1 < len)
          /* Expect a 2nd byte */
          {
            if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0xBF) {
              // *message = "After a first byte between C2 and DF, expecting a 2nd byte between 80 and BF";
              // *faulty_bytes = 2;
              return false;
            }
          } else {
          // *message = "After a first byte between C2 and DF, expecting a 2nd byte.";
          // *faulty_bytes = 1;
          return false;
        }

        i += 2;
      } else if (u8a[i] === 0xE0)
      /* E0 A0..BF 80..BF */
      {
        if (i + 2 < len)
          /* Expect a 2nd and 3rd byte */
          {
            if (u8a[i + 1] < 0xA0 || u8a[i + 1] > 0xBF) {
              // *message = "After a first byte of E0, expecting a 2nd byte between A0 and BF.";
              // *faulty_bytes = 2;
              return false;
            }

            if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {
              // *message = "After a first byte of E0, expecting a 3nd byte between 80 and BF.";
              // *faulty_bytes = 3;
              return false;
            }
          } else {
          // *message = "After a first byte of E0, expecting two following bytes.";
          // *faulty_bytes = 1;
          return false;
        }

        i += 3;
      } else if (u8a[i] >= 0xE1 && u8a[i] <= 0xEC)
      /* E1..EC 80..BF 80..BF */
      {
        if (i + 2 < len)
          /* Expect a 2nd and 3rd byte */
          {
            if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0xBF) {
              // *message = "After a first byte between E1 and EC, expecting the 2nd byte between 80 and BF.";
              // *faulty_bytes = 2;
              return false;
            }

            if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {
              // *message = "After a first byte between E1 and EC, expecting the 3rd byte between 80 and BF.";
              // *faulty_bytes = 3;
              return false;
            }
          } else {
          // *message = "After a first byte between E1 and EC, expecting two following bytes.";
          // *faulty_bytes = 1;
          return false;
        }

        i += 3;
      } else if (u8a[i] === 0xED)
      /* ED 80..9F 80..BF */
      {
        if (i + 2 < len)
          /* Expect a 2nd and 3rd byte */
          {
            if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0x9F) {
              // *message = "After a first byte of ED, expecting 2nd byte between 80 and 9F.";
              // *faulty_bytes = 2;
              return false;
            }

            if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {
              // *message = "After a first byte of ED, expecting 3rd byte between 80 and BF.";
              // *faulty_bytes = 3;
              return false;
            }
          } else {
          // *message = "After a first byte of ED, expecting two following bytes.";
          // *faulty_bytes = 1;
          return false;
        }

        i += 3;
      } else if (u8a[i] >= 0xEE && u8a[i] <= 0xEF)
      /* EE..EF 80..BF 80..BF */
      {
        if (i + 2 < len)
          /* Expect a 2nd and 3rd byte */
          {
            if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0xBF) {
              // *message = "After a first byte between EE and EF, expecting 2nd byte between 80 and BF.";
              // *faulty_bytes = 2;
              return false;
            }

            if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {
              // *message = "After a first byte between EE and EF, expecting 3rd byte between 80 and BF.";
              // *faulty_bytes = 3;
              return false;
            }
          } else {
          // *message = "After a first byte between EE and EF, two following bytes.";
          // *faulty_bytes = 1;
          return false;
        }

        i += 3;
      } else if (u8a[i] === 0xF0)
      /* F0 90..BF 80..BF 80..BF */
      {
        if (i + 3 < len)
          /* Expect a 2nd, 3rd 3th byte */
          {
            if (u8a[i + 1] < 0x90 || u8a[i + 1] > 0xBF) {
              // *message = "After a first byte of F0, expecting 2nd byte between 90 and BF.";
              // *faulty_bytes = 2;
              return false;
            }

            if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {
              // *message = "After a first byte of F0, expecting 3rd byte between 80 and BF.";
              // *faulty_bytes = 3;
              return false;
            }

            if (u8a[i + 3] < 0x80 || u8a[i + 3] > 0xBF) {
              // *message = "After a first byte of F0, expecting 4th byte between 80 and BF.";
              // *faulty_bytes = 4;
              return false;
            }
          } else {
          // *message = "After a first byte of F0, expecting three following bytes.";
          // *faulty_bytes = 1;
          return false;
        }

        i += 4;
      } else if (u8a[i] >= 0xF1 && u8a[i] <= 0xF3)
      /* F1..F3 80..BF 80..BF 80..BF */
      {
        if (i + 3 < len)
          /* Expect a 2nd, 3rd 3th byte */
          {
            if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0xBF) {
              // *message = "After a first byte of F1, F2, or F3, expecting a 2nd byte between 80 and BF.";
              // *faulty_bytes = 2;
              return false;
            }

            if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {
              // *message = "After a first byte of F1, F2, or F3, expecting a 3rd byte between 80 and BF.";
              // *faulty_bytes = 3;
              return false;
            }

            if (u8a[i + 3] < 0x80 || u8a[i + 3] > 0xBF) {
              // *message = "After a first byte of F1, F2, or F3, expecting a 4th byte between 80 and BF.";
              // *faulty_bytes = 4;
              return false;
            }
          } else {
          // *message = "After a first byte of F1, F2, or F3, expecting three following bytes.";
          // *faulty_bytes = 1;
          return false;
        }

        i += 4;
      } else if (u8a[i] === 0xF4)
      /* F4 80..8F 80..BF 80..BF */
      {
        if (i + 3 < len)
          /* Expect a 2nd, 3rd 3th byte */
          {
            if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0x8F) {
              // *message = "After a first byte of F4, expecting 2nd byte between 80 and 8F.";
              // *faulty_bytes = 2;
              return false;
            }

            if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {
              // *message = "After a first byte of F4, expecting 3rd byte between 80 and BF.";
              // *faulty_bytes = 3;
              return false;
            }

            if (u8a[i + 3] < 0x80 || u8a[i + 3] > 0xBF) {
              // *message = "After a first byte of F4, expecting 4th byte between 80 and BF.";
              // *faulty_bytes = 4;
              return false;
            }
          } else {
          // *message = "After a first byte of F4, expecting three following bytes.";
          // *faulty_bytes = 1;
          return false;
        }

        i += 4;
      } else {
      // *message = "Expecting bytes in the following ranges: 00..7F C2..F4.";
      // *faulty_bytes = 1;
      return false;
    }
  }

  return true;
}

/***/ }),
/* 413 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "u8aToString": () => (/* binding */ u8aToString)
/* harmony export */ });
/* harmony import */ var _polkadot_x_textdecoder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(414);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

const decoder = new _polkadot_x_textdecoder__WEBPACK_IMPORTED_MODULE_0__.TextDecoder('utf-8');
/**
 * @name u8aToString
 * @summary Creates a utf-8 string from a Uint8Array object.
 * @description
 * `UInt8Array` input values return the actual decoded utf-8 string. `null` or `undefined` values returns an empty string.
 * @example
 * <BR>
 *
 * ```javascript
 * import { u8aToString } from '@polkadot/util';
 *
 * u8aToString(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0x6f])); // hello
 * ```
 */

function u8aToString(value) {
  return !(value !== null && value !== void 0 && value.length) ? '' : decoder.decode(value);
}

/***/ }),
/* 414 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),
/* harmony export */   "TextDecoder": () => (/* binding */ TextDecoder)
/* harmony export */ });
/* harmony import */ var _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(173);
/* harmony import */ var _fallback_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(416);
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(415);
// Copyright 2017-2021 @polkadot/x-textencoder authors & contributors
// SPDX-License-Identifier: Apache-2.0



const TextDecoder = typeof _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__.xglobal.TextDecoder === 'undefined' ? _fallback_js__WEBPACK_IMPORTED_MODULE_2__.TextDecoder : _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__.xglobal.TextDecoder;

/***/ }),
/* 415 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-textdecoder authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/x-textdecoder',
  version: '8.0.2'
};

/***/ }),
/* 416 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TextDecoder": () => (/* binding */ TextDecoder)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-textencoder authors & contributors
// SPDX-License-Identifier: Apache-2.0
// This is very limited, only handling Ascii values
class TextDecoder {
  // eslint-disable-next-line @typescript-eslint/no-unused-vars,no-useless-constructor
  constructor(_) {// nothing
  }

  decode(value) {
    let result = '';

    for (let i = 0; i < value.length; i++) {
      result += String.fromCharCode(value[i]);
    }

    return result;
  }

}

/***/ }),
/* 417 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GenericExtrinsic": () => (/* reexport safe */ _extrinsic_index_js__WEBPACK_IMPORTED_MODULE_0__.GenericExtrinsic),
/* harmony export */   "GenericExtrinsicEra": () => (/* reexport safe */ _extrinsic_index_js__WEBPACK_IMPORTED_MODULE_0__.GenericExtrinsicEra),
/* harmony export */   "GenericExtrinsicPayload": () => (/* reexport safe */ _extrinsic_index_js__WEBPACK_IMPORTED_MODULE_0__.GenericExtrinsicPayload),
/* harmony export */   "GenericExtrinsicPayloadUnknown": () => (/* reexport safe */ _extrinsic_index_js__WEBPACK_IMPORTED_MODULE_0__.GenericExtrinsicPayloadUnknown),
/* harmony export */   "GenericExtrinsicPayloadV4": () => (/* reexport safe */ _extrinsic_index_js__WEBPACK_IMPORTED_MODULE_0__.GenericExtrinsicPayloadV4),
/* harmony export */   "GenericExtrinsicSignatureV4": () => (/* reexport safe */ _extrinsic_index_js__WEBPACK_IMPORTED_MODULE_0__.GenericExtrinsicSignatureV4),
/* harmony export */   "GenericExtrinsicUnknown": () => (/* reexport safe */ _extrinsic_index_js__WEBPACK_IMPORTED_MODULE_0__.GenericExtrinsicUnknown),
/* harmony export */   "GenericExtrinsicV4": () => (/* reexport safe */ _extrinsic_index_js__WEBPACK_IMPORTED_MODULE_0__.GenericExtrinsicV4),
/* harmony export */   "GenericImmortalEra": () => (/* reexport safe */ _extrinsic_index_js__WEBPACK_IMPORTED_MODULE_0__.GenericImmortalEra),
/* harmony export */   "GenericMortalEra": () => (/* reexport safe */ _extrinsic_index_js__WEBPACK_IMPORTED_MODULE_0__.GenericMortalEra),
/* harmony export */   "GenericSignerPayload": () => (/* reexport safe */ _extrinsic_index_js__WEBPACK_IMPORTED_MODULE_0__.GenericSignerPayload),
/* harmony export */   "GenericAccountId": () => (/* reexport safe */ _generic_index_js__WEBPACK_IMPORTED_MODULE_1__.GenericAccountId),
/* harmony export */   "GenericAccountIndex": () => (/* reexport safe */ _generic_index_js__WEBPACK_IMPORTED_MODULE_1__.GenericAccountIndex),
/* harmony export */   "GenericAddress": () => (/* reexport safe */ _generic_index_js__WEBPACK_IMPORTED_MODULE_1__.GenericAddress),
/* harmony export */   "GenericBlock": () => (/* reexport safe */ _generic_index_js__WEBPACK_IMPORTED_MODULE_1__.GenericBlock),
/* harmony export */   "GenericCall": () => (/* reexport safe */ _generic_index_js__WEBPACK_IMPORTED_MODULE_1__.GenericCall),
/* harmony export */   "GenericChainProperties": () => (/* reexport safe */ _generic_index_js__WEBPACK_IMPORTED_MODULE_1__.GenericChainProperties),
/* harmony export */   "GenericConsensusEngineId": () => (/* reexport safe */ _generic_index_js__WEBPACK_IMPORTED_MODULE_1__.GenericConsensusEngineId),
/* harmony export */   "GenericEthereumAccountId": () => (/* reexport safe */ _generic_index_js__WEBPACK_IMPORTED_MODULE_1__.GenericEthereumAccountId),
/* harmony export */   "GenericEthereumLookupSource": () => (/* reexport safe */ _generic_index_js__WEBPACK_IMPORTED_MODULE_1__.GenericEthereumLookupSource),
/* harmony export */   "GenericEvent": () => (/* reexport safe */ _generic_index_js__WEBPACK_IMPORTED_MODULE_1__.GenericEvent),
/* harmony export */   "GenericEventData": () => (/* reexport safe */ _generic_index_js__WEBPACK_IMPORTED_MODULE_1__.GenericEventData),
/* harmony export */   "GenericLookupSource": () => (/* reexport safe */ _generic_index_js__WEBPACK_IMPORTED_MODULE_1__.GenericLookupSource),
/* harmony export */   "GenericMultiAddress": () => (/* reexport safe */ _generic_index_js__WEBPACK_IMPORTED_MODULE_1__.GenericMultiAddress),
/* harmony export */   "GenericVote": () => (/* reexport safe */ _generic_index_js__WEBPACK_IMPORTED_MODULE_1__.GenericVote),
/* harmony export */   "BitVec": () => (/* reexport safe */ _primitive_index_js__WEBPACK_IMPORTED_MODULE_2__.BitVec),
/* harmony export */   "Bool": () => (/* reexport safe */ _primitive_index_js__WEBPACK_IMPORTED_MODULE_2__.Bool),
/* harmony export */   "Bytes": () => (/* reexport safe */ _primitive_index_js__WEBPACK_IMPORTED_MODULE_2__.Bytes),
/* harmony export */   "Data": () => (/* reexport safe */ _primitive_index_js__WEBPACK_IMPORTED_MODULE_2__.Data),
/* harmony export */   "I128": () => (/* reexport safe */ _primitive_index_js__WEBPACK_IMPORTED_MODULE_2__.I128),
/* harmony export */   "I16": () => (/* reexport safe */ _primitive_index_js__WEBPACK_IMPORTED_MODULE_2__.I16),
/* harmony export */   "I256": () => (/* reexport safe */ _primitive_index_js__WEBPACK_IMPORTED_MODULE_2__.I256),
/* harmony export */   "I32": () => (/* reexport safe */ _primitive_index_js__WEBPACK_IMPORTED_MODULE_2__.I32),
/* harmony export */   "I64": () => (/* reexport safe */ _primitive_index_js__WEBPACK_IMPORTED_MODULE_2__.I64),
/* harmony export */   "I8": () => (/* reexport safe */ _primitive_index_js__WEBPACK_IMPORTED_MODULE_2__.I8),
/* harmony export */   "Null": () => (/* reexport safe */ _primitive_index_js__WEBPACK_IMPORTED_MODULE_2__.Null),
/* harmony export */   "StorageKey": () => (/* reexport safe */ _primitive_index_js__WEBPACK_IMPORTED_MODULE_2__.StorageKey),
/* harmony export */   "Text": () => (/* reexport safe */ _primitive_index_js__WEBPACK_IMPORTED_MODULE_2__.Text),
/* harmony export */   "Type": () => (/* reexport safe */ _primitive_index_js__WEBPACK_IMPORTED_MODULE_2__.Type),
/* harmony export */   "U128": () => (/* reexport safe */ _primitive_index_js__WEBPACK_IMPORTED_MODULE_2__.U128),
/* harmony export */   "U16": () => (/* reexport safe */ _primitive_index_js__WEBPACK_IMPORTED_MODULE_2__.U16),
/* harmony export */   "U256": () => (/* reexport safe */ _primitive_index_js__WEBPACK_IMPORTED_MODULE_2__.U256),
/* harmony export */   "U32": () => (/* reexport safe */ _primitive_index_js__WEBPACK_IMPORTED_MODULE_2__.U32),
/* harmony export */   "U64": () => (/* reexport safe */ _primitive_index_js__WEBPACK_IMPORTED_MODULE_2__.U64),
/* harmony export */   "U8": () => (/* reexport safe */ _primitive_index_js__WEBPACK_IMPORTED_MODULE_2__.U8),
/* harmony export */   "USize": () => (/* reexport safe */ _primitive_index_js__WEBPACK_IMPORTED_MODULE_2__.USize),
/* harmony export */   "bool": () => (/* reexport safe */ _primitive_index_js__WEBPACK_IMPORTED_MODULE_2__.bool),
/* harmony export */   "i128": () => (/* reexport safe */ _primitive_index_js__WEBPACK_IMPORTED_MODULE_2__.i128),
/* harmony export */   "i16": () => (/* reexport safe */ _primitive_index_js__WEBPACK_IMPORTED_MODULE_2__.i16),
/* harmony export */   "i256": () => (/* reexport safe */ _primitive_index_js__WEBPACK_IMPORTED_MODULE_2__.i256),
/* harmony export */   "i32": () => (/* reexport safe */ _primitive_index_js__WEBPACK_IMPORTED_MODULE_2__.i32),
/* harmony export */   "i64": () => (/* reexport safe */ _primitive_index_js__WEBPACK_IMPORTED_MODULE_2__.i64),
/* harmony export */   "i8": () => (/* reexport safe */ _primitive_index_js__WEBPACK_IMPORTED_MODULE_2__.i8),
/* harmony export */   "u128": () => (/* reexport safe */ _primitive_index_js__WEBPACK_IMPORTED_MODULE_2__.u128),
/* harmony export */   "u16": () => (/* reexport safe */ _primitive_index_js__WEBPACK_IMPORTED_MODULE_2__.u16),
/* harmony export */   "u256": () => (/* reexport safe */ _primitive_index_js__WEBPACK_IMPORTED_MODULE_2__.u256),
/* harmony export */   "u32": () => (/* reexport safe */ _primitive_index_js__WEBPACK_IMPORTED_MODULE_2__.u32),
/* harmony export */   "u64": () => (/* reexport safe */ _primitive_index_js__WEBPACK_IMPORTED_MODULE_2__.u64),
/* harmony export */   "u8": () => (/* reexport safe */ _primitive_index_js__WEBPACK_IMPORTED_MODULE_2__.u8),
/* harmony export */   "usize": () => (/* reexport safe */ _primitive_index_js__WEBPACK_IMPORTED_MODULE_2__.usize)
/* harmony export */ });
/* harmony import */ var _extrinsic_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(418);
/* harmony import */ var _generic_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(437);
/* harmony import */ var _primitive_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(467);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0




/***/ }),
/* 418 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GenericExtrinsic": () => (/* reexport safe */ _Extrinsic_js__WEBPACK_IMPORTED_MODULE_0__.GenericExtrinsic),
/* harmony export */   "GenericExtrinsicEra": () => (/* reexport safe */ _ExtrinsicEra_js__WEBPACK_IMPORTED_MODULE_1__.GenericExtrinsicEra),
/* harmony export */   "GenericMortalEra": () => (/* reexport safe */ _ExtrinsicEra_js__WEBPACK_IMPORTED_MODULE_1__.MortalEra),
/* harmony export */   "GenericImmortalEra": () => (/* reexport safe */ _ExtrinsicEra_js__WEBPACK_IMPORTED_MODULE_1__.ImmortalEra),
/* harmony export */   "GenericExtrinsicPayload": () => (/* reexport safe */ _ExtrinsicPayload_js__WEBPACK_IMPORTED_MODULE_2__.GenericExtrinsicPayload),
/* harmony export */   "GenericExtrinsicPayloadUnknown": () => (/* reexport safe */ _ExtrinsicPayloadUnknown_js__WEBPACK_IMPORTED_MODULE_3__.GenericExtrinsicPayloadUnknown),
/* harmony export */   "GenericExtrinsicUnknown": () => (/* reexport safe */ _ExtrinsicUnknown_js__WEBPACK_IMPORTED_MODULE_4__.GenericExtrinsicUnknown),
/* harmony export */   "GenericSignerPayload": () => (/* reexport safe */ _SignerPayload_js__WEBPACK_IMPORTED_MODULE_5__.GenericSignerPayload),
/* harmony export */   "GenericExtrinsicPayloadV4": () => (/* reexport safe */ _v4_index_js__WEBPACK_IMPORTED_MODULE_6__.GenericExtrinsicPayloadV4),
/* harmony export */   "GenericExtrinsicSignatureV4": () => (/* reexport safe */ _v4_index_js__WEBPACK_IMPORTED_MODULE_6__.GenericExtrinsicSignatureV4),
/* harmony export */   "GenericExtrinsicV4": () => (/* reexport safe */ _v4_index_js__WEBPACK_IMPORTED_MODULE_6__.GenericExtrinsicV4)
/* harmony export */ });
/* harmony import */ var _Extrinsic_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(419);
/* harmony import */ var _ExtrinsicEra_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(424);
/* harmony import */ var _ExtrinsicPayload_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(427);
/* harmony import */ var _ExtrinsicPayloadUnknown_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(428);
/* harmony import */ var _ExtrinsicUnknown_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(429);
/* harmony import */ var _SignerPayload_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(430);
/* harmony import */ var _v4_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(433);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0








/***/ }),
/* 419 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LATEST_EXTRINSIC_VERSION": () => (/* reexport safe */ _v4_Extrinsic_js__WEBPACK_IMPORTED_MODULE_2__.EXTRINSIC_VERSION),
/* harmony export */   "GenericExtrinsic": () => (/* binding */ GenericExtrinsic)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(320);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(126);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(423);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(196);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(122);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(197);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(238);
/* harmony import */ var _codec_Base_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(421);
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(422);
/* harmony import */ var _v4_Extrinsic_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(420);


// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0



const VERSIONS = ['ExtrinsicUnknown', // v0 is unknown
'ExtrinsicUnknown', 'ExtrinsicUnknown', 'ExtrinsicUnknown', 'ExtrinsicV4'];


class ExtrinsicBase extends _codec_Base_js__WEBPACK_IMPORTED_MODULE_3__.Base {
  constructor(registry, value, initialU8aLength) {
    super(registry, value, initialU8aLength);
    const signKeys = Object.keys(registry.getSignedExtensionTypes());

    const getter = key => this._raw.signature[key]; // This is on the abstract class, ensuring that hasOwnProperty operates
    // correctly, i.e. it needs to be on the base class exposing it


    for (let i = 0; i < signKeys.length; i++) {
      (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.objectProperty)(this, signKeys[i], getter);
    }
  }
  /**
   * @description The arguments passed to for the call, exposes args so it is compatible with [[Call]]
   */


  get args() {
    return this.method.args;
  }
  /**
   * @description The argument definitions, compatible with [[Call]]
   */


  get argsDef() {
    return this.method.argsDef;
  }
  /**
   * @description The actual `[sectionIndex, methodIndex]` as used in the Call
   */


  get callIndex() {
    return this.method.callIndex;
  }
  /**
   * @description The actual data for the Call
   */


  get data() {
    return this.method.data;
  }
  /**
   * @description The era for this extrinsic
   */


  get era() {
    return this._raw.signature.era;
  }
  /**
   * @description The length of the value when encoded as a Uint8Array
   */


  get encodedLength() {
    return this.toU8a().length;
  }
  /**
   * @description `true` id the extrinsic is signed
   */


  get isSigned() {
    return this._raw.signature.isSigned;
  }
  /**
   * @description The length of the actual data, excluding prefix
   */


  get length() {
    return this.toU8a(true).length;
  }
  /**
   * @description The [[FunctionMetadataLatest]] that describes the extrinsic
   */


  get meta() {
    return this.method.meta;
  }
  /**
   * @description The [[Call]] this extrinsic wraps
   */


  get method() {
    return this._raw.method;
  }
  /**
   * @description The nonce for this extrinsic
   */


  get nonce() {
    return this._raw.signature.nonce;
  }
  /**
   * @description The actual [[EcdsaSignature]], [[Ed25519Signature]] or [[Sr25519Signature]]
   */


  get signature() {
    return this._raw.signature.signature;
  }
  /**
   * @description The [[Address]] that signed
   */


  get signer() {
    return this._raw.signature.signer;
  }
  /**
   * @description Forwards compat
   */


  get tip() {
    return this._raw.signature.tip;
  }
  /**
   * @description Returns the raw transaction version (not flagged with signing information)
  */


  get type() {
    return this._raw.version;
  }
  /**
   * @description Returns the encoded version flag
  */


  get version() {
    return this.type | (this.isSigned ? _constants_js__WEBPACK_IMPORTED_MODULE_5__.BIT_SIGNED : _constants_js__WEBPACK_IMPORTED_MODULE_5__.BIT_UNSIGNED);
  }
  /**
   * @description Checks if the source matches this in type
   */


  is(other) {
    return this.method.is(other);
  }

}
/**
 * @name GenericExtrinsic
 * @description
 * Representation of an Extrinsic in the system. It contains the actual call,
 * (optional) signature and encodes with an actual length prefix
 *
 * {@link https://github.com/paritytech/wiki/blob/master/Extrinsic.md#the-extrinsic-format-for-node}.
 *
 * Can be:
 * - signed, to create a transaction
 * - left as is, to create an inherent
 */


var _hashCache = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("hashCache");

class GenericExtrinsic extends ExtrinsicBase {
  constructor(registry, value, {
    version
  } = {}) {
    super(registry, GenericExtrinsic._decodeExtrinsic(registry, value, version));
    Object.defineProperty(this, _hashCache, {
      writable: true,
      value: void 0
    });
  }
  /** @internal */


  static _newFromValue(registry, value, version) {
    if (value instanceof GenericExtrinsic) {
      return value._raw;
    }

    const isSigned = (version & _constants_js__WEBPACK_IMPORTED_MODULE_5__.BIT_SIGNED) === _constants_js__WEBPACK_IMPORTED_MODULE_5__.BIT_SIGNED;
    const type = VERSIONS[version & _constants_js__WEBPACK_IMPORTED_MODULE_5__.UNMASK_VERSION] || VERSIONS[0]; // we cast here since the VERSION definition is incredibly broad - we don't have a
    // slice for "only add extrinsic types", and more string definitions become unwieldy

    return registry.createType(type, value, {
      isSigned,
      version
    });
  }
  /** @internal */


  static _decodeExtrinsic(registry, value, version = _constants_js__WEBPACK_IMPORTED_MODULE_5__.DEFAULT_VERSION) {
    if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.isU8a)(value) || Array.isArray(value) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_7__.isHex)(value)) {
      return GenericExtrinsic._decodeU8a(registry, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_8__.u8aToU8a)(value), version);
    } else if (value instanceof registry.createClass('Call')) {
      return GenericExtrinsic._newFromValue(registry, {
        method: value
      }, version);
    }

    return GenericExtrinsic._newFromValue(registry, value, version);
  }
  /** @internal */


  static _decodeU8a(registry, value, version) {
    if (!value.length) {
      return GenericExtrinsic._newFromValue(registry, new Uint8Array(), version);
    }

    const [offset, length] = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.compactFromU8a)(value);
    const total = offset + length.toNumber();
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_10__.assert)(total <= value.length, () => `Extrinsic: length less than remainder, expected at least ${total}, found ${value.length}`);
    const data = value.subarray(offset, total);
    return GenericExtrinsic._newFromValue(registry, data.subarray(1), data[0]);
  }
  /**
   * @description returns a hash of the contents
   */


  get hash() {
    if (!(0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _hashCache)[_hashCache]) {
      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _hashCache)[_hashCache] = super.hash;
    }

    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _hashCache)[_hashCache];
  }
  /**
   * @description Injects an already-generated signature into the extrinsic
   */


  addSignature(signer, signature, payload) {
    this._raw.addSignature(signer, signature, payload);

    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _hashCache)[_hashCache] = undefined;
    return this;
  }
  /**
   * @description Sign the extrinsic with a specific keypair
   */


  sign(account, options) {
    this._raw.sign(account, options);

    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _hashCache)[_hashCache] = undefined;
    return this;
  }
  /**
   * @describe Adds a fake signature to the extrinsic
   */


  signFake(signer, options) {
    this._raw.signFake(signer, options);

    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _hashCache)[_hashCache] = undefined;
    return this;
  }
  /**
   * @description Returns a hex string representation of the value
   */


  toHex(isBare) {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_11__.u8aToHex)(this.toU8a(isBare));
  }
  /**
   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
   */


  toHuman(isExpanded) {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_12__.objectSpread)({}, {
      isSigned: this.isSigned,
      method: this.method.toHuman(isExpanded)
    }, this.isSigned ? {
      era: this.era.toHuman(isExpanded),
      nonce: this.nonce.toHuman(isExpanded),
      signature: this.signature.toHex(),
      signer: this.signer.toHuman(isExpanded),
      tip: this.tip.toHuman(isExpanded)
    } : null);
  }
  /**
   * @description Converts the Object to JSON, typically used for RPC transfers
   */


  toJSON() {
    return this.toHex();
  }
  /**
   * @description Returns the base runtime type name for this instance
   */


  toRawType() {
    return 'Extrinsic';
  }
  /**
   * @description Encodes the value as a Uint8Array as per the SCALE specifications
   * @param isBare true when the value is not length-prefixed
   */


  toU8a(isBare) {
    // we do not apply bare to the internal values, rather this only determines out length addition,
    // where we strip all lengths this creates an extrinsic that cannot be decoded
    const encoded = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_13__.u8aConcat)(new Uint8Array([this.version]), this._raw.toU8a());
    return isBare ? encoded : (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_14__.compactAddLength)(encoded);
  }

}

/***/ }),
/* 420 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EXTRINSIC_VERSION": () => (/* binding */ EXTRINSIC_VERSION),
/* harmony export */   "GenericExtrinsicV4": () => (/* binding */ GenericExtrinsicV4)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(178);
/* harmony import */ var _codec_Struct_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(319);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0


const EXTRINSIC_VERSION = 4;

/**
 * @name GenericExtrinsicV4
 * @description
 * The third generation of compact extrinsics
 */
class GenericExtrinsicV4 extends _codec_Struct_js__WEBPACK_IMPORTED_MODULE_0__.Struct {
  constructor(registry, value, {
    isSigned
  } = {}) {
    super(registry, {
      signature: 'ExtrinsicSignatureV4',
      // eslint-disable-next-line sort-keys
      method: 'Call'
    }, GenericExtrinsicV4.decodeExtrinsic(registry, value, isSigned));
  }
  /** @internal */


  static decodeExtrinsic(registry, value, isSigned = false) {
    if (value instanceof GenericExtrinsicV4) {
      return value;
    } else if (value instanceof registry.createClass('Call')) {
      return {
        method: value
      };
    } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isU8a)(value)) {
      // here we decode manually since we need to pull through the version information
      const signature = registry.createType('ExtrinsicSignatureV4', value, {
        isSigned
      });
      const method = registry.createType('Call', value.subarray(signature.encodedLength));
      return {
        method,
        signature
      };
    }

    return value || {};
  }
  /**
   * @description The length of the value when encoded as a Uint8Array
   */


  get encodedLength() {
    return this.toU8a().length;
  }
  /**
   * @description The [[Call]] this extrinsic wraps
   */


  get method() {
    return this.get('method');
  }
  /**
   * @description The [[ExtrinsicSignatureV4]]
   */


  get signature() {
    return this.get('signature');
  }
  /**
   * @description The version for the signature
   */


  get version() {
    return EXTRINSIC_VERSION;
  }
  /**
   * @description Add an [[ExtrinsicSignatureV4]] to the extrinsic (already generated)
   */


  addSignature(signer, signature, payload) {
    this.signature.addSignature(signer, signature, payload);
    return this;
  }
  /**
   * @description Sign the extrinsic with a specific keypair
   */


  sign(account, options) {
    this.signature.sign(this.method, account, options);
    return this;
  }
  /**
   * @describe Adds a fake signature to the extrinsic
   */


  signFake(signer, options) {
    this.signature.signFake(this.method, signer, options);
    return this;
  }

}

/***/ }),
/* 421 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Base": () => (/* binding */ Base)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name Base
 * @description A type extends the Base class, when it holds a value
 */
class Base {
  constructor(registry, value, initialU8aLength) {
    this.registry = void 0;
    this.createdAtHash = void 0;
    this.initialU8aLength = void 0;
    this._raw = void 0;
    this.registry = registry;
    this._raw = value;
    this.initialU8aLength = initialU8aLength;
  }
  /**
   * @description The length of the value when encoded as a Uint8Array
   */


  get encodedLength() {
    return this.toU8a().length;
  }
  /**
   * @description returns a hash of the contents
   */


  get hash() {
    return this.registry.hash(this.toU8a());
  }
  /**
   * @description Checks if the value is an empty value
   */


  get isEmpty() {
    return this._raw.isEmpty;
  }
  /**
   * @description Compares the value of the input to see if there is a match
   */


  eq(other) {
    return this._raw.eq(other);
  }
  /**
   * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation
   */


  toHex(isLe) {
    return this._raw.toHex(isLe);
  }
  /**
   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
   */


  toHuman(isExtended) {
    return this._raw.toHuman(isExtended);
  }
  /**
   * @description Converts the Object to JSON, typically used for RPC transfers
   */


  toJSON() {
    return this._raw.toJSON();
  }
  /**
   * @description Returns the string representation of the value
   */


  toString() {
    return this._raw.toString();
  }
  /**
   * @description Encodes the value as a Uint8Array as per the SCALE specifications
   * @param isBare true when the value has none of the type-specific prefixes (internal)
   */


  toU8a(isBare) {
    return this._raw.toU8a(isBare);
  }
  /**
   * @description Returns the base runtime type name for this instance
   */


  toRawType() {
    return 'Base';
  }

}

/***/ }),
/* 422 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BIT_SIGNED": () => (/* binding */ BIT_SIGNED),
/* harmony export */   "BIT_UNSIGNED": () => (/* binding */ BIT_UNSIGNED),
/* harmony export */   "EMPTY_U8A": () => (/* binding */ EMPTY_U8A),
/* harmony export */   "DEFAULT_VERSION": () => (/* binding */ DEFAULT_VERSION),
/* harmony export */   "IMMORTAL_ERA": () => (/* binding */ IMMORTAL_ERA),
/* harmony export */   "UNMASK_VERSION": () => (/* binding */ UNMASK_VERSION)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
const BIT_SIGNED = 0b10000000;
const BIT_UNSIGNED = 0;
const EMPTY_U8A = new Uint8Array();
const DEFAULT_VERSION = 4;
const IMMORTAL_ERA = new Uint8Array([0]);
const UNMASK_VERSION = 0b01111111;

/***/ }),
/* 423 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "compactFromU8a": () => (/* binding */ compactFromU8a)
/* harmony export */ });
/* harmony import */ var _bn_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(88);
/* harmony import */ var _bn_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(240);
/* harmony import */ var _u8a_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(166);
/* harmony import */ var _u8a_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(215);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0


/**
 * @name compactFromU8a
 * @description Retrievs the offset and encoded length from a compact-prefixed value
 * @example
 * <BR>
 *
 * ```javascript
 * import { compactFromU8a } from '@polkadot/util';
 *
 * const [offset, length] = compactFromU8a(new Uint8Array([254, 255, 3, 0]));
 *
 * console.log('value offset=', offset, 'length=', length); // 4, 0xffff
 * ```
 */

function compactFromU8a(input) {
  const u8a = (0,_u8a_index_js__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(input);
  const flag = u8a[0] & 0b11;

  if (flag === 0b00) {
    return [1, new _bn_index_js__WEBPACK_IMPORTED_MODULE_1__(u8a[0]).ishrn(2)];
  } else if (flag === 0b01) {
    return [2, (0,_u8a_index_js__WEBPACK_IMPORTED_MODULE_2__.u8aToBn)(u8a.subarray(0, 2), true).ishrn(2)];
  } else if (flag === 0b10) {
    return [4, (0,_u8a_index_js__WEBPACK_IMPORTED_MODULE_2__.u8aToBn)(u8a.subarray(0, 4), true).ishrn(2)];
  }

  const offset = 1 + new _bn_index_js__WEBPACK_IMPORTED_MODULE_1__(u8a[0]).ishrn(2) // clear flag
  .iadd(_bn_index_js__WEBPACK_IMPORTED_MODULE_3__.BN_FOUR) // add 4 for base length
  .toNumber();
  return [offset, (0,_u8a_index_js__WEBPACK_IMPORTED_MODULE_2__.u8aToBn)(u8a.subarray(1, offset), true)];
}

/***/ }),
/* 424 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ImmortalEra": () => (/* binding */ ImmortalEra),
/* harmony export */   "MortalEra": () => (/* binding */ MortalEra),
/* harmony export */   "GenericExtrinsicEra": () => (/* binding */ GenericExtrinsicEra)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(126);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(286);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(215);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(372);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(125);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(167);
/* harmony import */ var _codec_Enum_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(426);
/* harmony import */ var _codec_Raw_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(410);
/* harmony import */ var _codec_Tuple_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(312);
/* harmony import */ var _primitive_U64_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(425);
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(422);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0







function getTrailingZeros(period) {
  const binary = period.toString(2);
  let index = 0;

  while (binary[binary.length - 1 - index] === '0') {
    index++;
  }

  return index;
}
/**
 * @name ImmortalEra
 * @description
 * The ImmortalEra for an extrinsic
 */


class ImmortalEra extends _codec_Raw_js__WEBPACK_IMPORTED_MODULE_0__.Raw {
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  constructor(registry, value) {
    // For immortals, we always provide the known value (i.e. treated as a
    // constant no matter how it is constructed - it is a fixed structure)
    super(registry, _constants_js__WEBPACK_IMPORTED_MODULE_1__.IMMORTAL_ERA);
  }

}
/**
 * @name MortalEra
 * @description
 * The MortalEra for an extrinsic, indicating period and phase
 */

class MortalEra extends _codec_Tuple_js__WEBPACK_IMPORTED_MODULE_2__.Tuple {
  constructor(registry, value) {
    super(registry, {
      period: _primitive_U64_js__WEBPACK_IMPORTED_MODULE_3__.u64,
      phase: _primitive_U64_js__WEBPACK_IMPORTED_MODULE_3__.u64
    }, MortalEra._decodeMortalEra(registry, value));
  }
  /** @internal */


  static _decodeMortalEra(registry, value) {
    if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.isU8a)(value) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.isHex)(value) || Array.isArray(value)) {
      return MortalEra._decodeMortalU8a(registry, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.u8aToU8a)(value));
    } else if (!value) {
      return [new _primitive_U64_js__WEBPACK_IMPORTED_MODULE_3__.u64(registry), new _primitive_U64_js__WEBPACK_IMPORTED_MODULE_3__.u64(registry)];
    } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_7__.isObject)(value)) {
      return MortalEra._decodeMortalObject(registry, value);
    }

    throw new Error('Invalid data passed to Mortal era');
  }
  /** @internal */


  static _decodeMortalObject(registry, value) {
    const {
      current,
      period
    } = value;
    let calPeriod = Math.pow(2, Math.ceil(Math.log2(period)));
    calPeriod = Math.min(Math.max(calPeriod, 4), 1 << 16);
    const phase = current % calPeriod;
    const quantizeFactor = Math.max(calPeriod >> 12, 1);
    const quantizedPhase = phase / quantizeFactor * quantizeFactor;
    return [new _primitive_U64_js__WEBPACK_IMPORTED_MODULE_3__.u64(registry, calPeriod), new _primitive_U64_js__WEBPACK_IMPORTED_MODULE_3__.u64(registry, quantizedPhase)];
  }
  /** @internal */


  static _decodeMortalU8a(registry, value) {
    if (value.length === 0) {
      return [new _primitive_U64_js__WEBPACK_IMPORTED_MODULE_3__.u64(registry), new _primitive_U64_js__WEBPACK_IMPORTED_MODULE_3__.u64(registry)];
    }

    const first = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_8__.u8aToBn)(value.subarray(0, 1)).toNumber();
    const second = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_8__.u8aToBn)(value.subarray(1, 2)).toNumber();
    const encoded = first + (second << 8);
    const period = 2 << encoded % (1 << 4);
    const quantizeFactor = Math.max(period >> 12, 1);
    const phase = (encoded >> 4) * quantizeFactor;
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.assert)(period >= 4 && phase < period, 'Invalid data passed to Mortal era');
    return [new _primitive_U64_js__WEBPACK_IMPORTED_MODULE_3__.u64(registry, period), new _primitive_U64_js__WEBPACK_IMPORTED_MODULE_3__.u64(registry, phase)];
  }
  /**
   * @description Encoded length for mortals occupy 2 bytes, different from the actual Tuple since it is encoded. This is a shortcut fro `toU8a().length`
   */


  get encodedLength() {
    return 2;
  }
  /**
   * @description The period of this Mortal wraps as a [[U64]]
   */


  get period() {
    return this[0];
  }
  /**
   * @description The phase of this Mortal wraps as a [[U64]]
   */


  get phase() {
    return this[1];
  }
  /**
   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
   */


  toHuman() {
    return {
      period: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_10__.formatNumber)(this.period),
      phase: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_10__.formatNumber)(this.phase)
    };
  }
  /**
   * @description Returns a JSON representation of the actual value
   */


  toJSON() {
    return this.toHex();
  }
  /**
   * @description Encodes the value as a Uint8Array as per the parity-codec specifications
   * @param isBare true when the value has none of the type-specific prefixes (internal)
   * Period and phase are encoded:
   *   - The period of validity from the block hash found in the signing material.
   *   - The phase in the period that this transaction's lifetime begins (and, importantly,
   *     implies which block hash is included in the signature material). If the `period` is
   *     greater than 1 << 12, then it will be a factor of the times greater than 1<<12 that
   *     `period` is.
   */
  // eslint-disable-next-line @typescript-eslint/no-unused-vars


  toU8a(isBare) {
    const period = this.period.toNumber();
    const phase = this.phase.toNumber();
    const quantizeFactor = Math.max(period >> 12, 1);
    const trailingZeros = getTrailingZeros(period);
    const encoded = Math.min(15, Math.max(1, trailingZeros - 1)) + (phase / quantizeFactor << 4);
    const first = encoded >> 8;
    const second = encoded & 0xff;
    return new Uint8Array([second, first]);
  }
  /**
   * @description Get the block number of the start of the era whose properties this object describes that `current` belongs to.
   */


  birth(current) {
    // FIXME No toNumber() here
    return Math.floor((Math.max((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_11__.bnToBn)(current).toNumber(), this.phase.toNumber()) - this.phase.toNumber()) / this.period.toNumber()) * this.period.toNumber() + this.phase.toNumber();
  }
  /**
   * @description Get the block number of the first block at which the era has ended.
   */


  death(current) {
    // FIXME No toNumber() here
    return this.birth(current) + this.period.toNumber();
  }

}
/**
 * @name GenericExtrinsicEra
 * @description
 * The era for an extrinsic, indicating either a mortal or immortal extrinsic
 */

class GenericExtrinsicEra extends _codec_Enum_js__WEBPACK_IMPORTED_MODULE_12__.Enum {
  constructor(registry, value) {
    super(registry, {
      ImmortalEra,
      MortalEra
    }, GenericExtrinsicEra._decodeExtrinsicEra(value));
  }
  /** @internal */
  // eslint-disable-next-line @typescript-eslint/ban-types


  static _decodeExtrinsicEra(value = new Uint8Array()) {
    if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.isU8a)(value)) {
      return !value.length || value[0] === 0 ? new Uint8Array([0]) : new Uint8Array([1, value[0], value[1]]);
    } else if (!value) {
      return new Uint8Array([0]);
    } else if (value instanceof GenericExtrinsicEra) {
      return GenericExtrinsicEra._decodeExtrinsicEra(value.toU8a());
    } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.isHex)(value)) {
      return GenericExtrinsicEra._decodeExtrinsicEra((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_13__.hexToU8a)(value));
    } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_7__.isObject)(value)) {
      const entries = Object.entries(value).map(([k, v]) => [k.toLowerCase(), v]);
      const mortal = entries.find(([k]) => k.toLowerCase() === 'mortalera');
      const immortal = entries.find(([k]) => k.toLowerCase() === 'immortalera'); // this is to de-serialize from JSON

      return mortal ? {
        MortalEra: mortal[1]
      } : immortal ? {
        ImmortalEra: immortal[1]
      } : {
        MortalEra: value
      };
    }

    throw new Error('Invalid data passed to Era');
  }
  /**
   * @description Override the encoded length method
   */


  get encodedLength() {
    return this.isImmortalEra ? this.asImmortalEra.encodedLength : this.asMortalEra.encodedLength;
  }
  /**
   * @description Returns the item as a [[ImmortalEra]]
   */


  get asImmortalEra() {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.assert)(this.isImmortalEra, () => `Cannot convert '${this.type}' via asImmortalEra`);
    return this.value;
  }
  /**
   * @description Returns the item as a [[MortalEra]]
   */


  get asMortalEra() {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.assert)(this.isMortalEra, () => `Cannot convert '${this.type}' via asMortalEra`);
    return this.value;
  }
  /**
   * @description `true` if Immortal
   */


  get isImmortalEra() {
    return this.index === 0;
  }
  /**
   * @description `true` if Mortal
   */


  get isMortalEra() {
    return this.index > 0;
  }
  /**
   * @description Encodes the value as a Uint8Array as per the parity-codec specifications
   * @param isBare true when the value has none of the type-specific prefixes (internal)
   */


  toU8a(isBare) {
    return this.isMortalEra ? this.asMortalEra.toU8a(isBare) : this.asImmortalEra.toU8a(isBare);
  }

}

/***/ }),
/* 425 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "u64": () => (/* binding */ u64)
/* harmony export */ });
/* harmony import */ var _codec_UInt_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(366);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name u64
 * @description
 * A 64-bit unsigned integer
 */

class u64 extends _codec_UInt_js__WEBPACK_IMPORTED_MODULE_0__.UInt["with"](64) {
  constructor(...args) {
    super(...args);
    this.__UIntType = 'u64';
  }

}

/***/ }),
/* 426 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Enum": () => (/* binding */ Enum)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(124);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(82);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(126);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(169);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(286);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(303);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(320);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(196);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(292);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(197);
/* harmony import */ var _primitive_Null_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(311);
/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(318);
/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(322);


// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0


 // export interface, this is used in Enum.with, so required as public by TS

function isRustEnum(def) {
  const defValues = Object.values(def);

  if (defValues.some(v => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isNumber)(v))) {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.assert)(defValues.every(v => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isNumber)(v) && v >= 0 && v <= 255), 'Invalid number-indexed enum definition');
    return false;
  }

  return true;
}

function extractDef(registry, _def) {
  const def = {};
  let isBasic;
  let isIndexed;

  if (Array.isArray(_def)) {
    for (let i = 0; i < _def.length; i++) {
      def[_def[i]] = {
        Type: _primitive_Null_js__WEBPACK_IMPORTED_MODULE_4__.Null,
        index: i
      };
    }

    isBasic = true;
    isIndexed = false;
  } else if (isRustEnum(_def)) {
    const entries = Object.entries((0,_utils_index_js__WEBPACK_IMPORTED_MODULE_5__.mapToTypeMap)(registry, _def));

    for (let i = 0; i < entries.length; i++) {
      const [key, Type] = entries[i];
      def[key] = {
        Type,
        index: i
      };
    }

    isBasic = !Object.values(def).some(({
      Type
    }) => Type !== _primitive_Null_js__WEBPACK_IMPORTED_MODULE_4__.Null);
    isIndexed = false;
  } else {
    const entries = Object.entries(_def);

    for (let i = 0; i < entries.length; i++) {
      const [key, index] = entries[i];
      def[key] = {
        Type: _primitive_Null_js__WEBPACK_IMPORTED_MODULE_4__.Null,
        index
      };
    }

    isBasic = true;
    isIndexed = true;
  }

  return {
    def,
    isBasic,
    isIndexed
  };
}

function createFromValue(registry, def, index = 0, value) {
  const entry = Object.values(def).find(e => e.index === index);
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.assert)(!(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.isUndefined)(entry), () => `Unable to create Enum via index ${index}, in ${Object.keys(def).join(', ')}`);
  return {
    index,
    value: value instanceof entry.Type ? value : new entry.Type(registry, value)
  };
}

function decodeFromJSON(registry, def, key, value) {
  // JSON comes in the form of { "<type (camelCase)>": "<value for type>" }, here we
  // additionally force to lower to ensure forward compat
  const keys = Object.keys(def).map(k => k.toLowerCase());
  const keyLower = key.toLowerCase();
  const index = keys.indexOf(keyLower);
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.assert)(index !== -1, () => `Cannot map Enum JSON, unable to find '${key}' in ${keys.join(', ')}`);

  try {
    return createFromValue(registry, def, Object.values(def)[index].index, value);
  } catch (error) {
    throw new Error(`Enum(${key}):: ${error.message}`);
  }
}

function decodeEnum(registry, def, value, index) {
  // NOTE We check the index path first, before looking at values - this allows treating
  // the optional indexes before anything else, more-specific > less-specific
  if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isNumber)(index)) {
    return createFromValue(registry, def, index, value);
  } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_7__.isU8a)(value) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_8__.isHex)(value)) {
    const u8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.u8aToU8a)(value); // nested, we don't want to match isObject below

    if (u8a.length) {
      return createFromValue(registry, def, u8a[0], u8a.subarray(1));
    }
  } else if (value instanceof Enum) {
    return createFromValue(registry, def, value.index, value.value);
  } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isNumber)(value)) {
    return createFromValue(registry, def, value);
  } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_10__.isString)(value)) {
    return decodeFromJSON(registry, def, value.toString());
  } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_11__.isObject)(value)) {
    const key = Object.keys(value)[0];
    return decodeFromJSON(registry, def, key, value[key]);
  } // Worst-case scenario, return the first with default


  return createFromValue(registry, def, Object.values(def)[0].index);
}
/**
 * @name Enum
 * @description
 * This implements an enum, that based on the value wraps a different type. It is effectively
 * an extension to enum where the value type is determined by the actual index.
 */


var _def2 = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("def");

var _entryIndex = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("entryIndex");

var _indexes = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("indexes");

var _isBasic = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("isBasic");

var _isIndexed = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("isIndexed");

var _raw = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("raw");

class Enum {
  constructor(registry, Types, value, index) {
    this.registry = void 0;
    this.createdAtHash = void 0;
    Object.defineProperty(this, _def2, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _entryIndex, {
      writable: true,
      value: void 0
    });
    this.initialU8aLength = void 0;
    Object.defineProperty(this, _indexes, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _isBasic, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _isIndexed, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _raw, {
      writable: true,
      value: void 0
    });
    const {
      def,
      isBasic,
      isIndexed
    } = extractDef(registry, Types); // shortcut isU8a as used in SCALE decoding

    const decoded = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_7__.isU8a)(value) && value.length && !(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isNumber)(index) ? createFromValue(registry, def, value[0], value.subarray(1)) : decodeEnum(registry, def, value, index);
    this.registry = registry;
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _def2)[_def2] = def;
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _isBasic)[_isBasic] = isBasic;
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _isIndexed)[_isIndexed] = isIndexed;
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _indexes)[_indexes] = Object.values(def).map(({
      index
    }) => index);
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _entryIndex)[_entryIndex] = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _indexes)[_indexes].indexOf(decoded.index) || 0;
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _raw)[_raw] = decoded.value;

    if ((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _raw)[_raw].initialU8aLength) {
      this.initialU8aLength = 1 + (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _raw)[_raw].initialU8aLength;
    }
  }

  static with(Types) {
    const keys = Array.isArray(Types) ? Types : Object.keys(Types);
    const asKeys = new Array(keys.length);
    const isKeys = new Array(keys.length);

    for (let i = 0; i < keys.length; i++) {
      const name = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_12__.stringPascalCase)(keys[i].replace(' ', '_'));
      asKeys[i] = `as${name}`;
      isKeys[i] = `is${name}`;
    }

    return class extends Enum {
      constructor(registry, value, index) {
        super(registry, Types, value, index);
        (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_13__.objectProperties)(this, isKeys, (_, i) => this.type === keys[i]);
        (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_13__.objectProperties)(this, asKeys, (k, i) => {
          (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.assert)(this[isKeys[i]], () => `Cannot convert '${this.type}' via ${k}`);
          return this.value;
        });
      }

    };
  }
  /**
   * @description The length of the value when encoded as a Uint8Array
   */


  get encodedLength() {
    return 1 + (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _raw)[_raw].encodedLength;
  }
  /**
   * @description returns a hash of the contents
   */


  get hash() {
    return this.registry.hash(this.toU8a());
  }
  /**
   * @description The index of the enum value
   */


  get index() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _indexes)[_indexes][(0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _entryIndex)[_entryIndex]];
  }
  /**
   * @description true if this is a basic enum (no values)
   */


  get isBasic() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _isBasic)[_isBasic];
  }
  /**
   * @description Checks if the value is an empty value
   */


  get isEmpty() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _raw)[_raw].isEmpty;
  }
  /**
   * @description Checks if the Enum points to a [[Null]] type
   */


  get isNone() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _raw)[_raw] instanceof _primitive_Null_js__WEBPACK_IMPORTED_MODULE_4__.Null;
  }
  /**
   * @description Checks if the Enum points to a [[Null]] type
   * @deprecated use isNone
   */


  get isNull() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _raw)[_raw] instanceof _primitive_Null_js__WEBPACK_IMPORTED_MODULE_4__.Null;
  }
  /**
   * @description The available keys for this enum
   */


  get defIndexes() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _indexes)[_indexes];
  }
  /**
   * @description The available keys for this enum
   */


  get defKeys() {
    return Object.keys((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _def2)[_def2]);
  }
  /**
   * @description The name of the type this enum value represents
   */


  get type() {
    return this.defKeys[(0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _entryIndex)[_entryIndex]];
  }
  /**
   * @description The value of the enum
   */


  get value() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _raw)[_raw];
  }
  /**
   * @description Compares the value of the input to see if there is a match
   */


  eq(other) {
    // cater for the case where we only pass the enum index
    if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_7__.isU8a)(other)) {
      return !this.toU8a().some((entry, index) => entry !== other[index]);
    } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isNumber)(other)) {
      return this.toNumber() === other;
    } else if ((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _isBasic)[_isBasic] && (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_10__.isString)(other)) {
      return this.type === other;
    } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_8__.isHex)(other)) {
      return this.toHex() === other;
    } else if (other instanceof Enum) {
      return this.index === other.index && this.value.eq(other.value);
    } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_11__.isObject)(other)) {
      return this.value.eq(other[this.type]);
    } // compare the actual wrapper value


    return this.value.eq(other);
  }
  /**
   * @description Returns a hex string representation of the value
   */


  toHex() {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_14__.u8aToHex)(this.toU8a());
  }
  /**
   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
   */


  toHuman(isExtended) {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _isBasic)[_isBasic] || this.isNone ? this.type : {
      [this.type]: (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _raw)[_raw].toHuman(isExtended)
    };
  }
  /**
   * @description Converts the Object to JSON, typically used for RPC transfers
   */


  toJSON() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _isBasic)[_isBasic] ? this.type : {
      [(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_12__.stringCamelCase)(this.type)]: (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _raw)[_raw].toJSON()
    };
  }
  /**
   * @description Returns the number representation for the value
   */


  toNumber() {
    return this.index;
  }
  /**
   * @description Returns a raw struct representation of the enum types
   */


  _toRawStruct() {
    if ((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _isBasic)[_isBasic]) {
      return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _isIndexed)[_isIndexed] ? this.defKeys.reduce((out, key, index) => {
        out[key] = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _indexes)[_indexes][index];
        return out;
      }, {}) : this.defKeys;
    }

    const typeMap = Object.entries((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _def2)[_def2]).reduce((out, [key, {
      Type
    }]) => {
      out[key] = Type;
      return out;
    }, {});
    return (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_15__.typesToMap)(this.registry, typeMap);
  }
  /**
   * @description Returns the base runtime type name for this instance
   */


  toRawType() {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_16__.stringify)({
      _enum: this._toRawStruct()
    });
  }
  /**
   * @description Returns the string representation of the value
   */


  toString() {
    return this.isNull ? this.type : (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_16__.stringify)(this.toJSON());
  }
  /**
   * @description Encodes the value as a Uint8Array as per the SCALE specifications
   * @param isBare true when the value has none of the type-specific prefixes (internal)
   */


  toU8a(isBare) {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_17__.u8aConcat)(new Uint8Array(isBare ? [] : [this.index]), (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _raw)[_raw].toU8a(isBare));
  }

}

/***/ }),
/* 427 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GenericExtrinsicPayload": () => (/* binding */ GenericExtrinsicPayload)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(196);
/* harmony import */ var _codec_Base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(421);
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(422);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0



const VERSIONS = ['ExtrinsicPayloadUnknown', // v0 is unknown
'ExtrinsicPayloadUnknown', 'ExtrinsicPayloadUnknown', 'ExtrinsicPayloadUnknown', 'ExtrinsicPayloadV4'];
/**
 * @name GenericExtrinsicPayload
 * @description
 * A signing payload for an [[Extrinsic]]. For the final encoding, it is variable length based
 * on the contents included
 */

class GenericExtrinsicPayload extends _codec_Base_js__WEBPACK_IMPORTED_MODULE_0__.Base {
  constructor(registry, value, {
    version
  } = {}) {
    super(registry, GenericExtrinsicPayload.decodeExtrinsicPayload(registry, value, version));
  }
  /** @internal */


  static decodeExtrinsicPayload(registry, value, version = _constants_js__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_VERSION) {
    if (value instanceof GenericExtrinsicPayload) {
      return value._raw;
    }

    return registry.createType(VERSIONS[version] || VERSIONS[0], value, {
      version
    });
  }
  /**
   * @description The block [[Hash]] the signature applies to (mortal/immortal)
   */


  get blockHash() {
    return this._raw.blockHash;
  }
  /**
   * @description The [[ExtrinsicEra]]
   */


  get era() {
    return this._raw.era;
  }
  /**
   * @description The genesis block [[Hash]] the signature applies to
   */


  get genesisHash() {
    // NOTE only v3+
    return this._raw.genesisHash || this.registry.createType('Hash');
  }
  /**
   * @description The [[Raw]] contained in the payload
   */


  get method() {
    return this._raw.method;
  }
  /**
   * @description The [[Index]]
   */


  get nonce() {
    return this._raw.nonce;
  }
  /**
   * @description The specVersion as a [[u32]] for this payload
   */


  get specVersion() {
    // NOTE only v3+
    return this._raw.specVersion || this.registry.createType('u32');
  }
  /**
   * @description The [[Balance]]
   */


  get tip() {
    // NOTE from v2+
    return this._raw.tip || this.registry.createType('Compact<Balance>');
  }
  /**
   * @description The transaction version as a [[u32]] for this payload
   */


  get transactionVersion() {
    // NOTE only v4+
    return this._raw.transactionVersion || this.registry.createType('u32');
  }
  /**
   * @description Compares the value of the input to see if there is a match
   */


  eq(other) {
    return this._raw.eq(other);
  }
  /**
   * @description Sign the payload with the keypair
   */


  sign(signerPair) {
    const signature = this._raw.sign(signerPair); // This is extensible, so we could quite readily extend to send back extra
    // information, such as for instance the payload, i.e. `payload: this.toHex()`
    // For the case here we sign via the extrinsic, we ignore the return, so generally
    // this is applicable for external signing


    return {
      signature: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aToHex)(signature)
    };
  }
  /**
   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
   */


  toHuman(isExtended) {
    return this._raw.toHuman(isExtended);
  }
  /**
   * @description Converts the Object to JSON, typically used for RPC transfers
   */


  toJSON() {
    return this.toHex();
  }
  /**
   * @description Returns the string representation of the value
   */


  toString() {
    return this.toHex();
  }
  /**
   * @description Returns a serialized u8a form
   */


  toU8a(isBare) {
    // call our parent, with only the method stripped
    return super.toU8a(isBare ? {
      method: true
    } : false);
  }

}

/***/ }),
/* 428 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GenericExtrinsicPayloadUnknown": () => (/* binding */ GenericExtrinsicPayloadUnknown)
/* harmony export */ });
/* harmony import */ var _codec_Struct_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(319);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name GenericExtrinsicPayloadUnknown
 * @description
 * A default handler for payloads where the version is not known (default throw)
 */

class GenericExtrinsicPayloadUnknown extends _codec_Struct_js__WEBPACK_IMPORTED_MODULE_0__.Struct {
  constructor(registry, value, {
    version = 0
  } = {}) {
    super(registry, {});
    throw new Error(`Unsupported extrinsic payload version ${version}`);
  }

}

/***/ }),
/* 429 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GenericExtrinsicUnknown": () => (/* binding */ GenericExtrinsicUnknown)
/* harmony export */ });
/* harmony import */ var _codec_Struct_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(319);
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(422);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0


/**
 * @name GenericExtrinsicUnknown
 * @description
 * A default handler for extrinsics where the version is not known (default throw)
 */

class GenericExtrinsicUnknown extends _codec_Struct_js__WEBPACK_IMPORTED_MODULE_0__.Struct {
  constructor(registry, value, {
    isSigned = false,
    version = 0
  } = {}) {
    super(registry, {});
    throw new Error(`Unsupported ${isSigned ? '' : 'un'}signed extrinsic version ${version & _constants_js__WEBPACK_IMPORTED_MODULE_1__.UNMASK_VERSION}`);
  }

}

/***/ }),
/* 430 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GenericSignerPayload": () => (/* binding */ GenericSignerPayload)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(122);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(320);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(196);
/* harmony import */ var _codec_Option_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(431);
/* harmony import */ var _codec_Struct_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(319);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0



const knownTypes = {
  address: 'Address',
  blockHash: 'Hash',
  blockNumber: 'BlockNumber',
  era: 'ExtrinsicEra',
  genesisHash: 'Hash',
  method: 'Call',
  nonce: 'Compact<Index>',
  runtimeVersion: 'RuntimeVersion',
  signedExtensions: 'Vec<Text>',
  tip: 'Compact<Balance>',
  version: 'u8'
};
/**
 * @name GenericSignerPayload
 * @description
 * A generic signer payload that can be used for serialization between API and signer
 */

class GenericSignerPayload extends _codec_Struct_js__WEBPACK_IMPORTED_MODULE_0__.Struct {
  constructor(registry, value) {
    const extensionTypes = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.objectSpread)({}, registry.getSignedExtensionTypes(), registry.getSignedExtensionExtra());
    super(registry, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.objectSpread)({}, extensionTypes, knownTypes), value);
    this._extraTypes = void 0;
    this._extraTypes = {};

    const getter = key => this.get(key); // add all extras that are not in the base types


    for (const [key, type] of Object.entries(extensionTypes)) {
      if (!knownTypes[key]) {
        this._extraTypes[key] = type;
      }

      (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.objectProperty)(this, key, getter);
    }
  }

  get address() {
    return this.get('address');
  }

  get blockHash() {
    return this.get('blockHash');
  }

  get blockNumber() {
    return this.get('blockNumber');
  }

  get era() {
    return this.get('era');
  }

  get genesisHash() {
    return this.get('genesisHash');
  }

  get method() {
    return this.get('method');
  }

  get nonce() {
    return this.get('nonce');
  }

  get runtimeVersion() {
    return this.get('runtimeVersion');
  }

  get signedExtensions() {
    return this.get('signedExtensions');
  }

  get tip() {
    return this.get('tip');
  }

  get version() {
    return this.get('version');
  }
  /**
   * @description Creates an representation of the structure as an ISignerPayload JSON
   */


  toPayload() {
    const result = {};
    const keys = Object.keys(this._extraTypes); // add any explicit overrides we may have

    for (let i = 0; i < keys.length; i++) {
      const key = keys[i];
      const value = this.get(key);
      const isOption = value instanceof _codec_Option_js__WEBPACK_IMPORTED_MODULE_3__.Option; // Don't include Option.isNone

      if (!isOption || value.isSome) {
        result[key] = value.toHex();
      }
    }

    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.objectSpread)(result, {
      // the known defaults as managed explicitly and has different
      // formatting in cases, e.g. we mostly expose a hex format here
      address: this.address.toString(),
      blockHash: this.blockHash.toHex(),
      blockNumber: this.blockNumber.toHex(),
      era: this.era.toHex(),
      genesisHash: this.genesisHash.toHex(),
      method: this.method.toHex(),
      nonce: this.nonce.toHex(),
      signedExtensions: this.signedExtensions.map(e => e.toString()),
      specVersion: this.runtimeVersion.specVersion.toHex(),
      tip: this.tip.toHex(),
      transactionVersion: this.runtimeVersion.transactionVersion.toHex(),
      version: this.version.toNumber()
    });
  }
  /**
   * @description Creates a representation of the payload in raw Exrinsic form
   */


  toRaw() {
    const payload = this.toPayload();
    const data = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.u8aToHex)(this.registry.createType('ExtrinsicPayload', payload, {
      version: payload.version
    }) // NOTE Explicitly pass the bare flag so the method is encoded un-prefixed (non-decodable, for signing only)
    .toU8a({
      method: true
    }));
    return {
      address: payload.address,
      data,
      type: 'payload'
    };
  }

}

/***/ }),
/* 431 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Option": () => (/* binding */ Option)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(83);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(82);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(432);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(196);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(80);
/* harmony import */ var _primitive_Null_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(311);
/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(317);


// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0



/** @internal */

function decodeOption(registry, Type, value) {
  // In the case of an option, unwrap the inner
  if (value instanceof Option) {
    value = value.value;
  }

  if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isNull)(value) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(value) || value instanceof _primitive_Null_js__WEBPACK_IMPORTED_MODULE_4__.Null || value === '0x') {
    return new _primitive_Null_js__WEBPACK_IMPORTED_MODULE_4__.Null(registry);
  } else if (value instanceof Type) {
    // don't re-create, use as it (which also caters for derived types)
    return value;
  } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.isU8a)(value)) {
    // the isU8a check happens last in the if-tree - since the wrapped value
    // may be an instance of it, so Type and Option checks go in first
    return !value.length || value[0] === 0 ? new _primitive_Null_js__WEBPACK_IMPORTED_MODULE_4__.Null(registry) : new Type(registry, value.subarray(1));
  }

  return new Type(registry, value);
}
/**
 * @name Option
 * @description
 * An Option is an optional field. Basically the first byte indicates that there is
 * is value to follow. If the byte is `1` there is an actual value. So the Option
 * implements that - decodes, checks for optionality and wraps the required structure
 * with a value if/as required/found.
 */


var _Type = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("Type");

var _initialU8aLength = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("initialU8aLength");

var _raw = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("raw");

class Option {
  constructor(registry, typeName, value) {
    this.registry = void 0;
    this.createdAtHash = void 0;
    Object.defineProperty(this, _Type, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _initialU8aLength, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _raw, {
      writable: true,
      value: void 0
    });
    const Type = (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_6__.typeToConstructor)(registry, typeName);
    const decoded = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.isU8a)(value) && value.length && !(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_7__.isCodec)(value) ? value[0] === 0 ? new _primitive_Null_js__WEBPACK_IMPORTED_MODULE_4__.Null(registry) : new Type(registry, value.subarray(1)) : decodeOption(registry, Type, value);
    this.registry = registry;
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _Type)[_Type] = Type;
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _raw)[_raw] = decoded;

    if (decoded.initialU8aLength) {
      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _initialU8aLength)[_initialU8aLength] = 1 + decoded.initialU8aLength;
    }
  }

  static with(Type) {
    return class extends Option {
      constructor(registry, value) {
        super(registry, Type, value);
      }

    };
  }
  /**
   * @description The length of the value when encoded as a Uint8Array
   */


  get encodedLength() {
    // boolean byte (has value, doesn't have) along with wrapped length
    return 1 + (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _raw)[_raw].encodedLength;
  }
  /**
   * @description The length of the initial encoded value (Only available when constructed from a Uint8Array)
   */


  get initialU8aLength() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _initialU8aLength)[_initialU8aLength];
  }
  /**
   * @description returns a hash of the contents
   */


  get hash() {
    return this.registry.hash(this.toU8a());
  }
  /**
   * @description Checks if the Option has no value
   */


  get isEmpty() {
    return this.isNone;
  }
  /**
   * @description Checks if the Option has no value
   */


  get isNone() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _raw)[_raw] instanceof _primitive_Null_js__WEBPACK_IMPORTED_MODULE_4__.Null;
  }
  /**
   * @description Checks if the Option has a value
   */


  get isSome() {
    return !this.isNone;
  }
  /**
   * @description The actual value for the Option
   */


  get value() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _raw)[_raw];
  }
  /**
   * @description Compares the value of the input to see if there is a match
   */


  eq(other) {
    if (other instanceof Option) {
      return this.isSome === other.isSome && this.value.eq(other.value);
    }

    return this.value.eq(other);
  }
  /**
   * @description Returns a hex string representation of the value
   */


  toHex() {
    // This attempts to align with the JSON encoding - actually in this case
    // the isSome value is correct, however the `isNone` may be problematic
    return this.isNone ? '0x' : (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_8__.u8aToHex)(this.toU8a().subarray(1));
  }
  /**
   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
   */


  toHuman(isExtended) {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _raw)[_raw].toHuman(isExtended);
  }
  /**
   * @description Converts the Object to JSON, typically used for RPC transfers
   */


  toJSON() {
    return this.isNone ? null : (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _raw)[_raw].toJSON();
  }
  /**
   * @description Returns the base runtime type name for this instance
   */


  toRawType(isBare) {
    const wrapped = this.registry.getClassName((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _Type)[_Type]) || new ((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _Type)[_Type])(this.registry).toRawType();
    return isBare ? wrapped : `Option<${wrapped}>`;
  }
  /**
   * @description Returns the string representation of the value
   */


  toString() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _raw)[_raw].toString();
  }
  /**
   * @description Encodes the value as a Uint8Array as per the SCALE specifications
   * @param isBare true when the value has none of the type-specific prefixes (internal)
   */


  toU8a(isBare) {
    if (isBare) {
      return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _raw)[_raw].toU8a(true);
    }

    const u8a = new Uint8Array(this.encodedLength);

    if (this.isSome) {
      u8a.set([1]);
      u8a.set((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _raw)[_raw].toU8a(), 1);
    }

    return u8a;
  }
  /**
   * @description Returns the value that the Option represents (if available), throws if null
   */


  unwrap() {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.assert)(this.isSome, 'Option: unwrapping a None value');
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _raw)[_raw];
  }
  /**
   * @description Returns the value that the Option represents (if available) or defaultValue if none
   * @param defaultValue The value to return if the option isNone
   */


  unwrapOr(defaultValue) {
    return this.isSome ? this.unwrap() : defaultValue;
  }
  /**
   * @description Returns the value that the Option represents (if available) or defaultValue if none
   * @param defaultValue The value to return if the option isNone
   */


  unwrapOrDefault() {
    return this.isSome ? this.unwrap() : new ((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _Type)[_Type])(this.registry);
  }

}

/***/ }),
/* 432 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isCodec": () => (/* binding */ isCodec)
/* harmony export */ });
/* harmony import */ var _function_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(81);
/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(286);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0


function isCodec(value) {
  return (0,_object_js__WEBPACK_IMPORTED_MODULE_0__.isObject)(value) && (0,_function_js__WEBPACK_IMPORTED_MODULE_1__.isFunction)(value.toU8a) && (0,_object_js__WEBPACK_IMPORTED_MODULE_0__.isObject)(value.registry) && (0,_function_js__WEBPACK_IMPORTED_MODULE_1__.isFunction)(value.registry.get);
}

/***/ }),
/* 433 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GenericExtrinsicV4": () => (/* reexport safe */ _Extrinsic_js__WEBPACK_IMPORTED_MODULE_0__.GenericExtrinsicV4),
/* harmony export */   "GenericExtrinsicPayloadV4": () => (/* reexport safe */ _ExtrinsicPayload_js__WEBPACK_IMPORTED_MODULE_1__.GenericExtrinsicPayloadV4),
/* harmony export */   "GenericExtrinsicSignatureV4": () => (/* reexport safe */ _ExtrinsicSignature_js__WEBPACK_IMPORTED_MODULE_2__.GenericExtrinsicSignatureV4)
/* harmony export */ });
/* harmony import */ var _Extrinsic_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(420);
/* harmony import */ var _ExtrinsicPayload_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(434);
/* harmony import */ var _ExtrinsicSignature_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(436);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0




/***/ }),
/* 434 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GenericExtrinsicPayloadV4": () => (/* binding */ GenericExtrinsicPayloadV4)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(122);
/* harmony import */ var _codec_Enum_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(426);
/* harmony import */ var _codec_Struct_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(319);
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(435);


// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0




/**
 * @name GenericExtrinsicPayloadV4
 * @description
 * A signing payload for an [[Extrinsic]]. For the final encoding, it is
 * variable length based on the contents included
 */

var _signOptions = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("signOptions");

class GenericExtrinsicPayloadV4 extends _codec_Struct_js__WEBPACK_IMPORTED_MODULE_2__.Struct {
  constructor(registry, value) {
    super(registry, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.objectSpread)({
      method: 'Bytes'
    }, registry.getSignedExtensionTypes(), registry.getSignedExtensionExtra()), value); // Do detection for the type of extrinsic, in the case of MultiSignature
    // this is an enum, in the case of AnySignature, this is a Hash only
    // (which may be 64 or 65 bytes)

    Object.defineProperty(this, _signOptions, {
      writable: true,
      value: void 0
    });
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _signOptions)[_signOptions] = {
      withType: registry.createType('ExtrinsicSignature') instanceof _codec_Enum_js__WEBPACK_IMPORTED_MODULE_4__.Enum
    };
  }
  /**
   * @description The block [[Hash]] the signature applies to (mortal/immortal)
   */


  get blockHash() {
    return this.get('blockHash');
  }
  /**
   * @description The [[ExtrinsicEra]]
   */


  get era() {
    return this.get('era');
  }
  /**
   * @description The genesis [[Hash]] the signature applies to (mortal/immortal)
   */


  get genesisHash() {
    return this.get('genesisHash');
  }
  /**
   * @description The [[Bytes]] contained in the payload
   */


  get method() {
    return this.get('method');
  }
  /**
   * @description The [[Index]]
   */


  get nonce() {
    return this.get('nonce');
  }
  /**
   * @description The specVersion for this signature
   */


  get specVersion() {
    return this.get('specVersion');
  }
  /**
   * @description The tip [[Balance]]
   */


  get tip() {
    return this.get('tip');
  }
  /**
   * @description The transactionVersion for this signature
   */


  get transactionVersion() {
    return this.get('transactionVersion');
  }
  /**
   * @description
   * The (optional) asset id for this signature for chains that support transaction fees in assets
   */


  get assetId() {
    return this.get('assetId');
  }
  /**
   * @description Sign the payload with the keypair
   */


  sign(signerPair) {
    // NOTE The `toU8a({ method: true })` argument is absolutely critical, we
    // don't want the method (Bytes) to have the length prefix included. This
    // means that the data-as-signed is un-decodable, but is also doesn't need
    // the extra information, only the pure data (and is not decoded) ...
    // The same applies to V1..V3, if we have a V5, carrythis comment
    return (0,_util_js__WEBPACK_IMPORTED_MODULE_5__.sign)(this.registry, signerPair, this.toU8a({
      method: true
    }), (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _signOptions)[_signOptions]);
  }

}

/***/ }),
/* 435 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "sign": () => (/* binding */ sign)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// a helper function for both types of payloads, Raw and metadata-known
function sign(registry, signerPair, u8a, options) {
  const encoded = u8a.length > 256 ? registry.hash(u8a) : u8a;
  return signerPair.sign(encoded, options);
}

/***/ }),
/* 436 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GenericExtrinsicSignatureV4": () => (/* binding */ GenericExtrinsicSignatureV4)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(196);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(122);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(320);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(82);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(292);
/* harmony import */ var _codec_Struct_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(319);
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(422);
/* harmony import */ var _ExtrinsicPayload_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(434);


// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0



 // Ensure we have enough data for all types of signatures

const FAKE_SIGNATURE = new Uint8Array(256).fill(1);

function toAddress(registry, address) {
  return registry.createType('Address', (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isU8a)(address) ? (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.u8aToHex)(address) : address);
}
/**
 * @name GenericExtrinsicSignatureV4
 * @description
 * A container for the [[Signature]] associated with a specific [[Extrinsic]]
 */


var _signKeys = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("signKeys");

class GenericExtrinsicSignatureV4 extends _codec_Struct_js__WEBPACK_IMPORTED_MODULE_4__.Struct {
  constructor(registry, value, {
    isSigned
  } = {}) {
    const signTypes = registry.getSignedExtensionTypes();
    super(registry, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.objectSpread)( // eslint-disable-next-line sort-keys
    {
      signer: 'Address',
      signature: 'ExtrinsicSignature'
    }, signTypes), GenericExtrinsicSignatureV4.decodeExtrinsicSignature(value, isSigned));
    Object.defineProperty(this, _signKeys, {
      writable: true,
      value: void 0
    });
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _signKeys)[_signKeys] = Object.keys(signTypes);
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.objectProperties)(this, (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _signKeys)[_signKeys], k => this.get(k));
  }
  /** @internal */


  static decodeExtrinsicSignature(value, isSigned = false) {
    if (!value) {
      return _constants_js__WEBPACK_IMPORTED_MODULE_7__.EMPTY_U8A;
    } else if (value instanceof GenericExtrinsicSignatureV4) {
      return value;
    }

    return isSigned ? value : _constants_js__WEBPACK_IMPORTED_MODULE_7__.EMPTY_U8A;
  }
  /**
   * @description The length of the value when encoded as a Uint8Array
   */


  get encodedLength() {
    return this.isSigned ? super.encodedLength : 0;
  }
  /**
   * @description `true` if the signature is valid
   */


  get isSigned() {
    return !this.signature.isEmpty;
  }
  /**
   * @description The [[ExtrinsicEra]] (mortal or immortal) this signature applies to
   */


  get era() {
    return this.get('era');
  }
  /**
   * @description The [[Index]] for the signature
   */


  get nonce() {
    return this.get('nonce');
  }
  /**
   * @description The actual [[EcdsaSignature]], [[Ed25519Signature]] or [[Sr25519Signature]]
   */


  get signature() {
    // the second case here is when we don't have an enum signature, treat as raw
    return this.multiSignature.value || this.multiSignature;
  }
  /**
   * @description The raw [[ExtrinsicSignature]]
   */


  get multiSignature() {
    return this.get('signature');
  }
  /**
   * @description The [[Address]] that signed
   */


  get signer() {
    return this.get('signer');
  }
  /**
   * @description The [[Balance]] tip
   */


  get tip() {
    return this.get('tip');
  }

  _injectSignature(signer, signature, payload) {
    // use the fields exposed to guide the getters
    for (let i = 0; i < (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _signKeys)[_signKeys].length; i++) {
      const k = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _signKeys)[_signKeys][i];

      const v = payload.get(k);

      if (!(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_8__.isUndefined)(v)) {
        this.set(k, v);
      }
    } // additional fields (exposed in struct itself)


    this.set('signer', signer);
    this.set('signature', signature);
    return this;
  }
  /**
   * @description Adds a raw signature
   */


  addSignature(signer, signature, payload) {
    return this._injectSignature(toAddress(this.registry, signer), this.registry.createType('ExtrinsicSignature', signature), new _ExtrinsicPayload_js__WEBPACK_IMPORTED_MODULE_9__.GenericExtrinsicPayloadV4(this.registry, payload));
  }
  /**
   * @description Creates a payload from the supplied options
   */


  createPayload(method, options) {
    const {
      era,
      runtimeVersion: {
        specVersion,
        transactionVersion
      }
    } = options;
    return new _ExtrinsicPayload_js__WEBPACK_IMPORTED_MODULE_9__.GenericExtrinsicPayloadV4(this.registry, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.objectSpread)({}, options, {
      era: era || _constants_js__WEBPACK_IMPORTED_MODULE_7__.IMMORTAL_ERA,
      method: method.toHex(),
      specVersion,
      transactionVersion
    }));
  }
  /**
   * @description Generate a payload and applies the signature from a keypair
   */


  sign(method, account, options) {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_10__.assert)(account && account.addressRaw, () => `Expected a valid keypair for signing, found ${(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_11__.stringify)(account)}`);
    const signer = toAddress(this.registry, account.addressRaw);
    const payload = this.createPayload(method, options);
    const signature = this.registry.createType('ExtrinsicSignature', payload.sign(account));
    return this._injectSignature(signer, signature, payload);
  }
  /**
   * @description Generate a payload and applies a fake signature
   */


  signFake(method, address, options) {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_10__.assert)(address, () => `Expected a valid address for signing, found ${(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_11__.stringify)(address)}`);
    const signer = toAddress(this.registry, address);
    const payload = this.createPayload(method, options);
    const signature = this.registry.createType('ExtrinsicSignature', FAKE_SIGNATURE);
    return this._injectSignature(signer, signature, payload);
  }
  /**
   * @description Encodes the value as a Uint8Array as per the SCALE specifications
   * @param isBare true when the value has none of the type-specific prefixes (internal)
   */


  toU8a(isBare) {
    return this.isSigned ? super.toU8a(isBare) : _constants_js__WEBPACK_IMPORTED_MODULE_7__.EMPTY_U8A;
  }

}

/***/ }),
/* 437 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GenericEthereumAccountId": () => (/* reexport safe */ _ethereum_index_js__WEBPACK_IMPORTED_MODULE_0__.GenericEthereumAccountId),
/* harmony export */   "GenericEthereumLookupSource": () => (/* reexport safe */ _ethereum_index_js__WEBPACK_IMPORTED_MODULE_0__.GenericEthereumLookupSource),
/* harmony export */   "GenericAccountId": () => (/* reexport safe */ _AccountId_js__WEBPACK_IMPORTED_MODULE_1__.GenericAccountId),
/* harmony export */   "GenericAccountIndex": () => (/* reexport safe */ _AccountIndex_js__WEBPACK_IMPORTED_MODULE_2__.GenericAccountIndex),
/* harmony export */   "GenericBlock": () => (/* reexport safe */ _Block_js__WEBPACK_IMPORTED_MODULE_3__.GenericBlock),
/* harmony export */   "GenericCall": () => (/* reexport safe */ _Call_js__WEBPACK_IMPORTED_MODULE_4__.GenericCall),
/* harmony export */   "GenericChainProperties": () => (/* reexport safe */ _ChainProperties_js__WEBPACK_IMPORTED_MODULE_5__.GenericChainProperties),
/* harmony export */   "GenericConsensusEngineId": () => (/* reexport safe */ _ConsensusEngineId_js__WEBPACK_IMPORTED_MODULE_6__.GenericConsensusEngineId),
/* harmony export */   "GenericEvent": () => (/* reexport safe */ _Event_js__WEBPACK_IMPORTED_MODULE_7__.GenericEvent),
/* harmony export */   "GenericEventData": () => (/* reexport safe */ _Event_js__WEBPACK_IMPORTED_MODULE_7__.GenericEventData),
/* harmony export */   "GenericLookupSource": () => (/* reexport safe */ _LookupSource_js__WEBPACK_IMPORTED_MODULE_8__.GenericLookupSource),
/* harmony export */   "GenericMultiAddress": () => (/* reexport safe */ _MultiAddress_js__WEBPACK_IMPORTED_MODULE_9__.GenericMultiAddress),
/* harmony export */   "GenericAddress": () => (/* reexport safe */ _MultiAddress_js__WEBPACK_IMPORTED_MODULE_9__.GenericMultiAddress),
/* harmony export */   "GenericVote": () => (/* reexport safe */ _Vote_js__WEBPACK_IMPORTED_MODULE_10__.GenericVote)
/* harmony export */ });
/* harmony import */ var _ethereum_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(438);
/* harmony import */ var _AccountId_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(458);
/* harmony import */ var _AccountIndex_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(456);
/* harmony import */ var _Block_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(459);
/* harmony import */ var _Call_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(460);
/* harmony import */ var _ChainProperties_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(461);
/* harmony import */ var _ConsensusEngineId_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(462);
/* harmony import */ var _Event_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(310);
/* harmony import */ var _LookupSource_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(463);
/* harmony import */ var _MultiAddress_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(464);
/* harmony import */ var _Vote_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(465);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0












/***/ }),
/* 438 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GenericEthereumAccountId": () => (/* reexport safe */ _AccountId_js__WEBPACK_IMPORTED_MODULE_0__.GenericEthereumAccountId),
/* harmony export */   "GenericEthereumLookupSource": () => (/* reexport safe */ _LookupSource_js__WEBPACK_IMPORTED_MODULE_1__.GenericEthereumLookupSource)
/* harmony export */ });
/* harmony import */ var _AccountId_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(439);
/* harmony import */ var _LookupSource_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(449);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0



/***/ }),
/* 439 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GenericEthereumAccountId": () => (/* binding */ GenericEthereumAccountId)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(126);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(167);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(169);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(440);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(445);
/* harmony import */ var _codec_U8aFixed_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(444);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0



/** @internal */

function decodeAccountId(value) {
  if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.isU8a)(value) || Array.isArray(value)) {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToU8a)(value);
  } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isHex)(value) || (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_3__.isEthereumAddress)(value)) {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.hexToU8a)(value);
  } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.isString)(value)) {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToU8a)(value);
  }

  return value;
}
/**
 * @name GenericEthereumAccountId
 * @description
 * A wrapper around an Ethereum-compatible AccountId. Since we are dealing with
 * underlying addresses (20 bytes in length), we extend from U8aFixed which is
 * just a Uint8Array wrapper with a fixed length.
 */


class GenericEthereumAccountId extends _codec_U8aFixed_js__WEBPACK_IMPORTED_MODULE_6__.U8aFixed {
  constructor(registry, value = new Uint8Array()) {
    super(registry, decodeAccountId(value), 160);
  }

  static encode(value) {
    return (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_7__.ethereumEncode)(value);
  }
  /**
   * @description Compares the value of the input to see if there is a match
   */


  eq(other) {
    return super.eq(decodeAccountId(other));
  }
  /**
   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
   */


  toHuman() {
    return this.toJSON();
  }
  /**
   * @description Converts the Object to JSON, typically used for RPC transfers
   */


  toJSON() {
    return this.toString();
  }
  /**
   * @description Returns the string representation of the value
   */


  toString() {
    return GenericEthereumAccountId.encode(this);
  }
  /**
   * @description Returns the base runtime type name for this instance
   */


  toRawType() {
    return 'AccountId';
  }

}

/***/ }),
/* 440 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isEthereumAddress": () => (/* binding */ isEthereumAddress)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(126);
/* harmony import */ var _isChecksum_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(441);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0


function isEthereumAddress(address) {
  if (!address || address.length !== 42 || !(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.isHex)(address)) {
    return false;
  } else if (/^(0x)?[0-9a-f]{40}$/.test(address) || /^(0x)?[0-9A-F]{40}$/.test(address)) {
    return true;
  }

  return (0,_isChecksum_js__WEBPACK_IMPORTED_MODULE_1__.isEthereumChecksum)(address);
}

/***/ }),
/* 441 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isEthereumChecksum": () => (/* binding */ isEthereumChecksum)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(196);
/* harmony import */ var _keccak_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(442);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0



function isInvalidChar(char, byte) {
  return char !== (byte > 7 ? char.toUpperCase() : char.toLowerCase());
}

function isEthereumChecksum(_address) {
  const address = _address.replace('0x', '');

  const hash = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToHex)((0,_keccak_index_js__WEBPACK_IMPORTED_MODULE_1__.keccakAsU8a)(address.toLowerCase()), -1, false);

  for (let i = 0; i < 40; i++) {
    if (isInvalidChar(address[i], parseInt(hash[i], 16))) {
      return false;
    }
  }

  return true;
}

/***/ }),
/* 442 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "keccakAsU8a": () => (/* binding */ keccakAsU8a),
/* harmony export */   "keccak256AsU8a": () => (/* binding */ keccak256AsU8a),
/* harmony export */   "keccak512AsU8a": () => (/* binding */ keccak512AsU8a),
/* harmony export */   "keccakAsHex": () => (/* binding */ keccakAsHex)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(177);
/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(328);
/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(354);
/* harmony import */ var _noble_hashes_lib_sha3_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(443);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0





/**
 * @name keccakAsU8a
 * @summary Creates a keccak Uint8Array from the input.
 * @description
 * From either a `string` or a `Buffer` input, create the keccak and return the result as a `Uint8Array`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { keccakAsU8a } from '@polkadot/util-crypto';
 *
 * keccakAsU8a('123'); // => Uint8Array
 * ```
 */
function keccakAsU8a(value, bitLength = 256, onlyJs) {
  const is256 = bitLength === 256;
  const u8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(value);
  return !_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.hasBigInt || !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.isReady)() ? is256 ? (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.keccak256)(u8a) : (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.keccak512)(u8a) : is256 ? (0,_noble_hashes_lib_sha3_js__WEBPACK_IMPORTED_MODULE_3__.keccak_256)(u8a) : (0,_noble_hashes_lib_sha3_js__WEBPACK_IMPORTED_MODULE_3__.keccak_512)(u8a);
}
/**
 * @name keccak256AsU8a
 * @description Creates a keccak256 Uint8Array from the input.
 */

const keccak256AsU8a = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_4__.createBitHasher)(256, keccakAsU8a);
/**
 * @name keccak512AsU8a
 * @description Creates a keccak512 Uint8Array from the input.
 */

const keccak512AsU8a = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_4__.createBitHasher)(512, keccakAsU8a);
/**
 * @name keccakAsHex
 * @description Creates a keccak hex string from the input.
 */

const keccakAsHex = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_4__.createAsHex)(keccakAsU8a);

/***/ }),
/* 443 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "keccakP": () => (/* binding */ keccakP),
/* harmony export */   "Keccak": () => (/* binding */ Keccak),
/* harmony export */   "sha3_224": () => (/* binding */ sha3_224),
/* harmony export */   "sha3_256": () => (/* binding */ sha3_256),
/* harmony export */   "sha3_384": () => (/* binding */ sha3_384),
/* harmony export */   "sha3_512": () => (/* binding */ sha3_512),
/* harmony export */   "keccak_224": () => (/* binding */ keccak_224),
/* harmony export */   "keccak_256": () => (/* binding */ keccak_256),
/* harmony export */   "keccak_384": () => (/* binding */ keccak_384),
/* harmony export */   "keccak_512": () => (/* binding */ keccak_512),
/* harmony export */   "shake128": () => (/* binding */ shake128),
/* harmony export */   "shake256": () => (/* binding */ shake256)
/* harmony export */ });
/* harmony import */ var _u64_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(351);
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(352);
/*! noble-hashes - MIT License (c) 2021 Paul Miller (paulmillr.com) */
// https://github.com/paulmillr/noble-hashes/pull/13



const _0n = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__._n)(0);

const _1n = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__._n)(1);

const _2n = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__._n)(2);

const _7n = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__._n)(7);

const _256n = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__._n)(256);

const _0x71n = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__._n)(0x71); // Various per round constants calculations


const [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];

for (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {
  // Pi
  [x, y] = [y, (2 * x + 3 * y) % 5];
  SHA3_PI.push(2 * (5 * y + x)); // Rotational

  SHA3_ROTL.push((round + 1) * (round + 2) / 2 % 64); // Iota

  let t = _0n;

  for (let j = 0; j < 7; j++) {
    R = (R << _1n ^ (R >> _7n) * _0x71n) % _256n;
    if (R & _2n) t ^= _1n << (_1n << BigInt(j)) - _1n;
  }

  _SHA3_IOTA.push(t);
}

const [SHA3_IOTA_H, SHA3_IOTA_L] = _u64_js__WEBPACK_IMPORTED_MODULE_1__.split(_SHA3_IOTA, true); // Left rotation (without 0, 32, 64)

const rotlH = (h, l, s) => s > 32 ? _u64_js__WEBPACK_IMPORTED_MODULE_1__.rotlBH(h, l, s) : _u64_js__WEBPACK_IMPORTED_MODULE_1__.rotlSH(h, l, s);

const rotlL = (h, l, s) => s > 32 ? _u64_js__WEBPACK_IMPORTED_MODULE_1__.rotlBL(h, l, s) : _u64_js__WEBPACK_IMPORTED_MODULE_1__.rotlSL(h, l, s); // Same as keccakf1600, but allows to skip some rounds


function keccakP(s, rounds = 24) {
  const B = new Uint32Array(5 * 2); // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)

  for (let round = 24 - rounds; round < 24; round++) {
    // Theta θ
    for (let x = 0; x < 10; x++) B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];

    for (let x = 0; x < 10; x += 2) {
      const idx1 = (x + 8) % 10;
      const idx0 = (x + 2) % 10;
      const B0 = B[idx0];
      const B1 = B[idx0 + 1];
      const Th = rotlH(B0, B1, 1) ^ B[idx1];
      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];

      for (let y = 0; y < 50; y += 10) {
        s[x + y] ^= Th;
        s[x + y + 1] ^= Tl;
      }
    } // Rho (ρ) and Pi (π)


    let curH = s[2];
    let curL = s[3];

    for (let t = 0; t < 24; t++) {
      const shift = SHA3_ROTL[t];
      const Th = rotlH(curH, curL, shift);
      const Tl = rotlL(curH, curL, shift);
      const PI = SHA3_PI[t];
      curH = s[PI];
      curL = s[PI + 1];
      s[PI] = Th;
      s[PI + 1] = Tl;
    } // Chi (χ)


    for (let y = 0; y < 50; y += 10) {
      for (let x = 0; x < 10; x++) B[x] = s[y + x];

      for (let x = 0; x < 10; x++) s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];
    } // Iota (ι)


    s[0] ^= SHA3_IOTA_H[round];
    s[1] ^= SHA3_IOTA_L[round];
  }

  B.fill(0);
}
class Keccak extends _utils_js__WEBPACK_IMPORTED_MODULE_0__.Hash {
  // NOTE: we accept arguments in bytes instead of bits here.
  constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {
    super(); // Can be passed from user as dkLen

    this.blockLen = blockLen;
    this.suffix = suffix;
    this.outputLen = outputLen;
    this.enableXOF = enableXOF;
    this.rounds = rounds;
    this.state = void 0;
    this.pos = 0;
    this.posOut = 0;
    this.finished = false;
    this.state32 = void 0;
    this.destroyed = false;
    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertNumber)(outputLen); // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes

    if (0 >= this.blockLen || this.blockLen >= 200) throw new Error('Sha3 supports only keccak-f1600 function');
    this.state = new Uint8Array(200);
    this.state32 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.u32)(this.state);
  }

  keccak() {
    keccakP(this.state32, this.rounds);
    this.posOut = 0;
    this.pos = 0;
  }

  update(data) {
    if (this.destroyed) throw new Error('instance is destroyed');
    if (this.finished) throw new Error('digest() was already called');
    const {
      blockLen,
      state
    } = this;
    data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.toBytes)(data);
    const len = data.length;

    for (let pos = 0; pos < len;) {
      const take = Math.min(blockLen - this.pos, len - pos);

      for (let i = 0; i < take; i++) state[this.pos++] ^= data[pos++];

      if (this.pos === blockLen) this.keccak();
    }

    return this;
  }

  finish() {
    if (this.finished) return;
    this.finished = true;
    const {
      state,
      suffix,
      pos,
      blockLen
    } = this; // Do the padding

    state[pos] ^= suffix;
    if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();
    state[blockLen - 1] ^= 0x80;
    this.keccak();
  }

  writeInto(out) {
    if (this.destroyed) throw new Error('instance is destroyed');
    if (!(out instanceof Uint8Array)) throw new Error('Keccak: invalid output buffer');
    this.finish();

    for (let pos = 0, len = out.length; pos < len;) {
      if (this.posOut >= this.blockLen) this.keccak();
      const take = Math.min(this.blockLen - this.posOut, len - pos);
      out.set(this.state.subarray(this.posOut, this.posOut + take), pos);
      this.posOut += take;
      pos += take;
    }

    return out;
  }

  xofInto(out) {
    // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF
    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');
    return this.writeInto(out);
  }

  xof(bytes) {
    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertNumber)(bytes);
    return this.xofInto(new Uint8Array(bytes));
  }

  digestInto(out) {
    if (out.length < this.outputLen) throw new Error('Keccak: invalid output buffer');
    if (this.finished) throw new Error('digest() was already called');
    this.finish();
    this.writeInto(out);
    this.destroy();
    return out;
  }

  digest() {
    return this.digestInto(new Uint8Array(this.outputLen));
  }

  destroy() {
    this.destroyed = true;
    this.state.fill(0);
  }

  _cloneInto(to) {
    const {
      blockLen,
      suffix,
      outputLen,
      rounds,
      enableXOF
    } = this;
    to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));
    to.state32.set(this.state32);
    to.pos = this.pos;
    to.posOut = this.posOut;
    to.finished = this.finished;
    to.rounds = rounds; // Suffix can change in cSHAKE

    to.suffix = suffix;
    to.outputLen = outputLen;
    to.enableXOF = enableXOF;
    to.destroyed = this.destroyed;
    return to;
  }

}

const gen = (suffix, blockLen, outputLen) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.wrapConstructor)(() => new Keccak(blockLen, suffix, outputLen));

const sha3_224 = gen(0x06, 144, 224 / 8);
const sha3_256 = gen(0x06, 136, 256 / 8);
const sha3_384 = gen(0x06, 104, 384 / 8);
const sha3_512 = gen(0x06, 72, 512 / 8);
const keccak_224 = gen(0x01, 144, 224 / 8);
const keccak_256 = gen(0x01, 136, 256 / 8);
const keccak_384 = gen(0x01, 104, 384 / 8);
const keccak_512 = gen(0x01, 72, 512 / 8);

const genShake = (suffix, blockLen, outputLen) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.wrapConstructorWithOpts)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen !== undefined ? opts.dkLen : outputLen, true));

const shake128 = genShake(0x1f, 168, 128 / 8);
const shake256 = genShake(0x1f, 136, 256 / 8);

/***/ }),
/* 444 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "U8aFixed": () => (/* binding */ U8aFixed)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(80);
/* harmony import */ var _Raw_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(410);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0


/** @internal */

function decodeU8aFixed(value, bitLength) {
  const u8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(value);
  const byteLength = bitLength / 8;

  if (!u8a.length) {
    return [new Uint8Array(byteLength), 0];
  }

  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(u8a.length >= byteLength, () => `Expected at least ${byteLength} bytes (${bitLength} bits), found ${u8a.length} bytes`);
  return [u8a.subarray(0, byteLength), byteLength];
}
/**
 * @name U8aFixed
 * @description
 * A U8a that manages a a sequence of bytes up to the specified bitLength. Not meant
 * to be used directly, rather is should be subclassed with the specific lengths.
 */


class U8aFixed extends _Raw_js__WEBPACK_IMPORTED_MODULE_2__.Raw {
  constructor(registry, value = new Uint8Array(), bitLength = 256) {
    const [u8a, decodedLength] = decodeU8aFixed(value, bitLength);
    super(registry, u8a, decodedLength);
  }

  static with(bitLength, typeName) {
    return class extends U8aFixed {
      constructor(registry, value) {
        super(registry, value, bitLength);
      }

      toRawType() {
        return typeName || super.toRawType();
      }

    };
  }
  /**
   * @description Returns the base runtime type name for this instance
   */


  toRawType() {
    return `[u8;${this.length}]`;
  }

}

/***/ }),
/* 445 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ethereumEncode": () => (/* binding */ ethereumEncode)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(196);
/* harmony import */ var _keccak_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(442);
/* harmony import */ var _secp256k1_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(446);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0




function getH160(u8a) {
  if ([33, 65].includes(u8a.length)) {
    u8a = (0,_keccak_index_js__WEBPACK_IMPORTED_MODULE_0__.keccakAsU8a)((0,_secp256k1_index_js__WEBPACK_IMPORTED_MODULE_1__.secp256k1Expand)(u8a));
  }

  return u8a.slice(-20);
}

function ethereumEncode(addressOrPublic) {
  if (!addressOrPublic) {
    return '0x';
  }

  const u8aAddress = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aToU8a)(addressOrPublic);
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.assert)([20, 32, 33, 65].includes(u8aAddress.length), 'Invalid address or publicKey passed');
  const address = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.u8aToHex)(getH160(u8aAddress), -1, false);
  const hash = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.u8aToHex)((0,_keccak_index_js__WEBPACK_IMPORTED_MODULE_0__.keccakAsU8a)(address), -1, false);
  let result = '';

  for (let i = 0; i < 40; i++) {
    result = `${result}${parseInt(hash[i], 16) > 7 ? address[i].toUpperCase() : address[i]}`;
  }

  return `0x${result}`;
}

/***/ }),
/* 446 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "secp256k1Expand": () => (/* binding */ secp256k1Expand)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(197);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(121);
/* harmony import */ var _bn_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(448);
/* harmony import */ var _secp256k1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(447);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0



function secp256k1Expand(publicKey) {
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)([33, 65].includes(publicKey.length), 'Invalid publicKey provided');
  const expanded = _secp256k1_js__WEBPACK_IMPORTED_MODULE_1__.secp256k1.keyFromPublic(publicKey).getPublic();
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aConcat)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.bnToU8a)(expanded.getX(), _bn_js__WEBPACK_IMPORTED_MODULE_4__.BN_BE_256_OPTS), (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.bnToU8a)(expanded.getY(), _bn_js__WEBPACK_IMPORTED_MODULE_4__.BN_BE_256_OPTS));
}

/***/ }),
/* 447 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "secp256k1": () => (/* binding */ secp256k1)
/* harmony export */ });
/* harmony import */ var elliptic__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(85);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
 // eslint-disable-next-line new-cap

const secp256k1 = new elliptic__WEBPACK_IMPORTED_MODULE_0__.ec('secp256k1');

/***/ }),
/* 448 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BN_LE_OPTS": () => (/* binding */ BN_LE_OPTS),
/* harmony export */   "BN_LE_16_OPTS": () => (/* binding */ BN_LE_16_OPTS),
/* harmony export */   "BN_BE_32_OPTS": () => (/* binding */ BN_BE_32_OPTS),
/* harmony export */   "BN_LE_32_OPTS": () => (/* binding */ BN_LE_32_OPTS),
/* harmony export */   "BN_BE_256_OPTS": () => (/* binding */ BN_BE_256_OPTS),
/* harmony export */   "BN_LE_256_OPTS": () => (/* binding */ BN_LE_256_OPTS),
/* harmony export */   "BN_LE_512_OPTS": () => (/* binding */ BN_LE_512_OPTS)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
const BN_LE_OPTS = {
  isLe: true
};
const BN_LE_16_OPTS = {
  bitLength: 16,
  isLe: true
};
const BN_BE_32_OPTS = {
  bitLength: 32,
  isLe: false
};
const BN_LE_32_OPTS = {
  bitLength: 32,
  isLe: true
};
const BN_BE_256_OPTS = {
  bitLength: 256,
  isLe: false
};
const BN_LE_256_OPTS = {
  bitLength: 256,
  isLe: true
};
const BN_LE_512_OPTS = {
  bitLength: 512,
  isLe: true
};

/***/ }),
/* 449 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ACCOUNT_ID_PREFIX": () => (/* binding */ ACCOUNT_ID_PREFIX),
/* harmony export */   "GenericEthereumLookupSource": () => (/* binding */ GenericEthereumLookupSource)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(215);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(126);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(237);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(124);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(130);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(196);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(197);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(450);
/* harmony import */ var _codec_Base_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(421);
/* harmony import */ var _generic_AccountIndex_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(456);
/* harmony import */ var _AccountId_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(439);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0




 // eslint-disable-next-line no-use-before-define

const ACCOUNT_ID_PREFIX = new Uint8Array([0xff]);
/** @internal */

function decodeString(registry, value) {
  const decoded = (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_0__.decodeAddress)(value);
  return decoded.length === 20 ? registry.createType('EthereumAccountId', decoded) : registry.createType('AccountIndex', (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToBn)(decoded, true));
}
/** @internal */


function decodeU8a(registry, value) {
  // This allows us to instantiate an address with a raw publicKey. Do this first before
  // we checking the first byte, otherwise we may split an already-existent valid address
  if (value.length === 20) {
    return registry.createType('EthereumAccountId', value);
  } else if (value[0] === 0xff) {
    return registry.createType('EthereumAccountId', value.subarray(1));
  }

  const [offset, length] = _generic_AccountIndex_js__WEBPACK_IMPORTED_MODULE_2__.GenericAccountIndex.readLength(value);
  return registry.createType('AccountIndex', (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToBn)(value.subarray(offset, offset + length), true));
}
/**
 * @name GenericEthereumLookupSource
 * @description
 * A wrapper around an EthereumAccountId and/or AccountIndex that is encoded with a prefix.
 * Since we are dealing with underlying publicKeys (or shorter encoded addresses),
 * we extend from Base with an AccountId/AccountIndex wrapper. Basically the Address
 * is encoded as `[ <prefix-byte>, ...publicKey/...bytes ]` as per spec
 */


class GenericEthereumLookupSource extends _codec_Base_js__WEBPACK_IMPORTED_MODULE_3__.Base {
  constructor(registry, value = new Uint8Array()) {
    super(registry, GenericEthereumLookupSource._decodeAddress(registry, value));
  }
  /** @internal */


  static _decodeAddress(registry, value) {
    return value instanceof GenericEthereumLookupSource ? value._raw : value instanceof _AccountId_js__WEBPACK_IMPORTED_MODULE_4__.GenericEthereumAccountId || value instanceof _generic_AccountIndex_js__WEBPACK_IMPORTED_MODULE_2__.GenericAccountIndex ? value : (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.isU8a)(value) || Array.isArray(value) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.isHex)(value) ? decodeU8a(registry, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_7__.u8aToU8a)(value)) : (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_8__.isBn)(value) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.isNumber)(value) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_10__.isBigInt)(value) ? registry.createType('AccountIndex', value) : decodeString(registry, value);
  }
  /**
   * @description The length of the value when encoded as a Uint8Array
   */


  get encodedLength() {
    const rawLength = this._rawLength;
    return rawLength + ( // for 1 byte AccountIndexes, we are not adding a specific prefix
    rawLength > 1 ? 1 : 0);
  }
  /**
   * @description The length of the raw value, either AccountIndex or AccountId
   */


  get _rawLength() {
    return this._raw instanceof _generic_AccountIndex_js__WEBPACK_IMPORTED_MODULE_2__.GenericAccountIndex ? _generic_AccountIndex_js__WEBPACK_IMPORTED_MODULE_2__.GenericAccountIndex.calcLength(this._raw) : this._raw.encodedLength;
  }
  /**
   * @description Returns a hex string representation of the value
   */


  toHex() {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_11__.u8aToHex)(this.toU8a());
  }
  /**
   * @description Returns the base runtime type name for this instance
   */


  toRawType() {
    return 'Address';
  }
  /**
   * @description Encodes the value as a Uint8Array as per the SCALE specifications
   * @param isBare true when the value has none of the type-specific prefixes (internal)
   */


  toU8a(isBare) {
    const encoded = this._raw.toU8a().subarray(0, this._rawLength);

    return isBare ? encoded : (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_12__.u8aConcat)(this._raw instanceof _generic_AccountIndex_js__WEBPACK_IMPORTED_MODULE_2__.GenericAccountIndex ? _generic_AccountIndex_js__WEBPACK_IMPORTED_MODULE_2__.GenericAccountIndex.writeLength(encoded) : ACCOUNT_ID_PREFIX, encoded);
  }

}

/***/ }),
/* 450 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "decodeAddress": () => (/* binding */ decodeAddress)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(126);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(166);
/* harmony import */ var _base58_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(451);
/* harmony import */ var _checksum_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(454);
/* harmony import */ var _defaults_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(453);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Original implementation: https://github.com/paritytech/polka-ui/blob/4858c094684769080f5811f32b081dd7780b0880/src/polkadot.js#L6




function decodeAddress(encoded, ignoreChecksum, ss58Format = -1) {
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)(encoded, 'Invalid empty address passed');

  if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isU8a)(encoded) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isHex)(encoded)) {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.u8aToU8a)(encoded);
  }

  try {
    const decoded = (0,_base58_index_js__WEBPACK_IMPORTED_MODULE_4__.base58Decode)(encoded);
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)(_defaults_js__WEBPACK_IMPORTED_MODULE_5__.defaults.allowedEncodedLengths.includes(decoded.length), 'Invalid decoded address length');
    const [isValid, endPos, ss58Length, ss58Decoded] = (0,_checksum_js__WEBPACK_IMPORTED_MODULE_6__.checkAddressChecksum)(decoded);
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)(ignoreChecksum || isValid, 'Invalid decoded address checksum');
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)([-1, ss58Decoded].includes(ss58Format), () => `Expected ss58Format ${ss58Format}, received ${ss58Decoded}`);
    return decoded.slice(ss58Length, endPos);
  } catch (error) {
    throw new Error(`Decoding ${encoded}: ${error.message}`);
  }
}

/***/ }),
/* 451 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "base58Validate": () => (/* binding */ base58Validate),
/* harmony export */   "base58Decode": () => (/* binding */ base58Decode),
/* harmony export */   "base58Encode": () => (/* binding */ base58Encode),
/* harmony export */   "isBase58": () => (/* binding */ isBase58)
/* harmony export */ });
/* harmony import */ var micro_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(182);
/* harmony import */ var _base32_helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(452);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0


const BASE58_CONFIG = {
  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz',
  coder: micro_base__WEBPACK_IMPORTED_MODULE_0__.base58,
  ipfsChar: 'z',
  type: 'base58'
};
/**
 * @name base58Validate
 * @summary Validates a base58 value.
 * @description
 * Validates that the supplied value is valid base58, throwing exceptions if not
 */

const base58Validate = (0,_base32_helpers_js__WEBPACK_IMPORTED_MODULE_1__.createValidate)(BASE58_CONFIG);
/**
 * @name base58Decode
 * @summary Decodes a base58 value.
 * @description
 * From the provided input, decode the base58 and return the result as an `Uint8Array`.
 */

const base58Decode = (0,_base32_helpers_js__WEBPACK_IMPORTED_MODULE_1__.createDecode)(BASE58_CONFIG, base58Validate);
/**
* @name base58Encode
* @summary Creates a base58 value.
* @description
* From the provided input, create the base58 and return the result as a string.
*/

const base58Encode = (0,_base32_helpers_js__WEBPACK_IMPORTED_MODULE_1__.createEncode)(BASE58_CONFIG);
/**
* @name isBase58
* @description Checks if the input is in base58, returning true/false
*/

const isBase58 = (0,_base32_helpers_js__WEBPACK_IMPORTED_MODULE_1__.createIs)(base58Validate);

/***/ }),
/* 452 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createDecode": () => (/* binding */ createDecode),
/* harmony export */   "createEncode": () => (/* binding */ createEncode),
/* harmony export */   "createIs": () => (/* binding */ createIs),
/* harmony export */   "createValidate": () => (/* binding */ createValidate)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(80);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
 // NOTE: Work around a TS issue. These are re-defined like in @polkadot/util/types
// since without it the import
//
//   import type { U8aLike } from '@polkadot/util/types';
//
// ends up in the build-generated code as
//
//   impor("../../../util/src/types").U8aLike
//
// eslint-disable-next-line @typescript-eslint/ban-types

function createDecode({
  coder,
  ipfsChar
}, validate) {
  return (value, ipfsCompat) => {
    validate(value, ipfsCompat);
    return coder.decode(ipfsChar && ipfsCompat ? value.substr(1) : value);
  };
}
function createEncode({
  coder,
  ipfsChar
}) {
  return (value, ipfsCompat) => {
    const out = coder.encode((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(value));
    return ipfsChar && ipfsCompat ? `${ipfsChar}${out}` : out;
  };
}
function createIs(validate) {
  return (value, ipfsCompat) => {
    try {
      return validate(value, ipfsCompat);
    } catch (error) {
      return false;
    }
  };
}
function createValidate({
  alphabet,
  ipfsChar,
  regex,
  type
}) {
  return (value, ipfsCompat) => {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(value && typeof value === 'string', () => `Expected non-null, non-empty ${type} string input`);

    if (ipfsChar && ipfsCompat) {
      (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(value[0] === ipfsChar, () => `Expected ipfs-compatible ${type} to start with '${ipfsChar}'`);
    }

    if (regex) {
      (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(regex.test(value), `Invalid ${type} encoding`);
    } else {
      for (let i = ipfsCompat ? 1 : 0; i < value.length; i++) {
        (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(alphabet.includes(value[i]), () => `Invalid ${type} character "${value[i]}" (0x${value.charCodeAt(i).toString(16)}) at index ${i}`);
      }
    }

    return true;
  };
}

/***/ }),
/* 453 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "defaults": () => (/* binding */ defaults)
/* harmony export */ });
/* harmony import */ var _networks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(185);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0


function networkToPrefix({
  prefix
}) {
  return prefix;
}

const defaults = {
  allowedDecodedLengths: [1, 2, 4, 8, 32, 33],
  // publicKey has prefix + 2 checksum bytes, short only prefix + 1 checksum byte
  allowedEncodedLengths: [3, 4, 6, 10, 35, 36, 37, 38],
  allowedPrefix: _networks_js__WEBPACK_IMPORTED_MODULE_0__.availableNetworks.map(networkToPrefix),
  prefix: 42
};

/***/ }),
/* 454 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "checkAddressChecksum": () => (/* binding */ checkAddressChecksum)
/* harmony export */ });
/* harmony import */ var _sshash_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(455);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

function checkAddressChecksum(decoded) {
  const ss58Length = decoded[0] & 0b01000000 ? 2 : 1;
  const ss58Decoded = ss58Length === 1 ? decoded[0] : (decoded[0] & 0b00111111) << 2 | decoded[1] >> 6 | (decoded[1] & 0b00111111) << 8; // 32/33 bytes public + 2 bytes checksum + prefix

  const isPublicKey = [34 + ss58Length, 35 + ss58Length].includes(decoded.length);
  const length = decoded.length - (isPublicKey ? 2 : 1); // calculate the hash and do the checksum byte checks

  const hash = (0,_sshash_js__WEBPACK_IMPORTED_MODULE_0__.sshash)(decoded.subarray(0, length));
  const isValid = (decoded[0] & 0b10000000) === 0 && ![46, 47].includes(decoded[0]) && (isPublicKey ? decoded[decoded.length - 2] === hash[0] && decoded[decoded.length - 1] === hash[1] : decoded[decoded.length - 1] === hash[0]);
  return [isValid, length, ss58Length, ss58Decoded];
}

/***/ }),
/* 455 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "sshash": () => (/* binding */ sshash)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(170);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(197);
/* harmony import */ var _blake2_asU8a_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(327);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0


const SS58_PREFIX = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.stringToU8a)('SS58PRE');
function sshash(key) {
  return (0,_blake2_asU8a_js__WEBPACK_IMPORTED_MODULE_1__.blake2AsU8a)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aConcat)(SS58_PREFIX, key), 512);
}

/***/ }),
/* 456 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GenericAccountIndex": () => (/* binding */ GenericAccountIndex)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(88);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(237);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(124);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(126);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(130);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(125);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(450);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(457);
/* harmony import */ var _primitive_U32_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(365);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0



const PREFIX_1BYTE = 0xef;
const PREFIX_2BYTE = 0xfc;
const PREFIX_4BYTE = 0xfd;
const PREFIX_8BYTE = 0xfe;
const MAX_1BYTE = new _polkadot_util__WEBPACK_IMPORTED_MODULE_0__(PREFIX_1BYTE);
const MAX_2BYTE = new _polkadot_util__WEBPACK_IMPORTED_MODULE_0__(1).shln(16);
const MAX_4BYTE = new _polkadot_util__WEBPACK_IMPORTED_MODULE_0__(1).shln(32);
/** @internal */

function decodeAccountIndex(value) {
  // eslint-disable-next-line @typescript-eslint/no-use-before-define
  if (value instanceof GenericAccountIndex) {
    // `value.toBn()` on AccountIndex returns a pure BN (i.e. not an
    // AccountIndex), which has the initial `toString()` implementation.
    return value.toBn();
  } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isBn)(value) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isNumber)(value) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.isHex)(value) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.isU8a)(value) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.isBigInt)(value)) {
    return value;
  }

  return decodeAccountIndex((0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_6__.decodeAddress)(value));
}
/**
 * @name GenericAccountIndex
 * @description
 * A wrapper around an AccountIndex, which is a shortened, variable-length encoding
 * for an Account. We extends from [[U32]] to provide the number-like properties.
 */


class GenericAccountIndex extends _primitive_U32_js__WEBPACK_IMPORTED_MODULE_7__.u32 {
  constructor(registry, value = new _polkadot_util__WEBPACK_IMPORTED_MODULE_0__(0)) {
    super(registry, decodeAccountIndex(value));
  }

  static calcLength(_value) {
    const value = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_8__.bnToBn)(_value);

    if (value.lte(MAX_1BYTE)) {
      return 1;
    } else if (value.lt(MAX_2BYTE)) {
      return 2;
    } else if (value.lt(MAX_4BYTE)) {
      return 4;
    }

    return 8;
  }

  static readLength(input) {
    const first = input[0];

    if (first === PREFIX_2BYTE) {
      return [1, 2];
    } else if (first === PREFIX_4BYTE) {
      return [1, 4];
    } else if (first === PREFIX_8BYTE) {
      return [1, 8];
    }

    return [0, 1];
  }

  static writeLength(input) {
    switch (input.length) {
      case 2:
        return new Uint8Array([PREFIX_2BYTE]);

      case 4:
        return new Uint8Array([PREFIX_4BYTE]);

      case 8:
        return new Uint8Array([PREFIX_8BYTE]);

      default:
        return new Uint8Array([]);
    }
  }
  /**
   * @description Compares the value of the input to see if there is a match
   */


  eq(other) {
    // shortcut for BN or Number, don't create an object
    if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isBn)(other) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isNumber)(other)) {
      return super.eq(other);
    } // convert and compare


    return super.eq(this.registry.createType('AccountIndex', other));
  }
  /**
   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
   */


  toHuman() {
    return this.toJSON();
  }
  /**
   * @description Converts the Object to JSON, typically used for RPC transfers
   */


  toJSON() {
    return this.toString();
  }
  /**
   * @description Returns the string representation of the value
   */


  toString() {
    const length = GenericAccountIndex.calcLength(this);
    return (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_9__.encodeAddress)(this.toU8a().subarray(0, length), this.registry.chainSS58);
  }
  /**
   * @description Returns the base runtime type name for this instance
   */


  toRawType() {
    return 'AccountIndex';
  }

}

/***/ }),
/* 457 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "encodeAddress": () => (/* binding */ encodeAddress)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(197);
/* harmony import */ var _base58_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(451);
/* harmony import */ var _decode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(450);
/* harmony import */ var _defaults_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(453);
/* harmony import */ var _sshash_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(455);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Original implementation: https://github.com/paritytech/polka-ui/blob/4858c094684769080f5811f32b081dd7780b0880/src/polkadot.js#L34





function encodeAddress(key, ss58Format = _defaults_js__WEBPACK_IMPORTED_MODULE_0__.defaults.prefix) {
  // decode it, this means we can re-encode an address
  const u8a = (0,_decode_js__WEBPACK_IMPORTED_MODULE_1__.decodeAddress)(key);
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.assert)(ss58Format >= 0 && ss58Format <= 16383 && ![46, 47].includes(ss58Format), 'Out of range ss58Format specified');
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.assert)(_defaults_js__WEBPACK_IMPORTED_MODULE_0__.defaults.allowedDecodedLengths.includes(u8a.length), () => `Expected a valid key to convert, with length ${_defaults_js__WEBPACK_IMPORTED_MODULE_0__.defaults.allowedDecodedLengths.join(', ')}`);
  const input = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.u8aConcat)(ss58Format < 64 ? [ss58Format] : [(ss58Format & 0b0000000011111100) >> 2 | 0b01000000, ss58Format >> 8 | (ss58Format & 0b0000000000000011) << 6], u8a);
  return (0,_base58_index_js__WEBPACK_IMPORTED_MODULE_4__.base58Encode)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.u8aConcat)(input, (0,_sshash_js__WEBPACK_IMPORTED_MODULE_5__.sshash)(input).subarray(0, [32, 33].includes(u8a.length) ? 2 : 1)));
}

/***/ }),
/* 458 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GenericAccountId": () => (/* binding */ GenericAccountId)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(126);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(167);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(169);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(450);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(457);
/* harmony import */ var _codec_U8aFixed_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(444);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0



/** @internal */

function decodeAccountId(value) {
  if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.isU8a)(value) || Array.isArray(value)) {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToU8a)(value);
  } else if (!value) {
    return new Uint8Array();
  } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isHex)(value)) {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.hexToU8a)(value);
  } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.isString)(value)) {
    return (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_5__.decodeAddress)(value);
  }

  throw new Error(`Unknown type passed to AccountId constructor, found typeof ${typeof value}`);
}
/**
 * @name GenericAccountId
 * @description
 * A wrapper around an AccountId/PublicKey representation. Since we are dealing with
 * underlying PublicKeys (32 bytes in length), we extend from U8aFixed which is
 * just a Uint8Array wrapper with a fixed length.
 */


class GenericAccountId extends _codec_U8aFixed_js__WEBPACK_IMPORTED_MODULE_6__.U8aFixed {
  constructor(registry, value) {
    const decoded = decodeAccountId(value); // Part of stream containing >= 32 bytes or a all empty (defaults)

    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_7__.assert)(decoded.length >= 32 || !decoded.some(b => b), () => `Invalid AccountId provided, expected 32 bytes, found ${decoded.length}`);
    super(registry, decoded, 256);
  }
  /**
   * @description Compares the value of the input to see if there is a match
   */


  eq(other) {
    return super.eq(decodeAccountId(other));
  }
  /**
   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
   */


  toHuman() {
    return this.toJSON();
  }
  /**
   * @description Converts the Object to JSON, typically used for RPC transfers
   */


  toJSON() {
    return this.toString();
  }
  /**
   * @description Returns the string representation of the value
   */


  toString() {
    return (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_8__.encodeAddress)(this, this.registry.chainSS58);
  }
  /**
   * @description Returns the base runtime type name for this instance
   */


  toRawType() {
    return 'AccountId';
  }

}

/***/ }),
/* 459 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GenericBlock": () => (/* binding */ GenericBlock)
/* harmony export */ });
/* harmony import */ var _codec_Struct_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(319);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0


/**
 * @name GenericBlock
 * @description
 * A block encoded with header and extrinsics
 */
class GenericBlock extends _codec_Struct_js__WEBPACK_IMPORTED_MODULE_0__.Struct {
  constructor(registry, value) {
    super(registry, {
      header: 'Header',
      // eslint-disable-next-line sort-keys
      extrinsics: 'Vec<Extrinsic>'
    }, value);
  }
  /**
   * @description Encodes a content [[Hash]] for the block
   */


  get contentHash() {
    return this.registry.hash(this.toU8a());
  }
  /**
   * @description The [[Extrinsic]] contained in the block
   */


  get extrinsics() {
    return this.get('extrinsics');
  }
  /**
   * @description Block/header [[Hash]]
   */


  get hash() {
    return this.header.hash;
  }
  /**
   * @description The [[Header]] of the block
   */


  get header() {
    return this.get('header');
  }

}

/***/ }),
/* 460 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GenericCallIndex": () => (/* binding */ GenericCallIndex),
/* harmony export */   "GenericCall": () => (/* binding */ GenericCall)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(126);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(286);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(122);
/* harmony import */ var _codec_Struct_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(319);
/* harmony import */ var _codec_U8aFixed_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(444);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0




/**
 * Get a mapping of `argument name -> argument type` for the function, from
 * its metadata.
 *
 * @param meta - The function metadata used to get the definition.
 * @internal
 */
function getArgsDef(registry, meta) {
  return meta.fields.reduce((result, {
    name,
    type
  }, index) => {
    result[name.unwrapOr(`param${index}`).toString()] = registry.createLookupType(type);
    return result;
  }, {});
}
/** @internal */


function decodeCallViaObject(registry, value, _meta) {
  // we only pass args/methodsIndex out
  const {
    args,
    callIndex
  } = value; // Get the correct lookupIndex
  // eslint-disable-next-line @typescript-eslint/no-use-before-define

  const lookupIndex = callIndex instanceof GenericCallIndex ? callIndex.toU8a() : callIndex; // Find metadata with callIndex

  const meta = _meta || registry.findMetaCall(lookupIndex).meta;

  return {
    args,
    argsDef: getArgsDef(registry, meta),
    callIndex,
    meta
  };
}
/** @internal */


function decodeCallViaU8a(registry, value, _meta) {
  // We need 2 bytes for the callIndex
  const callIndex = new Uint8Array(2);
  callIndex.set(value.subarray(0, 2), 0); // Find metadata with callIndex

  const meta = _meta || registry.findMetaCall(callIndex).meta;

  return {
    args: value.subarray(2),
    argsDef: getArgsDef(registry, meta),
    callIndex,
    meta
  };
}
/**
 * Decode input to pass into constructor.
 *
 * @param value - Value to decode, one of:
 * - hex
 * - Uint8Array
 * - {@see DecodeMethodInput}
 * @param _meta - Metadata to use, so that `injectMethods` lookup is not
 * necessary.
 * @internal
 */


function decodeCall(registry, value = new Uint8Array(), _meta) {
  if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.isU8a)(value) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isHex)(value)) {
    return decodeCallViaU8a(registry, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aToU8a)(value), _meta);
  } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.isObject)(value) && value.callIndex && value.args) {
    return decodeCallViaObject(registry, value, _meta);
  }

  throw new Error(`Call: Cannot decode value '${value}' of type ${typeof value}`);
}
/**
 * @name GenericCallIndex
 * @description
 * A wrapper around the `[sectionIndex, methodIndex]` value that uniquely identifies a method
 */


class GenericCallIndex extends _codec_U8aFixed_js__WEBPACK_IMPORTED_MODULE_4__.U8aFixed {
  constructor(registry, value) {
    super(registry, value, 16);
  }

}
/**
 * @name GenericCall
 * @description
 * Extrinsic function descriptor
 */

class GenericCall extends _codec_Struct_js__WEBPACK_IMPORTED_MODULE_5__.Struct {
  constructor(registry, value, meta) {
    const decoded = decodeCall(registry, value, meta);

    try {
      super(registry, {
        callIndex: GenericCallIndex,
        // eslint-disable-next-line sort-keys
        args: _codec_Struct_js__WEBPACK_IMPORTED_MODULE_5__.Struct["with"](decoded.argsDef)
      }, decoded);
      this._meta = void 0;
    } catch (error) {
      let method = 'unknown.unknown';

      try {
        const c = registry.findMetaCall(decoded.callIndex);
        method = `${c.section}.${c.method}`;
      } catch (error) {// ignore
      }

      throw new Error(`Call: failed decoding ${method}:: ${error.message}`);
    }

    this._meta = decoded.meta;
  }
  /**
   * @description The arguments for the function call
   */


  get args() {
    return [...this.get('args').values()];
  }
  /**
   * @description The argument definitions
   */


  get argsDef() {
    return getArgsDef(this.registry, this.meta);
  }
  /**
   * @description The argument entries
   */


  get argsEntries() {
    return [...this.get('args').entries()];
  }
  /**
   * @description The encoded `[sectionIndex, methodIndex]` identifier
   */


  get callIndex() {
    return this.get('callIndex').toU8a();
  }
  /**
   * @description The encoded data
   */


  get data() {
    return this.get('args').toU8a();
  }
  /**
   * @description The [[FunctionMetadata]]
   */


  get meta() {
    return this._meta;
  }
  /**
   * @description Returns the name of the method
   */


  get method() {
    return this.registry.findMetaCall(this.callIndex).method;
  }
  /**
   * @description Returns the module containing the method
   */


  get section() {
    return this.registry.findMetaCall(this.callIndex).section;
  }
  /**
   * @description Checks if the source matches this in type
   */


  is(other) {
    return other.callIndex[0] === this.callIndex[0] && other.callIndex[1] === this.callIndex[1];
  }
  /**
   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
   */


  toHuman(isExpanded) {
    var _call, _call2;

    let call;

    try {
      call = this.registry.findMetaCall(this.callIndex);
    } catch (error) {// swallow
    }

    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.objectSpread)({
      args: this.argsEntries.reduce((args, [n, a]) => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.objectSpread)(args, {
        [n]: a.toHuman(isExpanded)
      }), {}),
      method: (_call = call) === null || _call === void 0 ? void 0 : _call.method,
      section: (_call2 = call) === null || _call2 === void 0 ? void 0 : _call2.section
    }, isExpanded && call ? {
      docs: call.meta.docs.map(d => d.toString())
    } : null);
  }
  /**
   * @description Returns the base runtime type name for this instance
   */


  toRawType() {
    return 'Call';
  }

}

/***/ }),
/* 461 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GenericChainProperties": () => (/* binding */ GenericChainProperties)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(81);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(83);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(82);
/* harmony import */ var _codec_Json_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(361);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0



function createValue(registry, type, value, asArray = true) {
  // We detect codec here as well - when found, generally this is constructed from itself
  if (value && (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.isFunction)(value.unwrapOrDefault)) {
    return value;
  }

  return registry.createType(type, asArray ? (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isNull)(value) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(value) ? null : Array.isArray(value) ? value : [value] : value);
}

function decodeValue(registry, key, value) {
  return key === 'ss58Format' ? createValue(registry, 'Option<u32>', value, false) : key === 'tokenDecimals' ? createValue(registry, 'Option<Vec<u32>>', value) : key === 'tokenSymbol' ? createValue(registry, 'Option<Vec<Text>>', value) : value;
}

function decode(registry, value) {
  return ( // allow decoding from a map as well (ourselves)
  value && (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.isFunction)(value.entries) ? [...value.entries()] : Object.entries(value || {})).reduce((all, [key, value]) => {
    all[key] = decodeValue(registry, key, value);
    return all;
  }, {
    ss58Format: registry.createType('Option<u32>'),
    tokenDecimals: registry.createType('Option<Vec<u32>>'),
    tokenSymbol: registry.createType('Option<Vec<Text>>')
  });
}

class GenericChainProperties extends _codec_Json_js__WEBPACK_IMPORTED_MODULE_3__.Json {
  constructor(registry, value) {
    super(registry, decode(registry, value));
  }
  /**
   * @description The chain ss58Format
   */


  get ss58Format() {
    return this.get('ss58Format');
  }
  /**
   * @description The decimals for each of the tokens
   */


  get tokenDecimals() {
    return this.get('tokenDecimals');
  }
  /**
   * @description The symbols for the tokens
   */


  get tokenSymbol() {
    return this.get('tokenSymbol');
  }

}

/***/ }),
/* 462 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CID_AURA": () => (/* binding */ CID_AURA),
/* harmony export */   "CID_BABE": () => (/* binding */ CID_BABE),
/* harmony export */   "CID_GRPA": () => (/* binding */ CID_GRPA),
/* harmony export */   "CID_POW": () => (/* binding */ CID_POW),
/* harmony export */   "GenericConsensusEngineId": () => (/* binding */ GenericConsensusEngineId)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(170);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(124);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(121);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(88);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(413);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(196);
/* harmony import */ var _codec_U8aFixed_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(444);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0


const CID_AURA = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.stringToU8a)('aura');
const CID_BABE = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.stringToU8a)('BABE');
const CID_GRPA = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.stringToU8a)('FRNK');
const CID_POW = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.stringToU8a)('pow_');
/**
 * @name GenericConsensusEngineId
 * @description
 * A 4-byte identifier identifying the engine
 */

class GenericConsensusEngineId extends _codec_U8aFixed_js__WEBPACK_IMPORTED_MODULE_1__.U8aFixed {
  constructor(registry, value) {
    super(registry, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isNumber)(value) ? (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.bnToU8a)(value, {
      isLe: false
    }) : value, 32);
  }
  /**
   * @description `true` if the engine matches aura
   */


  get isAura() {
    return this.eq(CID_AURA);
  }
  /**
   * @description `true` is the engine matches babe
   */


  get isBabe() {
    return this.eq(CID_BABE);
  }
  /**
   * @description `true` is the engine matches grandpa
   */


  get isGrandpa() {
    return this.eq(CID_GRPA);
  }
  /**
   * @description `true` is the engine matches pow
   */


  get isPow() {
    return this.eq(CID_POW);
  }

  _getAuraAuthor(bytes, sessionValidators) {
    return sessionValidators[this.registry.createType('RawAuraPreDigest', bytes.toU8a(true)).slotNumber.mod(new _polkadot_util__WEBPACK_IMPORTED_MODULE_4__(sessionValidators.length)).toNumber()];
  }

  _getBabeAuthor(bytes, sessionValidators) {
    const digest = this.registry.createType('RawBabePreDigestCompat', bytes.toU8a(true));
    return sessionValidators[digest.value.toNumber()];
  }

  _getBytesAsAuthor(bytes) {
    return this.registry.createType('AccountId', bytes);
  }
  /**
   * @description From the input bytes, decode into an author
   */


  extractAuthor(bytes, sessionValidators) {
    if (sessionValidators !== null && sessionValidators !== void 0 && sessionValidators.length) {
      if (this.isAura) {
        return this._getAuraAuthor(bytes, sessionValidators);
      } else if (this.isBabe) {
        return this._getBabeAuthor(bytes, sessionValidators);
      }
    } // For pow & Moonbeam, the bytes are the actual author


    if (this.isPow || bytes.length === 20) {
      return this._getBytesAsAuthor(bytes);
    }

    return undefined;
  }
  /**
   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
   */


  toHuman() {
    return this.toString();
  }
  /**
   * @description Returns the base runtime type name for this instance
   */


  toRawType() {
    return 'ConsensusEngineId';
  }
  /**
   * @description Override the default toString to return a 4-byte string
   */


  toString() {
    return this.isAscii ? (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.u8aToString)(this) : (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.u8aToHex)(this);
  }

}

/***/ }),
/* 463 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ACCOUNT_ID_PREFIX": () => (/* binding */ ACCOUNT_ID_PREFIX),
/* harmony export */   "GenericLookupSource": () => (/* binding */ GenericLookupSource)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(215);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(237);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(124);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(130);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(126);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(196);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(197);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(450);
/* harmony import */ var _codec_Base_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(421);
/* harmony import */ var _AccountId_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(458);
/* harmony import */ var _AccountIndex_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(456);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0




 // eslint-disable-next-line no-use-before-define

const ACCOUNT_ID_PREFIX = new Uint8Array([0xff]);
/** @internal */

function decodeString(registry, value) {
  const decoded = (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_0__.decodeAddress)(value);
  return decoded.length === 32 ? registry.createType('AccountId', decoded) : registry.createType('AccountIndex', (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToBn)(decoded, true));
}
/** @internal */


function decodeU8a(registry, value) {
  // This allows us to instantiate an address with a raw publicKey. Do this first before
  // we checking the first byte, otherwise we may split an already-existent valid address
  if (value.length === 32) {
    return registry.createType('AccountId', value);
  } else if (value[0] === 0xff) {
    return registry.createType('AccountId', value.subarray(1));
  }

  const [offset, length] = _AccountIndex_js__WEBPACK_IMPORTED_MODULE_2__.GenericAccountIndex.readLength(value);
  return registry.createType('AccountIndex', (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToBn)(value.subarray(offset, offset + length), true));
}
/**
 * @name LookupSource
 * @description
 * A wrapper around an AccountId and/or AccountIndex that is encoded with a prefix.
 * Since we are dealing with underlying publicKeys (or shorter encoded addresses),
 * we extend from Base with an AccountId/AccountIndex wrapper. Basically the Address
 * is encoded as `[ <prefix-byte>, ...publicKey/...bytes ]` as per spec
 */


class GenericLookupSource extends _codec_Base_js__WEBPACK_IMPORTED_MODULE_3__.Base {
  constructor(registry, value = new Uint8Array()) {
    super(registry, GenericLookupSource._decodeAddress(registry, value));
  }
  /** @internal */


  static _decodeAddress(registry, value) {
    return value instanceof GenericLookupSource ? value._raw : value instanceof _AccountId_js__WEBPACK_IMPORTED_MODULE_4__.GenericAccountId || value instanceof _AccountIndex_js__WEBPACK_IMPORTED_MODULE_2__.GenericAccountIndex ? value : (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.isBn)(value) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.isNumber)(value) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_7__.isBigInt)(value) ? registry.createType('AccountIndex', value) : Array.isArray(value) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_8__.isHex)(value) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.isU8a)(value) ? decodeU8a(registry, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_10__.u8aToU8a)(value)) : decodeString(registry, value);
  }
  /**
   * @description The length of the value when encoded as a Uint8Array
   */


  get encodedLength() {
    const rawLength = this._rawLength;
    return rawLength + ( // for 1 byte AccountIndexes, we are not adding a specific prefix
    rawLength > 1 ? 1 : 0);
  }
  /**
   * @description The length of the raw value, either AccountIndex or AccountId
   */


  get _rawLength() {
    return this._raw instanceof _AccountIndex_js__WEBPACK_IMPORTED_MODULE_2__.GenericAccountIndex ? _AccountIndex_js__WEBPACK_IMPORTED_MODULE_2__.GenericAccountIndex.calcLength(this._raw) : this._raw.encodedLength;
  }
  /**
   * @description Returns a hex string representation of the value
   */


  toHex() {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_11__.u8aToHex)(this.toU8a());
  }
  /**
   * @description Returns the base runtime type name for this instance
   */


  toRawType() {
    return 'Address';
  }
  /**
   * @description Encodes the value as a Uint8Array as per the SCALE specifications
   * @param isBare true when the value has none of the type-specific prefixes (internal)
   */


  toU8a(isBare) {
    const encoded = this._raw.toU8a().subarray(0, this._rawLength);

    return isBare ? encoded : (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_12__.u8aConcat)(this._raw instanceof _AccountIndex_js__WEBPACK_IMPORTED_MODULE_2__.GenericAccountIndex ? _AccountIndex_js__WEBPACK_IMPORTED_MODULE_2__.GenericAccountIndex.writeLength(encoded) : ACCOUNT_ID_PREFIX, encoded);
  }

}

/***/ }),
/* 464 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GenericMultiAddress": () => (/* binding */ GenericMultiAddress)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(237);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(124);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(169);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(450);
/* harmony import */ var _codec_Enum_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(426);
/* harmony import */ var _AccountId_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(458);
/* harmony import */ var _AccountIndex_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(456);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0






function decodeU8a(registry, u8a) {
  if ([0, 32].includes(u8a.length)) {
    return {
      Id: u8a
    };
  } else if (u8a.length === 20) {
    return {
      Address20: u8a
    };
  } else if (u8a.length <= 8) {
    return {
      Index: registry.createType('AccountIndex', u8a).toNumber()
    };
  }

  return u8a;
}

function decodeMultiAny(registry, value) {
  if (value instanceof _AccountId_js__WEBPACK_IMPORTED_MODULE_0__.GenericAccountId) {
    return {
      Id: value
    };
  } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isU8a)(value)) {
    // NOTE This is after the AccountId check (which is U8a)
    return decodeU8a(registry, value);
  } else if (value instanceof GenericMultiAddress) {
    return value;
  } else if (value instanceof _AccountIndex_js__WEBPACK_IMPORTED_MODULE_2__.GenericAccountIndex || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.isBn)(value) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.isNumber)(value)) {
    return {
      Index: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.isNumber)(value) ? value : value.toNumber()
    };
  } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.isString)(value)) {
    return decodeU8a(registry, (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_6__.decodeAddress)(value.toString()));
  }

  return value;
}

class GenericMultiAddress extends _codec_Enum_js__WEBPACK_IMPORTED_MODULE_7__.Enum {
  constructor(registry, value) {
    super(registry, {
      Id: 'AccountId',
      Index: 'Compact<AccountIndex>',
      Raw: 'Bytes',
      // eslint-disable-next-line sort-keys
      Address32: 'H256',
      // eslint-disable-next-line sort-keys
      Address20: 'H160'
    }, decodeMultiAny(registry, value));
  }
  /**
   * @description Returns the string representation of the value
   */


  toString() {
    return this.value.toString();
  }

}

/***/ }),
/* 465 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GenericVote": () => (/* binding */ GenericVote)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(82);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(128);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(124);
/* harmony import */ var _codec_U8aFixed_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(444);
/* harmony import */ var _primitive_Bool_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(466);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0



// For votes, the topmost bit indicated aye/nay, the lower bits indicate the conviction
const AYE_BITS = 0b10000000;
const NAY_BITS = 0b00000000;
const CON_MASK = 0b01111111;
const DEF_CONV = 0b00000000; // the default conviction, None

/** @internal */

function decodeVoteBool(value) {
  return value ? new Uint8Array([AYE_BITS | DEF_CONV]) : new Uint8Array([NAY_BITS]);
}
/** @internal */


function decodeVoteU8a(value) {
  return value.length ? value.subarray(0, 1) : new Uint8Array([NAY_BITS]);
}
/** @internal */


function decodeVoteType(registry, value) {
  const vote = new _primitive_Bool_js__WEBPACK_IMPORTED_MODULE_0__.bool(registry, value.aye).isTrue ? AYE_BITS : NAY_BITS;
  const conviction = registry.createType('Conviction', value.conviction || DEF_CONV);
  return new Uint8Array([vote | conviction.index]);
}
/** @internal */


function decodeVote(registry, value) {
  if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isU8a)(value)) {
    return decodeVoteU8a(value);
  } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isUndefined)(value) || value instanceof Boolean || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.isBoolean)(value)) {
    return decodeVoteBool(new _primitive_Bool_js__WEBPACK_IMPORTED_MODULE_0__.bool(registry, value).isTrue);
  } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.isNumber)(value)) {
    return decodeVoteBool(value < 0);
  }

  return decodeVoteType(registry, value);
}
/**
 * @name GenericVote
 * @description
 * A number of lock periods, plus a vote, one way or the other.
 */


class GenericVote extends _codec_U8aFixed_js__WEBPACK_IMPORTED_MODULE_5__.U8aFixed {
  constructor(registry, value) {
    // decoded is just 1 byte
    // Aye: Most Significant Bit
    // Conviction: 0000 - 0101
    const decoded = decodeVote(registry, value);
    super(registry, decoded, 8);
    this._aye = void 0;
    this._conviction = void 0;
    this._aye = (decoded[0] & AYE_BITS) === AYE_BITS;
    this._conviction = this.registry.createType('Conviction', decoded[0] & CON_MASK);
  }
  /**
   * @description returns a V2 conviction
   */


  get conviction() {
    return this._conviction;
  }
  /**
   * @description true if the wrapped value is a positive vote
   */


  get isAye() {
    return this._aye;
  }
  /**
   * @description true if the wrapped value is a negative vote
   */


  get isNay() {
    return !this.isAye;
  }
  /**
   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
   */


  toHuman(isExpanded) {
    return {
      conviction: this.conviction.toHuman(isExpanded),
      vote: this.isAye ? 'Aye' : 'Nay'
    };
  }
  /**
   * @description Returns the base runtime type name for this instance
   */


  toRawType() {
    return 'Vote';
  }

}

/***/ }),
/* 466 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "bool": () => (/* binding */ bool)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(196);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/** @internal */

function decodeBool(value) {
  if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.isU8a)(value)) {
    return value[0] === 1;
  } else if (value instanceof Boolean) {
    return value.valueOf();
  }

  return !!value;
}
/**
 * @name bool
 * @description
 * Representation for a boolean value in the system. It extends the base JS `Boolean` class
 * @noInheritDoc
 */


class bool extends Boolean {
  // eslint-disable-next-line @typescript-eslint/ban-types
  constructor(registry, value = false) {
    super(decodeBool(value));
    this.registry = void 0;
    this.createdAtHash = void 0;
    this.registry = registry;
  }
  /**
   * @description The length of the value when encoded as a Uint8Array
   */


  get encodedLength() {
    return 1;
  }
  /**
   * @description returns a hash of the contents
   */


  get hash() {
    return this.registry.hash(this.toU8a());
  }
  /**
   * @description Checks if the value is an empty value (true when it wraps false/default)
   */


  get isEmpty() {
    return this.isFalse;
  }
  /**
   * @description Checks if the value is an empty value (always false)
   */


  get isFalse() {
    return !this.isTrue;
  }
  /**
   * @description Checks if the value is an empty value (always false)
   */


  get isTrue() {
    return this.valueOf();
  }
  /**
   * @description Compares the value of the input to see if there is a match
   */


  eq(other) {
    return this.valueOf() === (other instanceof Boolean ? other.valueOf() : other);
  }
  /**
   * @description Returns a hex string representation of the value
   */


  toHex() {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToHex)(this.toU8a());
  }
  /**
   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
   */


  toHuman() {
    return this.toJSON();
  }
  /**
   * @description Converts the Object to JSON, typically used for RPC transfers
   */


  toJSON() {
    return this.valueOf();
  }
  /**
   * @description Returns the base runtime type name for this instance
   */


  toRawType() {
    return 'bool';
  }
  /**
   * @description Returns the string representation of the value
   */


  toString() {
    return this.toJSON().toString();
  }
  /**
   * @description Encodes the value as a Uint8Array as per the SCALE specifications
   * @param isBare true when the value has none of the type-specific prefixes (internal)
   */
  // eslint-disable-next-line @typescript-eslint/no-unused-vars


  toU8a(isBare) {
    return new Uint8Array([this.valueOf() ? 1 : 0]);
  }

}

/***/ }),
/* 467 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BitVec": () => (/* reexport safe */ _BitVec_js__WEBPACK_IMPORTED_MODULE_0__.BitVec),
/* harmony export */   "bool": () => (/* reexport safe */ _Bool_js__WEBPACK_IMPORTED_MODULE_1__.bool),
/* harmony export */   "Bool": () => (/* reexport safe */ _Bool_js__WEBPACK_IMPORTED_MODULE_1__.bool),
/* harmony export */   "Bytes": () => (/* reexport safe */ _Bytes_js__WEBPACK_IMPORTED_MODULE_2__.Bytes),
/* harmony export */   "Data": () => (/* reexport safe */ _Data_js__WEBPACK_IMPORTED_MODULE_3__.Data),
/* harmony export */   "i8": () => (/* reexport safe */ _I8_js__WEBPACK_IMPORTED_MODULE_4__.i8),
/* harmony export */   "I8": () => (/* reexport safe */ _I8_js__WEBPACK_IMPORTED_MODULE_4__.i8),
/* harmony export */   "i16": () => (/* reexport safe */ _I16_js__WEBPACK_IMPORTED_MODULE_5__.i16),
/* harmony export */   "I16": () => (/* reexport safe */ _I16_js__WEBPACK_IMPORTED_MODULE_5__.i16),
/* harmony export */   "i32": () => (/* reexport safe */ _I32_js__WEBPACK_IMPORTED_MODULE_6__.i32),
/* harmony export */   "I32": () => (/* reexport safe */ _I32_js__WEBPACK_IMPORTED_MODULE_6__.i32),
/* harmony export */   "i64": () => (/* reexport safe */ _I64_js__WEBPACK_IMPORTED_MODULE_7__.i64),
/* harmony export */   "I64": () => (/* reexport safe */ _I64_js__WEBPACK_IMPORTED_MODULE_7__.i64),
/* harmony export */   "i128": () => (/* reexport safe */ _I128_js__WEBPACK_IMPORTED_MODULE_8__.i128),
/* harmony export */   "I128": () => (/* reexport safe */ _I128_js__WEBPACK_IMPORTED_MODULE_8__.i128),
/* harmony export */   "i256": () => (/* reexport safe */ _I256_js__WEBPACK_IMPORTED_MODULE_9__.i256),
/* harmony export */   "I256": () => (/* reexport safe */ _I256_js__WEBPACK_IMPORTED_MODULE_9__.i256),
/* harmony export */   "Null": () => (/* reexport safe */ _Null_js__WEBPACK_IMPORTED_MODULE_10__.Null),
/* harmony export */   "StorageKey": () => (/* reexport safe */ _StorageKey_js__WEBPACK_IMPORTED_MODULE_11__.StorageKey),
/* harmony export */   "Text": () => (/* reexport safe */ _Text_js__WEBPACK_IMPORTED_MODULE_12__.Text),
/* harmony export */   "Type": () => (/* reexport safe */ _Type_js__WEBPACK_IMPORTED_MODULE_13__.Type),
/* harmony export */   "u8": () => (/* reexport safe */ _U8_js__WEBPACK_IMPORTED_MODULE_14__.u8),
/* harmony export */   "U8": () => (/* reexport safe */ _U8_js__WEBPACK_IMPORTED_MODULE_14__.u8),
/* harmony export */   "u16": () => (/* reexport safe */ _U16_js__WEBPACK_IMPORTED_MODULE_15__.u16),
/* harmony export */   "U16": () => (/* reexport safe */ _U16_js__WEBPACK_IMPORTED_MODULE_15__.u16),
/* harmony export */   "u32": () => (/* reexport safe */ _U32_js__WEBPACK_IMPORTED_MODULE_16__.u32),
/* harmony export */   "U32": () => (/* reexport safe */ _U32_js__WEBPACK_IMPORTED_MODULE_16__.u32),
/* harmony export */   "u64": () => (/* reexport safe */ _U64_js__WEBPACK_IMPORTED_MODULE_17__.u64),
/* harmony export */   "U64": () => (/* reexport safe */ _U64_js__WEBPACK_IMPORTED_MODULE_17__.u64),
/* harmony export */   "u128": () => (/* reexport safe */ _U128_js__WEBPACK_IMPORTED_MODULE_18__.u128),
/* harmony export */   "U128": () => (/* reexport safe */ _U128_js__WEBPACK_IMPORTED_MODULE_18__.u128),
/* harmony export */   "u256": () => (/* reexport safe */ _U256_js__WEBPACK_IMPORTED_MODULE_19__.u256),
/* harmony export */   "U256": () => (/* reexport safe */ _U256_js__WEBPACK_IMPORTED_MODULE_19__.u256),
/* harmony export */   "usize": () => (/* reexport safe */ _USize_js__WEBPACK_IMPORTED_MODULE_20__.usize),
/* harmony export */   "USize": () => (/* reexport safe */ _USize_js__WEBPACK_IMPORTED_MODULE_20__.usize)
/* harmony export */ });
/* harmony import */ var _BitVec_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(468);
/* harmony import */ var _Bool_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(466);
/* harmony import */ var _Bytes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(469);
/* harmony import */ var _Data_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(470);
/* harmony import */ var _I8_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(471);
/* harmony import */ var _I16_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(473);
/* harmony import */ var _I32_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(474);
/* harmony import */ var _I64_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(475);
/* harmony import */ var _I128_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(476);
/* harmony import */ var _I256_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(477);
/* harmony import */ var _Null_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(311);
/* harmony import */ var _StorageKey_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(478);
/* harmony import */ var _Text_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(479);
/* harmony import */ var _Type_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(480);
/* harmony import */ var _U8_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(481);
/* harmony import */ var _U16_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(482);
/* harmony import */ var _U32_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(365);
/* harmony import */ var _U64_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(425);
/* harmony import */ var _U128_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(483);
/* harmony import */ var _U256_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(484);
/* harmony import */ var _USize_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(485);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @summary Type definitions that are used in the system
 */






















/***/ }),
/* 468 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BitVec": () => (/* binding */ BitVec)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(423);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(169);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(239);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(197);
/* harmony import */ var _codec_Raw_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(410);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0


/** @internal */

function decodeBitVecU8a(value) {
  if (!value || !value.length) {
    return [0, new Uint8Array()];
  } // handle all other Uint8Array inputs, these do have a length prefix which is the number of bits encoded


  const [offset, length] = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.compactFromU8a)(value);
  const total = offset + Math.ceil(length.toNumber() / 8);
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(total <= value.length, () => `BitVec: required length less than remainder, expected at least ${total}, found ${value.length}`);
  return [length.toNumber(), value.subarray(offset, total)];
}
/** @internal */


function decodeBitVec(value) {
  if (Array.isArray(value) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isString)(value)) {
    const u8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.u8aToU8a)(value);
    return [u8a.length / 8, u8a];
  }

  return decodeBitVecU8a(value);
}
/**
 * @name BitVec
 * @description
 * A BitVec that represents an array of bits. The bits are however stored encoded. The difference between this
 * and a normal Bytes would be that the length prefix indicates the number of bits encoded, not the bytes
 */


class BitVec extends _codec_Raw_js__WEBPACK_IMPORTED_MODULE_4__.Raw {
  constructor(registry, value) {
    const [decodedLength, u8a] = decodeBitVec(value);
    super(registry, u8a);
    this._decodedLength = void 0;
    this._decodedLength = decodedLength;
  }
  /**
   * @description The length of the value when encoded as a Uint8Array
   */


  get encodedLength() {
    return this.length + (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.compactToU8a)(this._decodedLength).length;
  }

  toHuman() {
    return `0b${[...this.toU8a(true)].map(d => `00000000${d.toString(2)}`.slice(-8)).join('_')}`;
  }
  /**
   * @description Returns the base runtime type name for this instance
   */


  toRawType() {
    return 'BitVec';
  }
  /**
   * @description Encodes the value as a Uint8Array as per the SCALE specifications
   * @param isBare true when the value has none of the type-specific prefixes (internal)
   */


  toU8a(isBare) {
    const bitVec = super.toU8a();
    return isBare ? bitVec : (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.u8aConcat)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.compactToU8a)(this._decodedLength), bitVec);
  }

}

/***/ }),
/* 469 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Bytes": () => (/* binding */ Bytes)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(423);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(169);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(239);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(238);
/* harmony import */ var _codec_Raw_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(410);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

 // Bytes are used for things like on-chain code, so it has a healthy limit

const MAX_LENGTH = 10 * 1024 * 1024;
/** @internal */

function decodeBytesU8a(value) {
  if (!value.length) {
    return [new Uint8Array(), 0];
  } // handle all other Uint8Array inputs, these do have a length prefix


  const [offset, length] = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.compactFromU8a)(value);
  const total = offset + length.toNumber();
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(length.lten(MAX_LENGTH), () => `Bytes length ${length.toString()} exceeds ${MAX_LENGTH}`);
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(total <= value.length, () => `Bytes: required length less than remainder, expected at least ${total}, found ${value.length}`);
  return [value.subarray(offset, total), total];
}
/** @internal */


function decodeBytes(value) {
  if (Array.isArray(value) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isString)(value)) {
    return [(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.u8aToU8a)(value), 0];
  } else if (!(value instanceof _codec_Raw_js__WEBPACK_IMPORTED_MODULE_4__.Raw) && (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.isU8a)(value)) {
    // We are ensuring we are not a Raw instance. In the case of a Raw we already have gotten
    // rid of the length, i.e. new Bytes(new Bytes(...)) will work as expected
    return decodeBytesU8a(value);
  }

  return [value, 0];
}
/**
 * @name Bytes
 * @description
 * A Bytes wrapper for Vec<u8>. The significant difference between this and a normal Uint8Array
 * is that this version allows for length-encoding. (i.e. it is a variable-item codec, the same
 * as what is found in [[Text]] and [[Vec]])
 */


class Bytes extends _codec_Raw_js__WEBPACK_IMPORTED_MODULE_4__.Raw {
  constructor(registry, value) {
    const [u8a, decodedLength] = decodeBytes(value);
    super(registry, u8a, decodedLength);
  }
  /**
   * @description The length of the value when encoded as a Uint8Array
   */


  get encodedLength() {
    return this.length + (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.compactToU8a)(this.length).length;
  }
  /**
   * @description Returns the base runtime type name for this instance
   */


  toRawType() {
    return 'Bytes';
  }
  /**
   * @description Encodes the value as a Uint8Array as per the SCALE specifications
   * @param isBare true when the value has none of the type-specific prefixes (internal)
   */


  toU8a(isBare) {
    return isBare ? super.toU8a(isBare) : (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_7__.compactAddLength)(this);
  }

}

/***/ }),
/* 470 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Data": () => (/* binding */ Data)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(169);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(80);
/* harmony import */ var _codec_Enum_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(426);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0



/** @internal */
function decodeDataU8a(registry, value) {
  const indicator = value[0];

  if (!indicator) {
    return [undefined, undefined];
  } else if (indicator >= 1 && indicator <= 33) {
    const length = indicator - 1;
    const data = value.subarray(1, length + 1); // in this case, we are passing a Raw back (since we have no length)

    return [registry.createType('Raw', data), 1];
  } else if (indicator >= 34 && indicator <= 37) {
    return [value.subarray(1, 32 + 1), indicator - 32]; // 34 becomes 2
  }

  throw new Error(`Unable to decode Data, invalid indicator byte ${indicator}`);
}
/** @internal */


function decodeData(registry, value) {
  if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.isU8a)(value) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isString)(value)) {
    return decodeDataU8a(registry, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aToU8a)(value));
  } else if (!value) {
    return [undefined, undefined];
  } // assume we have an Enum or an  object input, handle this via the normal Enum decoding


  return [value, undefined];
}
/**
 * @name Data
 * @description
 * A [[Data]] container with node, raw or hashed data
 */


class Data extends _codec_Enum_js__WEBPACK_IMPORTED_MODULE_3__.Enum {
  constructor(registry, value) {
    super(registry, {
      None: 'Null',
      // 0
      Raw: 'Bytes',
      // 1
      // eslint-disable-next-line sort-keys
      BlakeTwo256: 'H256',
      // 2
      Sha256: 'H256',
      // 3
      // eslint-disable-next-line sort-keys
      Keccak256: 'H256',
      // 4
      ShaThree256: 'H256' // 5

    }, ...decodeData(registry, value));
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.assert)(!this.isRaw || this.asRaw.length <= 32, 'Data.Raw values are limited to a maximum length of 32 bytes');
  }

  get asBlakeTwo256() {
    return this.value;
  }

  get asKeccak256() {
    return this.value;
  }

  get asRaw() {
    return this.value;
  }

  get asSha256() {
    return this.value;
  }

  get asShaThree256() {
    return this.value;
  }

  get isBlakeTwo256() {
    return this.index === 2;
  }

  get isKeccak256() {
    return this.index === 4;
  }

  get isNone() {
    return this.index === 0;
  }

  get isRaw() {
    return this.index === 1;
  }

  get isSha256() {
    return this.index === 3;
  }

  get isShaThree256() {
    return this.index === 5;
  }
  /**
   * @description The encoded length
   */


  get encodedLength() {
    return this.toU8a().length;
  }
  /**
   * @description Encodes the value as a Uint8Array as per the SCALE specifications
   */


  toU8a() {
    if (this.index === 0) {
      return new Uint8Array(1);
    } else if (this.index === 1) {
      // don't add the length, just the data
      const data = this.value.toU8a(true);
      const length = Math.min(data.length, 32);
      const u8a = new Uint8Array(length + 1);
      u8a.set([length + 1], 0);
      u8a.set(data.subarray(0, length), 1);
      return u8a;
    } // otherwise we simply have a hash


    const u8a = new Uint8Array(33);
    u8a.set([this.index + 32], 0);
    u8a.set(this.value.toU8a(), 1);
    return u8a;
  }

}

/***/ }),
/* 471 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "i8": () => (/* binding */ i8)
/* harmony export */ });
/* harmony import */ var _codec_Int_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(472);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name i8
 * @description
 * An 8-bit signed integer
 */

class i8 extends _codec_Int_js__WEBPACK_IMPORTED_MODULE_0__.Int["with"](8) {
  constructor(...args) {
    super(...args);
    this.__IntType = 'i8';
  }

}

/***/ }),
/* 472 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Int": () => (/* binding */ Int)
/* harmony export */ });
/* harmony import */ var _AbstractInt_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(367);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name Int
 * @description
 * A generic signed integer codec. For Substrate all numbers are Little Endian encoded,
 * this handles the encoding and decoding of those numbers. Upon construction
 * the bitLength is provided and any additional use keeps the number to this
 * length. This extends `BN`, so all methods available on a normal `BN` object
 * is available here.
 * @noInheritDoc
 */

class Int extends _AbstractInt_js__WEBPACK_IMPORTED_MODULE_0__.AbstractInt {
  constructor(registry, value = 0, bitLength) {
    super(registry, value, bitLength, true);
  }

  static with(bitLength, typeName) {
    return class extends Int {
      constructor(registry, value) {
        super(registry, value, bitLength);
      }

      toRawType() {
        return typeName || super.toRawType();
      }

    };
  }

}

/***/ }),
/* 473 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "i16": () => (/* binding */ i16)
/* harmony export */ });
/* harmony import */ var _codec_Int_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(472);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name i16
 * @description
 * A 16-bit signed integer
 */

class i16 extends _codec_Int_js__WEBPACK_IMPORTED_MODULE_0__.Int["with"](16) {
  constructor(...args) {
    super(...args);
    this.__IntType = 'i16';
  }

}

/***/ }),
/* 474 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "i32": () => (/* binding */ i32)
/* harmony export */ });
/* harmony import */ var _codec_Int_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(472);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name i32
 * @description
 * A 32-bit signed integer
 */

class i32 extends _codec_Int_js__WEBPACK_IMPORTED_MODULE_0__.Int["with"](32) {
  constructor(...args) {
    super(...args);
    this.__IntType = 'i32';
  }

}

/***/ }),
/* 475 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "i64": () => (/* binding */ i64)
/* harmony export */ });
/* harmony import */ var _codec_Int_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(472);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name i64
 * @description
 * A 64-bit signed integer
 */

class i64 extends _codec_Int_js__WEBPACK_IMPORTED_MODULE_0__.Int["with"](64) {
  constructor(...args) {
    super(...args);
    this.__IntType = 'i64';
  }

}

/***/ }),
/* 476 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "i128": () => (/* binding */ i128)
/* harmony export */ });
/* harmony import */ var _codec_Int_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(472);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name i128
 * @description
 * A 128-bit signed integer
 */

class i128 extends _codec_Int_js__WEBPACK_IMPORTED_MODULE_0__.Int["with"](128) {
  constructor(...args) {
    super(...args);
    this.__IntType = 'i128';
  }

}

/***/ }),
/* 477 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "i256": () => (/* binding */ i256)
/* harmony export */ });
/* harmony import */ var _codec_Int_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(472);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name i256
 * @description
 * A 256-bit signed integer
 */

class i256 extends _codec_Int_js__WEBPACK_IMPORTED_MODULE_0__.Int["with"](256) {
  constructor(...args) {
    super(...args);
    this.__IntType = 'i256';
  }

}

/***/ }),
/* 478 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "unwrapStorageSi": () => (/* binding */ unwrapStorageSi),
/* harmony export */   "unwrapStorageType": () => (/* binding */ unwrapStorageType),
/* harmony export */   "StorageKey": () => (/* binding */ StorageKey)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(169);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(81);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(80);
/* harmony import */ var _metadata_util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(324);
/* harmony import */ var _Bytes_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(469);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0



// hasher type -> [initialHashLength, canDecodeKey]
const HASHER_MAP = {
  // opaque
  Blake2_128: [16, false],
  // eslint-disable-line camelcase
  Blake2_128Concat: [16, true],
  // eslint-disable-line camelcase
  Blake2_256: [32, false],
  // eslint-disable-line camelcase
  Identity: [0, true],
  Twox128: [16, false],
  Twox256: [32, false],
  Twox64Concat: [8, true]
};
function unwrapStorageSi(type) {
  return type.isPlain ? type.asPlain : type.asMap.value;
}
/** @internal */

function unwrapStorageType(registry, type, isOptional) {
  const outputType = (0,_metadata_util_index_js__WEBPACK_IMPORTED_MODULE_0__.getSiName)(registry.lookup, unwrapStorageSi(type));
  return isOptional ? `Option<${outputType}>` : outputType;
}
/** @internal */

function decodeStorageKey(value) {
  if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isU8a)(value) || !value || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isString)(value)) {
    // let Bytes handle these inputs
    return {
      key: value
    };
  } else if (value instanceof StorageKey) {
    return {
      key: value,
      method: value.method,
      section: value.section
    };
  } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.isFunction)(value)) {
    return {
      key: value(),
      method: value.method,
      section: value.section
    };
  } else if (Array.isArray(value)) {
    const [fn, args = []] = value;
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.assert)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.isFunction)(fn), 'Expected function input for key construction');

    if (fn.meta && fn.meta.type.isMap) {
      const map = fn.meta.type.asMap;
      (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.assert)(Array.isArray(args) && args.length === map.hashers.length, () => `Expected an array of ${map.hashers.length} values as params to a Map query`);
    }

    return {
      key: fn(...args),
      method: fn.method,
      section: fn.section
    };
  }

  throw new Error(`Unable to convert input ${value} to StorageKey`);
}
/** @internal */


function decodeHashers(registry, value, hashers) {
  // the storage entry is xxhashAsU8a(prefix, 128) + xxhashAsU8a(method, 128), 256 bits total
  let offset = 32;
  const result = new Array(hashers.length);

  for (let i = 0; i < hashers.length; i++) {
    const [hasher, type] = hashers[i];
    const [hashLen, canDecode] = HASHER_MAP[hasher.type];
    const decoded = canDecode ? registry.createType(registry.createLookupType(type), value.subarray(offset + hashLen)) : registry.createType('Raw', value.subarray(offset, offset + hashLen));
    offset += hashLen + (canDecode ? decoded.encodedLength : 0);
    result[i] = decoded;
  }

  return result;
}
/** @internal */


function decodeArgsFromMeta(registry, value, meta) {
  if (!meta || !meta.type.isMap) {
    return [];
  }

  const {
    hashers,
    key
  } = meta.type.asMap;
  const keys = hashers.length === 1 ? [key] : registry.lookup.getSiType(key).def.asTuple;
  return decodeHashers(registry, value, hashers.map((h, i) => [h, keys[i]]));
}
/** @internal */


function getMeta(value) {
  if (value instanceof StorageKey) {
    return value.meta;
  } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.isFunction)(value)) {
    return value.meta;
  } else if (Array.isArray(value)) {
    const [fn] = value;
    return fn.meta;
  }

  return undefined;
}
/** @internal */


function getType(registry, value) {
  if (value instanceof StorageKey) {
    return value.outputType;
  } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.isFunction)(value)) {
    return unwrapStorageType(registry, value.meta.type);
  } else if (Array.isArray(value)) {
    const [fn] = value;

    if (fn.meta) {
      return unwrapStorageType(registry, fn.meta.type);
    }
  } // If we have no type set, default to Raw


  return 'Raw';
}
/**
 * @name StorageKey
 * @description
 * A representation of a storage key (typically hashed) in the system. It can be
 * constructed by passing in a raw key or a StorageEntry with (optional) arguments.
 */


class StorageKey extends _Bytes_js__WEBPACK_IMPORTED_MODULE_5__.Bytes {
  // eslint-disable-next-line @typescript-eslint/ban-ts-comment
  // @ts-ignore This is assigned via this.decodeArgsFromMeta()
  constructor(registry, value, override = {}) {
    const {
      key,
      method,
      section
    } = decodeStorageKey(value);
    super(registry, key);
    this._args = void 0;
    this._meta = void 0;
    this._outputType = void 0;
    this._method = void 0;
    this._section = void 0;
    this._outputType = getType(registry, value); // decode the args (as applicable based on the key and the hashers, after all init)

    this.setMeta(getMeta(value), override.section || section, override.method || method);
  }
  /**
   * @description Return the decoded arguments (applicable to map with decodable values)
   */


  get args() {
    return this._args;
  }
  /**
   * @description The metadata or `undefined` when not available
   */


  get meta() {
    return this._meta;
  }
  /**
   * @description The key method or `undefined` when not specified
   */


  get method() {
    return this._method;
  }
  /**
   * @description The output type
   */


  get outputType() {
    return this._outputType;
  }
  /**
   * @description The key section or `undefined` when not specified
   */


  get section() {
    return this._section;
  }

  is(key) {
    return key.section === this.section && key.method === this.method;
  }
  /**
   * @description Sets the meta for this key
   */


  setMeta(meta, section, method) {
    this._meta = meta;
    this._method = method || this._method;
    this._section = section || this._section;

    if (meta) {
      this._outputType = unwrapStorageType(this.registry, meta.type);
    }

    try {
      this._args = decodeArgsFromMeta(this.registry, this.toU8a(true), this.meta);
    } catch (error) {// ignore...
    }

    return this;
  }
  /**
   * @description Returns the Human representation for this type
   */


  toHuman() {
    return this._args.length ? this._args.map(arg => arg.toHuman()) : super.toHuman();
  }
  /**
   * @description Returns the raw type for this
   */


  toRawType() {
    return 'StorageKey';
  }

}

/***/ }),
/* 479 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Text": () => (/* binding */ Text)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(413);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(423);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(126);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(167);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(169);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(196);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(170);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(238);
/* harmony import */ var _codec_Raw_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(410);


// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0


const MAX_LENGTH = 128 * 1024;
/** @internal */

function decodeText(value) {
  if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isU8a)(value)) {
    if (!value.length) {
      return ['', 0];
    } // for Raw, the internal buffer does not have an internal length
    // (the same applies in e.g. Bytes, where length is added at encoding-time)


    if (value instanceof _codec_Raw_js__WEBPACK_IMPORTED_MODULE_3__.Raw) {
      return [(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.u8aToString)(value), 0];
    }

    const [offset, length] = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.compactFromU8a)(value);
    const total = offset + length.toNumber();
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.assert)(length.lten(MAX_LENGTH), () => `Text: length ${length.toString()} exceeds ${MAX_LENGTH}`);
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.assert)(total <= value.length, () => `Text: required length less than remainder, expected at least ${total}, found ${value.length}`);
    return [(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.u8aToString)(value.subarray(offset, total)), total];
  } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_7__.isHex)(value)) {
    return [(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.u8aToString)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_8__.hexToU8a)(value)), 0];
  }

  return [value ? value.toString() : '', 0];
}
/**
 * @name Text
 * @description
 * This is a string wrapper, along with the length. It is used both for strings as well
 * as items such as documentation. It simply extends the standard JS `String` built-in
 * object, inheriting all methods exposed from `String`.
 * @noInheritDoc
 */
// TODO
//   - Strings should probably be trimmed (docs do come through with extra padding)


var _initialU8aLength = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("initialU8aLength");

var _override = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("override");

class Text extends String {
  constructor(registry, value) {
    const [str, decodedLength] = decodeText(value);
    super(str);
    this.registry = void 0;
    this.createdAtHash = void 0;
    Object.defineProperty(this, _initialU8aLength, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _override, {
      writable: true,
      value: null
    });
    this.registry = registry;
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _initialU8aLength)[_initialU8aLength] = decodedLength;
  }
  /**
   * @description The length of the value when encoded as a Uint8Array
   */


  get encodedLength() {
    return this.toU8a().length;
  }
  /**
   * @description The length of the initial encoded value (Only available when constructed from a Uint8Array)
   */


  get initialU8aLength() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _initialU8aLength)[_initialU8aLength];
  }
  /**
   * @description returns a hash of the contents
   */


  get hash() {
    return this.registry.hash(this.toU8a());
  }
  /**
   * @description Checks if the value is an empty value
   */


  get isEmpty() {
    return this.length === 0;
  }
  /**
   * @description The length of the value
   */


  get length() {
    // only included here since we ignore inherited docs
    return super.length;
  }
  /**
   * @description Compares the value of the input to see if there is a match
   */


  eq(other) {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.isString)(other) ? this.toString() === other.toString() : false;
  }
  /**
   * @description Set an override value for this
   */


  setOverride(override) {
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _override)[_override] = override;
  }
  /**
   * @description Returns a hex string representation of the value
   */


  toHex() {
    // like with Vec<u8>, when we are encoding to hex, we don't actually add
    // the length prefix (it is already implied by the actual string length)
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_10__.u8aToHex)(this.toU8a(true));
  }
  /**
   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
   */


  toHuman() {
    return this.toJSON();
  }
  /**
   * @description Converts the Object to JSON, typically used for RPC transfers
   */


  toJSON() {
    return this.toString();
  }
  /**
   * @description Returns the base runtime type name for this instance
   */


  toRawType() {
    return 'Text';
  }
  /**
   * @description Returns the string representation of the value
   */


  toString() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _override)[_override] || super.toString();
  }
  /**
   * @description Encodes the value as a Uint8Array as per the SCALE specifications
   * @param isBare true when the value has none of the type-specific prefixes (internal)
   */


  toU8a(isBare) {
    // NOTE Here we use the super toString (we are not taking overrides into account,
    // rather encoding the original value the string was constructed with)
    const encoded = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_11__.stringToU8a)(super.toString());
    return isBare ? encoded : (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_12__.compactAddLength)(encoded);
  }

}

/***/ }),
/* 480 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Type": () => (/* binding */ Type)
/* harmony export */ });
/* harmony import */ var _create_sanitize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(407);
/* harmony import */ var _Text_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(479);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0


/**
 * @name Type
 * @description
 * This is a extended version of Text, specifically to handle types. Here we rely fully
 * on what Text provides us, however we also adjust the types received from the runtime,
 * i.e. we remove the `T::` prefixes found in some types for consistency across implementation.
 */

class Type extends _Text_js__WEBPACK_IMPORTED_MODULE_0__.Text {
  constructor(registry, value = '') {
    super(registry, value);
    this.setOverride((0,_create_sanitize_js__WEBPACK_IMPORTED_MODULE_1__.sanitize)(this.toString()));
  }
  /**
   * @description Returns the base runtime type name for this instance
   */


  toRawType() {
    return 'Type';
  }

}

/***/ }),
/* 481 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "u8": () => (/* binding */ u8)
/* harmony export */ });
/* harmony import */ var _codec_UInt_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(366);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name u8
 * @description
 * An 8-bit unsigned integer
 */

class u8 extends _codec_UInt_js__WEBPACK_IMPORTED_MODULE_0__.UInt["with"](8) {
  constructor(...args) {
    super(...args);
    this.__UIntType = 'u8';
  }

}

/***/ }),
/* 482 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "u16": () => (/* binding */ u16)
/* harmony export */ });
/* harmony import */ var _codec_UInt_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(366);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name u16
 * @description
 * A 16-bit unsigned integer
 */

class u16 extends _codec_UInt_js__WEBPACK_IMPORTED_MODULE_0__.UInt["with"](16) {
  constructor(...args) {
    super(...args);
    this.__UIntType = 'u16';
  }

}

/***/ }),
/* 483 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "u128": () => (/* binding */ u128)
/* harmony export */ });
/* harmony import */ var _codec_UInt_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(366);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name u128
 * @description
 * A 128-bit unsigned integer
 */

class u128 extends _codec_UInt_js__WEBPACK_IMPORTED_MODULE_0__.UInt["with"](128) {
  constructor(...args) {
    super(...args);
    this.__UIntType = 'u128';
  }

}

/***/ }),
/* 484 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "u256": () => (/* binding */ u256)
/* harmony export */ });
/* harmony import */ var _codec_UInt_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(366);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name u256
 * @description
 * A 256-bit unsigned integer
 */

class u256 extends _codec_UInt_js__WEBPACK_IMPORTED_MODULE_0__.UInt["with"](256) {
  constructor(...args) {
    super(...args);
    this.__UIntType = 'u256';
  }

}

/***/ }),
/* 485 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "usize": () => (/* binding */ usize)
/* harmony export */ });
/* harmony import */ var _U32_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(365);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name USize
 * @description
 * A System default unsigned number, typically used in RPC to report non-consensus
 * data. It is a wrapper for [[U32]] as a WASM default (as generated by Rust bindings).
 * It is not to be used, since it created consensus mismatches.
 */

class usize extends _U32_js__WEBPACK_IMPORTED_MODULE_0__.u32 {
  constructor(registry, value) {
    super(registry, value);
    throw new Error('The `usize` type should not be used. Since it is platform-specific, it creates incompatibilities between native (generally u64) and WASM (always u32) code. Use one of the `u32` or `u64` types explicitly.');
  }

}

/***/ }),
/* 486 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "metadata": () => (/* reexport safe */ _essentials_js__WEBPACK_IMPORTED_MODULE_0__.metadata),
/* harmony export */   "runtime": () => (/* reexport safe */ _essentials_js__WEBPACK_IMPORTED_MODULE_0__.runtime),
/* harmony export */   "scaleInfo": () => (/* reexport safe */ _essentials_js__WEBPACK_IMPORTED_MODULE_0__.scaleInfo),
/* harmony export */   "assets": () => (/* reexport safe */ _assets_definitions_js__WEBPACK_IMPORTED_MODULE_1__["default"]),
/* harmony export */   "authorship": () => (/* reexport safe */ _authorship_definitions_js__WEBPACK_IMPORTED_MODULE_2__["default"]),
/* harmony export */   "aura": () => (/* reexport safe */ _aura_definitions_js__WEBPACK_IMPORTED_MODULE_3__["default"]),
/* harmony export */   "babe": () => (/* reexport safe */ _babe_definitions_js__WEBPACK_IMPORTED_MODULE_4__["default"]),
/* harmony export */   "balances": () => (/* reexport safe */ _balances_definitions_js__WEBPACK_IMPORTED_MODULE_5__["default"]),
/* harmony export */   "beefy": () => (/* reexport safe */ _beefy_definitions_js__WEBPACK_IMPORTED_MODULE_6__["default"]),
/* harmony export */   "collective": () => (/* reexport safe */ _collective_definitions_js__WEBPACK_IMPORTED_MODULE_7__["default"]),
/* harmony export */   "consensus": () => (/* reexport safe */ _consensus_definitions_js__WEBPACK_IMPORTED_MODULE_8__["default"]),
/* harmony export */   "contracts": () => (/* reexport safe */ _contracts_definitions_js__WEBPACK_IMPORTED_MODULE_9__["default"]),
/* harmony export */   "democracy": () => (/* reexport safe */ _democracy_definitions_js__WEBPACK_IMPORTED_MODULE_10__["default"]),
/* harmony export */   "elections": () => (/* reexport safe */ _elections_definitions_js__WEBPACK_IMPORTED_MODULE_11__["default"]),
/* harmony export */   "engine": () => (/* reexport safe */ _engine_definitions_js__WEBPACK_IMPORTED_MODULE_12__["default"]),
/* harmony export */   "evm": () => (/* reexport safe */ _evm_definitions_js__WEBPACK_IMPORTED_MODULE_13__["default"]),
/* harmony export */   "extrinsics": () => (/* reexport safe */ _extrinsics_definitions_js__WEBPACK_IMPORTED_MODULE_14__["default"]),
/* harmony export */   "genericAsset": () => (/* reexport safe */ _genericAsset_definitions_js__WEBPACK_IMPORTED_MODULE_15__["default"]),
/* harmony export */   "gilt": () => (/* reexport safe */ _gilt_definitions_js__WEBPACK_IMPORTED_MODULE_16__["default"]),
/* harmony export */   "grandpa": () => (/* reexport safe */ _grandpa_definitions_js__WEBPACK_IMPORTED_MODULE_17__["default"]),
/* harmony export */   "identity": () => (/* reexport safe */ _identity_definitions_js__WEBPACK_IMPORTED_MODULE_18__["default"]),
/* harmony export */   "imOnline": () => (/* reexport safe */ _imOnline_definitions_js__WEBPACK_IMPORTED_MODULE_19__["default"]),
/* harmony export */   "lottery": () => (/* reexport safe */ _lottery_definitions_js__WEBPACK_IMPORTED_MODULE_20__["default"]),
/* harmony export */   "mmr": () => (/* reexport safe */ _mmr_definitions_js__WEBPACK_IMPORTED_MODULE_21__["default"]),
/* harmony export */   "offences": () => (/* reexport safe */ _offences_definitions_js__WEBPACK_IMPORTED_MODULE_22__["default"]),
/* harmony export */   "proxy": () => (/* reexport safe */ _proxy_definitions_js__WEBPACK_IMPORTED_MODULE_23__["default"]),
/* harmony export */   "recovery": () => (/* reexport safe */ _recovery_definitions_js__WEBPACK_IMPORTED_MODULE_24__["default"]),
/* harmony export */   "scheduler": () => (/* reexport safe */ _scheduler_definitions_js__WEBPACK_IMPORTED_MODULE_25__["default"]),
/* harmony export */   "session": () => (/* reexport safe */ _session_definitions_js__WEBPACK_IMPORTED_MODULE_26__["default"]),
/* harmony export */   "society": () => (/* reexport safe */ _society_definitions_js__WEBPACK_IMPORTED_MODULE_27__["default"]),
/* harmony export */   "staking": () => (/* reexport safe */ _staking_definitions_js__WEBPACK_IMPORTED_MODULE_28__["default"]),
/* harmony export */   "support": () => (/* reexport safe */ _support_definitions_js__WEBPACK_IMPORTED_MODULE_29__["default"]),
/* harmony export */   "syncstate": () => (/* reexport safe */ _syncstate_definitions_js__WEBPACK_IMPORTED_MODULE_30__["default"]),
/* harmony export */   "system": () => (/* reexport safe */ _system_definitions_js__WEBPACK_IMPORTED_MODULE_31__["default"]),
/* harmony export */   "treasury": () => (/* reexport safe */ _treasury_definitions_js__WEBPACK_IMPORTED_MODULE_32__["default"]),
/* harmony export */   "txpayment": () => (/* reexport safe */ _txpayment_definitions_js__WEBPACK_IMPORTED_MODULE_33__["default"]),
/* harmony export */   "uniques": () => (/* reexport safe */ _uniques_definitions_js__WEBPACK_IMPORTED_MODULE_34__["default"]),
/* harmony export */   "utility": () => (/* reexport safe */ _utility_definitions_js__WEBPACK_IMPORTED_MODULE_35__["default"]),
/* harmony export */   "vesting": () => (/* reexport safe */ _vesting_definitions_js__WEBPACK_IMPORTED_MODULE_36__["default"]),
/* harmony export */   "attestations": () => (/* reexport safe */ _attestations_definitions_js__WEBPACK_IMPORTED_MODULE_37__["default"]),
/* harmony export */   "bridges": () => (/* reexport safe */ _bridges_definitions_js__WEBPACK_IMPORTED_MODULE_38__["default"]),
/* harmony export */   "claims": () => (/* reexport safe */ _claims_definitions_js__WEBPACK_IMPORTED_MODULE_39__["default"]),
/* harmony export */   "crowdloan": () => (/* reexport safe */ _crowdloan_definitions_js__WEBPACK_IMPORTED_MODULE_40__["default"]),
/* harmony export */   "cumulus": () => (/* reexport safe */ _cumulus_definitions_js__WEBPACK_IMPORTED_MODULE_41__["default"]),
/* harmony export */   "parachains": () => (/* reexport safe */ _parachains_definitions_js__WEBPACK_IMPORTED_MODULE_42__["default"]),
/* harmony export */   "poll": () => (/* reexport safe */ _poll_definitions_js__WEBPACK_IMPORTED_MODULE_43__["default"]),
/* harmony export */   "purchase": () => (/* reexport safe */ _purchase_definitions_js__WEBPACK_IMPORTED_MODULE_44__["default"]),
/* harmony export */   "xcm": () => (/* reexport safe */ _xcm_definitions_js__WEBPACK_IMPORTED_MODULE_45__["default"]),
/* harmony export */   "contractsAbi": () => (/* reexport safe */ _contractsAbi_definitions_js__WEBPACK_IMPORTED_MODULE_46__["default"]),
/* harmony export */   "eth": () => (/* reexport safe */ _eth_definitions_js__WEBPACK_IMPORTED_MODULE_47__["default"]),
/* harmony export */   "rpc": () => (/* reexport safe */ _rpc_definitions_js__WEBPACK_IMPORTED_MODULE_48__["default"]),
/* harmony export */   "author": () => (/* reexport safe */ _author_definitions_js__WEBPACK_IMPORTED_MODULE_49__["default"]),
/* harmony export */   "chain": () => (/* reexport safe */ _chain_definitions_js__WEBPACK_IMPORTED_MODULE_50__["default"]),
/* harmony export */   "childstate": () => (/* reexport safe */ _childstate_definitions_js__WEBPACK_IMPORTED_MODULE_51__["default"]),
/* harmony export */   "offchain": () => (/* reexport safe */ _offchain_definitions_js__WEBPACK_IMPORTED_MODULE_52__["default"]),
/* harmony export */   "payment": () => (/* reexport safe */ _payment_definitions_js__WEBPACK_IMPORTED_MODULE_53__["default"]),
/* harmony export */   "state": () => (/* reexport safe */ _state_definitions_js__WEBPACK_IMPORTED_MODULE_54__["default"])
/* harmony export */ });
/* harmony import */ var _essentials_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(487);
/* harmony import */ var _assets_definitions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(500);
/* harmony import */ var _authorship_definitions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(501);
/* harmony import */ var _aura_definitions_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(502);
/* harmony import */ var _babe_definitions_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(503);
/* harmony import */ var _balances_definitions_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(504);
/* harmony import */ var _beefy_definitions_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(505);
/* harmony import */ var _collective_definitions_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(506);
/* harmony import */ var _consensus_definitions_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(507);
/* harmony import */ var _contracts_definitions_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(508);
/* harmony import */ var _democracy_definitions_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(509);
/* harmony import */ var _elections_definitions_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(510);
/* harmony import */ var _engine_definitions_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(511);
/* harmony import */ var _evm_definitions_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(512);
/* harmony import */ var _extrinsics_definitions_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(513);
/* harmony import */ var _genericAsset_definitions_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(514);
/* harmony import */ var _gilt_definitions_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(515);
/* harmony import */ var _grandpa_definitions_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(516);
/* harmony import */ var _identity_definitions_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(517);
/* harmony import */ var _imOnline_definitions_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(518);
/* harmony import */ var _lottery_definitions_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(519);
/* harmony import */ var _mmr_definitions_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(520);
/* harmony import */ var _offences_definitions_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(521);
/* harmony import */ var _proxy_definitions_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(522);
/* harmony import */ var _recovery_definitions_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(523);
/* harmony import */ var _scheduler_definitions_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(524);
/* harmony import */ var _session_definitions_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(525);
/* harmony import */ var _society_definitions_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(526);
/* harmony import */ var _staking_definitions_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(527);
/* harmony import */ var _support_definitions_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(528);
/* harmony import */ var _syncstate_definitions_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(529);
/* harmony import */ var _system_definitions_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(530);
/* harmony import */ var _treasury_definitions_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(531);
/* harmony import */ var _txpayment_definitions_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(532);
/* harmony import */ var _uniques_definitions_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(533);
/* harmony import */ var _utility_definitions_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(534);
/* harmony import */ var _vesting_definitions_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(535);
/* harmony import */ var _attestations_definitions_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(536);
/* harmony import */ var _bridges_definitions_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(537);
/* harmony import */ var _claims_definitions_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(538);
/* harmony import */ var _crowdloan_definitions_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(539);
/* harmony import */ var _cumulus_definitions_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(540);
/* harmony import */ var _parachains_definitions_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(541);
/* harmony import */ var _poll_definitions_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(544);
/* harmony import */ var _purchase_definitions_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(545);
/* harmony import */ var _xcm_definitions_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(546);
/* harmony import */ var _contractsAbi_definitions_js__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(550);
/* harmony import */ var _eth_definitions_js__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(551);
/* harmony import */ var _rpc_definitions_js__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(553);
/* harmony import */ var _author_definitions_js__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(554);
/* harmony import */ var _chain_definitions_js__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(555);
/* harmony import */ var _childstate_definitions_js__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(556);
/* harmony import */ var _offchain_definitions_js__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(557);
/* harmony import */ var _payment_definitions_js__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(558);
/* harmony import */ var _state_definitions_js__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(559);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
 // substrate types




































 // polkadot-specific types









 // other useful types


 // pull in rpc last, assuming that is uses info from above

 // rpc-only definitions








/***/ }),
/* 487 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "metadata": () => (/* reexport safe */ _metadata_definitions_js__WEBPACK_IMPORTED_MODULE_0__["default"]),
/* harmony export */   "runtime": () => (/* reexport safe */ _runtime_definitions_js__WEBPACK_IMPORTED_MODULE_1__["default"]),
/* harmony export */   "scaleInfo": () => (/* reexport safe */ _scaleInfo_definitions_js__WEBPACK_IMPORTED_MODULE_2__["default"])
/* harmony export */ });
/* harmony import */ var _metadata_definitions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(488);
/* harmony import */ var _runtime_definitions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(497);
/* harmony import */ var _scaleInfo_definitions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(498);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0




/***/ }),
/* 488 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AllHashers": () => (/* reexport safe */ _hashers_js__WEBPACK_IMPORTED_MODULE_0__.AllHashers),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(122);
/* harmony import */ var _hashers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(489);
/* harmony import */ var _v9_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(490);
/* harmony import */ var _v10_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(491);
/* harmony import */ var _v11_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(492);
/* harmony import */ var _v12_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(493);
/* harmony import */ var _v13_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(494);
/* harmony import */ var _v14_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(495);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */









/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.objectSpread)({}, _v9_js__WEBPACK_IMPORTED_MODULE_2__.v9, _v10_js__WEBPACK_IMPORTED_MODULE_3__.v10, _v11_js__WEBPACK_IMPORTED_MODULE_4__.v11, _v12_js__WEBPACK_IMPORTED_MODULE_5__.v12, _v13_js__WEBPACK_IMPORTED_MODULE_6__.v13, _v14_js__WEBPACK_IMPORTED_MODULE_7__.v14, {
    // latest mappings
    ErrorMetadataLatest: 'ErrorMetadataV14',
    EventMetadataLatest: 'EventMetadataV14',
    ExtrinsicMetadataLatest: 'ExtrinsicMetadataV14',
    FunctionArgumentMetadataLatest: 'FunctionArgumentMetadataV14',
    FunctionMetadataLatest: 'FunctionMetadataV14',
    MetadataLatest: 'MetadataV14',
    PalletCallMetadataLatest: 'PalletCallMetadataV14',
    PalletConstantMetadataLatest: 'PalletConstantMetadataV14',
    PalletErrorMetadataLatest: 'PalletErrorMetadataV14',
    PalletEventMetadataLatest: 'PalletEventMetadataV14',
    PalletMetadataLatest: 'PalletMetadataV14',
    PalletStorageMetadataLatest: 'PalletStorageMetadataV14',
    PortableType: 'PortableTypeV14',
    SignedExtensionMetadataLatest: 'SignedExtensionMetadataV14',
    StorageEntryMetadataLatest: 'StorageEntryMetadataV14',
    StorageEntryModifierLatest: 'StorageEntryModifierV14',
    StorageEntryTypeLatest: 'StorageEntryTypeV14',
    StorageHasher: 'StorageHasherV14',
    // the enum containing all the mappings
    MetadataAll: {
      _enum: {
        V0: 'DoNotConstruct<MetadataV0>',
        V1: 'DoNotConstruct<MetadataV1>',
        V2: 'DoNotConstruct<MetadataV2>',
        V3: 'DoNotConstruct<MetadataV3>',
        V4: 'DoNotConstruct<MetadataV4>',
        V5: 'DoNotConstruct<MetadataV5>',
        V6: 'DoNotConstruct<MetadataV6>',
        V7: 'DoNotConstruct<MetadataV7>',
        V8: 'DoNotConstruct<MetadataV8>',
        // First version on Kusama in V9, dropping will be problematic
        V9: 'MetadataV9',
        V10: 'MetadataV10',
        V11: 'MetadataV11',
        V12: 'MetadataV12',
        V13: 'MetadataV13',
        V14: 'MetadataV14'
      }
    }
  })
});

/***/ }),
/* 489 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AllHashers": () => (/* binding */ AllHashers)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
const AllHashers = {
  Blake2_128: null,
  // eslint-disable-line camelcase
  Blake2_256: null,
  // eslint-disable-line camelcase
  Blake2_128Concat: null,
  // eslint-disable-line camelcase
  Twox128: null,
  Twox256: null,
  Twox64Concat: null,
  // new in v11
  Identity: null
};

/***/ }),
/* 490 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "v9": () => (/* binding */ v9)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
const v9 = {
  // v9
  ErrorMetadataV9: {
    name: 'Text',
    docs: 'Vec<Text>'
  },
  EventMetadataV9: {
    name: 'Text',
    args: 'Vec<Type>',
    docs: 'Vec<Text>'
  },
  FunctionArgumentMetadataV9: {
    name: 'Text',
    type: 'Type'
  },
  FunctionMetadataV9: {
    name: 'Text',
    args: 'Vec<FunctionArgumentMetadataV9>',
    docs: 'Vec<Text>'
  },
  MetadataV9: {
    modules: 'Vec<ModuleMetadataV9>'
  },
  ModuleConstantMetadataV9: {
    name: 'Text',
    type: 'Type',
    value: 'Bytes',
    docs: 'Vec<Text>'
  },
  ModuleMetadataV9: {
    name: 'Text',
    storage: 'Option<StorageMetadataV9>',
    calls: 'Option<Vec<FunctionMetadataV9>>',
    events: 'Option<Vec<EventMetadataV9>>',
    constants: 'Vec<ModuleConstantMetadataV9>',
    errors: 'Vec<ErrorMetadataV9>'
  },
  StorageEntryMetadataV9: {
    name: 'Text',
    modifier: 'StorageEntryModifierV9',
    type: 'StorageEntryTypeV9',
    fallback: 'Bytes',
    docs: 'Vec<Text>'
  },
  StorageEntryModifierV9: {
    _enum: ['Optional', 'Default', 'Required']
  },
  StorageEntryTypeV9: {
    _enum: {
      Plain: 'Type',
      Map: {
        hasher: 'StorageHasherV9',
        key: 'Type',
        value: 'Type',
        linked: 'bool'
      },
      DoubleMap: {
        hasher: 'StorageHasherV9',
        key1: 'Type',
        key2: 'Type',
        value: 'Type',
        key2Hasher: 'StorageHasherV9'
      }
    }
  },
  StorageHasherV9: {
    _enum: {
      Blake2_128: null,
      // eslint-disable-line camelcase
      Blake2_256: null,
      // eslint-disable-line camelcase
      Twox128: null,
      Twox256: null,
      Twox64Concat: null
    }
  },
  StorageMetadataV9: {
    prefix: 'Text',
    items: 'Vec<StorageEntryMetadataV9>'
  }
};

/***/ }),
/* 491 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "v10": () => (/* binding */ v10)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
const v10 = {
  // v10
  ErrorMetadataV10: 'ErrorMetadataV9',
  EventMetadataV10: 'EventMetadataV9',
  FunctionArgumentMetadataV10: 'FunctionArgumentMetadataV9',
  FunctionMetadataV10: 'FunctionMetadataV9',
  MetadataV10: {
    modules: 'Vec<ModuleMetadataV10>'
  },
  ModuleConstantMetadataV10: 'ModuleConstantMetadataV9',
  ModuleMetadataV10: {
    name: 'Text',
    storage: 'Option<StorageMetadataV10>',
    calls: 'Option<Vec<FunctionMetadataV10>>',
    events: 'Option<Vec<EventMetadataV10>>',
    constants: 'Vec<ModuleConstantMetadataV10>',
    errors: 'Vec<ErrorMetadataV10>'
  },
  StorageEntryModifierV10: 'StorageEntryModifierV9',
  StorageEntryMetadataV10: {
    name: 'Text',
    modifier: 'StorageEntryModifierV10',
    type: 'StorageEntryTypeV10',
    fallback: 'Bytes',
    docs: 'Vec<Text>'
  },
  StorageEntryTypeV10: {
    _enum: {
      Plain: 'Type',
      Map: {
        hasher: 'StorageHasherV10',
        key: 'Type',
        value: 'Type',
        linked: 'bool'
      },
      DoubleMap: {
        hasher: 'StorageHasherV10',
        key1: 'Type',
        key2: 'Type',
        value: 'Type',
        key2Hasher: 'StorageHasherV10'
      }
    }
  },
  StorageMetadataV10: {
    prefix: 'Text',
    items: 'Vec<StorageEntryMetadataV10>'
  },
  StorageHasherV10: {
    _enum: {
      Blake2_128: null,
      // eslint-disable-line camelcase
      Blake2_256: null,
      // eslint-disable-line camelcase
      Blake2_128Concat: null,
      // eslint-disable-line camelcase
      Twox128: null,
      Twox256: null,
      Twox64Concat: null
    }
  }
};

/***/ }),
/* 492 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "v11": () => (/* binding */ v11)
/* harmony export */ });
/* harmony import */ var _hashers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(489);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */

const v11 = {
  // v11
  ErrorMetadataV11: 'ErrorMetadataV10',
  EventMetadataV11: 'EventMetadataV10',
  ExtrinsicMetadataV11: {
    version: 'u8',
    signedExtensions: 'Vec<Text>'
  },
  FunctionArgumentMetadataV11: 'FunctionArgumentMetadataV10',
  FunctionMetadataV11: 'FunctionMetadataV10',
  MetadataV11: {
    modules: 'Vec<ModuleMetadataV11>',
    extrinsic: 'ExtrinsicMetadataV11'
  },
  ModuleConstantMetadataV11: 'ModuleConstantMetadataV10',
  ModuleMetadataV11: {
    name: 'Text',
    storage: 'Option<StorageMetadataV11>',
    calls: 'Option<Vec<FunctionMetadataV11>>',
    events: 'Option<Vec<EventMetadataV11>>',
    constants: 'Vec<ModuleConstantMetadataV11>',
    errors: 'Vec<ErrorMetadataV11>'
  },
  StorageEntryModifierV11: 'StorageEntryModifierV10',
  StorageEntryMetadataV11: {
    name: 'Text',
    modifier: 'StorageEntryModifierV11',
    type: 'StorageEntryTypeV11',
    fallback: 'Bytes',
    docs: 'Vec<Text>'
  },
  StorageEntryTypeV11: {
    _enum: {
      Plain: 'Type',
      Map: {
        hasher: 'StorageHasherV11',
        key: 'Type',
        value: 'Type',
        linked: 'bool'
      },
      DoubleMap: {
        hasher: 'StorageHasherV11',
        key1: 'Type',
        key2: 'Type',
        value: 'Type',
        key2Hasher: 'StorageHasherV11'
      }
    }
  },
  StorageMetadataV11: {
    prefix: 'Text',
    items: 'Vec<StorageEntryMetadataV11>'
  },
  StorageHasherV11: {
    _enum: _hashers_js__WEBPACK_IMPORTED_MODULE_0__.AllHashers
  }
};

/***/ }),
/* 493 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "v12": () => (/* binding */ v12)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
const v12 = {
  // v12
  ErrorMetadataV12: 'ErrorMetadataV11',
  EventMetadataV12: 'EventMetadataV11',
  ExtrinsicMetadataV12: 'ExtrinsicMetadataV11',
  FunctionArgumentMetadataV12: 'FunctionArgumentMetadataV11',
  FunctionMetadataV12: 'FunctionMetadataV11',
  MetadataV12: {
    modules: 'Vec<ModuleMetadataV12>',
    extrinsic: 'ExtrinsicMetadataV12'
  },
  ModuleConstantMetadataV12: 'ModuleConstantMetadataV11',
  ModuleMetadataV12: {
    name: 'Text',
    storage: 'Option<StorageMetadataV12>',
    calls: 'Option<Vec<FunctionMetadataV12>>',
    events: 'Option<Vec<EventMetadataV12>>',
    constants: 'Vec<ModuleConstantMetadataV12>',
    errors: 'Vec<ErrorMetadataV12>',
    index: 'u8'
  },
  StorageEntryModifierV12: 'StorageEntryModifierV11',
  StorageEntryMetadataV12: 'StorageEntryMetadataV11',
  StorageEntryTypeV12: 'StorageEntryTypeV11',
  StorageMetadataV12: 'StorageMetadataV11',
  StorageHasherV12: 'StorageHasherV11'
};

/***/ }),
/* 494 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "v13": () => (/* binding */ v13)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
const v13 = {
  // v13
  ErrorMetadataV13: 'ErrorMetadataV12',
  EventMetadataV13: 'EventMetadataV12',
  ExtrinsicMetadataV13: 'ExtrinsicMetadataV12',
  FunctionArgumentMetadataV13: 'FunctionArgumentMetadataV12',
  FunctionMetadataV13: 'FunctionMetadataV12',
  MetadataV13: {
    modules: 'Vec<ModuleMetadataV13>',
    extrinsic: 'ExtrinsicMetadataV13'
  },
  ModuleConstantMetadataV13: 'ModuleConstantMetadataV12',
  ModuleMetadataV13: {
    name: 'Text',
    storage: 'Option<StorageMetadataV13>',
    calls: 'Option<Vec<FunctionMetadataV13>>',
    events: 'Option<Vec<EventMetadataV13>>',
    constants: 'Vec<ModuleConstantMetadataV13>',
    errors: 'Vec<ErrorMetadataV13>',
    index: 'u8'
  },
  StorageEntryModifierV13: 'StorageEntryModifierV12',
  StorageEntryMetadataV13: {
    name: 'Text',
    modifier: 'StorageEntryModifierV13',
    type: 'StorageEntryTypeV13',
    fallback: 'Bytes',
    docs: 'Vec<Text>'
  },
  StorageEntryTypeV13: {
    _enum: {
      Plain: 'Type',
      Map: {
        hasher: 'StorageHasherV13',
        key: 'Type',
        value: 'Type',
        linked: 'bool'
      },
      DoubleMap: {
        hasher: 'StorageHasherV13',
        key1: 'Type',
        key2: 'Type',
        value: 'Type',
        key2Hasher: 'StorageHasherV13'
      },
      NMap: {
        keyVec: 'Vec<Type>',
        hashers: 'Vec<StorageHasherV13>',
        value: 'Type'
      }
    }
  },
  StorageMetadataV13: {
    prefix: 'Text',
    items: 'Vec<StorageEntryMetadataV13>'
  },
  StorageHasherV13: 'StorageHasherV12'
};

/***/ }),
/* 495 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "v14": () => (/* binding */ v14)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(122);
/* harmony import */ var _scaleInfo_v1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(496);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */


const v14 = {
  // registry
  PortableTypeV14: {
    id: 'Si1LookupTypeId',
    type: 'Si1Type'
  },
  // compatibility with earlier layouts, i.e. don't break previous users
  ErrorMetadataV14: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, _scaleInfo_v1_js__WEBPACK_IMPORTED_MODULE_1__.Si1Variant, {
    args: 'Vec<Type>'
  }),
  EventMetadataV14: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, _scaleInfo_v1_js__WEBPACK_IMPORTED_MODULE_1__.Si1Variant, {
    args: 'Vec<Type>'
  }),
  FunctionArgumentMetadataV14: {
    name: 'Text',
    type: 'Type',
    typeName: 'Option<Type>'
  },
  FunctionMetadataV14: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, _scaleInfo_v1_js__WEBPACK_IMPORTED_MODULE_1__.Si1Variant, {
    args: 'Vec<FunctionArgumentMetadataV14>'
  }),
  // V14
  ExtrinsicMetadataV14: {
    type: 'SiLookupTypeId',
    version: 'u8',
    signedExtensions: 'Vec<SignedExtensionMetadataV14>'
  },
  MetadataV14: {
    lookup: 'PortableRegistry',
    pallets: 'Vec<PalletMetadataV14>',
    extrinsic: 'ExtrinsicMetadataV14',
    type: 'SiLookupTypeId'
  },
  PalletCallMetadataV14: {
    type: 'SiLookupTypeId'
  },
  PalletConstantMetadataV14: {
    name: 'Text',
    type: 'SiLookupTypeId',
    value: 'Bytes',
    docs: 'Vec<Text>'
  },
  PalletErrorMetadataV14: {
    type: 'SiLookupTypeId'
  },
  PalletEventMetadataV14: {
    type: 'SiLookupTypeId'
  },
  PalletMetadataV14: {
    name: 'Text',
    storage: 'Option<PalletStorageMetadataV14>',
    calls: 'Option<PalletCallMetadataV14>',
    events: 'Option<PalletEventMetadataV14>',
    constants: 'Vec<PalletConstantMetadataV14>',
    errors: 'Option<PalletErrorMetadataV14>',
    index: 'u8'
  },
  PalletStorageMetadataV14: {
    prefix: 'Text',
    // NOTE: Renamed from entries
    items: 'Vec<StorageEntryMetadataV14>'
  },
  SignedExtensionMetadataV14: {
    identifier: 'Text',
    type: 'SiLookupTypeId',
    additionalSigned: 'SiLookupTypeId'
  },
  StorageEntryMetadataV14: {
    name: 'Text',
    modifier: 'StorageEntryModifierV14',
    type: 'StorageEntryTypeV14',
    fallback: 'Bytes',
    docs: 'Vec<Text>'
  },
  StorageEntryModifierV14: 'StorageEntryModifierV13',
  StorageEntryTypeV14: {
    _enum: {
      Plain: 'SiLookupTypeId',
      Map: {
        hashers: 'Vec<StorageHasherV14>',
        key: 'SiLookupTypeId',
        // NOTE: Renamed from "keys"
        value: 'SiLookupTypeId'
      }
    }
  },
  StorageHasherV14: 'StorageHasherV13'
};

/***/ }),
/* 496 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Si1Variant": () => (/* binding */ Si1Variant),
/* harmony export */   "v1": () => (/* binding */ v1)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
const Si1Variant = {
  name: 'Text',
  fields: 'Vec<Si1Field>',
  index: 'u8',
  docs: 'Vec<Text>'
};
const v1 = {
  Si1Field: {
    name: 'Option<Text>',
    type: 'Si1LookupTypeId',
    typeName: 'Option<Text>',
    docs: 'Vec<Text>'
  },
  Si1LookupTypeId: 'Compact<u32>',
  Si1Path: 'Si0Path',
  Si1Type: {
    path: 'Si1Path',
    params: 'Vec<Si1TypeParameter>',
    def: 'Si1TypeDef',
    docs: 'Vec<Text>'
  },
  Si1TypeDef: {
    _enum: {
      Composite: 'Si1TypeDefComposite',
      Variant: 'Si1TypeDefVariant',
      Sequence: 'Si1TypeDefSequence',
      Array: 'Si1TypeDefArray',
      Tuple: 'Si1TypeDefTuple',
      Primitive: 'Si1TypeDefPrimitive',
      Compact: 'Si1TypeDefCompact',
      BitSequence: 'Si1TypeDefBitSequence',
      // NOTE: This is specific to the implementation for pre-v14 metadata
      // compatibility (always keep this as the last entry in the enum)
      HistoricMetaCompat: 'Type'
    }
  },
  Si1TypeDefArray: {
    len: 'u32',
    type: 'Si1LookupTypeId'
  },
  Si1TypeDefBitSequence: {
    bitStoreType: 'Si1LookupTypeId',
    bitOrderType: 'Si1LookupTypeId'
  },
  Si1TypeDefCompact: {
    type: 'Si1LookupTypeId'
  },
  Si1TypeDefComposite: {
    fields: 'Vec<Si1Field>'
  },
  Si1TypeDefPrimitive: 'Si0TypeDefPrimitive',
  Si1TypeDefSequence: {
    type: 'Si1LookupTypeId'
  },
  Si1TypeDefTuple: 'Vec<Si1LookupTypeId>',
  Si1TypeParameter: {
    name: 'Text',
    type: 'Option<Si1LookupTypeId>'
  },
  Si1TypeDefVariant: {
    variants: 'Vec<Si1Variant>'
  },
  Si1Variant
};

/***/ }),
/* 497 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(122);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */

const numberTypes = {
  Fixed64: 'Int<64, Fixed64>',
  FixedI64: 'Int<64, FixedI64>',
  FixedU64: 'UInt<64, FixedU64>',
  Fixed128: 'Int<128, Fixed128>',
  FixedI128: 'Int<128, FixedI128>',
  FixedU128: 'UInt<128, FixedU128>',
  I32F32: 'Int<64, I32F32>',
  U32F32: 'UInt<64, U32F32>',
  PerU16: 'UInt<16, PerU16>',
  Perbill: 'UInt<32, Perbill>',
  Percent: 'UInt<8, Percent>',
  Permill: 'UInt<32, Permill>',
  Perquintill: 'UInt<64, Perquintill>'
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, numberTypes, {
    AccountId: 'AccountId32',
    AccountId20: 'GenericEthereumAccountId',
    AccountId32: 'GenericAccountId',
    AccountIdOf: 'AccountId',
    AccountIndex: 'GenericAccountIndex',
    Address: 'MultiAddress',
    AssetId: 'u32',
    Balance: 'UInt<128, Balance>',
    BalanceOf: 'Balance',
    Block: 'GenericBlock',
    BlockNumber: 'u32',
    BlockNumberFor: 'BlockNumber',
    BlockNumberOf: 'BlockNumber',
    Call: 'GenericCall',
    CallHash: 'Hash',
    CallHashOf: 'CallHash',
    ChangesTrieConfiguration: {
      digestInterval: 'u32',
      digestLevels: 'u32'
    },
    ChangesTrieSignal: {
      _enum: {
        NewConfiguration: 'Option<ChangesTrieConfiguration>'
      }
    },
    ConsensusEngineId: 'GenericConsensusEngineId',
    CodecHash: 'Hash',
    CrateVersion: {
      major: 'u16',
      minor: 'u8',
      patch: 'u8'
    },
    Digest: {
      logs: 'Vec<DigestItem>'
    },
    DigestItem: {
      _enum: {
        Other: 'Bytes',
        // 0
        AuthoritiesChange: 'Vec<AuthorityId>',
        // 1
        ChangesTrieRoot: 'Hash',
        // 2
        SealV0: 'SealV0',
        // 3
        Consensus: 'Consensus',
        // 4
        Seal: 'Seal',
        // 5
        PreRuntime: 'PreRuntime',
        // 6
        ChangesTrieSignal: 'ChangesTrieSignal',
        // 7
        RuntimeEnvironmentUpdated: 'Null' // 8

      }
    },
    ExtrinsicsWeight: {
      normal: 'Weight',
      operational: 'Weight'
    },
    H32: '[u8; 4; H32]',
    H64: '[u8; 8; H64]',
    H128: '[u8; 16; H128]',
    H160: '[u8; 20; H160]',
    H256: '[u8; 32; H256]',
    H512: '[u8; 64; H512]',
    H1024: '[u8; 128; H1024]',
    H2048: '[u8; 256; H2048]',
    Hash: 'H256',
    Header: {
      parentHash: 'Hash',
      number: 'Compact<BlockNumber>',
      stateRoot: 'Hash',
      extrinsicsRoot: 'Hash',
      digest: 'Digest'
    },
    HeaderPartial: {
      parentHash: 'Hash',
      // since we only parse JSON with this, having non-compact works
      number: 'BlockNumber'
    },
    IndicesLookupSource: 'GenericLookupSource',
    Index: 'u32',
    Justification: '(ConsensusEngineId, EncodedJustification)',
    EncodedJustification: 'Bytes',
    Justifications: 'Vec<Justification>',
    KeyValue: '(StorageKey, StorageData)',
    KeyTypeId: 'u32',
    LockIdentifier: '[u8; 8]',
    LookupSource: 'MultiAddress',
    LookupTarget: 'AccountId',
    ModuleId: 'LockIdentifier',
    MultiAddress: 'GenericMultiAddress',
    MultiSigner: {
      _enum: {
        Ed25519: '[u8; 32]',
        Sr25519: '[u8; 32]',
        Ecdsa: '[u8; 33]'
      }
    },
    Moment: 'UInt<64, Moment>',
    OpaqueCall: 'Bytes',
    Origin: 'DoNotConstruct<Origin>',
    OriginCaller: {
      _enum: {
        // this should be dynamically built from the actual modules, based on index
        System: 'SystemOrigin'
      }
    },
    PalletId: 'LockIdentifier',
    PalletsOrigin: 'OriginCaller',
    PalletVersion: {
      major: 'u16',
      minor: 'u8',
      patch: 'u8'
    },
    Pays: {
      _enum: ['Yes', 'No']
    },
    Phantom: 'Null',
    PhantomData: 'Null',
    Releases: {
      _enum: ['V1', 'V2', 'V3', 'V4', 'V5', 'V6', 'V7', 'V8', 'V9', 'V10']
    },
    RuntimeDbWeight: {
      read: 'Weight',
      write: 'Weight'
    },
    SignedBlock: 'SignedBlockWithJustifications',
    SignedBlockWithJustification: {
      block: 'Block',
      justification: 'Option<EncodedJustification>'
    },
    SignedBlockWithJustifications: {
      block: 'Block',
      justifications: 'Option<Justifications>'
    },
    Slot: 'u64',
    StorageData: 'Bytes',
    StorageProof: {
      trieNodes: 'Vec<Bytes>'
    },
    TransactionPriority: 'u64',
    TransactionInfo: {
      _alias: {
        dataSize: 'size'
      },
      chunkRoot: 'H256',
      contentHash: 'H256',
      dataSize: 'u32',
      blockChunks: 'u32'
    },
    TransactionStorageProof: {
      chunk: 'Vec<u8>',
      proof: 'Vec<Vec<u8>>'
    },
    ValidatorId: 'AccountId',
    ValidatorIdOf: 'ValidatorId',
    Weight: 'u64',
    WeightMultiplier: 'Fixed64',
    // digest
    PreRuntime: '(ConsensusEngineId, Bytes)',
    SealV0: '(u64, Signature)',
    Seal: '(ConsensusEngineId, Bytes)',
    Consensus: '(ConsensusEngineId, Bytes)'
  })
});

/***/ }),
/* 498 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(122);
/* harmony import */ var _v0_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(499);
/* harmony import */ var _v1_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(496);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0


 // order important in structs... :)

/* eslint-disable sort-keys */

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, _v0_js__WEBPACK_IMPORTED_MODULE_1__.v0, _v1_js__WEBPACK_IMPORTED_MODULE_2__.v1, {
    // latest mappings
    SiField: 'Si1Field',
    SiLookupTypeId: 'Si1LookupTypeId',
    SiPath: 'Si1Path',
    SiType: 'Si1Type',
    SiTypeDef: 'Si1TypeDef',
    SiTypeDefArray: 'Si1TypeDefArray',
    SiTypeDefBitSequence: 'Si1TypeDefBitSequence',
    SiTypeDefCompact: 'Si1TypeDefCompact',
    SiTypeDefComposite: 'Si1TypeDefComposite',
    SiTypeDefPrimitive: 'Si1TypeDefPrimitive',
    SiTypeDefSequence: 'Si1TypeDefSequence',
    SiTypeDefTuple: 'Si1TypeDefTuple',
    SiTypeParameter: 'Si1TypeParameter',
    SiTypeDefVariant: 'Si1TypeDefVariant',
    SiVariant: 'Si1Variant'
  })
});

/***/ }),
/* 499 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "v0": () => (/* binding */ v0)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
const v0 = {
  Si0Field: {
    name: 'Option<Text>',
    type: 'Si0LookupTypeId',
    typeName: 'Option<Text>',
    docs: 'Vec<Text>'
  },
  Si0LookupTypeId: 'u32',
  Si0Path: 'Vec<Text>',
  Si0Type: {
    path: 'Si0Path',
    params: 'Vec<Si0LookupTypeId>',
    def: 'Si0TypeDef'
  },
  Si0TypeDef: {
    _enum: {
      Composite: 'Si0TypeDefComposite',
      Variant: 'Si0TypeDefVariant',
      Sequence: 'Si0TypeDefSequence',
      Array: 'Si0TypeDefArray',
      Tuple: 'Si0TypeDefTuple',
      Primitive: 'Si0TypeDefPrimitive',
      Compact: 'Si0TypeDefCompact',
      Phantom: 'Si0TypeDefPhantom',
      BitSequence: 'Si0TypeDefBitSequence'
    }
  },
  Si0TypeDefArray: {
    len: 'u32',
    type: 'Si0LookupTypeId'
  },
  Si0TypeDefBitSequence: {
    bitStoreType: 'Si0LookupTypeId',
    bitOrderType: 'Si0LookupTypeId'
  },
  Si0TypeDefCompact: {
    type: 'Si0LookupTypeId'
  },
  Si0TypeDefComposite: {
    fields: 'Vec<Si0Field>'
  },
  Si0TypeDefPhantom: 'Null',
  Si0TypeDefVariant: {
    variants: 'Vec<Si0Variant>'
  },
  Si0TypeDefPrimitive: {
    _enum: ['Bool', 'Char', 'Str', 'U8', 'U16', 'U32', 'U64', 'U128', 'U256', 'I8', 'I16', 'I32', 'I64', 'I128', 'I256']
  },
  Si0TypeDefSequence: {
    type: 'Si0LookupTypeId'
  },
  Si0TypeDefTuple: 'Vec<Si0LookupTypeId>',
  Si0TypeParameter: {
    name: 'Text',
    type: 'Option<Si0LookupTypeId>'
  },
  Si0Variant: {
    name: 'Text',
    fields: 'Vec<Si0Field>',
    index: 'Option<u8>',
    discriminant: 'Option<u64>',
    docs: 'Vec<Text>'
  }
};

/***/ }),
/* 500 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: {
    AssetApprovalKey: {
      owner: 'AccountId',
      delegate: 'AccountId'
    },
    AssetApproval: {
      amount: 'TAssetBalance',
      deposit: 'TAssetDepositBalance'
    },
    AssetBalance: {
      balance: 'TAssetBalance',
      isFrozen: 'bool',
      isSufficient: 'bool'
    },
    AssetDestroyWitness: {
      accounts: 'Compact<u32>',
      sufficients: 'Compact<u32>',
      approvals: 'Compact<u32>'
    },
    AssetDetails: {
      owner: 'AccountId',
      issuer: 'AccountId',
      admin: 'AccountId',
      freezer: 'AccountId',
      supply: 'TAssetBalance',
      deposit: 'TAssetDepositBalance',
      minBalance: 'TAssetBalance',
      isSufficient: 'bool',
      accounts: 'u32',
      sufficients: 'u32',
      approvals: 'u32',
      isFrozen: 'bool'
    },
    AssetMetadata: {
      deposit: 'TAssetDepositBalance',
      name: 'Vec<u8>',
      symbol: 'Vec<u8>',
      decimals: 'u8',
      isFrozen: 'bool'
    },
    TAssetBalance: 'u64',
    TAssetDepositBalance: 'BalanceOf'
  }
});

/***/ }),
/* 501 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: {
    UncleEntryItem: {
      _enum: {
        InclusionHeight: 'BlockNumber',
        Uncle: '(Hash, Option<AccountId>)'
      }
    }
  }
});

/***/ }),
/* 502 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: {
    RawAuraPreDigest: {
      slotNumber: 'u64'
    }
  }
});

/***/ }),
/* 503 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {
    epochAuthorship: {
      description: 'Returns data about which slots (primary or secondary) can be claimed in the current epoch with the keys in the keystore',
      params: [],
      type: 'HashMap<AuthorityId, EpochAuthorship>'
    }
  },
  types: {
    AllowedSlots: {
      _enum: ['PrimarySlots', 'PrimaryAndSecondaryPlainSlots', 'PrimaryAndSecondaryVRFSlots']
    },
    BabeAuthorityWeight: 'u64',
    BabeEpochConfiguration: {
      c: '(u64, u64)',
      allowedSlots: 'AllowedSlots'
    },
    BabeBlockWeight: 'u32',
    BabeEquivocationProof: {
      offender: 'AuthorityId',
      slotNumber: 'SlotNumber',
      firstHeader: 'Header',
      secondHeader: 'Header'
    },
    BabeWeight: 'u64',
    MaybeRandomness: 'Option<Randomness>',
    MaybeVrf: 'Option<VrfData>',
    EpochAuthorship: {
      primary: 'Vec<u64>',
      secondary: 'Vec<u64>',
      secondary_vrf: 'Vec<u64>'
    },
    NextConfigDescriptor: {
      _enum: {
        V0: 'Null',
        V1: 'NextConfigDescriptorV1'
      }
    },
    NextConfigDescriptorV1: {
      c: '(u64, u64)',
      allowedSlots: 'AllowedSlots'
    },
    Randomness: 'Hash',
    RawBabePreDigest: {
      _enum: {
        Phantom: 'Null',
        // index starts at 1... empty slot at 0
        Primary: 'RawBabePreDigestPrimary',
        SecondaryPlain: 'RawBabePreDigestSecondaryPlain',
        SecondaryVRF: 'RawBabePreDigestSecondaryVRF'
      }
    },
    RawBabePreDigestPrimary: {
      authorityIndex: 'u32',
      // AuthorityIndex (also in aura)
      slotNumber: 'SlotNumber',
      vrfOutput: 'VrfOutput',
      vrfProof: 'VrfProof'
    },
    RawBabePreDigestSecondaryPlain: {
      authorityIndex: 'u32',
      // AuthorityIndex (also in aura)
      slotNumber: 'SlotNumber'
    },
    RawBabePreDigestSecondaryVRF: {
      authorityIndex: 'u32',
      slotNumber: 'SlotNumber',
      vrfOutput: 'VrfOutput',
      vrfProof: 'VrfProof'
    },
    RawBabePreDigestTo159: {
      _enum: {
        Primary: 'RawBabePreDigestPrimaryTo159',
        Secondary: 'RawBabePreDigestSecondaryTo159'
      }
    },
    RawBabePreDigestPrimaryTo159: {
      authorityIndex: 'u32',
      slotNumber: 'SlotNumber',
      weight: 'BabeBlockWeight',
      vrfOutput: 'VrfOutput',
      vrfProof: 'VrfProof'
    },
    RawBabePreDigestSecondaryTo159: {
      authorityIndex: 'u32',
      slotNumber: 'SlotNumber',
      weight: 'BabeBlockWeight'
    },
    // a cross old/new compatible version of the digest, that is _only_ useful
    // for partial parsing and extraction of the author. This assumes that all
    // entries has the authorityIndex in the first position - and that it is all
    // we are interested in
    RawBabePreDigestCompat: {
      _enum: {
        Zero: 'u32',
        One: 'u32',
        Two: 'u32',
        Three: 'u32'
      }
    },
    SlotNumber: 'u64',
    VrfData: '[u8; 32]',
    VrfOutput: '[u8; 32]',
    VrfProof: '[u8; 64]'
  }
});

/***/ }),
/* 504 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: {
    AccountData: {
      free: 'Balance',
      reserved: 'Balance',
      miscFrozen: 'Balance',
      feeFrozen: 'Balance'
    },
    BalanceLockTo212: {
      id: 'LockIdentifier',
      amount: 'Balance',
      until: 'BlockNumber',
      reasons: 'WithdrawReasons'
    },
    BalanceLock: {
      id: 'LockIdentifier',
      amount: 'Balance',
      reasons: 'Reasons'
    },
    BalanceStatus: {
      _enum: ['Free', 'Reserved']
    },
    Reasons: {
      _enum: ['Fee', 'Misc', 'All']
    },
    ReserveData: {
      id: 'ReserveIdentifier',
      amount: 'Balance'
    },
    ReserveIdentifier: '[u8; 8]',
    VestingSchedule: {
      offset: 'Balance',
      perBlock: 'Balance',
      startingBlock: 'BlockNumber'
    },
    WithdrawReasons: {
      _set: {
        TransactionPayment: 0b00000001,
        Transfer: 0b00000010,
        Reserve: 0b00000100,
        Fee: 0b00001000,
        Tip: 0b00010000
      }
    }
  }
});

/***/ }),
/* 505 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {
    subscribeJustifications: {
      description: 'Returns the block most recently finalized by BEEFY, alongside side its justification.',
      params: [],
      pubsub: ['justifications', 'subscribeJustifications', 'unsubscribeJustifications'],
      type: 'BeefySignedCommitment'
    }
  },
  types: {
    BeefyCommitment: {
      payload: 'BeefyPayload',
      blockNumber: 'BlockNumber',
      validatorSetId: 'ValidatorSetId'
    },
    BeefyId: '[u8; 33]',
    BeefySignedCommitment: {
      commitment: 'BeefyCommitment',
      signatures: 'Vec<Option<EcdsaSignature>>'
    },
    BeefyNextAuthoritySet: {
      id: 'u64',
      len: 'u32',
      root: 'H256'
    },
    BeefyPayload: 'MmrRootHash',
    MmrRootHash: 'H256',
    ValidatorSetId: 'u64'
  }
});

/***/ }),
/* 506 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: {
    CollectiveOrigin: {
      _enum: {
        Members: '(MemberCount, MemberCount)',
        Member: 'AccountId'
      }
    },
    MemberCount: 'u32',
    ProposalIndex: 'u32',
    VotesTo230: {
      index: 'ProposalIndex',
      threshold: 'MemberCount',
      ayes: 'Vec<AccountId>',
      nays: 'Vec<AccountId>'
    },
    Votes: {
      index: 'ProposalIndex',
      threshold: 'MemberCount',
      ayes: 'Vec<AccountId>',
      nays: 'Vec<AccountId>',
      end: 'BlockNumber'
    }
  }
});

/***/ }),
/* 507 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: {
    AuthorityId: 'AccountId',
    RawVRFOutput: '[u8; 32]'
  }
});

/***/ }),
/* 508 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {
    call: {
      description: 'Executes a call to a contract',
      params: [{
        name: 'callRequest',
        type: 'ContractCallRequest'
      }, {
        name: 'at',
        type: 'BlockHash',
        isHistoric: true,
        isOptional: true
      }],
      type: 'ContractExecResult'
    },
    instantiate: {
      description: 'Instantiate a new contract',
      params: [{
        name: 'request',
        type: 'InstantiateRequest'
      }, {
        name: 'at',
        type: 'BlockHash',
        isHstoric: true,
        isOptional: true
      }],
      type: 'ContractInstantiateResult'
    },
    getStorage: {
      description: 'Returns the value under a specified storage key in a contract',
      params: [{
        name: 'address',
        type: 'AccountId'
      }, {
        name: 'key',
        type: 'H256'
      }, {
        name: 'at',
        type: 'BlockHash',
        isHistoric: true,
        isOptional: true
      }],
      type: 'Option<Bytes>'
    },
    rentProjection: {
      description: 'Returns the projected time a given contract will be able to sustain paying its rent',
      params: [{
        name: 'address',
        type: 'AccountId'
      }, {
        name: 'at',
        type: 'BlockHash',
        isHistoric: true,
        isOptional: true
      }],
      type: 'Option<BlockNumber>'
    }
  },
  types: {
    AliveContractInfo: {
      trieId: 'TrieId',
      storageSize: 'u32',
      pairCount: 'u32',
      codeHash: 'CodeHash',
      rentAllowance: 'Balance',
      rentPaid: 'Balance',
      deductBlock: 'BlockNumber',
      lastWrite: 'Option<BlockNumber>',
      _reserved: 'Option<Null>'
    },
    CodeHash: 'Hash',
    ContractCallRequest: {
      origin: 'AccountId',
      dest: 'AccountId',
      value: 'Balance',
      gasLimit: 'u64',
      inputData: 'Bytes'
    },
    ContractExecResultSuccessTo255: {
      status: 'u8',
      data: 'Raw'
    },
    ContractExecResultTo255: {
      _enum: {
        Success: 'ContractExecResultSuccessTo255',
        Error: 'Null'
      }
    },
    ContractExecResultSuccessTo260: {
      flags: 'u32',
      data: 'Bytes',
      gasConsumed: 'u64'
    },
    ContractExecResultTo260: {
      _enum: {
        Success: 'ContractExecResultSuccessTo260',
        Error: 'Null'
      }
    },
    ContractExecResultErrModule: {
      index: 'u8',
      error: 'u8',
      message: 'Option<Text>'
    },
    ContractExecResultErr: {
      _enum: {
        Other: 'Text',
        CannotLookup: 'Null',
        BadOrigin: 'Null',
        Module: 'ContractExecResultErrModule'
      }
    },
    ContractExecResultOk: {
      flags: 'u32',
      data: 'Bytes'
    },
    ContractExecResultResult: {
      _enum: {
        Ok: 'ContractExecResultOk',
        Err: 'ContractExecResultErr'
      }
    },
    ContractExecResultTo267: {
      gasConsumed: 'u64',
      debugMessage: 'Text',
      result: 'ContractExecResultResult'
    },
    ContractExecResult: {
      gasConsumed: 'u64',
      gasRequired: 'u64',
      debugMessage: 'Text',
      result: 'ContractExecResultResult'
    },
    ContractInfo: {
      _enum: {
        Alive: 'AliveContractInfo',
        Tombstone: 'TombstoneContractInfo'
      }
    },
    ContractStorageKey: '[u8; 32]',
    DeletedContract: {
      pairCount: 'u32',
      trieId: 'TrieId'
    },
    ExecReturnValue: {
      flags: 'u32',
      data: 'Bytes'
    },
    Gas: 'u64',
    HostFnWeightsTo264: {
      caller: 'Weight',
      address: 'Weight',
      gasLeft: 'Weight',
      balance: 'Weight',
      valueTransferred: 'Weight',
      minimumBalance: 'Weight',
      tombstoneDeposit: 'Weight',
      rentAllowance: 'Weight',
      blockNumber: 'Weight',
      now: 'Weight',
      weightToFee: 'Weight',
      gas: 'Weight',
      input: 'Weight',
      inputPerByte: 'Weight',
      return: 'Weight',
      returnPerByte: 'Weight',
      terminate: 'Weight',
      restoreTo: 'Weight',
      restoreToPerDelta: 'Weight',
      random: 'Weight',
      depositEvent: 'Weight',
      depositEventPerTopic: 'Weight',
      depositEventPerByte: 'Weight',
      setRentAllowance: 'Weight',
      setStorage: 'Weight',
      setStoragePerByte: 'Weight',
      clearStorage: 'Weight',
      getStorage: 'Weight',
      getStoragePerByte: 'Weight',
      transfer: 'Weight',
      call: 'Weight',
      callTransferSurcharge: 'Weight',
      callPerInputByte: 'Weight',
      callPerOutputByte: 'Weight',
      instantiate: 'Weight',
      instantiatePerInputByte: 'Weight',
      instantiatePerOutputByte: 'Weight',
      hashSha2256: 'Weight',
      hashSha2256PerByte: 'Weight',
      hashKeccak256: 'Weight',
      hashKeccak256PerByte: 'Weight',
      hashBlake2256: 'Weight',
      hashBlake2256PerByte: 'Weight',
      hashBlake2128: 'Weight',
      hashBlake2128PerByte: 'Weight'
    },
    HostFnWeights: {
      caller: 'Weight',
      address: 'Weight',
      gasLeft: 'Weight',
      balance: 'Weight',
      valueTransferred: 'Weight',
      minimumBalance: 'Weight',
      tombstoneDeposit: 'Weight',
      rentAllowance: 'Weight',
      blockNumber: 'Weight',
      now: 'Weight',
      weightToFee: 'Weight',
      gas: 'Weight',
      input: 'Weight',
      inputPerByte: 'Weight',
      return: 'Weight',
      returnPerByte: 'Weight',
      terminate: 'Weight',
      terminatePerCodeByte: 'Weight',
      restoreTo: 'Weight',
      restoreToPerCallerCodeByte: 'Weight',
      restoreToPerTombstoneCodeByte: 'Weight',
      restoreToPerDelta: 'Weight',
      random: 'Weight',
      depositEvent: 'Weight',
      depositEventPerTopic: 'Weight',
      depositEventPerByte: 'Weight',
      setRentAllowance: 'Weight',
      setStorage: 'Weight',
      setStoragePerByte: 'Weight',
      clearStorage: 'Weight',
      getStorage: 'Weight',
      getStoragePerByte: 'Weight',
      transfer: 'Weight',
      call: 'Weight',
      callPerCodeByte: 'Weight',
      callTransferSurcharge: 'Weight',
      callPerInputByte: 'Weight',
      callPerOutputByte: 'Weight',
      instantiate: 'Weight',
      instantiatePerCodeByte: 'Weight',
      instantiatePerInputByte: 'Weight',
      instantiatePerOutputByte: 'Weight',
      instantiatePerSaltByte: 'Weight',
      hashSha2256: 'Weight',
      hashSha2256PerByte: 'Weight',
      hashKeccak256: 'Weight',
      hashKeccak256PerByte: 'Weight',
      hashBlake2256: 'Weight',
      hashBlake2256PerByte: 'Weight',
      hashBlake2128: 'Weight',
      hashBlake2128PerByte: 'Weight',
      rentParams: 'Weight'
    },
    InstantiateRequest: {
      origin: 'AccountId',
      endowment: 'Balance',
      gasLimit: 'Gas',
      code: 'Bytes',
      data: 'Bytes',
      salt: 'Bytes'
    },
    ContractInstantiateResultTo267: {
      _enum: {
        Ok: 'InstantiateReturnValueTo267',
        Err: 'Null'
      }
    },
    ContractInstantiateResult: {
      _enum: {
        Ok: 'InstantiateReturnValue',
        Err: 'Null'
      }
    },
    InstantiateReturnValueTo267: {
      result: 'ExecReturnValue',
      accountId: 'AccountId',
      rentProjection: 'Option<RentProjection>'
    },
    InstantiateReturnValue: {
      _fallback: 'InstantiateReturnValueTo267',
      result: 'ExecReturnValue',
      accountId: 'AccountId'
    },
    InstructionWeights: {
      i64const: 'u32',
      i64load: 'u32',
      i64store: 'u32',
      select: 'u32',
      rIf: 'u32',
      br: 'u32',
      brIf: 'u32',
      brIable: 'u32',
      brIablePerEntry: 'u32',
      call: 'u32',
      callIndirect: 'u32',
      callIndirectPerParam: 'u32',
      localGet: 'u32',
      localSet: 'u32',
      local_tee: 'u32',
      globalGet: 'u32',
      globalSet: 'u32',
      memoryCurrent: 'u32',
      memoryGrow: 'u32',
      i64clz: 'u32',
      i64ctz: 'u32',
      i64popcnt: 'u32',
      i64eqz: 'u32',
      i64extendsi32: 'u32',
      i64extendui32: 'u32',
      i32wrapi64: 'u32',
      i64eq: 'u32',
      i64ne: 'u32',
      i64lts: 'u32',
      i64ltu: 'u32',
      i64gts: 'u32',
      i64gtu: 'u32',
      i64les: 'u32',
      i64leu: 'u32',
      i64ges: 'u32',
      i64geu: 'u32',
      i64add: 'u32',
      i64sub: 'u32',
      i64mul: 'u32',
      i64divs: 'u32',
      i64divu: 'u32',
      i64rems: 'u32',
      i64remu: 'u32',
      i64and: 'u32',
      i64or: 'u32',
      i64xor: 'u32',
      i64shl: 'u32',
      i64shrs: 'u32',
      i64shru: 'u32',
      i64rotl: 'u32',
      i64rotr: 'u32'
    },
    LimitsTo264: {
      eventTopics: 'u32',
      stackHeight: 'u32',
      globals: 'u32',
      parameters: 'u32',
      memoryPages: 'u32',
      tableSize: 'u32',
      brTableSize: 'u32',
      subjectLen: 'u32',
      codeSize: 'u32'
    },
    Limits: {
      eventTopics: 'u32',
      stackHeight: 'u32',
      globals: 'u32',
      parameters: 'u32',
      memoryPages: 'u32',
      tableSize: 'u32',
      brTableSize: 'u32',
      subjectLen: 'u32'
    },
    PrefabWasmModule: {
      scheduleVersion: 'Compact<u32>',
      initial: 'Compact<u32>',
      maximum: 'Compact<u32>',
      refcount: 'Compact<u64>',
      _reserved: 'Option<Null>',
      code: 'Bytes',
      originalCodeLen: 'u32'
    },
    RentProjection: {
      _enum: {
        EvictionAt: 'BlockNumber',
        NoEviction: 'Null'
      }
    },
    ScheduleTo212: {
      version: 'u32',
      putCodePerByteCost: 'Gas',
      growMemCost: 'Gas',
      regularOpCost: 'Gas',
      returnDataPerByteCost: 'Gas',
      eventDataPerByteCost: 'Gas',
      eventPerTopicCost: 'Gas',
      eventBaseCost: 'Gas',
      sandboxDataReadCost: 'Gas',
      sandboxDataWriteCost: 'Gas',
      maxEventTopics: 'u32',
      maxStackHeight: 'u32',
      maxMemoryPages: 'u32',
      enablePrintln: 'bool',
      maxSubjectLen: 'u32'
    },
    ScheduleTo258: {
      version: 'u32',
      putCodePerByteCost: 'Gas',
      growMemCost: 'Gas',
      regularOpCost: 'Gas',
      returnDataPerByteCost: 'Gas',
      eventDataPerByteCost: 'Gas',
      eventPerTopicCost: 'Gas',
      eventBaseCost: 'Gas',
      sandboxDataReadCost: 'Gas',
      sandboxDataWriteCost: 'Gas',
      transferCost: 'Gas',
      maxEventTopics: 'u32',
      maxStackHeight: 'u32',
      maxMemoryPages: 'u32',
      enablePrintln: 'bool',
      maxSubjectLen: 'u32'
    },
    ScheduleTo264: {
      version: 'u32',
      enablePrintln: 'bool',
      limits: 'LimitsTo264',
      instructionWeights: 'InstructionWeights',
      hostFnWeights: 'HostFnWeightsTo264'
    },
    Schedule: {
      version: 'u32',
      enablePrintln: 'bool',
      limits: 'Limits',
      instructionWeights: 'InstructionWeights',
      hostFnWeights: 'HostFnWeights'
    },
    SeedOf: 'Hash',
    TombstoneContractInfo: 'Hash',
    TrieId: 'Bytes'
  }
});

/***/ }),
/* 509 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AllConvictions": () => (/* binding */ AllConvictions),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
const AllConvictions = [// 0.1x votes, unlocked.
'None', // 1x votes, locked for an enactment period following a successful vote.
'Locked1x', // 2x votes, locked for 2x enactment periods following a successful vote.
'Locked2x', // 3x votes, locked for 4x...
'Locked3x', // 4x votes, locked for 8x...
'Locked4x', // 5x votes, locked for 16x...
'Locked5x', /// 6x votes, locked for 32x...
'Locked6x'];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: {
    AccountVote: {
      _enum: {
        Standard: 'AccountVoteStandard',
        Split: 'AccountVoteSplit'
      }
    },
    AccountVoteSplit: {
      aye: 'Balance',
      nay: 'Balance'
    },
    AccountVoteStandard: {
      vote: 'Vote',
      balance: 'Balance'
    },
    Conviction: {
      _enum: AllConvictions
    },
    Delegations: {
      votes: 'Balance',
      capital: 'Balance'
    },
    PreimageStatus: {
      _enum: {
        Missing: 'BlockNumber',
        Available: 'PreimageStatusAvailable'
      }
    },
    PreimageStatusAvailable: {
      data: 'Bytes',
      provider: 'AccountId',
      deposit: 'Balance',
      since: 'BlockNumber',
      expiry: 'Option<BlockNumber>'
    },
    PriorLock: '(BlockNumber, Balance)',
    PropIndex: 'u32',
    Proposal: 'Call',
    ProxyState: {
      _enum: {
        Open: 'AccountId',
        Active: 'AccountId'
      }
    },
    ReferendumIndex: 'u32',
    ReferendumInfoTo239: {
      end: 'BlockNumber',
      proposalHash: 'Hash',
      threshold: 'VoteThreshold',
      delay: 'BlockNumber'
    },
    ReferendumInfo: {
      _enum: {
        Ongoing: 'ReferendumStatus',
        Finished: 'ReferendumInfoFinished'
      }
    },
    ReferendumInfoFinished: {
      approved: 'bool',
      end: 'BlockNumber'
    },
    ReferendumStatus: {
      end: 'BlockNumber',
      proposalHash: 'Hash',
      threshold: 'VoteThreshold',
      delay: 'BlockNumber',
      tally: 'Tally'
    },
    Tally: {
      ayes: 'Balance',
      nays: 'Balance',
      turnout: 'Balance'
    },
    Voting: {
      _enum: {
        Direct: 'VotingDirect',
        Delegating: 'VotingDelegating'
      }
    },
    VotingDirect: {
      votes: 'Vec<VotingDirectVote>',
      delegations: 'Delegations',
      prior: 'PriorLock'
    },
    VotingDirectVote: '(ReferendumIndex, AccountVote)',
    VotingDelegating: {
      balance: 'Balance',
      target: 'AccountId',
      conviction: 'Conviction',
      delegations: 'Delegations',
      prior: 'PriorLock'
    }
  }
});

/***/ }),
/* 510 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: {
    ApprovalFlag: 'u32',
    DefunctVoter: {
      who: 'AccountId',
      voteCount: 'Compact<u32>',
      candidateCount: 'Compact<u32>'
    },
    Renouncing: {
      _enum: {
        Member: 'Null',
        RunnerUp: 'Null',
        Candidate: 'Compact<u32>'
      }
    },
    SetIndex: 'u32',
    Vote: 'GenericVote',
    VoteIndex: 'u32',
    VoterInfo: {
      lastActive: 'VoteIndex',
      lastWin: 'VoteIndex',
      pot: 'Balance',
      stake: 'Balance'
    },
    VoteThreshold: {
      _enum: ['Super Majority Approve', 'Super Majority Against', 'Simple Majority']
    }
  }
});

/***/ }),
/* 511 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {
    createBlock: {
      description: 'Instructs the manual-seal authorship task to create a new block',
      params: [{
        name: 'createEmpty',
        type: 'bool'
      }, {
        name: 'finalize',
        type: 'bool'
      }, {
        name: 'parentHash',
        type: 'BlockHash',
        isOptional: true
      }],
      type: 'CreatedBlock'
    },
    finalizeBlock: {
      description: 'Instructs the manual-seal authorship task to finalize a block',
      params: [{
        name: 'hash',
        type: 'BlockHash'
      }, {
        name: 'justification',
        type: 'Justification',
        isOptional: true
      }],
      type: 'bool'
    }
  },
  types: {
    CreatedBlock: {
      hash: 'BlockHash',
      aux: 'ImportedAux'
    },
    ImportedAux: {
      headerOnly: 'bool',
      clearJustificationRequests: 'bool',
      needsJustification: 'bool',
      badJustification: 'bool',
      needsFinalityProof: 'bool',
      isNewBest: 'bool'
    }
  }
});

/***/ }),
/* 512 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: {
    EvmAccount: {
      nonce: 'u256',
      balance: 'u256'
    },
    EvmLog: {
      address: 'H160',
      topics: 'Vec<H256>',
      data: 'Bytes'
    },
    EvmVicinity: {
      gasPrice: 'u256',
      origin: 'H160'
    },
    ExitError: {
      _enum: {
        StackUnderflow: 'Null',
        StackOverflow: 'Null',
        InvalidJump: 'Null',
        InvalidRange: 'Null',
        DesignatedInvalid: 'Null',
        CallTooDeep: 'Null',
        CreateCollision: 'Null',
        CreateContractLimit: 'Null',
        OutOfOffset: 'Null',
        OutOfGas: 'Null',
        OutOfFund: 'Null',
        PCUnderflow: 'Null',
        CreateEmpty: 'Null',
        Other: 'Text'
      }
    },
    ExitFatal: {
      _enum: {
        NotSupported: 'Null',
        UnhandledInterrupt: 'Null',
        CallErrorAsFatal: 'ExitError',
        Other: 'Text'
      }
    },
    ExitReason: {
      _enum: {
        Succeed: 'ExitSucceed',
        Error: 'ExitError',
        Revert: 'ExitRevert',
        Fatal: 'ExitFatal'
      }
    },
    ExitRevert: {
      _enum: ['Reverted']
    },
    ExitSucceed: {
      _enum: ['Stopped', 'Returned', 'Suicided']
    }
  }
});

/***/ }),
/* 513 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: {
    Extrinsic: 'GenericExtrinsic',
    ExtrinsicEra: 'GenericExtrinsicEra',
    ExtrinsicPayload: 'GenericExtrinsicPayload',
    ExtrinsicSignature: 'MultiSignature',
    ExtrinsicV4: 'GenericExtrinsicV4',
    ExtrinsicPayloadV4: 'GenericExtrinsicPayloadV4',
    ExtrinsicSignatureV4: 'GenericExtrinsicSignatureV4',
    ExtrinsicUnknown: 'GenericExtrinsicUnknown',
    ExtrinsicPayloadUnknown: 'GenericExtrinsicPayloadUnknown',
    // eras
    Era: 'ExtrinsicEra',
    ImmortalEra: 'GenericImmortalEra',
    MortalEra: 'GenericMortalEra',
    // signatures & signer
    AnySignature: 'H512',
    MultiSignature: {
      _enum: {
        Ed25519: 'Ed25519Signature',
        Sr25519: 'Sr25519Signature',
        Ecdsa: 'EcdsaSignature'
      }
    },
    Signature: 'H512',
    SignerPayload: 'GenericSignerPayload',
    EcdsaSignature: '[u8; 65]',
    Ed25519Signature: 'H512',
    Sr25519Signature: 'H512'
  }
});

/***/ }),
/* 514 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: {
    AssetOptions: {
      initalIssuance: 'Compact<Balance>',
      permissions: 'PermissionLatest'
    },
    Owner: {
      _enum: {
        None: 'Null',
        Address: 'AccountId'
      }
    },
    PermissionsV1: {
      update: 'Owner',
      mint: 'Owner',
      burn: 'Owner'
    },
    PermissionVersions: {
      _enum: {
        V1: 'PermissionsV1'
      }
    },
    PermissionLatest: 'PermissionsV1'
  }
});

/***/ }),
/* 515 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: {
    ActiveGilt: {
      proportion: 'Perquintill',
      amount: 'Balance',
      who: 'AccountId',
      expiry: 'BlockNumber'
    },
    ActiveGiltsTotal: {
      frozen: 'Balance',
      proportion: 'Perquintill',
      index: 'ActiveIndex',
      target: 'Perquintill'
    },
    ActiveIndex: 'u32',
    GiltBid: {
      amount: 'Balance',
      who: 'AccountId'
    }
  }
});

/***/ }),
/* 516 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {
    proveFinality: {
      description: 'Prove finality for the range (begin; end] hash.',
      params: [{
        name: 'begin',
        type: 'BlockHash'
      }, {
        name: 'end',
        type: 'BlockHash'
      }, {
        name: 'authoritiesSetId',
        type: 'u64',
        isOptional: true
      }],
      type: 'Option<EncodedFinalityProofs>'
    },
    roundState: {
      description: 'Returns the state of the current best round state as well as the ongoing background rounds',
      params: [],
      type: 'ReportedRoundStates'
    },
    subscribeJustifications: {
      description: 'Subscribes to grandpa justifications',
      params: [],
      pubsub: ['justifications', 'subscribeJustifications', 'unsubscribeJustifications'],
      type: 'JustificationNotification'
    }
  },
  types: {
    AuthorityIndex: 'u64',
    AuthorityList: 'Vec<NextAuthority>',
    AuthoritySet: {
      currentAuthorities: 'AuthorityList',
      setId: 'u64',
      pendingStandardChanges: 'ForkTreePendingChange',
      pendingForcedChanges: 'Vec<PendingChange>',
      authoritySetChanges: 'AuthoritySetChanges'
    },
    ForkTreePendingChange: {
      roots: 'Vec<ForkTreePendingChangeNode>',
      bestFinalizedNumber: 'Option<BlockNumber>'
    },
    ForkTreePendingChangeNode: {
      hash: 'BlockHash',
      number: 'BlockNumber',
      data: 'PendingChange',
      // actual data, here PendingChange
      children: 'Vec<ForkTreePendingChangeNode>'
    },
    AuthoritySetChange: '(U64, BlockNumber)',
    AuthoritySetChanges: 'Vec<AuthoritySetChange>',
    AuthorityWeight: 'u64',
    DelayKind: {
      _enum: {
        Finalized: 'Null',
        Best: 'DelayKindBest'
      }
    },
    DelayKindBest: {
      medianLastFinalized: 'BlockNumber'
    },
    EncodedFinalityProofs: 'Bytes',
    GrandpaEquivocation: {
      _enum: {
        Prevote: 'GrandpaEquivocationValue',
        Precommit: 'GrandpaEquivocationValue'
      }
    },
    GrandpaEquivocationProof: {
      setId: 'SetId',
      equivocation: 'GrandpaEquivocation'
    },
    GrandpaEquivocationValue: {
      roundNumber: 'u64',
      identity: 'AuthorityId',
      first: '(GrandpaPrevote, AuthoritySignature)',
      second: '(GrandpaPrevote, AuthoritySignature)'
    },
    GrandpaPrevote: {
      targetHash: 'Hash',
      targetNumber: 'BlockNumber'
    },
    GrandpaCommit: {
      targetHash: 'BlockHash',
      targetNumber: 'BlockNumber',
      precommits: 'Vec<GrandpaSignedPrecommit>'
    },
    GrandpaPrecommit: {
      targetHash: 'BlockHash',
      targetNumber: 'BlockNumber'
    },
    GrandpaSignedPrecommit: {
      precommit: 'GrandpaPrecommit',
      signature: 'AuthoritySignature',
      id: 'AuthorityId'
    },
    GrandpaJustification: {
      round: 'u64',
      commit: 'GrandpaCommit',
      votesAncestries: 'Vec<Header>'
    },
    JustificationNotification: 'Bytes',
    KeyOwnerProof: 'MembershipProof',
    NextAuthority: '(AuthorityId, AuthorityWeight)',
    PendingChange: {
      nextAuthorities: 'AuthorityList',
      delay: 'BlockNumber',
      canonHeight: 'BlockNumber',
      canonHash: 'BlockHash',
      delayKind: 'DelayKind'
    },
    PendingPause: {
      scheduledAt: 'BlockNumber',
      delay: 'BlockNumber'
    },
    PendingResume: {
      scheduledAt: 'BlockNumber',
      delay: 'BlockNumber'
    },
    Precommits: {
      currentWeight: 'u32',
      missing: 'BTreeSet<AuthorityId>'
    },
    Prevotes: {
      currentWeight: 'u32',
      missing: 'BTreeSet<AuthorityId>'
    },
    ReportedRoundStates: {
      setId: 'u32',
      best: 'RoundState',
      background: 'Vec<RoundState>'
    },
    RoundState: {
      round: 'u32',
      totalWeight: 'u32',
      thresholdWeight: 'u32',
      prevotes: 'Prevotes',
      precommits: 'Precommits'
    },
    SetId: 'u64',
    StoredPendingChange: {
      scheduledAt: 'BlockNumber',
      delay: 'BlockNumber',
      nextAuthorities: 'AuthorityList'
    },
    StoredState: {
      _enum: {
        Live: 'Null',
        PendingPause: 'PendingPause',
        Paused: 'Null',
        PendingResume: 'PendingResume'
      }
    }
  }
});

/***/ }),
/* 517 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: {
    IdentityFields: {
      _set: {
        _bitLength: 64,
        // Mapped here to 32 bits, in Rust these are 64-bit values
        Display: 0b00000000000000000000000000000001,
        Legal: 0b00000000000000000000000000000010,
        Web: 0b00000000000000000000000000000100,
        Riot: 0b00000000000000000000000000001000,
        Email: 0b00000000000000000000000000010000,
        PgpFingerprint: 0b00000000000000000000000000100000,
        Image: 0b00000000000000000000000001000000,
        Twitter: 0b00000000000000000000000010000000
      }
    },
    IdentityInfoAdditional: '(Data, Data)',
    IdentityInfoTo198: {
      additional: 'Vec<IdentityInfoAdditional>',
      display: 'Data',
      legal: 'Data',
      web: 'Data',
      riot: 'Data',
      email: 'Data',
      pgpFingerprint: 'Option<H160>',
      image: 'Data'
    },
    IdentityInfo: {
      _fallback: 'IdentityInfoTo198',
      additional: 'Vec<IdentityInfoAdditional>',
      display: 'Data',
      legal: 'Data',
      web: 'Data',
      riot: 'Data',
      email: 'Data',
      pgpFingerprint: 'Option<H160>',
      image: 'Data',
      twitter: 'Data'
    },
    IdentityJudgement: {
      _enum: {
        Unknown: 'Null',
        FeePaid: 'Balance',
        Reasonable: 'Null',
        KnownGood: 'Null',
        OutOfDate: 'Null',
        LowQuality: 'Null',
        Erroneous: 'Null'
      }
    },
    RegistrationJudgement: '(RegistrarIndex, IdentityJudgement)',
    RegistrationTo198: {
      judgements: 'Vec<RegistrationJudgement>',
      deposit: 'Balance',
      info: 'IdentityInfoTo198'
    },
    Registration: {
      _fallback: 'RegistrationTo198',
      judgements: 'Vec<RegistrationJudgement>',
      deposit: 'Balance',
      info: 'IdentityInfo'
    },
    RegistrarIndex: 'u32',
    RegistrarInfo: {
      account: 'AccountId',
      fee: 'Balance',
      fields: 'IdentityFields'
    }
  }
});

/***/ }),
/* 518 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: {
    AuthIndex: 'u32',
    AuthoritySignature: 'Signature',
    Heartbeat: {
      blockNumber: 'BlockNumber',
      networkState: 'OpaqueNetworkState',
      sessionIndex: 'SessionIndex',
      authorityIndex: 'AuthIndex',
      validatorsLen: 'u32'
    },
    HeartbeatTo244: {
      blockNumber: 'BlockNumber',
      networkState: 'OpaqueNetworkState',
      sessionIndex: 'SessionIndex',
      authorityIndex: 'AuthIndex'
    },
    OpaqueMultiaddr: 'Bytes',
    OpaquePeerId: 'Bytes',
    OpaqueNetworkState: {
      peerId: 'OpaquePeerId',
      externalAddresses: 'Vec<OpaqueMultiaddr>'
    }
  }
});

/***/ }),
/* 519 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: {
    CallIndex: '(u8, u8)',
    LotteryConfig: {
      price: 'Balance',
      start: 'BlockNumber',
      length: 'BlockNumber',
      delay: 'BlockNumber',
      repeat: 'bool'
    }
  }
});

/***/ }),
/* 520 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {
    generateProof: {
      description: 'Generate MMR proof for given leaf index.',
      params: [{
        name: 'leafIndex',
        type: 'u64'
      }, {
        name: 'at',
        type: 'BlockHash',
        isHistoric: true,
        isOptional: true
      }],
      type: 'MmrLeafProof'
    }
  },
  types: {
    MmrLeafProof: {
      blockHash: 'BlockHash',
      leaf: 'Bytes',
      proof: 'Bytes'
    }
  }
});

/***/ }),
/* 521 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: {
    DeferredOffenceOf: '(Vec<OffenceDetails>, Vec<Perbill>, SessionIndex)',
    Kind: '[u8; 16]',
    OffenceDetails: {
      offender: 'Offender',
      reporters: 'Vec<Reporter>'
    },
    Offender: 'IdentificationTuple',
    OpaqueTimeSlot: 'Bytes',
    ReportIdOf: 'Hash',
    Reporter: 'AccountId'
  }
});

/***/ }),
/* 522 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: {
    ProxyDefinition: {
      delegate: 'AccountId',
      proxyType: 'ProxyType',
      delay: 'BlockNumber'
    },
    ProxyType: {
      _enum: ['Any', 'NonTransfer', 'Governance', 'Staking']
    },
    ProxyAnnouncement: {
      real: 'AccountId',
      callHash: 'Hash',
      height: 'BlockNumber'
    }
  }
});

/***/ }),
/* 523 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: {
    ActiveRecovery: {
      created: 'BlockNumber',
      deposit: 'Balance',
      friends: 'Vec<AccountId>'
    },
    RecoveryConfig: {
      delayPeriod: 'BlockNumber',
      deposit: 'Balance',
      friends: 'Vec<AccountId>',
      threshold: 'u16'
    }
  }
});

/***/ }),
/* 524 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: {
    Period: '(BlockNumber, u32)',
    Priority: 'u8',
    SchedulePeriod: 'Period',
    SchedulePriority: 'Priority',
    Scheduled: {
      maybeId: 'Option<Bytes>',
      priority: 'SchedulePriority',
      call: 'Call',
      maybePeriodic: 'Option<SchedulePeriod>',
      origin: 'PalletsOrigin'
    },
    ScheduledTo254: {
      maybeId: 'Option<Bytes>',
      priority: 'SchedulePriority',
      call: 'Call',
      maybePeriodic: 'Option<SchedulePeriod>'
    },
    TaskAddress: '(BlockNumber, u32)'
  }
});

/***/ }),
/* 525 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(122);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
 // The runtime definition of SessionKeys are passed as a Trait to session
// Defined in `node/runtime/src/lib.rs` as follow
//   impl_opaque_keys! {
//     pub struct SessionKeys {
// Here we revert to tuples to keep the interfaces "opaque", as per the use

const keyTypes = {
  // key for beefy
  BeefyKey: '[u8; 33]',
  // default to Substrate master defaults, 4 keys (polkadot master, 5 keys)
  Keys: 'SessionKeys4',
  SessionKeys1: '(AccountId)',
  SessionKeys2: '(AccountId, AccountId)',
  SessionKeys3: '(AccountId, AccountId, AccountId)',
  SessionKeys4: '(AccountId, AccountId, AccountId, AccountId)',
  SessionKeys5: '(AccountId, AccountId, AccountId, AccountId, AccountId)',
  SessionKeys6: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',
  SessionKeys6B: '(AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)',
  SessionKeys7: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',
  SessionKeys7B: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)',
  SessionKeys8: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',
  SessionKeys8B: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)',
  SessionKeys9: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',
  SessionKeys9B: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)',
  SessionKeys10: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',
  SessionKeys10B: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)'
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, keyTypes, {
    FullIdentification: 'Exposure',
    IdentificationTuple: '(ValidatorId, FullIdentification)',
    MembershipProof: {
      session: 'SessionIndex',
      trieNodes: 'Vec<Vec<u8>>',
      validatorCount: 'ValidatorCount'
    },
    SessionIndex: 'u32',
    ValidatorCount: 'u32'
  })
});

/***/ }),
/* 526 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: {
    Bid: {
      who: 'AccountId',
      kind: 'BidKind',
      value: 'Balance'
    },
    BidKind: {
      _enum: {
        Deposit: 'Balance',
        Vouch: '(AccountId, Balance)'
      }
    },
    // a society-specific Judgement (not the same as identity Judgement)
    SocietyJudgement: {
      _enum: ['Rebid', 'Reject', 'Approve']
    },
    // a society-specific Vote
    SocietyVote: {
      _enum: ['Skeptic', 'Reject', 'Approve']
    },
    StrikeCount: 'u32',
    VouchingStatus: {
      _enum: ['Vouching', 'Banned']
    }
  }
});

/***/ }),
/* 527 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(122);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */

const deprecated = {
  Points: 'u32',
  EraPoints: {
    total: 'Points',
    individual: 'Vec<Points>'
  }
};
const phragmen = {
  CompactAssignments: 'CompactAssignmentsWith16',
  CompactAssignmentsWith16: {
    votes1: 'Vec<(NominatorIndexCompact, ValidatorIndexCompact)>',
    votes2: 'Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>',
    votes3: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>',
    votes4: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>',
    votes5: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>',
    votes6: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>',
    votes7: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>',
    votes8: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>',
    votes9: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>',
    votes10: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>',
    votes11: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>',
    votes12: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>',
    votes13: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>',
    votes14: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>',
    votes15: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>',
    votes16: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>'
  },
  CompactAssignmentsWith24: {
    votes1: 'Vec<(NominatorIndexCompact, ValidatorIndexCompact)>',
    votes2: 'Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>',
    votes3: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>',
    votes4: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>',
    votes5: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>',
    votes6: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>',
    votes7: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>',
    votes8: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>',
    votes9: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>',
    votes10: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>',
    votes11: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>',
    votes12: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>',
    votes13: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>',
    votes14: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>',
    votes15: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>',
    votes16: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>',
    votes17: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 16], ValidatorIndexCompact)>',
    votes18: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 17], ValidatorIndexCompact)>',
    votes19: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 18], ValidatorIndexCompact)>',
    votes20: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 19], ValidatorIndexCompact)>',
    votes21: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 20], ValidatorIndexCompact)>',
    votes22: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 21], ValidatorIndexCompact)>',
    votes23: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 22], ValidatorIndexCompact)>',
    votes24: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 23], ValidatorIndexCompact)>'
  },
  CompactAssignmentsTo265: 'CompactAssignmentsWith16',
  CompactAssignmentsTo257: {
    votes1: 'Vec<(NominatorIndex, [CompactScore; 0], ValidatorIndex)>',
    votes2: 'Vec<(NominatorIndex, [CompactScore; 1], ValidatorIndex)>',
    votes3: 'Vec<(NominatorIndex, [CompactScore; 2], ValidatorIndex)>',
    votes4: 'Vec<(NominatorIndex, [CompactScore; 3], ValidatorIndex)>',
    votes5: 'Vec<(NominatorIndex, [CompactScore; 4], ValidatorIndex)>',
    votes6: 'Vec<(NominatorIndex, [CompactScore; 5], ValidatorIndex)>',
    votes7: 'Vec<(NominatorIndex, [CompactScore; 6], ValidatorIndex)>',
    votes8: 'Vec<(NominatorIndex, [CompactScore; 7], ValidatorIndex)>',
    votes9: 'Vec<(NominatorIndex, [CompactScore; 8], ValidatorIndex)>',
    votes10: 'Vec<(NominatorIndex, [CompactScore; 9], ValidatorIndex)>',
    votes11: 'Vec<(NominatorIndex, [CompactScore; 10], ValidatorIndex)>',
    votes12: 'Vec<(NominatorIndex, [CompactScore; 11], ValidatorIndex)>',
    votes13: 'Vec<(NominatorIndex, [CompactScore; 12], ValidatorIndex)>',
    votes14: 'Vec<(NominatorIndex, [CompactScore; 13], ValidatorIndex)>',
    votes15: 'Vec<(NominatorIndex, [CompactScore; 14], ValidatorIndex)>',
    votes16: 'Vec<(NominatorIndex, [CompactScore; 15], ValidatorIndex)>'
  },
  CompactScore: '(ValidatorIndex, OffchainAccuracy)',
  CompactScoreCompact: '(ValidatorIndexCompact, OffchainAccuracyCompact)',
  ElectionCompute: {
    // in previous versions the last entry was "AuthorityId"
    // (since no data attached, and it is via SCALE can rename)
    _enum: ['OnChain', 'Signed', 'Unsigned']
  },
  ElectionPhase: {
    _enum: {
      Off: null,
      Signed: null,
      Unsigned: '(bool, BlockNumber)',
      Emergency: null
    }
  },
  ElectionResult: {
    compute: 'ElectionCompute',
    slotStake: 'Balance',
    electedStashes: 'Vec<AccountId>',
    exposures: 'Vec<(AccountId, Exposure)>'
  },
  ElectionScore: '[u128; 3]',
  ElectionSize: {
    validators: 'Compact<ValidatorIndex>',
    nominators: 'Compact<NominatorIndex>'
  },
  ElectionStatus: {
    _enum: {
      Close: 'Null',
      Open: 'BlockNumber'
    }
  },
  ExtendedBalance: 'u128',
  RawSolution: 'RawSolutionWith16',
  RawSolutionWith16: {
    compact: 'CompactAssignmentsWith16',
    score: 'ElectionScore',
    round: 'u32'
  },
  RawSolutionWith24: {
    compact: 'CompactAssignmentsWith24',
    score: 'ElectionScore',
    round: 'u32'
  },
  RawSolutionTo265: 'RawSolutionWith16',
  ReadySolution: {
    supports: 'SolutionSupports',
    score: 'ElectionScore',
    compute: 'ElectionCompute'
  },
  RoundSnapshot: {
    voters: 'Vec<(AccountId, VoteWeight, Vec<AccountId>)>',
    targets: 'Vec<AccountId>'
  },
  SeatHolder: {
    who: 'AccountId',
    stake: 'Balance',
    deposit: 'Balance'
  },
  SignedSubmission: {
    _fallback: 'SignedSubmissionTo276',
    who: 'AccountId',
    deposit: 'Balance',
    solution: 'RawSolution',
    reward: 'Balance'
  },
  SignedSubmissionTo276: {
    who: 'AccountId',
    deposit: 'Balance',
    solution: 'RawSolution'
  },
  SignedSubmissionOf: 'SignedSubmission',
  SolutionOrSnapshotSize: {
    voters: 'Compact<u32>',
    targets: 'Compact<u32>'
  },
  SolutionSupport: {
    total: 'ExtendedBalance',
    voters: 'Vec<(AccountId, ExtendedBalance)>'
  },
  SolutionSupports: 'Vec<(AccountId, SolutionSupport)>',
  Supports: 'SolutionSupports',
  SubmissionIndicesOf: 'BTreeMap<ElectionScore, u32>',
  Voter: {
    votes: 'Vec<AccountId>',
    stake: 'Balance',
    deposit: 'Balance'
  },
  VoteWeight: 'u64'
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, deprecated, phragmen, {
    ActiveEraInfo: {
      index: 'EraIndex',
      start: 'Option<Moment>'
    },
    EraIndex: 'u32',
    EraRewardPoints: {
      total: 'RewardPoint',
      individual: 'BTreeMap<AccountId, RewardPoint>'
    },
    EraRewards: {
      total: 'u32',
      rewards: 'Vec<u32>'
    },
    Exposure: {
      total: 'Compact<Balance>',
      own: 'Compact<Balance>',
      others: 'Vec<IndividualExposure>'
    },
    Forcing: {
      _enum: ['NotForcing', 'ForceNew', 'ForceNone', 'ForceAlways']
    },
    IndividualExposure: {
      who: 'AccountId',
      value: 'Compact<Balance>'
    },
    KeyType: 'AccountId',
    MomentOf: 'Moment',
    Nominations: {
      targets: 'Vec<AccountId>',
      submittedIn: 'EraIndex',
      suppressed: 'bool'
    },
    NominatorIndex: 'u32',
    NominatorIndexCompact: 'Compact<NominatorIndex>',
    OffchainAccuracy: 'PerU16',
    OffchainAccuracyCompact: 'Compact<OffchainAccuracy>',
    PhragmenScore: '[u128; 3]',
    Points: 'u32',
    RewardDestination: {
      _enum: {
        Staked: 'Null',
        Stash: 'Null',
        Controller: 'Null',
        Account: 'AccountId',
        None: 'Null'
      }
    },
    RewardPoint: 'u32',
    SlashJournalEntry: {
      who: 'AccountId',
      amount: 'Balance',
      ownSlash: 'Balance'
    },
    SlashingSpansTo204: {
      spanIndex: 'SpanIndex',
      lastStart: 'EraIndex',
      prior: 'Vec<EraIndex>'
    },
    SlashingSpans: {
      spanIndex: 'SpanIndex',
      lastStart: 'EraIndex',
      lastNonzeroSlash: 'EraIndex',
      prior: 'Vec<EraIndex>'
    },
    SpanIndex: 'u32',
    SpanRecord: {
      slashed: 'Balance',
      paidOut: 'Balance'
    },
    StakingLedgerTo223: {
      stash: 'AccountId',
      total: 'Compact<Balance>',
      active: 'Compact<Balance>',
      unlocking: 'Vec<UnlockChunk>'
    },
    StakingLedgerTo240: {
      stash: 'AccountId',
      total: 'Compact<Balance>',
      active: 'Compact<Balance>',
      unlocking: 'Vec<UnlockChunk>',
      lastReward: 'Option<EraIndex>'
    },
    StakingLedger: {
      stash: 'AccountId',
      total: 'Compact<Balance>',
      active: 'Compact<Balance>',
      unlocking: 'Vec<UnlockChunk>',
      claimedRewards: 'Vec<EraIndex>'
    },
    UnappliedSlashOther: '(AccountId, Balance)',
    UnappliedSlash: {
      validator: 'AccountId',
      own: 'Balance',
      others: 'Vec<UnappliedSlashOther>',
      reporters: 'Vec<AccountId>',
      payout: 'Balance'
    },
    UnlockChunk: {
      value: 'Compact<Balance>',
      era: 'Compact<BlockNumber>'
    },
    ValidatorIndex: 'u16',
    ValidatorIndexCompact: 'Compact<ValidatorIndex>',
    ValidatorPrefs: 'ValidatorPrefsWithBlocked',
    ValidatorPrefsWithCommission: {
      commission: 'Compact<Perbill>'
    },
    ValidatorPrefsWithBlocked: {
      commission: 'Compact<Perbill>',
      blocked: 'bool'
    },
    ValidatorPrefsTo196: {
      validatorPayment: 'Compact<Balance>'
    },
    ValidatorPrefsTo145: {
      unstakeThreshold: 'Compact<u32>',
      validatorPayment: 'Compact<Balance>'
    }
  })
});

/***/ }),
/* 528 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: {
    WeightToFeeCoefficient: {
      coeffInteger: 'Balance',
      coeffFrac: 'Perbill',
      negative: 'bool',
      degree: 'u8'
    }
  }
});

/***/ }),
/* 529 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {
    genSyncSpec: {
      endpoint: 'sync_state_genSyncSpec',
      description: 'Returns the json-serialized chainspec running the node, with a sync state.',
      params: [{
        name: 'raw',
        type: 'bool'
      }],
      type: 'Json'
    }
  },
  types: {}
});

/***/ }),
/* 530 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {
    accountNextIndex: {
      alias: ['account_nextIndex'],
      description: 'Retrieves the next accountIndex as available on the node',
      params: [{
        name: 'accountId',
        type: 'AccountId'
      }],
      type: 'Index'
    },
    dryRun: {
      alias: ['system_dryRunAt'],
      description: 'Dry run an extrinsic at a given block',
      params: [{
        name: 'extrinsic',
        type: 'Bytes'
      }, {
        name: 'at',
        type: 'BlockHash',
        isHistoric: true,
        isOptional: true
      }],
      type: 'ApplyExtrinsicResult'
    },
    name: {
      description: 'Retrieves the node name',
      params: [],
      type: 'Text'
    },
    version: {
      description: 'Retrieves the version of the node',
      params: [],
      type: 'Text'
    },
    chain: {
      description: 'Retrieves the chain',
      params: [],
      type: 'Text'
    },
    chainType: {
      description: 'Retrieves the chain type',
      params: [],
      type: 'ChainType'
    },
    properties: {
      description: 'Get a custom set of properties as a JSON object, defined in the chain spec',
      params: [],
      type: 'ChainProperties'
    },
    health: {
      description: 'Return health status of the node',
      params: [],
      type: 'Health'
    },
    localPeerId: {
      description: 'Returns the base58-encoded PeerId of the node',
      params: [],
      type: 'Text'
    },
    localListenAddresses: {
      description: 'The addresses include a trailing /p2p/ with the local PeerId, and are thus suitable to be passed to addReservedPeer or as a bootnode address for example',
      params: [],
      type: 'Vec<Text>'
    },
    peers: {
      description: 'Returns the currently connected peers',
      params: [],
      type: 'Vec<PeerInfo>'
    },
    networkState: {
      alias: ['system_unstable_networkState'],
      description: 'Returns current state of the network',
      params: [],
      type: 'NetworkState'
    },
    addReservedPeer: {
      description: 'Adds a reserved peer',
      params: [{
        name: 'peer',
        type: 'Text'
      }],
      type: 'Text'
    },
    removeReservedPeer: {
      description: 'Remove a reserved peer',
      params: [{
        name: 'peerId',
        type: 'Text'
      }],
      type: 'Text'
    },
    reservedPeers: {
      description: 'Returns the list of reserved peers',
      params: [],
      type: 'Vec<Text>'
    },
    nodeRoles: {
      description: 'Returns the roles the node is running as',
      params: [],
      type: 'Vec<NodeRole>'
    },
    syncState: {
      description: 'Returns the state of the syncing of the node',
      params: [],
      type: 'SyncState'
    },
    addLogFilter: {
      description: 'Adds the supplied directives to the current log filter',
      params: [{
        name: 'directives',
        type: 'Text'
      }],
      type: 'Null'
    },
    resetLogFilter: {
      description: 'Resets the log filter to Substrate defaults',
      params: [],
      type: 'Null'
    }
  },
  types: {
    AccountInfo: 'AccountInfoWithTripleRefCount',
    AccountInfoWithRefCountU8: {
      nonce: 'Index',
      refcount: 'u8',
      data: 'AccountData'
    },
    AccountInfoWithRefCount: {
      _fallback: 'AccountInfoWithRefCountU8',
      nonce: 'Index',
      refcount: 'RefCount',
      data: 'AccountData'
    },
    AccountInfoWithDualRefCount: {
      _fallback: 'AccountInfoWithRefCount',
      nonce: 'Index',
      consumers: 'RefCount',
      providers: 'RefCount',
      data: 'AccountData'
    },
    // original naming
    AccountInfoWithProviders: 'AccountInfoWithDualRefCount',
    AccountInfoWithTripleRefCount: {
      _fallback: 'AccountInfoWithDualRefCount',
      nonce: 'Index',
      consumers: 'RefCount',
      providers: 'RefCount',
      sufficients: 'RefCount',
      data: 'AccountData'
    },
    ApplyExtrinsicResult: 'Result<DispatchOutcome, TransactionValidityError>',
    ArithmeticError: {
      _enum: ['Underflow', 'Overflow', 'DivisionByZero']
    },
    BlockLength: {
      max: 'PerDispatchClassU32'
    },
    BlockWeights: {
      baseBlock: 'Weight',
      maxBlock: 'Weight',
      perClass: 'PerDispatchClassWeightsPerClass'
    },
    ChainProperties: 'GenericChainProperties',
    ChainType: {
      _enum: {
        Development: 'Null',
        Local: 'Null',
        Live: 'Null',
        Custom: 'Text'
      }
    },
    ConsumedWeight: 'PerDispatchClassWeight',
    DigestOf: 'Digest',
    DispatchClass: {
      _enum: ['Normal', 'Operational', 'Mandatory']
    },
    DispatchError: {
      _enum: {
        Other: 'Null',
        CannotLookup: 'Null',
        BadOrigin: 'Null',
        Module: 'DispatchErrorModule',
        ConsumerRemaining: 'Null',
        NoProviders: 'Null',
        Token: 'TokenError',
        Arithmetic: 'ArithmeticError'
      }
    },
    DispatchErrorModule: {
      index: 'u8',
      error: 'u8'
    },
    DispatchErrorTo198: {
      module: 'Option<u8>',
      error: 'u8'
    },
    DispatchInfo: {
      weight: 'Weight',
      class: 'DispatchClass',
      paysFee: 'Pays'
    },
    DispatchInfoTo190: {
      weight: 'Weight',
      class: 'DispatchClass'
    },
    DispatchInfoTo244: {
      weight: 'Weight',
      class: 'DispatchClass',
      paysFee: 'bool'
    },
    DispatchOutcome: 'Result<(), DispatchError>',
    DispatchResult: 'Result<(), DispatchError>',
    DispatchResultOf: 'DispatchResult',
    DispatchResultTo198: 'Result<(), Text>',
    Event: 'GenericEvent',
    EventId: '[u8; 2]',
    EventIndex: 'u32',
    EventRecord: {
      phase: 'Phase',
      event: 'Event',
      topics: 'Vec<Hash>'
    },
    Health: {
      peers: 'u64',
      isSyncing: 'bool',
      shouldHavePeers: 'bool'
    },
    InvalidTransaction: {
      _enum: {
        Call: 'Null',
        Payment: 'Null',
        Future: 'Null',
        Stale: 'Null',
        BadProof: 'Null',
        AncientBirthBlock: 'Null',
        ExhaustsResources: 'Null',
        Custom: 'u8',
        BadMandatory: 'Null',
        MandatoryDispatch: 'Null'
      }
    },
    Key: 'Bytes',
    LastRuntimeUpgradeInfo: {
      specVersion: 'Compact<u32>',
      specName: 'Text'
    },
    NetworkState: {
      peerId: 'Text',
      listenedAddresses: 'Vec<Text>',
      externalAddresses: 'Vec<Text>',
      connectedPeers: 'HashMap<Text, Peer>',
      notConnectedPeers: 'HashMap<Text, NotConnectedPeer>',
      averageDownloadPerSec: 'u64',
      averageUploadPerSec: 'u64',
      peerset: 'NetworkStatePeerset'
    },
    NetworkStatePeerset: {
      messageQueue: 'u64',
      nodes: 'HashMap<Text, NetworkStatePeersetInfo>'
    },
    NetworkStatePeersetInfo: {
      connected: 'bool',
      reputation: 'i32'
    },
    NodeRole: {
      _enum: {
        Full: 'Null',
        LightClient: 'Null',
        Authority: 'Null',
        UnknownRole: 'u8'
      }
    },
    NotConnectedPeer: {
      knownAddresses: 'Vec<Text>',
      latestPingTime: 'Option<PeerPing>',
      versionString: 'Option<Text>'
    },
    Peer: {
      enabled: 'bool',
      endpoint: 'PeerEndpoint',
      knownAddresses: 'Vec<Text>',
      latestPingTime: 'PeerPing',
      open: 'bool',
      versionString: 'Text'
    },
    PeerEndpoint: {
      listening: 'PeerEndpointAddr'
    },
    PeerEndpointAddr: {
      _alias: {
        localAddr: 'local_addr',
        sendBackAddr: 'send_back_addr'
      },
      localAddr: 'Text',
      sendBackAddr: 'Text'
    },
    PeerPing: {
      nanos: 'u64',
      secs: 'u64'
    },
    PeerInfo: {
      peerId: 'Text',
      roles: 'Text',
      protocolVersion: 'u32',
      bestHash: 'Hash',
      bestNumber: 'BlockNumber'
    },
    PerDispatchClassU32: {
      normal: 'u32',
      operational: 'u32',
      mandatory: 'u32'
    },
    PerDispatchClassWeight: {
      normal: 'Weight',
      operational: 'Weight',
      mandatory: 'Weight'
    },
    PerDispatchClassWeightsPerClass: {
      normal: 'WeightPerClass',
      operational: 'WeightPerClass',
      mandatory: 'WeightPerClass'
    },
    Phase: {
      _enum: {
        ApplyExtrinsic: 'u32',
        Finalization: 'Null',
        Initialization: 'Null'
      }
    },
    RawOrigin: {
      _enum: {
        Root: 'Null',
        Signed: 'AccountId',
        None: 'Null'
      }
    },
    RefCount: 'u32',
    RefCountTo259: 'u8',
    SyncState: {
      startingBlock: 'BlockNumber',
      currentBlock: 'BlockNumber',
      highestBlock: 'Option<BlockNumber>'
    },
    SystemOrigin: 'RawOrigin',
    TokenError: {
      _enum: ['NoFunds', 'WouldDie', 'BelowMinimum', 'CannotCreate', 'UnknownAsset', 'Frozen', // these are dropped, but still in older versions
      // (if this adjusts, will need to take a re-look)
      'Underflow', 'Overflow']
    },
    TransactionValidityError: {
      _enum: {
        Invalid: 'InvalidTransaction',
        Unknown: 'UnknownTransaction'
      }
    },
    UnknownTransaction: {
      _enum: {
        CannotLookup: 'Null',
        NoUnsignedValidator: 'Null',
        Custom: 'u8'
      }
    },
    WeightPerClass: {
      baseExtrinsic: 'Weight',
      maxExtrinsic: 'Weight',
      maxTotal: 'Option<Weight>',
      reserved: 'Option<Weight>'
    }
  }
});

/***/ }),
/* 531 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: {
    Bounty: {
      proposer: 'AccountId',
      value: 'Balance',
      fee: 'Balance',
      curatorDeposit: 'Balance',
      bond: 'Balance',
      status: 'BountyStatus'
    },
    BountyIndex: 'u32',
    BountyStatus: {
      _enum: {
        Proposed: 'Null',
        Approved: 'Null',
        Funded: 'Null',
        CuratorProposed: 'BountyStatusCuratorProposed',
        Active: 'BountyStatusActive',
        PendingPayout: 'BountyStatusPendingPayout'
      }
    },
    BountyStatusActive: {
      curator: 'AccountId',
      updateDue: 'BlockNumber'
    },
    BountyStatusCuratorProposed: {
      curator: 'AccountId'
    },
    BountyStatusPendingPayout: {
      curator: 'AccountId',
      beneficiary: 'AccountId',
      unlockAt: 'BlockNumber'
    },
    OpenTip: {
      reason: 'Hash',
      who: 'AccountId',
      finder: 'AccountId',
      deposit: 'Balance',
      closes: 'Option<BlockNumber>',
      tips: 'Vec<OpenTipTip>',
      findersFee: 'bool'
    },
    OpenTipTo225: {
      reason: 'Hash',
      who: 'AccountId',
      finder: 'Option<OpenTipFinderTo225>',
      closes: 'Option<BlockNumber>',
      tips: 'Vec<OpenTipTip>'
    },
    OpenTipFinderTo225: '(AccountId, Balance)',
    OpenTipTip: '(AccountId, Balance)',
    TreasuryProposal: {
      proposer: 'AccountId',
      value: 'Balance',
      beneficiary: 'AccountId',
      bond: 'Balance'
    }
  }
});

/***/ }),
/* 532 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: {
    Multiplier: 'Fixed128'
  }
});

/***/ }),
/* 533 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: {
    ClassId: 'u32',
    InstanceId: 'u32',
    DepositBalance: 'Balance',
    DepositBalanceOf: 'Balance',
    ClassDetails: {
      owner: 'AccountId',
      issuer: 'AccountId',
      admin: 'AccountId',
      freezer: 'AccountId',
      totalDeposit: 'DepositBalance',
      freeHolding: 'bool',
      instances: 'u32',
      instanceMetadatas: 'u32',
      attributes: 'u32',
      isFrozen: 'bool'
    },
    DestroyWitness: {
      instances: 'Compact<u32>',
      instanceMetadatas: 'Compact<u32>',
      attributes: 'Compact<u32>'
    },
    InstanceDetails: {
      owner: 'AccountId',
      approved: 'Option<AccountId>',
      isFrozen: 'bool',
      deposit: 'DepositBalance'
    },
    ClassMetadata: {
      deposit: 'DepositBalance',
      data: 'Vec<u8>',
      isFrozen: 'bool'
    },
    InstanceMetadata: {
      deposit: 'DepositBalance',
      data: 'Vec<u8>',
      isFrozen: 'bool'
    }
  }
});

/***/ }),
/* 534 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: {
    Multisig: {
      when: 'Timepoint',
      deposit: 'Balance',
      depositor: 'AccountId',
      approvals: 'Vec<AccountId>'
    },
    Timepoint: {
      height: 'BlockNumber',
      index: 'u32'
    }
  }
});

/***/ }),
/* 535 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: {
    VestingInfo: {
      locked: 'Balance',
      perBlock: 'Balance',
      startingBlock: 'BlockNumber'
    }
  }
});

/***/ }),
/* 536 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: {
    BlockAttestations: {
      receipt: 'CandidateReceipt',
      valid: 'Vec<AccountId>',
      invalid: 'Vec<AccountId>'
    },
    IncludedBlocks: {
      actualNumber: 'BlockNumber',
      session: 'SessionIndex',
      randomSeed: 'H256',
      activeParachains: 'Vec<ParaId>',
      paraBlocks: 'Vec<Hash>'
    },
    MoreAttestations: {}
  }
});

/***/ }),
/* 537 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: {
    BridgedBlockHash: 'H256',
    BridgedBlockNumber: 'BlockNumber',
    BridgedHeader: 'Header',
    BridgeMessageId: '(LaneId, MessageNonce)',
    CallOrigin: {
      _enum: {
        SourceRoot: 'Null',
        TargetAccount: '(AccountId, MultiSigner, MultiSignature)',
        SourceAccount: 'AccountId'
      }
    },
    ChainId: '[u8; 4]',
    DeliveredMessages: {
      begin: 'MessageNonce',
      end: 'MessageNonce',
      // pub type DispatchResultsBitVec = BitVec<Msb0, u8>;
      dispatchResults: 'BitVec'
    },
    DispatchFeePayment: {
      _enum: ['AtSourceChain', 'AtTargetChain']
    },
    InboundLaneData: {
      relayers: 'Vec<UnrewardedRelayer>',
      lastConfirmedNonce: 'MessageNonce'
    },
    InboundRelayer: 'AccountId',
    InitializationData: {
      header: 'Header',
      authorityList: 'AuthorityList',
      setId: 'SetId',
      isHalted: 'bool'
    },
    LaneId: '[u8; 4]',
    MessageData: {
      payload: 'Bytes',
      fee: 'Balance'
    },
    MessagesDeliveryProofOf: {
      bridgedHeaderHash: 'BlockHash',
      storageProof: 'Vec<Bytes>',
      lane: 'LaneId'
    },
    MessageKey: {
      laneId: 'LaneId',
      nonce: 'MessageNonce'
    },
    MessageNonce: 'u64',
    MessagesProofOf: {
      bridgedHeaderHash: 'BridgedBlockHash',
      storageProof: 'Vec<Bytes>',
      lane: 'LaneId',
      noncesStart: 'MessageNonce',
      noncesEnd: 'MessageNonce'
    },
    OperatingMode: {
      _enum: ['Normal', 'RejectingOutboundMessages', 'Halted']
    },
    OutboundLaneData: {
      oldestUnprunedNonce: 'MessageNonce',
      latestReceivedNonce: 'MessageNonce',
      latestGeneratedNonce: 'MessageNonce'
    },
    OutboundMessageFee: 'Balance',
    OutboundPayload: {
      specVersion: 'u32',
      weight: 'Weight',
      origin: 'CallOrigin',
      dispatchFeePayment: 'DispatchFeePayment',
      call: 'Bytes'
    },
    Parameter: 'Null',
    RelayerId: 'AccountId',
    UnrewardedRelayer: {
      relayer: 'RelayerId',
      messages: 'DeliveredMessages'
    },
    UnrewardedRelayersState: {
      unrewardedRelayer_Entries: 'MessageNonce',
      messagesInOldestEntry: 'MessageNonce',
      totalMessages: 'MessageNonce'
    }
  }
});

/***/ }),
/* 538 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: {
    StatementKind: {
      _enum: ['Regular', 'Saft']
    }
  }
});

/***/ }),
/* 539 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: {
    FundIndex: 'u32',
    LastContribution: {
      _enum: {
        Never: 'Null',
        PreEnding: 'u32',
        Ending: 'BlockNumber'
      }
    },
    FundInfo: {
      depositor: 'AccountId',
      verifier: 'Option<MultiSigner>',
      deposit: 'Balance',
      raised: 'Balance',
      end: 'BlockNumber',
      cap: 'Balance',
      lastContribution: 'LastContribution',
      firstPeriod: 'LeasePeriod',
      lastPeriod: 'LeasePeriod',
      trieIndex: 'TrieIndex'
    },
    TrieIndex: 'u32'
  }
});

/***/ }),
/* 540 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
const dmpQueue = {
  ConfigData: {
    maxIndividual: 'Weight'
  },
  MessageId: '[u8; 32]',
  OverweightIndex: 'u64',
  PageCounter: 'u32',
  PageIndexData: {
    beginUsed: 'PageCounter',
    endUsed: 'PageCounter',
    overweightCount: 'OverweightIndex'
  }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: dmpQueue
});

/***/ }),
/* 541 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(122);
/* harmony import */ var _hrmp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(542);
/* harmony import */ var _slots_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(543);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */


 // proposeParachain

const proposeTypes = {
  ParachainProposal: {
    proposer: 'AccountId',
    genesisHead: 'HeadData',
    validators: 'Vec<ValidatorId>',
    name: 'Bytes',
    balance: 'Balance'
  },
  RegisteredParachainInfo: {
    validators: 'Vec<ValidatorId>',
    proposer: 'AccountId'
  }
};
const cumulusTypes = {
  ServiceQuality: {
    _enum: ['Ordered', 'Fast']
  }
};
const disputeTypes = {
  DisputeLocation: {
    _enum: ['Local', 'Remote']
  },
  DisputeResult: {
    _enum: ['Valid', 'Invalid']
  },
  DisputeState: {
    validatorsFor: 'BitVec',
    validatorsAgainst: 'BitVec',
    start: 'BlockNumber',
    concludedAt: 'Option<BlockNumber>'
  },
  DisputeStatement: {
    _enum: {
      Valid: 'ValidDisputeStatementKind',
      Invalid: 'InvalidDisputeStatementKind'
    }
  },
  DisputeStatementSet: {
    candidateHash: 'CandidateHash',
    session: 'SessionIndex',
    statements: 'Vec<(DisputeStatement, ParaValidatorIndex, ValidatorSignature)>'
  },
  ExplicitDisputeStatement: {
    valid: 'bool',
    candidateHash: 'CandidateHash',
    session: 'SessionIndex'
  },
  InvalidDisputeStatementKind: {
    _enum: ['Explicit']
  },
  MultiDisputeStatementSet: 'Vec<DisputeStatementSet>',
  ValidDisputeStatementKind: {
    _enum: {
      Explicit: 'Null',
      BackingSeconded: 'Hash',
      BackingValid: 'Hash',
      ApprovalChecking: 'Null'
    }
  }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, cumulusTypes, disputeTypes, _hrmp_js__WEBPACK_IMPORTED_MODULE_1__["default"], proposeTypes, _slots_js__WEBPACK_IMPORTED_MODULE_2__["default"], {
    AbridgedCandidateReceipt: {
      parachainIndex: 'ParaId',
      relayParent: 'Hash',
      headData: 'HeadData',
      collator: 'CollatorId',
      signature: 'CollatorSignature',
      povBlockHash: 'Hash',
      commitments: 'CandidateCommitments'
    },
    AbridgedHostConfiguration: {
      maxCodeSize: 'u32',
      maxHeadDataSize: 'u32',
      maxUpwardQueueCount: 'u32',
      maxUpwardQueueSize: 'u32',
      maxUpwardMessageSize: 'u32',
      maxUpwardMessageNumPerCandidate: 'u32',
      hrmpMaxMessageNumPerCandidate: 'u32',
      validationUpgradeFrequency: 'BlockNumber',
      validationUpgradeDelay: 'BlockNumber'
    },
    AbridgedHrmpChannel: {
      maxCapacity: 'u32',
      maxTotalSize: 'u32',
      maxMessageSize: 'u32',
      msgCount: 'u32',
      totalSize: 'u32',
      mqcHead: 'Option<Hash>'
    },
    AssignmentId: 'AccountId',
    AssignmentKind: {
      _enum: {
        Parachain: 'Null',
        Parathread: '(CollatorId, u32)'
      }
    },
    AttestedCandidate: {
      candidate: 'AbridgedCandidateReceipt',
      validityVotes: 'Vec<ValidityAttestation>',
      validatorIndices: 'BitVec'
    },
    AuthorityDiscoveryId: 'AccountId',
    AvailabilityBitfield: 'BitVec',
    AvailabilityBitfieldRecord: {
      bitfield: 'AvailabilityBitfield',
      submittedTt: 'BlockNumber'
    },
    BackedCandidate: {
      candidate: 'CommittedCandidateReceipt',
      validityVotes: 'Vec<ValidityAttestation>',
      validatorIndices: 'BitVec'
    },
    BufferedSessionChange: {
      applyAt: 'BlockNumber',
      validators: 'Vec<ValidatorId>',
      queued: 'Vec<ValidatorId>',
      sessionIndex: 'SessionIndex'
    },
    CandidateCommitments: {
      upwardMessages: 'Vec<UpwardMessage>',
      horizontalMessages: 'Vec<OutboundHrmpMessage>',
      newValidationCode: 'Option<ValidationCode>',
      headData: 'HeadData',
      processedDownwardMessages: 'u32',
      hrmpWatermark: 'BlockNumber'
    },
    CandidateDescriptor: {
      paraId: 'ParaId',
      relayParent: 'RelayChainHash',
      collatorId: 'CollatorId',
      persistedValidationDataHash: 'Hash',
      povHash: 'Hash',
      erasureRoot: 'Hash',
      signature: 'CollatorSignature',
      paraHead: 'Hash',
      validationCodeHash: 'ValidationCodeHash'
    },
    CandidateHash: 'Hash',
    CandidateInfo: {
      who: 'AccountId',
      deposit: 'Balance'
    },
    CandidatePendingAvailability: {
      core: 'CoreIndex',
      hash: 'CandidateHash',
      descriptor: 'CandidateDescriptor',
      availabilityVotes: 'BitVec',
      backers: 'BitVec',
      relayParentNumber: 'BlockNumber',
      backedInNumber: 'BlockNumber',
      backingGroup: 'GroupIndex'
    },
    CandidateReceipt: {
      descriptor: 'CandidateDescriptor',
      commitmentsHash: 'Hash'
    },
    GlobalValidationData: {
      maxCodeSize: 'u32',
      maxHeadDataSize: 'u32',
      blockNumber: 'BlockNumber'
    },
    CollatorId: 'H256',
    CollatorSignature: 'Signature',
    CommittedCandidateReceipt: {
      descriptor: 'CandidateDescriptor',
      commitments: 'CandidateCommitments'
    },
    CoreAssignment: {
      core: 'CoreIndex',
      paraId: 'ParaId',
      kind: 'AssignmentKind',
      groupIdx: 'GroupIndex'
    },
    CoreIndex: 'u32',
    CoreOccupied: {
      _enum: {
        Parathread: 'ParathreadEntry',
        Parachain: 'Null'
      }
    },
    DoubleVoteReport: {
      identity: 'ValidatorId',
      first: '(Statement, ValidatorSignature)',
      second: '(Statement, ValidatorSignature)',
      proof: 'MembershipProof',
      signingContext: 'SigningContext'
    },
    DownwardMessage: 'Bytes',
    GroupIndex: 'u32',
    GlobalValidationSchedule: {
      maxCodeSize: 'u32',
      maxHeadDataSize: 'u32',
      blockNumber: 'BlockNumber'
    },
    HeadData: 'Bytes',
    HostConfiguration: {
      maxCodeSize: 'u32',
      maxHeadDataSize: 'u32',
      maxUpwardQueueCount: 'u32',
      maxUpwardQueueSize: 'u32',
      maxUpwardMessageSize: 'u32',
      maxUpwardMessageNumPerCandidate: 'u32',
      hrmpMaxMessageNumPerCandidate: 'u32',
      validationUpgradeFrequency: 'BlockNumber',
      validationUpgradeDelay: 'BlockNumber',
      maxPovSize: 'u32',
      maxDownwardMessageSize: 'u32',
      preferredDispatchableUpwardMessagesStepWeight: 'Weight',
      hrmpMaxParachainOutboundChannels: 'u32',
      hrmpMaxParathreadOutboundChannels: 'u32',
      hrmpOpenRequestTtl: 'u32',
      hrmpSenderDeposit: 'Balance',
      hrmpRecipientDeposit: 'Balance',
      hrmpChannelMaxCapacity: 'u32',
      hrmpChannelMaxTotalSize: 'u32',
      hrmpMaxParachainInboundChannels: 'u32',
      hrmpMaxParathreadInboundChannels: 'u32',
      hrmpChannelMaxMessageSize: 'u32',
      codeRetentionPeriod: 'BlockNumber',
      parathreadCores: 'u32',
      parathreadRetries: 'u32',
      groupRotationFrequency: 'BlockNumber',
      chainAvailabilityPeriod: 'BlockNumber',
      threadAvailabilityPeriod: 'BlockNumber',
      schedulingLookahead: 'u32',
      maxValidatorsPerCore: 'Option<u32>',
      maxValidators: 'Option<u32>',
      disputePeriod: 'SessionIndex',
      disputePostConclusionAcceptancePeriod: 'BlockNumber',
      disputeMaxSpamSlots: 'u32',
      disputeConclusionByTimeOutPeriod: 'BlockNumber',
      noShowSlots: 'u32',
      nDelayTranches: 'u32',
      zerothDelayTrancheWidth: 'u32',
      neededApprovals: 'u32',
      relayVrfModuloSamples: 'u32'
    },
    InboundDownwardMessage: {
      pubSentAt: 'BlockNumber',
      pubMsg: 'DownwardMessage'
    },
    InboundHrmpMessage: {
      sentAt: 'BlockNumber',
      data: 'Bytes'
    },
    InboundHrmpMessages: 'Vec<InboundHrmpMessage>',
    LocalValidationData: {
      parentHead: 'HeadData',
      balance: 'Balance',
      codeUpgradeAllowed: 'Option<BlockNumber>'
    },
    MessageIngestionType: {
      downwardMessages: 'Vec<InboundDownwardMessage>',
      horizontalMessages: 'BTreeMap<ParaId, InboundHrmpMessages>'
    },
    MessageQueueChain: 'RelayChainHash',
    OutboundHrmpMessage: {
      recipient: 'u32',
      data: 'Bytes'
    },
    ParachainDispatchOrigin: {
      _enum: ['Signed', 'Parachain', 'Root']
    },
    ParachainInherentData: {
      validationData: 'PersistedValidationData',
      relayChainState: 'StorageProof',
      downwardMessages: 'Vec<InboundDownwardMessage>',
      horizontalMessages: 'BTreeMap<ParaId, VecInboundHrmpMessage>'
    },
    ParachainsInherentData: {
      bitfields: 'SignedAvailabilityBitfields',
      backedCandidates: 'Vec<BackedCandidate>',
      disputes: 'MultiDisputeStatementSet',
      parentHeader: 'Header'
    },
    ParaGenesisArgs: {
      genesisHead: 'Bytes',
      validationCode: 'Bytes',
      parachain: 'bool'
    },
    ParaId: 'u32',
    ParaInfo: {
      manager: 'AccountId',
      deposit: 'Balance',
      locked: 'bool'
    },
    ParaLifecycle: {
      _enum: ['Onboarding', 'Parathread', 'Parachain', 'UpgradingToParachain', 'DowngradingToParathread', 'OutgoingParathread', 'OutgoingParachain']
    },
    ParaPastCodeMeta: {
      upgradeTimes: 'Vec<ReplacementTimes>',
      lastPruned: 'Option<BlockNumber>'
    },
    ParaScheduling: {
      _enum: ['Always', 'Dynamic']
    },
    ParathreadClaim: '(ParaId, CollatorId)',
    ParathreadClaimQueue: {
      queue: 'Vec<QueuedParathread>',
      nextCoreOffset: 'u32'
    },
    ParathreadEntry: {
      claim: 'ParathreadClaim',
      retries: 'u32'
    },
    ParaValidatorIndex: 'u32',
    PersistedValidationData: {
      parentHead: 'HeadData',
      relayParentNumber: 'RelayChainBlockNumber',
      relayParentStorageRoot: 'Hash',
      maxPovSize: 'u32'
    },
    QueuedParathread: {
      claim: 'ParathreadEntry',
      coreOffset: 'u32'
    },
    RelayBlockNumber: 'u32',
    RelayChainBlockNumber: 'RelayBlockNumber',
    RelayHash: 'Hash',
    RelayChainHash: 'RelayHash',
    Remark: '[u8; 32]',
    ReplacementTimes: {
      expectedAt: 'BlockNumber',
      activatedAt: 'BlockNumber'
    },
    Retriable: {
      _enum: {
        Never: 'Null',
        WithRetries: 'u32'
      }
    },
    Scheduling: {
      _enum: ['Always', 'Dynamic']
    },
    SessionInfo: {
      validators: 'Vec<ValidatorId>',
      discoveryKeys: 'Vec<AuthorityDiscoveryId>',
      assignmentKeys: 'Vec<AssignmentId>',
      validatorGroups: 'Vec<SessionInfoValidatorGroup>',
      nCores: 'u32',
      zerothDelayTrancheWidth: 'u32',
      relayVrfModuloSamples: 'u32',
      nDelayTranches: 'u32',
      noShowSlots: 'u32',
      neededApprovals: 'u32'
    },
    SessionInfoValidatorGroup: 'Vec<ParaValidatorIndex>',
    SignedAvailabilityBitfield: {
      payload: 'BitVec',
      validatorIndex: 'ParaValidatorIndex',
      signature: 'ValidatorSignature'
    },
    SignedAvailabilityBitfields: 'Vec<SignedAvailabilityBitfield>',
    SigningContext: {
      sessionIndex: 'SessionIndex',
      parentHash: 'Hash'
    },
    Statement: {
      _enum: {
        Never: 'Null',
        // starts at 1
        Candidate: 'Hash',
        Valid: 'Hash',
        Invalid: 'Hash'
      }
    },
    TransientValidationData: {
      maxCodeSize: 'u32',
      maxHeadDataSize: 'u32',
      balance: 'Balance',
      codeUpgradeAllowed: 'Option<BlockNumber>',
      dmqLength: 'u32'
    },
    UpgradeGoAhead: {
      _enum: ['Abort', 'GoAhead']
    },
    UpgradeRestriction: {
      _enum: ['Present']
    },
    UpwardMessage: 'Bytes',
    ValidationFunctionParams: {
      maxCodeSize: 'u32',
      relayChainHeight: 'RelayChainBlockNumber',
      codeUpgradeAllowed: 'Option<RelayChainBlockNumber>'
    },
    ValidationCode: 'Bytes',
    ValidationCodeHash: 'Hash',
    ValidationData: {
      persisted: 'PersistedValidationData',
      transient: 'TransientValidationData'
    },
    ValidationDataType: {
      validationData: 'ValidationData',
      relayChainState: 'Vec<Bytes>'
    },
    ValidatorSignature: 'Signature',
    ValidityAttestation: {
      _enum: {
        Never: 'Null',
        // starts at 1
        Implicit: 'ValidatorSignature',
        Explicit: 'ValidatorSignature'
      }
    },
    MessagingStateSnapshot: {
      relayDispatchQueueSize: '(u32, u32)',
      egressChannels: 'Vec<MessagingStateSnapshotEgressEntry>'
    },
    MessagingStateSnapshotEgressEntry: '(ParaId, AbridgedHrmpChannel)',
    SystemInherentData: 'ParachainInherentData',
    VecInboundHrmpMessage: 'Vec<InboundHrmpMessage>'
  })
});

/***/ }),
/* 542 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  HrmpChannel: {
    maxCapacity: 'u32',
    maxTotalSize: 'u32',
    maxMessageSize: 'u32',
    msgCount: 'u32',
    totalSize: 'u32',
    mqcHead: 'Option<Hash>',
    senderDeposit: 'Balance',
    recipientDeposit: 'Balance'
  },
  HrmpChannelId: {
    sender: 'u32',
    receiver: 'u32'
  },
  HrmpOpenChannelRequest: {
    confirmed: 'bool',
    age: 'SessionIndex',
    senderDeposit: 'Balance',
    maxMessageSize: 'u32',
    maxCapacity: 'u32',
    maxTotalSize: 'u32'
  }
});

/***/ }),
/* 543 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(122);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
 // order important in structs... :)

/* eslint-disable sort-keys */

const SLOT_RANGE_COUNT = 10;
const oldTypes = {
  Bidder: {
    _enum: {
      New: 'NewBidder',
      Existing: 'ParaId'
    }
  },
  IncomingParachain: {
    _enum: {
      Unset: 'NewBidder',
      Fixed: 'IncomingParachainFixed',
      Deploy: 'IncomingParachainDeploy'
    }
  },
  IncomingParachainDeploy: {
    code: 'ValidationCode',
    initialHeadData: 'HeadData'
  },
  IncomingParachainFixed: {
    codeHash: 'Hash',
    codeSize: 'u32',
    initialHeadData: 'HeadData'
  },
  NewBidder: {
    who: 'AccountId',
    sub: 'SubId'
  },
  SubId: 'u32'
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, oldTypes, {
  AuctionIndex: 'u32',
  LeasePeriod: 'BlockNumber',
  LeasePeriodOf: 'BlockNumber',
  SlotRange: {
    _enum: ['ZeroZero', 'ZeroOne', 'ZeroTwo', 'ZeroThree', 'OneOne', 'OneTwo', 'OneThree', 'TwoTwo', 'TwoThree', 'ThreeThree']
  },
  WinningData: `[WinningDataEntry; ${SLOT_RANGE_COUNT}]`,
  WinningDataEntry: 'Option<(AccountId, ParaId, BalanceOf)>',
  WinnersData: 'Vec<WinnersDataTuple>',
  WinnersDataTuple: '(AccountId, ParaId, BalanceOf, SlotRange)'
}));

/***/ }),
/* 544 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: {
    Approvals: '[bool; 4]'
  }
});

/***/ }),
/* 545 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: {
    AccountStatus: {
      validity: 'AccountValidity',
      freeBalance: 'Balance',
      lockedBalance: 'Balance',
      signature: 'Vec<u8>',
      vat: 'Permill'
    },
    AccountValidity: {
      _enum: ['Invalid', 'Initiated', 'Pending', 'ValidLow', 'ValidHigh', 'Completed']
    }
  }
});

/***/ }),
/* 546 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _polkadot_types_known__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(382);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(122);
/* harmony import */ var _v0_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(547);
/* harmony import */ var _v1_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(548);
/* harmony import */ var _v2_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(549);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */





const XCM_LATEST = 'V2';
const xcm = {
  XcmOrigin: {
    _enum: {
      Xcm: 'MultiLocation'
    }
  },
  XcmpMessageFormat: {
    _enum: ['ConcatenatedVersionedXcm', 'ConcatenatedEncodedBlob', 'Signals']
  },
  XcmAssetId: {
    _enum: {
      Concrete: 'MultiLocation',
      Abstract: 'Bytes'
    }
  },
  InboundStatus: {
    _enum: ['Ok', 'Suspended']
  },
  OutboundStatus: {
    _enum: ['Ok', 'Suspended']
  },
  MultiAssets: 'Vec<MultiAsset>'
};
const location = {
  BodyId: {
    _enum: {
      Unit: 'Null',
      Named: 'Vec<u8>',
      Index: 'Compact<u32>',
      Executive: 'Null',
      Technical: 'Null',
      Legislative: 'Null',
      Judicial: 'Null'
    }
  },
  BodyPart: {
    _enum: {
      Voice: 'Null',
      Members: 'Compact<u32>',
      Fraction: {
        nom: 'Compact<u32>',
        denom: 'Compact<u32>'
      },
      AtLeastProportion: {
        nom: 'Compact<u32>',
        denom: 'Compact<u32>'
      },
      MoreThanProportion: {
        nom: 'Compact<u32>',
        denom: 'Compact<u32>'
      }
    }
  },
  InteriorMultiLocation: 'Junctions',
  NetworkId: {
    _enum: {
      Any: 'Null',
      Named: 'Vec<u8>',
      Polkadot: 'Null',
      Kusama: 'Null'
    }
  }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, location, xcm, _v0_js__WEBPACK_IMPORTED_MODULE_1__.v0, _v1_js__WEBPACK_IMPORTED_MODULE_2__.v1, _v2_js__WEBPACK_IMPORTED_MODULE_3__.v2, (0,_polkadot_types_known__WEBPACK_IMPORTED_MODULE_4__.mapXcmTypes)(XCM_LATEST), {
    DoubleEncodedCall: {
      encoded: 'Vec<u8>'
    },
    XcmOriginKind: {
      _enum: ['Native', 'SovereignAccount', 'Superuser', 'Xcm']
    },
    Outcome: {
      _enum: {
        Complete: 'Weight',
        Incomplete: '(Weight, XcmErrorV0)',
        Error: 'XcmErrorV0'
      }
    },
    QueryId: 'u64',
    QueryStatus: {
      _enum: {
        Pending: {
          responder: 'VersionedMultiLocation',
          maybeNotify: 'Option<(u8, u8)>',
          timeout: 'BlockNumber'
        },
        Ready: {
          response: 'VersionedResponse',
          at: 'BlockNumber'
        }
      }
    },
    QueueConfigData: {
      suspendThreshold: 'u32',
      dropThreshold: 'u32',
      resumeThreshold: 'u32',
      thresholdWeight: 'Weight',
      weightRestrictDecay: 'Weight'
    },
    VersionMigrationStage: {
      _enum: {
        MigrateSupportedVersion: 'Null',
        MigrateVersionNotifiers: 'Null',
        NotifyCurrentTargets: 'Option<Bytes>',
        MigrateAndNotifyOldTargets: 'Null'
      }
    },
    VersionedMultiAsset: {
      _enum: {
        V0: 'MultiAssetV0',
        V1: 'MultiAssetV1',
        V2: 'MultiAssetV2'
      }
    },
    VersionedMultiAssets: {
      _enum: {
        V0: 'Vec<MultiAssetV0>',
        V1: 'MultiAssetsV1',
        V2: 'MultiAssetsV2'
      }
    },
    VersionedMultiLocation: {
      _enum: {
        V0: 'MultiLocationV0',
        V1: 'MultiLocationV1',
        V2: 'MultiLocationV2'
      }
    },
    VersionedResponse: {
      V0: 'ResponseV0',
      V1: 'ResponseV1',
      V2: 'ResponseV2'
    },
    VersionedXcm: {
      _enum: {
        V0: 'XcmV0',
        V1: 'XcmV1',
        V2: 'XcmV2'
      }
    },
    XcmVersion: 'u32'
  })
});

/***/ }),
/* 547 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "v0": () => (/* binding */ v0)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
const v0 = {
  FungibilityV0: 'FungibilityV1',
  WildFungibilityV0: 'WildFungibilityV1',
  AssetInstanceV0: {
    _enum: {
      Undefined: 'Null',
      Index8: 'u8',
      Index16: 'Compact<u16>',
      Index32: 'Compact<u32>',
      Index64: 'Compact<u64>',
      Index128: 'Compact<u128>',
      Array4: '[u8; 4]',
      Array8: '[u8; 8]',
      Array16: '[u8; 16]',
      Array32: '[u8; 32]',
      Blob: 'Vec<u8>'
    }
  },
  JunctionV0: {
    _enum: {
      Parent: 'Null',
      Parachain: 'Compact<u32>',
      AccountId32: {
        network: 'NetworkId',
        id: 'AccountId'
      },
      AccountIndex64: {
        network: 'NetworkId',
        index: 'Compact<u64>'
      },
      AccountKey20: {
        network: 'NetworkId',
        key: '[u8; 20]'
      },
      PalletInstance: 'u8',
      GeneralIndex: 'Compact<u128>',
      GeneralKey: 'Vec<u8>',
      OnlyChild: 'Null',
      Plurality: {
        id: 'BodyId',
        part: 'BodyPart'
      }
    }
  },
  MultiAssetV0: {
    _enum: {
      None: 'Null',
      All: 'Null',
      AllFungible: 'Null',
      AllNonFungible: 'Null',
      AllAbstractFungible: 'Vec<u8>',
      AllAbstractNonFungible: 'Vec<u8>',
      AllConcreteFungible: 'MultiLocationV0',
      AllConcreteNonFungible: 'MultiLocationV0',
      AbstractFungible: {
        id: 'Vec<u8>',
        instance: 'Compact<u128>'
      },
      AbstractNonFungible: {
        class: 'Vec<u8>',
        instance: 'AssetInstanceV0'
      },
      ConcreteFungible: {
        id: 'MultiLocationV0',
        amount: 'Compact<u128>'
      },
      ConcreteNonFungible: {
        class: 'MultiLocationV0',
        instance: 'AssetInstanceV0'
      }
    }
  },
  MultiLocationV0: {
    _enum: {
      Here: 'Null',
      X1: 'JunctionV0',
      X2: '(JunctionV0, JunctionV0)',
      X3: '(JunctionV0, JunctionV0, JunctionV0)',
      X4: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0)',
      X5: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)',
      X6: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)',
      X7: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)',
      X8: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)'
    }
  },
  OriginKindV0: {
    _enum: ['Native', 'SovereignAccount', 'Superuser', 'Xcm']
  },
  ResponseV0: {
    _enum: {
      Assets: 'Vec<MultiAssetV0>'
    }
  },
  XcmV0: {
    _enum: {
      WithdrawAsset: {
        assets: 'Vec<MultiAssetV0>',
        effects: 'Vec<XcmOrderV0>'
      },
      ReserveAssetDeposit: {
        assets: 'Vec<MultiAssetV0>',
        effects: 'Vec<XcmOrderV0>'
      },
      ReceiveTeleportedAsset: {
        assets: 'Vec<MultiAssetV0>',
        effects: 'Vec<XcmOrderV0>'
      },
      QueryResponse: {
        queryId: 'Compact<u64>',
        response: 'ResponseV0'
      },
      TransferAsset: {
        assets: 'Vec<MultiAssetV0>',
        dest: 'MultiLocationV0'
      },
      TransferReserveAsset: {
        assets: 'Vec<MultiAssetV0>',
        dest: 'MultiLocationV0',
        effects: 'Vec<XcmOrderV0>'
      },
      Transact: {
        originType: 'XcmOriginKind',
        requireWeightAtMost: 'u64',
        call: 'DoubleEncodedCall'
      },
      HrmpNewChannelOpenRequest: {
        sender: 'Compact<u32>',
        maxMessageSize: 'Compact<u32>',
        maxCapacity: 'Compact<u32>'
      },
      HrmpChannelAccepted: {
        recipient: 'Compact<u32>'
      },
      HrmpChannelClosing: {
        initiator: 'Compact<u32>',
        sender: 'Compact<u32>',
        recipient: 'Compact<u32>'
      },
      RelayedFrom: {
        who: 'MultiLocationV0',
        message: 'XcmV0'
      }
    }
  },
  XcmErrorV0: {
    _enum: {
      Undefined: 'Null',
      Overflow: 'Null',
      Unimplemented: 'Null',
      UnhandledXcmVersion: 'Null',
      UnhandledXcmMessage: 'Null',
      UnhandledEffect: 'Null',
      EscalationOfPrivilege: 'Null',
      UntrustedReserveLocation: 'Null',
      UntrustedTeleportLocation: 'Null',
      DestinationBufferOverflow: 'Null',
      SendFailed: 'Null',
      CannotReachDestination: '(MultiLocation, Xcm)',
      MultiLocationFull: 'Null',
      FailedToDecode: 'Null',
      BadOrigin: 'Null',
      ExceedsMaxMessageSize: 'Null',
      FailedToTransactAsset: 'Null',
      WeightLimitReached: 'Weight',
      Wildcard: 'Null',
      TooMuchWeightRequired: 'Null',
      NotHoldingFees: 'Null',
      WeightNotComputable: 'Null',
      Barrier: 'Null',
      NotWithdrawable: 'Null',
      LocationCannotHold: 'Null',
      TooExpensive: 'Null',
      AssetNotFound: 'Null',
      RecursionLimitReached: 'Null'
    }
  },
  XcmOrderV0: {
    _enum: {
      Null: 'Null',
      DepositAsset: {
        assets: 'Vec<MultiAssetV0>',
        dest: 'MultiLocationV0'
      },
      DepositReserveAsset: {
        assets: 'Vec<MultiAssetV0>',
        dest: 'MultiLocationV0',
        effects: 'Vec<XcmOrderV0>'
      },
      ExchangeAsset: {
        give: 'Vec<MultiAssetV0>',
        receive: 'Vec<MultiAssetV0>'
      },
      InitiateReserveWithdraw: {
        assets: 'Vec<MultiAssetV0>',
        reserve: 'MultiLocationV0',
        effects: 'Vec<XcmOrderV0>'
      },
      InitiateTeleport: {
        assets: 'Vec<MultiAsset>',
        dest: 'MultiLocationV0',
        effects: 'Vec<XcmOrderV0>'
      },
      QueryHolding: {
        queryId: 'Compact<u64>',
        dest: 'MultiLocationV0',
        assets: 'Vec<MultiAssetV0>'
      },
      BuyExecution: {
        fees: 'MultiAsset',
        weight: 'u64',
        debt: 'u64',
        haltOnError: 'bool',
        xcm: 'Vec<XcmV0>'
      }
    }
  }
};

/***/ }),
/* 548 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "v1": () => (/* binding */ v1)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
const v1 = {
  AssetInstanceV1: {
    _enum: {
      Undefined: 'Null',
      Index: 'Compact<u128>',
      Array4: '[u8; 4]',
      Array8: '[u8; 8]',
      Array16: '[u8; 16]',
      Array32: '[u8; 32]',
      Blob: 'Bytes'
    }
  },
  FungibilityV1: {
    _enum: {
      Fungible: 'Compact<u128>',
      NonFungible: 'AssetInstanceV1'
    }
  },
  JunctionV1: {
    _enum: {
      Parachain: 'Compact<u32>',
      AccountId32: {
        network: 'NetworkId',
        id: 'AccountId'
      },
      AccountIndex64: {
        network: 'NetworkId',
        index: 'Compact<u64>'
      },
      AccountKey20: {
        network: 'NetworkId',
        key: '[u8; 20]'
      },
      PalletInstance: 'u8',
      GeneralIndex: 'Compact<u128>',
      GeneralKey: 'Vec<u8>',
      OnlyChild: 'Null',
      Plurality: {
        id: 'BodyId',
        part: 'BodyPart'
      }
    }
  },
  JunctionsV1: {
    _enum: {
      Here: 'Null',
      X1: 'JunctionV1',
      X2: '(JunctionV1, JunctionV1)',
      X3: '(JunctionV1, JunctionV1, JunctionV1)',
      X4: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1)',
      X5: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)',
      X6: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)',
      X7: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)',
      X8: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)'
    }
  },
  MultiAssetsV1: 'Vec<MultiAssetV1>',
  MultiAssetV1: {
    id: 'XcmAssetId',
    fungibility: 'FungibilityV1'
  },
  MultiAssetFilterV1: {
    _enum: {
      Definite: 'MultiAssetsV1',
      Wild: 'WildMultiAssetV1'
    }
  },
  MultiLocationV1: {
    parents: 'u8',
    interior: 'JunctionsV1'
  },
  OriginKindV1: 'OriginKindV0',
  ResponseV1: {
    _enum: {
      Assets: 'MultiAssetsV1'
    }
  },
  WildFungibilityV1: {
    _enum: ['Fungible', 'NonFungible']
  },
  WildMultiAssetV1: {
    _enum: {
      All: 'Null',
      AllOf: {
        id: 'XcmAssetId',
        fungibility: 'WildFungibilityV1'
      }
    }
  },
  XcmV1: {
    _enum: {
      WithdrawAsset: {
        assets: 'MultiAssetsV1',
        effects: 'Vec<XcmOrderV1>'
      },
      ReserveAssetDeposit: {
        assets: 'MultiAssetsV1',
        effects: 'Vec<XcmOrderV1>'
      },
      ReceiveTeleportedAsset: {
        assets: 'MultiAssetsV1',
        effects: 'Vec<XcmOrderV1>'
      },
      QueryResponse: {
        queryId: 'Compact<u64>',
        response: 'ResponseV1'
      },
      TransferAsset: {
        assets: 'MultiAssetsV1',
        dest: 'MultiLocationV1'
      },
      TransferReserveAsset: {
        assets: 'MultiAssetsV1',
        dest: 'MultiLocationV1',
        effects: 'Vec<XcmOrderV1>'
      },
      Transact: {
        originType: 'XcmOriginKind',
        requireWeightAtMost: 'u64',
        call: 'DoubleEncodedCall'
      },
      HrmpNewChannelOpenRequest: {
        sender: 'Compact<u32>',
        maxMessageSize: 'Compact<u32>',
        maxCapacity: 'Compact<u32>'
      },
      HrmpChannelAccepted: {
        recipient: 'Compact<u32>'
      },
      HrmpChannelClosing: {
        initiator: 'Compact<u32>',
        sender: 'Compact<u32>',
        recipient: 'Compact<u32>'
      },
      RelayedFrom: {
        who: 'MultiLocationV1',
        message: 'XcmV1'
      }
    }
  },
  XcmErrorV1: {
    _enum: {
      Undefined: 'Null',
      Overflow: 'Null',
      Unimplemented: 'Null',
      UnhandledXcmVersion: 'Null',
      UnhandledXcmMessage: 'Null',
      UnhandledEffect: 'Null',
      EscalationOfPrivilege: 'Null',
      UntrustedReserveLocation: 'Null',
      UntrustedTeleportLocation: 'Null',
      DestinationBufferOverflow: 'Null',
      SendFailed: 'Null',
      CannotReachDestination: '(MultiLocationV1, XcmV1)',
      MultiLocationFull: 'Null',
      FailedToDecode: 'Null',
      BadOrigin: 'Null',
      ExceedsMaxMessageSize: 'Null',
      FailedToTransactAsset: 'Null',
      WeightLimitReached: 'Weight',
      Wildcard: 'Null',
      TooMuchWeightRequired: 'Null',
      NotHoldingFees: 'Null',
      WeightNotComputable: 'Null',
      Barrier: 'Null',
      NotWithdrawable: 'Null',
      LocationCannotHold: 'Null',
      TooExpensive: 'Null',
      AssetNotFound: 'Null',
      DestinationUnsupported: 'Null',
      RecursionLimitReached: 'Null'
    }
  },
  XcmOrderV1: {
    _enum: {
      Noop: 'Null',
      DepositAsset: {
        assets: 'MultiAssetFilterV1',
        maxAssets: 'u32',
        beneficiary: 'MultiLocationV1'
      },
      DepositReserveAsset: {
        assets: 'MultiAssetFilterV1',
        maxAssets: 'u32',
        dest: 'MultiLocationV1',
        effects: 'Vec<XcmOrderV1>'
      },
      ExchangeAsset: {
        give: 'MultiAssetFilterV1',
        receive: 'MultiAssetsV1'
      },
      InitiateReserveWithdraw: {
        assets: 'MultiAssetFilterV1',
        reserve: 'MultiLocationV1',
        effects: 'Vec<XcmOrderV1>'
      },
      InitiateTeleport: {
        assets: 'MultiAssetFilterV1',
        dest: 'MultiLocationV1',
        effects: 'Vec<XcmOrderV1>'
      },
      QueryHolding: {
        queryId: 'Compact<u64>',
        dest: 'MultiLocationV1',
        assets: 'MultiAssetFilterV1'
      },
      BuyExecution: {
        fees: 'MultiAssetV1',
        weight: 'u64',
        debt: 'u64',
        haltOnError: 'bool',
        instructions: 'Vec<XcmV1>'
      }
    }
  }
};

/***/ }),
/* 549 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "v2": () => (/* binding */ v2)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
const v2 = {
  AssetInstanceV2: 'AssetInstanceV1',
  FungibilityV2: 'FungibilityV1',
  JunctionV2: 'JunctionV1',
  JunctionsV2: 'JunctionsV1',
  MultiAssetsV2: 'MultiAssetsV1',
  MultiAssetV2: 'MultiAssetV1',
  MultiAssetFilterV2: 'MultiAssetFilterV1',
  MultiLocationV2: 'MultiLocationV1',
  OriginKindV2: 'OriginKindV1',
  WildFungibilityV2: 'WildFungibilityV1',
  ResponseV2: {
    _enum: {
      Null: 'Null',
      Assets: 'MultiAssetsV2',
      ExecutionResult: 'ResponseV2Result'
    }
  },
  ResponseV2Error: '(u32, XcmErrorV2)',
  ResponseV2Result: 'Result<Null, ResponseV2Error>',
  WeightLimitV2: {
    _enum: {
      Unlimited: 'Null',
      Limited: 'Compact<u64>'
    }
  },
  InstructionV2: {
    _enum: {
      WithdrawAsset: 'MultiAssetsV2',
      ReserveAssetDeposited: 'MultiAssetsV2',
      ReceiveTeleportedAsset: 'MultiAssetsV2',
      QueryResponse: {
        queryId: 'Compact<u64>',
        response: 'ResponseV2',
        maxWeight: 'Compact<u64>'
      },
      TransferAsset: {
        assets: 'MultiAssetsV2',
        beneficiary: 'MultiLocationV2'
      },
      TransferReserveAsset: {
        assets: 'MultiAssetsV2',
        dest: 'MultiLocationV2',
        xcm: 'XcmV2'
      },
      Transact: {
        originType: 'OriginKindV2',
        requireWeightAtMost: 'u64',
        call: 'DoubleEncodedCall'
      },
      HrmpNewChannelOpenRequest: {
        sender: 'Compact<u32>',
        maxMessageSize: 'Compact<u32>',
        maxCapacity: 'Compact<u32>'
      },
      HrmpChannelAccepted: {
        recipient: 'Compact<u32>'
      },
      HrmpChannelClosing: {
        initiator: 'Compact<u32>',
        sender: 'Compact<u32>',
        recipient: 'Compact<u32>'
      },
      ClearOrigin: 'Null',
      DescendOrigin: 'InteriorMultiLocation',
      ReportError: {
        queryId: 'Compact<u64>',
        dest: 'MultiLocationV2',
        maxResponseWeight: 'Compact<u64>'
      },
      DepositAsset: {
        assets: 'MultiAssetFilterV2',
        maxAssets: 'u32',
        beneficiary: 'MultiLocationV2'
      },
      DepositReserveAsset: {
        assets: 'MultiAssetFilterV2',
        maxAssets: 'u32',
        dest: 'MultiLocationV2',
        xcm: 'XcmV2'
      },
      ExchangeAsset: {
        give: 'MultiAssetFilterV2',
        receive: 'MultiAssetsV2'
      },
      InitiateReserveWithdraw: {
        assets: 'MultiAssetFilterV2',
        reserve: 'MultiLocationV2',
        xcm: 'XcmV2'
      },
      InitiateTeleport: {
        assets: 'MultiAssetFilterV2',
        dest: 'MultiLocationV2',
        xcm: 'XcmV2'
      },
      QueryHolding: {
        query_id: 'Compact<u64>',
        dest: 'MultiLocationV2',
        assets: 'MultiAssetFilterV2',
        maxResponse_Weight: 'Compact<u64>'
      },
      BuyExecution: {
        fees: 'MultiAssetV2',
        weightLimit: 'WeightLimitV2'
      },
      RefundSurplus: 'Null',
      SetErrorHandler: 'XcmV2',
      SetAppendix: 'XcmV2',
      ClearError: 'Null',
      ClaimAsset: {
        assets: 'MultiAssetsV2',
        ticket: 'MultiLocationV2'
      },
      Trap: 'u64'
    }
  },
  WildMultiAssetV2: 'WildMultiAssetV1',
  XcmV2: 'Vec<InstructionV2>',
  XcmErrorV2: {
    _enum: {
      Undefined: 'Null',
      Overflow: 'Null',
      Unimplemented: 'Null',
      UnhandledXcmVersion: 'Null',
      UnhandledXcmMessage: 'Null',
      UnhandledEffect: 'Null',
      EscalationOfPrivilege: 'Null',
      UntrustedReserveLocation: 'Null',
      UntrustedTeleportLocation: 'Null',
      DestinationBufferOverflow: 'Null',
      MultiLocationFull: 'Null',
      MultiLocationNotInvertible: 'Null',
      FailedToDecode: 'Null',
      BadOrigin: 'Null',
      ExceedsMaxMessageSize: 'Null',
      FailedToTransactAsset: 'Null',
      WeightLimitReached: 'Weight',
      Wildcard: 'Null',
      TooMuchWeightRequired: 'Null',
      NotHoldingFees: 'Null',
      WeightNotComputable: 'Null',
      Barrier: 'Null',
      NotWithdrawable: 'Null',
      LocationCannotHold: 'Null',
      TooExpensive: 'Null',
      AssetNotFound: 'Null',
      DestinationUnsupported: 'Null',
      RecursionLimitReached: 'Null',
      Transport: 'Null',
      Unroutable: 'Null',
      UnknownWeightRequired: 'Null',
      Trap: 'u64',
      UnknownClaim: 'Null',
      InvalidLocation: 'Null'
    }
  },
  XcmOrderV2: 'XcmOrderV1'
};

/***/ }),
/* 550 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(122);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
 // order important in structs... :)

/* eslint-disable sort-keys */

const layout = {
  ContractCryptoHasher: {
    _enum: ['Blake2x256', 'Sha2x256', 'Keccak256']
  },
  ContractDiscriminant: 'u32',
  ContractLayoutArray: {
    offset: 'ContractLayoutKey',
    len: 'u32',
    cellsPerElem: 'u64',
    layout: 'ContractStorageLayout'
  },
  ContractLayoutCell: {
    key: 'ContractLayoutKey',
    ty: 'SiLookupTypeId'
  },
  ContractLayoutEnum: {
    dispatchKey: 'ContractLayoutKey',
    variants: 'BTreeMap<ContractDiscriminant, ContractLayoutStruct>'
  },
  ContractLayoutHash: {
    offset: 'ContractLayoutKey',
    strategy: 'ContractLayoutHashingStrategy',
    layout: 'ContractStorageLayout'
  },
  ContractLayoutHashingStrategy: {
    hasher: 'ContractCryptoHasher',
    postfix: 'Vec<u8>',
    prefix: 'Vec<u8>'
  },
  ContractLayoutKey: '[u8; 32]',
  ContractLayoutStruct: {
    fields: 'Vec<ContractLayoutStructField>'
  },
  ContractLayoutStructField: {
    layout: 'ContractStorageLayout',
    name: 'Text'
  },
  ContractStorageLayout: {
    _enum: {
      Cell: 'ContractLayoutCell',
      Hash: 'ContractLayoutHash',
      Array: 'ContractLayoutArray',
      Struct: 'ContractLayoutStruct',
      Enum: 'ContractLayoutEnum'
    }
  }
};
const spec = {
  ContractConstructorSpec: {
    name: 'Text',
    selector: 'ContractSelector',
    args: 'Vec<ContractMessageParamSpec>',
    docs: 'Vec<Text>'
  },
  ContractContractSpec: {
    constructors: 'Vec<ContractConstructorSpec>',
    messages: 'Vec<ContractMessageSpec>',
    events: 'Vec<ContractEventSpec>',
    docs: 'Vec<Text>'
  },
  ContractDisplayName: 'SiPath',
  ContractEventParamSpec: {
    name: 'Text',
    indexed: 'bool',
    type: 'ContractTypeSpec',
    docs: 'Vec<Text>'
  },
  ContractEventSpec: {
    name: 'Text',
    args: 'Vec<ContractEventParamSpec>',
    docs: 'Vec<Text>'
  },
  ContractMessageParamSpec: {
    name: 'Text',
    type: 'ContractTypeSpec'
  },
  ContractMessageSpec: {
    name: 'Text',
    selector: 'ContractSelector',
    mutates: 'bool',
    payable: 'bool',
    args: 'Vec<ContractMessageParamSpec>',
    returnType: 'Option<ContractTypeSpec>',
    docs: 'Vec<Text>'
  },
  ContractSelector: '[u8; 4]',
  ContractTypeSpec: {
    type: 'SiLookupTypeId',
    displayName: 'ContractDisplayName'
  }
};
const ContractMetadataV0 = {
  types: 'Vec<Si0Type>',
  spec: 'ContractContractSpec'
};
const ContractMetadataV1 = {
  types: 'Vec<PortableType>',
  spec: 'ContractContractSpec'
};
const ContractProjectInfo = {
  source: 'ContractProjectSource',
  contract: 'ContractProjectContract'
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {},
  types: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, layout, spec, {
    ContractProjectInfo,
    ContractMetadataV0,
    ContractMetadataV1,
    ContractMetadata: {
      _enum: {
        V0: 'ContractMetadataV0',
        V1: 'ContractMetadataV1'
      }
    },
    ContractMetadataLatest: 'ContractMetadataV1',
    ContractProjectV0: (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({
      metadataVersion: 'Text'
    }, ContractProjectInfo, ContractMetadataV0),
    ContractProject: '(ContractProjectInfo, ContractMetadata)',
    ContractProjectContract: {
      _alias: {
        docs: 'documentation'
      },
      name: 'Text',
      version: 'Text',
      authors: 'Vec<Text>',
      description: 'Option<Text>',
      docs: 'Option<Text>',
      repository: 'Option<Text>',
      homepage: 'Option<Text>',
      license: 'Option<Text>'
    },
    ContractProjectSource: {
      _alias: {
        wasmHash: 'hash'
      },
      wasmHash: '[u8; 32]',
      language: 'Text',
      compiler: 'Text',
      wasm: 'Raw'
    }
  })
});

/***/ }),
/* 551 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(122);
/* harmony import */ var _rpc_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(552);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
// As per frontier


const V0 = {
  BlockV0: {
    header: 'EthHeader',
    transactions: 'Vec<TransactionV0>',
    ommers: 'Vec<EthHeader>'
  },
  LegacyTransaction: {
    nonce: 'U256',
    gasPrice: 'U256',
    gasLimit: 'U256',
    action: 'EthTransactionAction',
    value: 'U256',
    input: 'Bytes',
    signature: 'EthTransactionSignature'
  },
  TransactionV0: 'LegacyTransaction'
};
const V1 = {
  BlockV1: {
    header: 'EthHeader',
    transactions: 'Vec<TransactionV1>',
    ommers: 'Vec<EthHeader>'
  },
  EIP2930Transaction: {
    chainId: 'u64',
    nonce: 'U256',
    gasPrice: 'U256',
    gasLimit: 'U256',
    action: 'EthTransactionAction',
    value: 'U256',
    input: 'Bytes',
    accessList: 'EthAccessList',
    oddYParity: 'bool',
    r: 'H256',
    s: 'H256'
  },
  TransactionV1: {
    _enum: {
      Legacy: 'LegacyTransaction',
      EIP2930: 'EIP2930Transaction'
    }
  }
};
const V2 = {
  BlockV2: {
    header: 'EthHeader',
    transactions: 'Vec<TransactionV2>',
    ommers: 'Vec<EthHeader>'
  },
  EIP1559Transaction: {
    chainId: 'u64',
    nonce: 'U256',
    maxPriorityFeePerGas: 'U256',
    maxFeePerGas: 'U256',
    gasLimit: 'U256',
    action: 'EthTransactionAction',
    value: 'U256',
    input: 'Bytes',
    accessList: 'EthAccessList',
    oddYParity: 'bool',
    r: 'H256',
    s: 'H256'
  },
  TransactionV2: {
    _enum: {
      Legacy: 'LegacyTransaction',
      EIP2930: 'EIP2930Transaction',
      EIP1559: 'EIP1559Transaction'
    }
  }
};
const types = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, V0, V1, V2, {
  EthereumAccountId: 'GenericEthereumAccountId',
  EthereumAddress: 'GenericEthereumAccountId',
  EthereumLookupSource: 'GenericEthereumLookupSource',
  EthereumSignature: '[u8; 65]',
  EthAccessListItem: {
    address: 'EthAddress',
    slots: 'Vec<H256>'
  },
  EthAccessList: 'Vec<EthAccessListItem>',
  EthAccount: {
    address: 'EthAddress',
    balance: 'U256',
    nonce: 'U256',
    codeHash: 'H256',
    storageHash: 'H256',
    accountProof: 'Vec<Bytes>',
    storageProof: 'Vec<EthStorageProof>'
  },
  EthAddress: 'H160',
  EthBlock: {
    header: 'EthHeader',
    transactions: 'Vec<EthTransaction>',
    ommers: 'Vec<EthHeader>'
  },
  EthHeader: {
    parentHash: 'H256',
    ommersHash: 'H256',
    beneficiary: 'EthAddress',
    stateRoot: 'H256',
    transactionsRoot: 'H256',
    receiptsRoot: 'H256',
    logsBloom: 'EthBloom',
    difficulty: 'U256',
    number: 'U256',
    gasLimit: 'U256',
    gasUsed: 'U256',
    timestamp: 'u64',
    extraData: 'Bytes',
    mixMash: 'H256',
    nonce: 'H64'
  },
  EthRichBlock: {
    _alias: {
      blockHash: 'hash',
      blockSize: 'size'
    },
    blockHash: 'Option<H256>',
    parentHash: 'H256',
    sha3Uncles: 'H256',
    author: 'EthAddress',
    miner: 'EthAddress',
    stateRoot: 'H256',
    transactionsRoot: 'H256',
    receiptsRoot: 'H256',
    number: 'Option<U256>',
    gasUsed: 'U256',
    gasLimit: 'U256',
    extraData: 'Bytes',
    logsBloom: 'EthBloom',
    timestamp: 'U256',
    difficulty: 'U256',
    totalDifficulty: 'Option<U256>',
    sealFields: 'Vec<Bytes>',
    uncles: 'Vec<H256>',
    transactions: 'Vec<EthTransaction>',
    blockSize: 'Option<U256>'
  },
  EthBloom: 'H2048',
  EthCallRequest: {
    from: 'Option<EthAddress>',
    to: 'Option<EthAddress>',
    gasPrice: 'Option<U256>',
    gas: 'Option<U256>',
    value: 'Option<U256>',
    data: 'Option<Bytes>',
    nonce: 'Option<U256>'
  },
  EthFilter: {
    fromBlock: 'Option<BlockNumber>',
    toBlock: 'Option<BlockNumber>',
    blockHash: 'Option<H256>',
    address: 'Option<EthFilterAddress>',
    topics: 'Option<EthFilterTopic>'
  },
  EthFilterAddress: {
    _enum: {
      Single: 'EthAddress',
      Multiple: 'Vec<EthAddress>',
      Null: 'Null'
    }
  },
  EthFilterChanges: {
    _enum: {
      Logs: 'Vec<EthLog>',
      Hashes: 'Vec<H256>',
      Empty: 'Null'
    }
  },
  EthFilterTopic: {
    _enum: {
      Single: 'EthFilterTopicInner',
      Multiple: 'Vec<EthFilterTopicInner>',
      Null: 'Null'
    }
  },
  EthFilterTopicEntry: 'Option<H256>',
  EthFilterTopicInner: {
    _enum: {
      Single: 'EthFilterTopicEntry',
      Multiple: 'Vec<EthFilterTopicEntry>',
      Null: 'Null'
    }
  },
  EthRichHeader: {
    _alias: {
      blockHash: 'hash',
      blockSize: 'size'
    },
    blockHash: 'Option<H256>',
    parentHash: 'H256',
    sha3Uncles: 'H256',
    author: 'EthAddress',
    miner: 'EthAddress',
    stateRoot: 'H256',
    transactionsRoot: 'H256',
    receiptsRoot: 'H256',
    number: 'Option<U256>',
    gasUsed: 'U256',
    gasLimit: 'U256',
    extraData: 'Bytes',
    logsBloom: 'EthBloom',
    timestamp: 'U256',
    difficulty: 'U256',
    sealFields: 'Vec<Bytes>',
    blockSize: 'Option<U256>'
  },
  EthLog: {
    address: 'EthAddress',
    topics: 'Vec<H256>',
    data: 'Bytes',
    blockHash: 'Option<H256>',
    blockNumber: 'Option<U256>',
    transactionHash: 'Option<H256>',
    transactionIndex: 'Option<U256>',
    logIndex: 'Option<U256>',
    transactionLogIndex: 'Option<U256>',
    removed: 'bool'
  },
  EthReceipt: {
    transactionHash: 'Option<H256>',
    transactionIndex: 'Option<U256>',
    blockHash: 'Option<H256>',
    from: 'Option<EthAddress>',
    to: 'Option<EthAddress>',
    blockNumber: 'Option<U256>',
    cumulativeGasUsed: 'U256',
    gasUsed: 'Option<U256>',
    contractAddress: 'Option<EthAddress>',
    logs: 'Vec<EthLog>',
    root: 'Option<H256>',
    logsBloom: 'EthBloom',
    statusCode: 'Option<U64>'
  },
  EthStorageProof: {
    key: 'U256',
    value: 'U256',
    proof: 'Vec<Bytes>'
  },
  EthSubKind: {
    _enum: ['newHeads', 'logs', 'newPendingTransactions', 'syncing']
  },
  EthSubParams: {
    _enum: {
      None: 'Null',
      Logs: 'EthFilter'
    }
  },
  EthSubResult: {
    _enum: {
      Header: 'EthRichHeader',
      Log: 'EthLog',
      TransactionHash: 'H256',
      SyncState: 'EthSyncStatus'
    }
  },
  EthSyncInfo: {
    startingBlock: 'U256',
    currentBlock: 'U256',
    highestBlock: 'U256',
    warpChunksAmount: 'Option<U256>',
    warpChunksProcessed: 'Option<U256>'
  },
  EthSyncStatus: {
    _enum: {
      Info: 'EthSyncInfo',
      None: 'Null'
    }
  },
  EthTransaction: 'LegacyTransaction',
  EthTransactionSignature: {
    v: 'u64',
    r: 'H256',
    s: 'H256'
  },
  EthTransactionAction: {
    _enum: {
      Call: 'H160',
      Create: 'Null'
    }
  },
  EthTransactionCondition: {
    _enum: {
      block: 'u64',
      time: 'u64'
    }
  },
  EthTransactionRequest: {
    from: 'Option<EthAddress>',
    to: 'Option<EthAddress>',
    gasPrice: 'Option<U256>',
    gas: 'Option<U256>',
    value: 'Option<U256>',
    data: 'Option<Bytes>',
    nonce: 'Option<U256>'
  },
  EthTransactionStatus: {
    transactionHash: 'H256',
    transactionIndex: 'u32',
    from: 'EthAddress',
    to: 'Option<EthAddress>',
    contractAddress: 'Option<EthAddress>',
    logs: 'Vec<EthLog>',
    logsBloom: 'EthBloom'
  },
  EthWork: {
    powHash: 'H256',
    seedHash: 'H256',
    target: 'H256',
    number: 'Option<u64>'
  }
});
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: _rpc_js__WEBPACK_IMPORTED_MODULE_1__.rpc,
  types
});

/***/ }),
/* 552 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "rpc": () => (/* binding */ rpc)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(122);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// As per frontier
 // We use aliasSection here to override since these are in another namespace

const netRpc = {
  listening: {
    aliasSection: 'net',
    description: 'Returns true if client is actively listening for network connections. Otherwise false.',
    params: [],
    type: 'bool'
  },
  peerCount: {
    aliasSection: 'net',
    description: 'Returns number of peers connected to node.',
    params: [],
    type: 'String'
  },
  version: {
    aliasSection: 'net',
    description: 'Returns protocol version.',
    params: [],
    type: 'String'
  }
};
const web3Rpc = {
  clientVersion: {
    aliasSection: 'web3',
    description: 'Returns current client version.',
    params: [],
    type: 'String'
  },
  sha3: {
    aliasSection: 'web3',
    description: 'Returns sha3 of the given data',
    params: [{
      name: 'data',
      type: 'Bytes'
    }],
    type: 'H256'
  }
};
const rpc = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.objectSpread)({}, netRpc, web3Rpc, {
  accounts: {
    description: 'Returns accounts list.',
    params: [],
    type: 'Vec<H160>'
  },
  blockNumber: {
    description: 'Returns the blockNumber',
    params: [],
    type: 'U256'
  },
  call: {
    description: 'Call contract, returning the output data.',
    params: [{
      name: 'request',
      type: 'EthCallRequest'
    }, {
      isOptional: true,
      name: 'number',
      type: 'BlockNumber'
    }],
    type: 'Bytes'
  },
  chainId: {
    description: 'Returns the chain ID used for transaction signing at the current best block. None is returned if not available.',
    params: [],
    type: 'U64'
  },
  coinbase: {
    description: 'Returns block author.',
    params: [],
    type: 'H160'
  },
  estimateGas: {
    description: 'Estimate gas needed for execution of given contract.',
    params: [{
      name: 'request',
      type: 'EthCallRequest'
    }, {
      isOptional: true,
      name: 'number',
      type: 'BlockNumber'
    }],
    type: 'U256'
  },
  gasPrice: {
    description: 'Returns current gas price.',
    params: [],
    type: 'U256'
  },
  getBalance: {
    description: 'Returns balance of the given account.',
    params: [{
      name: 'address',
      type: 'H160'
    }, {
      isOptional: true,
      name: 'number',
      type: 'BlockNumber'
    }],
    type: 'U256'
  },
  getBlockByHash: {
    description: 'Returns block with given hash.',
    params: [{
      name: 'hash',
      type: 'H256'
    }, {
      name: 'full',
      type: 'bool'
    }],
    type: 'Option<EthRichBlock>'
  },
  getBlockByNumber: {
    description: 'Returns block with given number.',
    params: [{
      name: 'block',
      type: 'BlockNumber'
    }, {
      name: 'full',
      type: 'bool'
    }],
    type: 'Option<EthRichBlock>'
  },
  getBlockTransactionCountByHash: {
    description: 'Returns the number of transactions in a block with given hash.',
    params: [{
      name: 'hash',
      type: 'H256'
    }],
    type: 'U256'
  },
  getBlockTransactionCountByNumber: {
    description: 'Returns the number of transactions in a block with given block number.',
    params: [{
      name: 'block',
      type: 'BlockNumber'
    }],
    type: 'U256'
  },
  getCode: {
    description: 'Returns the code at given address at given time (block number).',
    params: [{
      name: 'address',
      type: 'H160'
    }, {
      isOptional: true,
      name: 'number',
      type: 'BlockNumber'
    }],
    type: 'Bytes'
  },
  getFilterChanges: {
    description: 'Returns filter changes since last poll.',
    params: [{
      name: 'index',
      type: 'U256'
    }],
    type: 'EthFilterChanges'
  },
  getFilterLogs: {
    description: 'Returns all logs matching given filter (in a range \'from\' - \'to\').',
    params: [{
      name: 'index',
      type: 'U256'
    }],
    type: 'Vec<EthLog>'
  },
  getLogs: {
    description: 'Returns logs matching given filter object.',
    params: [{
      name: 'filter',
      type: 'EthFilter'
    }],
    type: 'Vec<EthLog>'
  },
  getProof: {
    description: 'Returns proof for account and storage.',
    params: [{
      name: 'address',
      type: 'H160'
    }, {
      name: 'storageKeys',
      type: 'Vec<H256>'
    }, {
      name: 'number',
      type: 'BlockNumber'
    }],
    type: 'EthAccount'
  },
  getStorageAt: {
    description: 'Returns content of the storage at given address.',
    params: [{
      name: 'address',
      type: 'H160'
    }, {
      name: 'index',
      type: 'U256'
    }, {
      isOptional: true,
      name: 'number',
      type: 'BlockNumber'
    }],
    type: 'H256'
  },
  getTransactionByBlockHashAndIndex: {
    description: 'Returns transaction at given block hash and index.',
    params: [{
      name: 'hash',
      type: 'H256'
    }, {
      name: 'index',
      type: 'U256'
    }],
    type: 'EthTransaction'
  },
  getTransactionByBlockNumberAndIndex: {
    description: 'Returns transaction by given block number and index.',
    params: [{
      name: 'number',
      type: 'BlockNumber'
    }, {
      name: 'index',
      type: 'U256'
    }],
    type: 'EthTransaction'
  },
  getTransactionByHash: {
    description: 'Get transaction by its hash.',
    params: [{
      name: 'hash',
      type: 'H256'
    }],
    type: 'EthTransaction'
  },
  getTransactionCount: {
    description: 'Returns the number of transactions sent from given address at given time (block number).',
    params: [{
      name: 'hash',
      type: 'H256'
    }, {
      isOptional: true,
      name: 'number',
      type: 'BlockNumber'
    }],
    type: 'U256'
  },
  getTransactionReceipt: {
    description: 'Returns transaction receipt by transaction hash.',
    params: [{
      name: 'hash',
      type: 'H256'
    }],
    type: 'EthReceipt'
  },
  getUncleByBlockHashAndIndex: {
    description: 'Returns an uncles at given block and index.',
    params: [{
      name: 'hash',
      type: 'H256'
    }, {
      name: 'index',
      type: 'U256'
    }],
    type: 'EthRichBlock'
  },
  getUncleByBlockNumberAndIndex: {
    description: 'Returns an uncles at given block and index.',
    params: [{
      name: 'number',
      type: 'BlockNumber'
    }, {
      name: 'index',
      type: 'U256'
    }],
    type: 'EthRichBlock'
  },
  getUncleCountByBlockHash: {
    description: 'Returns the number of uncles in a block with given hash.',
    params: [{
      name: 'hash',
      type: 'H256'
    }],
    type: 'U256'
  },
  getUncleCountByBlockNumber: {
    description: 'Returns the number of uncles in a block with given block number.',
    params: [{
      name: 'number',
      type: 'BlockNumber'
    }],
    type: 'U256'
  },
  getWork: {
    description: 'Returns the hash of the current block, the seedHash, and the boundary condition to be met.',
    params: [],
    type: 'EthWork'
  },
  hashrate: {
    description: 'Returns the number of hashes per second that the node is mining with.',
    params: [],
    type: 'U256'
  },
  mining: {
    description: 'Returns true if client is actively mining new blocks.',
    params: [],
    type: 'bool'
  },
  newBlockFilter: {
    description: 'Returns id of new block filter.',
    params: [],
    type: 'U256'
  },
  newFilter: {
    description: 'Returns id of new filter.',
    params: [{
      name: 'filter',
      type: 'EthFilter'
    }],
    type: 'U256'
  },
  newPendingTransactionFilter: {
    description: 'Returns id of new block filter.',
    params: [],
    type: 'U256'
  },
  protocolVersion: {
    description: 'Returns protocol version encoded as a string (quotes are necessary).',
    params: [],
    type: 'u64'
  },
  sendRawTransaction: {
    description: 'Sends signed transaction, returning its hash.',
    params: [{
      name: 'bytes',
      type: 'Bytes'
    }],
    type: 'H256'
  },
  sendTransaction: {
    description: 'Sends transaction; will block waiting for signer to return the transaction hash',
    params: [{
      name: 'tx',
      type: 'EthTransactionRequest'
    }],
    type: 'H256'
  },
  submitHashrate: {
    description: 'Used for submitting mining hashrate.',
    params: [{
      name: 'index',
      type: 'U256'
    }, {
      name: 'hash',
      type: 'H256'
    }],
    type: 'bool'
  },
  submitWork: {
    description: 'Used for submitting a proof-of-work solution.',
    params: [{
      name: 'nonce',
      type: 'H64'
    }, {
      name: 'headerHash',
      type: 'H256'
    }, {
      name: 'mixDigest',
      type: 'H256'
    }],
    type: 'bool'
  },
  subscribe: {
    description: 'Subscribe to Eth subscription.',
    params: [{
      name: 'kind',
      type: 'EthSubKind'
    }, {
      isOptional: true,
      name: 'params',
      type: 'EthSubParams'
    }],
    pubsub: ['subscription', 'subscribe', 'unsubscribe'],
    type: 'Null'
  },
  syncing: {
    description: 'Returns an object with data about the sync status or false.',
    params: [],
    type: 'EthSyncStatus'
  },
  uninstallFilter: {
    description: 'Uninstalls filter.',
    params: [{
      name: 'index',
      type: 'U256'
    }],
    type: 'bool'
  }
});

/***/ }),
/* 553 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {
    methods: {
      description: 'Retrieves the list of RPC methods that are exposed by the node',
      params: [],
      type: 'RpcMethods'
    }
  },
  types: {
    RpcMethods: {
      version: 'u32',
      methods: 'Vec<Text>'
    }
  }
});

/***/ }),
/* 554 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {
    hasKey: {
      description: 'Returns true if the keystore has private keys for the given public key and key type.',
      params: [{
        name: 'publicKey',
        type: 'Bytes'
      }, {
        name: 'keyType',
        type: 'Text'
      }],
      type: 'bool'
    },
    hasSessionKeys: {
      description: 'Returns true if the keystore has private keys for the given session public keys.',
      params: [{
        name: 'sessionKeys',
        type: 'Bytes'
      }],
      type: 'bool'
    },
    removeExtrinsic: {
      description: 'Remove given extrinsic from the pool and temporarily ban it to prevent reimporting',
      params: [{
        name: 'bytesOrHash',
        type: 'Vec<ExtrinsicOrHash>'
      }],
      type: 'Vec<Hash>'
    },
    insertKey: {
      description: 'Insert a key into the keystore.',
      params: [{
        name: 'keyType',
        type: 'Text'
      }, {
        name: 'suri',
        type: 'Text'
      }, {
        name: 'publicKey',
        type: 'Bytes'
      }],
      type: 'Bytes'
    },
    rotateKeys: {
      description: 'Generate new session keys and returns the corresponding public keys',
      params: [],
      type: 'Bytes'
    },
    pendingExtrinsics: {
      description: 'Returns all pending extrinsics, potentially grouped by sender',
      params: [],
      type: 'Vec<Extrinsic>'
    },
    submitExtrinsic: {
      isSigned: true,
      description: 'Submit a fully formatted extrinsic for block inclusion',
      params: [{
        name: 'extrinsic',
        type: 'Extrinsic'
      }],
      type: 'Hash'
    },
    submitAndWatchExtrinsic: {
      description: 'Submit and subscribe to watch an extrinsic until unsubscribed',
      isSigned: true,
      params: [{
        name: 'extrinsic',
        type: 'Extrinsic'
      }],
      pubsub: ['extrinsicUpdate', 'submitAndWatchExtrinsic', 'unwatchExtrinsic'],
      type: 'ExtrinsicStatus'
    }
  },
  types: {
    ExtrinsicOrHash: {
      _enum: {
        Hash: 'Hash',
        Extrinsic: 'Bytes'
      }
    },
    ExtrinsicStatus: {
      _enum: {
        Future: 'Null',
        Ready: 'Null',
        Broadcast: 'Vec<Text>',
        InBlock: 'Hash',
        Retracted: 'Hash',
        FinalityTimeout: 'Hash',
        Finalized: 'Hash',
        Usurped: 'Hash',
        Dropped: 'Null',
        Invalid: 'Null'
      }
    }
  }
});

/***/ }),
/* 555 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {
    getHeader: {
      alias: ['chain_getHead'],
      description: 'Retrieves the header for a specific block',
      params: [{
        name: 'hash',
        type: 'BlockHash',
        isHistoric: true,
        isOptional: true
      }],
      type: 'Header'
    },
    getBlock: {
      description: 'Get header and body of a relay chain block',
      params: [{
        name: 'hash',
        type: 'BlockHash',
        isHistoric: true,
        isOptional: true
      }],
      type: 'SignedBlock'
    },
    getBlockHash: {
      description: 'Get the block hash for a specific block',
      params: [{
        name: 'blockNumber',
        type: 'BlockNumber',
        isOptional: true
      }],
      type: 'BlockHash'
    },
    getFinalizedHead: {
      alias: ['chain_getFinalisedHead'],
      description: 'Get hash of the last finalized block in the canon chain',
      params: [],
      type: 'BlockHash'
    },
    subscribeNewHeads: {
      alias: ['chain_unsubscribeNewHeads', 'subscribe_newHead', 'unsubscribe_newHead'],
      description: 'Retrieves the best header via subscription',
      params: [],
      // NOTE These still has the aliassed version, compatible with 1.x
      pubsub: ['newHead', 'subscribeNewHead', 'unsubscribeNewHead'],
      type: 'Header'
    },
    subscribeFinalizedHeads: {
      alias: ['chain_subscribeFinalisedHeads', 'chain_unsubscribeFinalisedHeads'],
      description: 'Retrieves the best finalized header via subscription',
      params: [],
      pubsub: ['finalizedHead', 'subscribeFinalizedHeads', 'unsubscribeFinalizedHeads'],
      type: 'Header'
    },
    subscribeAllHeads: {
      description: 'Retrieves the newest header via subscription',
      params: [],
      pubsub: ['allHead', 'subscribeAllHeads', 'unsubscribeAllHeads'],
      type: 'Header'
    }
  },
  types: {
    BlockHash: 'Hash'
  }
});

/***/ }),
/* 556 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {
    getKeys: {
      description: 'Returns the keys with prefix from a child storage, leave empty to get all the keys',
      params: [{
        name: 'childKey',
        type: 'PrefixedStorageKey'
      }, {
        name: 'prefix',
        type: 'StorageKey'
      }, {
        name: 'at',
        type: 'Hash',
        isHistoric: true,
        isOptional: true
      }],
      type: 'Vec<StorageKey>'
    },
    getKeysPaged: {
      alias: ['childstate_getKeysPagedAt'],
      description: 'Returns the keys with prefix from a child storage with pagination support',
      params: [{
        name: 'childKey',
        type: 'PrefixedStorageKey'
      }, {
        name: 'prefix',
        type: 'StorageKey'
      }, {
        name: 'count',
        type: 'u32'
      }, {
        name: 'startKey',
        type: 'StorageKey',
        isOptional: true
      }, {
        name: 'at',
        type: 'Hash',
        isHistoric: true,
        isOptional: true
      }],
      type: 'Vec<StorageKey>'
    },
    getStorage: {
      description: 'Returns a child storage entry at a specific block state',
      params: [{
        name: 'childKey',
        type: 'PrefixedStorageKey'
      }, {
        name: 'key',
        type: 'StorageKey'
      }, {
        name: 'at',
        type: 'Hash',
        isHistoric: true,
        isOptional: true
      }],
      type: 'Option<StorageData>'
    },
    getStorageEntries: {
      description: 'Returns child storage entries for multiple keys at a specific block state',
      params: [{
        name: 'childKey',
        type: 'PrefixedStorageKey'
      }, {
        name: 'keys',
        type: 'Vec<StorageKey>'
      }, {
        name: 'at',
        type: 'Hash',
        isHistoric: true,
        isOptional: true
      }],
      type: 'Vec<Option<StorageData>>'
    },
    getStorageHash: {
      description: 'Returns the hash of a child storage entry at a block state',
      params: [{
        name: 'childKey',
        type: 'PrefixedStorageKey'
      }, {
        name: 'key',
        type: 'StorageKey'
      }, {
        name: 'at',
        type: 'Hash',
        isHistoric: true,
        isOptional: true
      }],
      type: 'Option<Hash>'
    },
    getStorageSize: {
      description: 'Returns the size of a child storage entry at a block state',
      params: [{
        name: 'childKey',
        type: 'PrefixedStorageKey'
      }, {
        name: 'key',
        type: 'StorageKey'
      }, {
        name: 'at',
        type: 'Hash',
        isHistoric: true,
        isOptional: true
      }],
      type: 'Option<u64>'
    }
  },
  types: {
    // StorageKey extends Bytes
    PrefixedStorageKey: 'StorageKey'
  }
});

/***/ }),
/* 557 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {
    localStorageSet: {
      description: 'Set offchain local storage under given key and prefix',
      params: [{
        name: 'kind',
        type: 'StorageKind'
      }, {
        name: 'key',
        type: 'Bytes'
      }, {
        name: 'value',
        type: 'Bytes'
      }],
      type: 'Null'
    },
    localStorageGet: {
      description: 'Get offchain local storage under given key and prefix',
      params: [{
        name: 'kind',
        type: 'StorageKind'
      }, {
        name: 'key',
        type: 'Bytes'
      }],
      type: 'Option<Bytes>'
    }
  },
  types: {
    StorageKind: {
      _enum: {
        PERSISTENT: 1,
        LOCAL: 2
      }
    }
  }
});

/***/ }),
/* 558 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
const QUERY_PARAMS = [{
  name: 'extrinsic',
  type: 'Bytes'
}, {
  name: 'at',
  type: 'BlockHash',
  isHistoric: true,
  isOptional: true
}];
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {
    queryInfo: {
      description: 'Retrieves the fee information for an encoded extrinsic',
      params: QUERY_PARAMS,
      type: 'RuntimeDispatchInfo'
    },
    queryFeeDetails: {
      description: 'Query the detailed fee of a given encoded extrinsic',
      params: QUERY_PARAMS,
      type: 'FeeDetails'
    }
  },
  types: {
    FeeDetails: {
      inclusionFee: 'Option<InclusionFee>' // skipped in serde
      // tip: 'Balance'

    },
    InclusionFee: {
      baseFee: 'Balance',
      lenFee: 'Balance',
      adjustedWeightFee: 'Balance'
    },
    RuntimeDispatchInfo: {
      weight: 'Weight',
      class: 'DispatchClass',
      partialFee: 'Balance'
    }
  }
});

/***/ }),
/* 559 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0
// order important in structs... :)

/* eslint-disable sort-keys */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  rpc: {
    call: {
      alias: ['state_callAt'],
      description: 'Perform a call to a builtin on the chain',
      params: [{
        name: 'method',
        type: 'Text'
      }, {
        name: 'data',
        type: 'Bytes'
      }, {
        name: 'at',
        type: 'BlockHash',
        isHistoric: true,
        isOptional: true
      }],
      type: 'Bytes'
    },
    getKeys: {
      description: 'Retrieves the keys with a certain prefix',
      params: [{
        name: 'key',
        type: 'StorageKey'
      }, {
        name: 'at',
        type: 'BlockHash',
        isHistoric: true,
        isOptional: true
      }],
      type: 'Vec<StorageKey>'
    },
    getPairs: {
      description: 'Returns the keys with prefix, leave empty to get all the keys (deprecated: Use getKeysPaged)',
      params: [{
        name: 'prefix',
        type: 'StorageKey'
      }, {
        name: 'at',
        type: 'BlockHash',
        isHistoric: true,
        isOptional: true
      }],
      type: 'Vec<KeyValue>'
    },
    getKeysPaged: {
      alias: ['state_getKeysPagedAt'],
      description: 'Returns the keys with prefix with pagination support.',
      params: [{
        name: 'key',
        type: 'StorageKey'
      }, {
        name: 'count',
        type: 'u32'
      }, {
        name: 'startKey',
        type: 'StorageKey',
        isOptional: true
      }, {
        name: 'at',
        type: 'BlockHash',
        isHistoric: true,
        isOptional: true
      }],
      type: 'Vec<StorageKey>'
    },
    getStorage: {
      alias: ['state_getStorageAt'],
      description: 'Retrieves the storage for a key',
      params: [{
        name: 'key',
        type: 'StorageKey'
      }, {
        name: 'at',
        type: 'BlockHash',
        isHistoric: true,
        isOptional: true
      }],
      type: 'StorageData'
    },
    getStorageHash: {
      alias: ['state_getStorageHashAt'],
      description: 'Retrieves the storage hash',
      params: [{
        name: 'key',
        type: 'StorageKey'
      }, {
        name: 'at',
        type: 'BlockHash',
        isHistoric: true,
        isOptional: true
      }],
      type: 'Hash'
    },
    getStorageSize: {
      alias: ['state_getStorageSizeAt'],
      description: 'Retrieves the storage size',
      params: [{
        name: 'key',
        type: 'StorageKey'
      }, {
        name: 'at',
        type: 'BlockHash',
        isHistoric: true,
        isOptional: true
      }],
      type: 'u64'
    },
    getChildKeys: {
      description: 'Retrieves the keys with prefix of a specific child storage',
      params: [{
        name: 'childStorageKey',
        type: 'StorageKey'
      }, {
        name: 'childDefinition',
        type: 'StorageKey'
      }, {
        name: 'childType',
        type: 'u32'
      }, {
        name: 'key',
        type: 'StorageKey'
      }, {
        name: 'at',
        type: 'BlockHash',
        isHistoric: true,
        isOptional: true
      }],
      type: 'Vec<StorageKey>'
    },
    getChildStorage: {
      description: 'Retrieves the child storage for a key',
      params: [{
        name: 'childStorageKey',
        type: 'StorageKey'
      }, {
        name: 'childDefinition',
        type: 'StorageKey'
      }, {
        name: 'childType',
        type: 'u32'
      }, {
        name: 'key',
        type: 'StorageKey'
      }, {
        name: 'at',
        type: 'BlockHash',
        isHistoric: true,
        isOptional: true
      }],
      type: 'StorageData'
    },
    getChildStorageHash: {
      description: 'Retrieves the child storage hash',
      params: [{
        name: 'childStorageKey',
        type: 'StorageKey'
      }, {
        name: 'childDefinition',
        type: 'StorageKey'
      }, {
        name: 'childType',
        type: 'u32'
      }, {
        name: 'key',
        type: 'StorageKey'
      }, {
        name: 'at',
        type: 'BlockHash',
        isHistoric: true,
        isOptional: true
      }],
      type: 'Hash'
    },
    getChildStorageSize: {
      description: 'Retrieves the child storage size',
      params: [{
        name: 'childStorageKey',
        type: 'StorageKey'
      }, {
        name: 'childDefinition',
        type: 'StorageKey'
      }, {
        name: 'childType',
        type: 'u32'
      }, {
        name: 'key',
        type: 'StorageKey'
      }, {
        name: 'at',
        type: 'BlockHash',
        isHistoric: true,
        isOptional: true
      }],
      type: 'u64'
    },
    getMetadata: {
      description: 'Returns the runtime metadata',
      params: [{
        name: 'at',
        type: 'BlockHash',
        isHistoric: true,
        isOptional: true
      }],
      type: 'Metadata'
    },
    getRuntimeVersion: {
      alias: ['chain_getRuntimeVersion'],
      description: 'Get the runtime version',
      params: [{
        name: 'at',
        type: 'BlockHash',
        isHistoric: true,
        isOptional: true
      }],
      type: 'RuntimeVersion'
    },
    queryStorage: {
      description: 'Query historical storage entries (by key) starting from a start block',
      params: [{
        name: 'keys',
        type: 'Vec<StorageKey>'
      }, {
        name: 'fromBlock',
        type: 'Hash'
      }, {
        name: 'toBlock',
        type: 'BlockHash',
        isOptional: true
      }],
      type: 'Vec<StorageChangeSet>'
    },
    queryStorageAt: {
      description: 'Query storage entries (by key) starting at block hash given as the second parameter',
      params: [{
        name: 'keys',
        type: 'Vec<StorageKey>'
      }, {
        name: 'at',
        type: 'BlockHash',
        isHistoric: true,
        isOptional: true
      }],
      type: 'Vec<StorageChangeSet>'
    },
    getChildReadProof: {
      description: 'Returns proof of storage for child key entries at a specific block state.',
      params: [{
        name: 'childStorageKey',
        type: 'PrefixedStorageKey'
      }, {
        name: 'keys',
        type: 'Vec<StorageKey>'
      }, {
        name: 'at',
        type: 'BlockHash',
        isHistoric: true,
        isOptional: true
      }],
      type: 'ReadProof'
    },
    getReadProof: {
      description: 'Returns proof of storage entries at a specific block state',
      params: [{
        name: 'keys',
        type: 'Vec<StorageKey>'
      }, {
        name: 'at',
        type: 'BlockHash',
        isHistoric: true,
        isOptional: true
      }],
      type: 'ReadProof'
    },
    subscribeRuntimeVersion: {
      alias: ['chain_subscribeRuntimeVersion', 'chain_unsubscribeRuntimeVersion'],
      description: 'Retrieves the runtime version via subscription',
      params: [],
      pubsub: ['runtimeVersion', 'subscribeRuntimeVersion', 'unsubscribeRuntimeVersion'],
      type: 'RuntimeVersion'
    },
    subscribeStorage: {
      description: 'Subscribes to storage changes for the provided keys',
      params: [{
        name: 'keys',
        type: 'Vec<StorageKey>',
        isOptional: true
      }],
      pubsub: ['storage', 'subscribeStorage', 'unsubscribeStorage'],
      type: 'StorageChangeSet'
    },
    traceBlock: {
      description: 'Provides a way to trace the re-execution of a single block',
      params: [{
        name: 'block',
        type: 'Hash'
      }, {
        name: 'targets',
        type: 'Option<Text>'
      }, {
        name: 'storageKeys',
        type: 'Option<Text>'
      }],
      type: 'TraceBlockResponse'
    }
  },
  types: {
    ApiId: '[u8; 8]',
    BlockTrace: {
      blockHash: 'Text',
      parentHash: 'Text',
      tracingTargets: 'Text',
      storageKeys: 'Text',
      spans: 'Vec<BlockTraceSpan>',
      events: 'Vec<BlockTraceEvent>'
    },
    BlockTraceEvent: {
      target: 'Text',
      data: 'BlockTraceEventData',
      parentId: 'Option<u64>'
    },
    BlockTraceEventData: {
      stringValues: 'HashMap<Text, Text>'
    },
    BlockTraceSpan: {
      id: 'u64',
      parentId: 'Option<u64>',
      name: 'Text',
      target: 'Text',
      wasm: 'bool'
    },
    KeyValueOption: '(StorageKey, Option<StorageData>)',
    ReadProof: {
      at: 'Hash',
      proof: 'Vec<Bytes>'
    },
    RuntimeVersionApi: '(ApiId, u32)',
    RuntimeVersion: {
      specName: 'Text',
      implName: 'Text',
      authoringVersion: 'u32',
      specVersion: 'u32',
      implVersion: 'u32',
      apis: 'Vec<RuntimeVersionApi>',
      transactionVersion: 'u32'
    },
    RuntimeVersionPartial: {
      specName: 'Text',
      specVersion: 'u32'
    },
    SpecVersion: 'u32',
    StorageChangeSet: {
      block: 'Hash',
      changes: 'Vec<KeyValueOption>'
    },
    TraceBlockResponse: {
      _enum: {
        TraceError: 'TraceError',
        BlockTrace: 'BlockTrace'
      }
    },
    TraceError: {
      error: 'Text'
    }
  }
});

/***/ }),
/* 560 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "constructTypeClass": () => (/* binding */ constructTypeClass),
/* harmony export */   "getTypeClass": () => (/* binding */ getTypeClass),
/* harmony export */   "createClass": () => (/* binding */ createClass)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(292);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(124);
/* harmony import */ var _codec_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(561);
/* harmony import */ var _codec_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(564);
/* harmony import */ var _codec_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(566);
/* harmony import */ var _codec_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(567);
/* harmony import */ var _codec_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(426);
/* harmony import */ var _codec_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(568);
/* harmony import */ var _codec_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(472);
/* harmony import */ var _codec_index_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(319);
/* harmony import */ var _codec_index_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(431);
/* harmony import */ var _codec_index_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(569);
/* harmony import */ var _codec_index_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(570);
/* harmony import */ var _codec_index_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(571);
/* harmony import */ var _codec_index_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(312);
/* harmony import */ var _codec_index_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(366);
/* harmony import */ var _codec_index_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(572);
/* harmony import */ var _codec_index_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(444);
/* harmony import */ var _codec_index_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(573);
/* harmony import */ var _codec_index_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(574);
/* harmony import */ var _primitive_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(311);
/* harmony import */ var _primitive_index_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(469);
/* harmony import */ var _getTypeDef_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(404);
/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(405);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0






function getTypeDefType({
  lookupName,
  type
}) {
  return lookupName || type;
}

function getSubDefArray(value) {
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)(value.sub && Array.isArray(value.sub), () => `Expected subtype as TypeDef[] in ${(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.stringify)(value)}`);
  return value.sub;
}

function getSubDef(value) {
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)(value.sub && !Array.isArray(value.sub), () => `Expected subtype as TypeDef in ${(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.stringify)(value)}`);
  return value.sub;
}

function getSubType(value) {
  return getTypeDefType(getSubDef(value));
} // create a maps of type string constructors from the input


function getTypeClassMap(value) {
  const subs = getSubDefArray(value);
  const map = {};

  for (let i = 0; i < subs.length; i++) {
    map[subs[i].name] = getTypeDefType(subs[i]);
  }

  return map;
} // create an array of type string constructors from the input


function getTypeClassArray(value) {
  return getSubDefArray(value).map(getTypeDefType);
}

function createInt({
  displayName,
  length
}, Clazz) {
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isNumber)(length), () => `Expected bitLength information for ${displayName || Clazz.constructor.name}<bitLength>`);
  return Clazz.with(length, displayName);
}

function createHashMap(value, Clazz) {
  const [keyType, valueType] = getTypeClassArray(value);
  return Clazz.with(keyType, valueType);
}

const infoMapping = {
  [_types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.BTreeMap]: (registry, value) => createHashMap(value, _codec_index_js__WEBPACK_IMPORTED_MODULE_4__.BTreeMap),
  [_types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.BTreeSet]: (registry, value) => _codec_index_js__WEBPACK_IMPORTED_MODULE_5__.BTreeSet["with"](getSubType(value)),
  [_types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.Compact]: (registry, value) => _codec_index_js__WEBPACK_IMPORTED_MODULE_6__.Compact["with"](getSubType(value)),
  [_types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.DoNotConstruct]: (registry, value) => _codec_index_js__WEBPACK_IMPORTED_MODULE_7__.DoNotConstruct["with"](value.displayName || value.type),
  [_types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.Enum]: (registry, value) => {
    const subs = getSubDefArray(value);
    return _codec_index_js__WEBPACK_IMPORTED_MODULE_8__.Enum["with"](subs.every(({
      type
    }) => type === 'Null') ? subs.reduce((out, {
      index,
      name
    }, count) => {
      out[name] = index || count;
      return out;
    }, {}) : getTypeClassMap(value));
  },
  [_types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.HashMap]: (registry, value) => createHashMap(value, _codec_index_js__WEBPACK_IMPORTED_MODULE_9__.HashMap),
  [_types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.Int]: (registry, value) => createInt(value, _codec_index_js__WEBPACK_IMPORTED_MODULE_10__.Int),
  // We have circular deps between Linkage & Struct
  [_types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.Linkage]: (registry, value) => {
    const type = `Option<${getSubType(value)}>`; // eslint-disable-next-line sort-keys

    const Clazz = _codec_index_js__WEBPACK_IMPORTED_MODULE_11__.Struct["with"]({
      previous: type,
      next: type
    }); // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access

    Clazz.prototype.toRawType = function () {
      // eslint-disable-next-line @typescript-eslint/restrict-template-expressions,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call
      return `Linkage<${this.next.toRawType(true)}>`;
    };

    return Clazz;
  },
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  [_types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.Null]: (registry, _) => _primitive_index_js__WEBPACK_IMPORTED_MODULE_12__.Null,
  [_types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.Option]: (registry, value) => _codec_index_js__WEBPACK_IMPORTED_MODULE_13__.Option["with"](getSubType(value)),
  [_types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.Plain]: (registry, value) => registry.getOrUnknown(value.type),
  [_types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.Range]: (registry, value) => (value.type.includes('RangeInclusive') ? _codec_index_js__WEBPACK_IMPORTED_MODULE_14__.RangeInclusive : _codec_index_js__WEBPACK_IMPORTED_MODULE_14__.Range).with(getSubType(value)),
  [_types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.Result]: (registry, value) => {
    const [Ok, Err] = getTypeClassArray(value); // eslint-disable-next-line @typescript-eslint/no-use-before-define

    return _codec_index_js__WEBPACK_IMPORTED_MODULE_15__.Result["with"]({
      Err,
      Ok
    });
  },
  [_types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.Set]: (registry, value) => _codec_index_js__WEBPACK_IMPORTED_MODULE_16__.CodecSet["with"](getSubDefArray(value).reduce((result, {
    index,
    name
  }) => {
    result[name] = index;
    return result;
  }, {}), value.length),
  [_types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.Si]: (registry, value) => getTypeClass(registry, registry.lookup.getTypeDef(value.type)),
  [_types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.Struct]: (registry, value) => _codec_index_js__WEBPACK_IMPORTED_MODULE_11__.Struct["with"](getTypeClassMap(value), value.alias),
  [_types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.Tuple]: (registry, value) => _codec_index_js__WEBPACK_IMPORTED_MODULE_17__.Tuple["with"](getTypeClassArray(value)),
  [_types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.UInt]: (registry, value) => createInt(value, _codec_index_js__WEBPACK_IMPORTED_MODULE_18__.UInt),
  [_types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.Vec]: (registry, {
    sub
  }) => {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)(sub && !Array.isArray(sub), 'Expected type information for vector');
    return sub.type === 'u8' ? _primitive_index_js__WEBPACK_IMPORTED_MODULE_19__.Bytes : _codec_index_js__WEBPACK_IMPORTED_MODULE_20__.Vec["with"](getTypeDefType(sub));
  },
  [_types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.VecFixed]: (registry, {
    displayName,
    length,
    sub
  }) => {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)(sub && (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isNumber)(length) && !Array.isArray(sub), 'Expected length & type information for fixed vector');
    return sub.type === 'u8' ? _codec_index_js__WEBPACK_IMPORTED_MODULE_21__.U8aFixed["with"](length * 8, displayName) : _codec_index_js__WEBPACK_IMPORTED_MODULE_22__.VecFixed["with"](getTypeDefType(sub), length);
  },
  [_types_js__WEBPACK_IMPORTED_MODULE_3__.TypeDefInfo.WrapperOpaque]: (registry, value) => _codec_index_js__WEBPACK_IMPORTED_MODULE_23__.WrapperOpaque["with"](getSubType(value))
};
function constructTypeClass(registry, typeDef) {
  try {
    const Type = infoMapping[typeDef.info](registry, typeDef);
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)(Type, 'No class created'); // don't clobber any existing

    if (!Type.__fallbackType && typeDef.fallbackType) {
      // eslint-disable-next-line @typescript-eslint/ban-ts-comment
      // @ts-ignore ...this is the only place we we actually assign this...
      Type.__fallbackType = typeDef.fallbackType;
    }

    return Type;
  } catch (error) {
    throw new Error(`Unable to construct class from ${(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.stringify)(typeDef)}: ${error.message}`);
  }
} // Returns the type Class for construction

function getTypeClass(registry, typeDef) {
  return registry.get(typeDef.type, false, typeDef);
}
function createClass(registry, type) {
  return getTypeClass(registry, registry.isLookupType(type) ? registry.lookup.getTypeDef(type) : (0,_getTypeDef_js__WEBPACK_IMPORTED_MODULE_24__.getTypeDef)(type));
}

/***/ }),
/* 561 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BTreeMap": () => (/* binding */ BTreeMap)
/* harmony export */ });
/* harmony import */ var _Map_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(562);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

class BTreeMap extends _Map_js__WEBPACK_IMPORTED_MODULE_0__.CodecMap {
  static with(keyType, valType) {
    return class extends BTreeMap {
      constructor(registry, value) {
        super(registry, keyType, valType, value, 'BTreeMap');
      }

    };
  }

}

/***/ }),
/* 562 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CodecMap": () => (/* binding */ CodecMap)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(285);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(423);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(126);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(286);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(239);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(196);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(292);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(197);
/* harmony import */ var _AbstractArray_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(314);
/* harmony import */ var _Enum_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(426);
/* harmony import */ var _Struct_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(319);
/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(313);
/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(317);
/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(563);
/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(321);


// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0





const l = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.logger)('Map');
/** @internal */

function decodeMapFromU8a(registry, KeyClass, ValClass, u8a) {
  const output = new Map();
  const [offset, length] = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.compactFromU8a)(u8a);
  const count = length.toNumber();
  const types = [];

  for (let i = 0; i < count; i++) {
    types.push(KeyClass, ValClass);
  }

  const [values, decodedLength] = (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_4__.decodeU8a)(registry, u8a.subarray(offset), types);

  for (let i = 0; i < values.length; i += 2) {
    output.set(values[i], values[i + 1]);
  }

  return [output, offset + decodedLength];
}
/** @internal */


function decodeMapFromMap(registry, KeyClass, ValClass, value) {
  const output = new Map();

  for (const [key, val] of value.entries()) {
    const isComplex = KeyClass.prototype instanceof _AbstractArray_js__WEBPACK_IMPORTED_MODULE_5__.AbstractArray || KeyClass.prototype instanceof _Struct_js__WEBPACK_IMPORTED_MODULE_6__.Struct || KeyClass.prototype instanceof _Enum_js__WEBPACK_IMPORTED_MODULE_7__.Enum;

    try {
      output.set(key instanceof KeyClass ? key : new KeyClass(registry, isComplex ? JSON.parse(key) : key), val instanceof ValClass ? val : new ValClass(registry, val));
    } catch (error) {
      l.error('Failed to decode key or value:', error.message);
      throw error;
    }
  }

  return [output, 0];
}
/**
 * Decode input to pass into constructor.
 *
 * @param KeyClass - Type of the map key
 * @param ValClass - Type of the map value
 * @param value - Value to decode, one of:
 * - null
 * - undefined
 * - hex
 * - Uint8Array
 * - Map<any, any>, where both key and value types are either
 *   constructors or decodeable values for their types.
 * @param jsonMap
 * @internal
 */


function decodeMap(registry, keyType, valType, value) {
  const KeyClass = (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_8__.typeToConstructor)(registry, keyType);
  const ValClass = (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_8__.typeToConstructor)(registry, valType);

  if (!value) {
    return [new Map(), 0];
  } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.isU8a)(value) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_10__.isHex)(value)) {
    return decodeMapFromU8a(registry, KeyClass, ValClass, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_11__.u8aToU8a)(value));
  } else if (value instanceof Map) {
    return decodeMapFromMap(registry, KeyClass, ValClass, value);
  } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_12__.isObject)(value)) {
    return decodeMapFromMap(registry, KeyClass, ValClass, new Map(Object.entries(value)));
  }

  throw new Error('Map: cannot decode type');
}

var _KeyClass = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("KeyClass");

var _ValClass = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("ValClass");

var _type = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("type");

class CodecMap extends Map {
  constructor(registry, keyType, valType, rawValue, type = 'HashMap') {
    const [decoded, decodedLength] = decodeMap(registry, keyType, valType, rawValue);
    super(type === 'BTreeMap' ? (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_13__.sortMap)(decoded) : decoded);
    this.registry = void 0;
    this.createdAtHash = void 0;
    Object.defineProperty(this, _KeyClass, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _ValClass, {
      writable: true,
      value: void 0
    });
    this.initialU8aLength = void 0;
    Object.defineProperty(this, _type, {
      writable: true,
      value: void 0
    });
    this.registry = registry;
    this.initialU8aLength = decodedLength;
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _KeyClass)[_KeyClass] = (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_8__.typeToConstructor)(registry, keyType);
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _ValClass)[_ValClass] = (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_8__.typeToConstructor)(registry, valType);
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _type)[_type] = type;
  }
  /**
   * @description The length of the value when encoded as a Uint8Array
   */


  get encodedLength() {
    let len = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_14__.compactToU8a)(this.size).length;

    for (const [k, v] of this.entries()) {
      len += v.encodedLength + k.encodedLength;
    }

    return len;
  }
  /**
   * @description Returns a hash of the value
   */


  get hash() {
    return this.registry.hash(this.toU8a());
  }
  /**
   * @description Checks if the value is an empty value
   */


  get isEmpty() {
    return this.size === 0;
  }
  /**
   * @description Compares the value of the input to see if there is a match
   */


  eq(other) {
    return (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_15__.compareMap)(this, other);
  }
  /**
   * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation
   */


  toHex() {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_16__.u8aToHex)(this.toU8a());
  }
  /**
   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
   */


  toHuman(isExtended) {
    const json = {};

    for (const [k, v] of this.entries()) {
      json[k.toString()] = v.toHuman(isExtended);
    }

    return json;
  }
  /**
   * @description Converts the Object to JSON, typically used for RPC transfers
   */


  toJSON() {
    const json = {};

    for (const [k, v] of this.entries()) {
      json[k.toString()] = v.toJSON();
    }

    return json;
  }
  /**
   * @description Returns the base runtime type name for this instance
   */


  toRawType() {
    return `${(0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _type)[_type]}<${this.registry.getClassName((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _KeyClass)[_KeyClass]) || new ((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _KeyClass)[_KeyClass])(this.registry).toRawType()},${this.registry.getClassName((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _ValClass)[_ValClass]) || new ((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _ValClass)[_ValClass])(this.registry).toRawType()}>`;
  }
  /**
   * @description Returns the string representation of the value
   */


  toString() {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_17__.stringify)(this.toJSON());
  }
  /**
   * @description Encodes the value as a Uint8Array as per the SCALE specifications
   * @param isBare true when the value has none of the type-specific prefixes (internal)
   */


  toU8a(isBare) {
    const encoded = new Array();

    if (!isBare) {
      encoded.push((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_14__.compactToU8a)(this.size));
    }

    for (const [k, v] of this.entries()) {
      encoded.push(k.toU8a(isBare), v.toU8a(isBare));
    }

    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_18__.u8aConcat)(...encoded);
  }

}

/***/ }),
/* 563 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "sortAsc": () => (/* binding */ sortAsc),
/* harmony export */   "sortSet": () => (/* binding */ sortSet),
/* harmony export */   "sortMap": () => (/* binding */ sortMap)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(81);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(124);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(237);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(130);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(125);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(292);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0


/** @internal **/
function isArrayLike(arg) {
  return arg instanceof Uint8Array || Array.isArray(arg);
}
/** @internal **/


function isCodec(arg) {
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.isFunction)(arg && arg.toU8a);
}
/** @internal **/


function isEnum(arg) {
  return isCodec(arg) && (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isNumber)(arg.index) && isCodec(arg.value);
}
/** @internal */


function isNumberLike(arg) {
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isNumber)(arg) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isBn)(arg) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.isBigInt)(arg);
}
/** @internal */


function sortArray(a, b) {
  // Vec, Tuple, Bytes etc.
  let sortRes = 0;
  const minLen = Math.min(a.length, b.length);

  for (let i = 0; i < minLen; ++i) {
    sortRes = sortAsc(a[i], b[i]);

    if (sortRes !== 0) {
      return sortRes;
    }
  }

  return a.length - b.length;
}
/**
* Sort keys/values of BTreeSet/BTreeMap in ascending order for encoding compatibility with Rust's BTreeSet/BTreeMap
* (https://doc.rust-lang.org/stable/std/collections/struct.BTreeSet.html)
* (https://doc.rust-lang.org/stable/std/collections/struct.BTreeMap.html)
*/


function sortAsc(a, b) {
  if (isNumberLike(a) && isNumberLike(b)) {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.bnToBn)(a).cmp((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.bnToBn)(b));
  } else if (a instanceof Map && b instanceof Map) {
    return sortAsc(Array.from(a.values()), Array.from(b.values()));
  } else if (isEnum(a) && isEnum(b)) {
    return sortAsc(a.index, b.index) || sortAsc(a.value, b.value);
  } else if (isArrayLike(a) && isArrayLike(b)) {
    return sortArray(a, b);
  } else if (isCodec(a) && isCodec(b)) {
    // Text, Bool etc.
    return sortAsc(a.toU8a(true), b.toU8a(true));
  }

  throw new Error(`Attempting to sort unrecognized values: ${(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.stringify)(a)} (typeof ${typeof a}) <-> ${(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.stringify)(b)} (typeof ${typeof b})`);
}
function sortSet(set) {
  return new Set(Array.from(set).sort(sortAsc));
}
function sortMap(map) {
  return new Map(Array.from(map.entries()).sort(([keyA], [keyB]) => sortAsc(keyA, keyB)));
}

/***/ }),
/* 564 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BTreeSet": () => (/* binding */ BTreeSet)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(285);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(423);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(126);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(239);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(196);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(292);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(197);
/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(313);
/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(317);
/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(563);
/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(565);


// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0


const l = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.logger)('BTreeSet');
/** @internal */

function decodeSetFromU8a(registry, ValClass, u8a) {
  const output = new Set();
  const [offset, length] = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.compactFromU8a)(u8a);
  const [values, decodedLength] = (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_4__.decodeU8aVec)(registry, u8a, offset, ValClass, length.toNumber());

  for (let i = 0; i < values.length; i++) {
    output.add(values[i]);
  }

  return [output, decodedLength + offset];
}
/** @internal */


function decodeSetFromSet(registry, ValClass, value) {
  const output = new Set();
  value.forEach(val => {
    try {
      output.add(val instanceof ValClass ? val : new ValClass(registry, val));
    } catch (error) {
      l.error('Failed to decode key or value:', error.message);
      throw error;
    }
  });
  return [output, 0];
}
/**
 * Decode input to pass into constructor.
 *
 * @param ValClass - Type of the map value
 * @param value - Value to decode, one of:
 * - null
 * - undefined
 * - hex
 * - Uint8Array
 * - Set<any>, where both key and value types are either
 *   constructors or decodeable values for their types.
 * @param jsonSet
 * @internal
 */


function decodeSet(registry, valType, value) {
  if (!value) {
    return [new Set(), 0];
  }

  const ValClass = (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_5__.typeToConstructor)(registry, valType);

  if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.isU8a)(value) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_7__.isHex)(value)) {
    return decodeSetFromU8a(registry, ValClass, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_8__.u8aToU8a)(value));
  } else if (Array.isArray(value) || value instanceof Set) {
    return decodeSetFromSet(registry, ValClass, value);
  }

  throw new Error('BTreeSet: cannot decode type');
}

var _ValClass = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("ValClass");

class BTreeSet extends Set {
  constructor(registry, valType, rawValue) {
    const [values, decodedLength] = decodeSet(registry, valType, rawValue);
    super((0,_utils_index_js__WEBPACK_IMPORTED_MODULE_9__.sortSet)(values));
    this.registry = void 0;
    this.createdAtHash = void 0;
    this.initialU8aLength = void 0;
    Object.defineProperty(this, _ValClass, {
      writable: true,
      value: void 0
    });
    this.registry = registry;
    this.initialU8aLength = decodedLength;
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _ValClass)[_ValClass] = (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_5__.typeToConstructor)(registry, valType);
  }

  static with(valType) {
    return class extends BTreeSet {
      constructor(registry, value) {
        super(registry, valType, value);
      }

    };
  }
  /**
   * @description The length of the value when encoded as a Uint8Array
   */


  get encodedLength() {
    let len = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_10__.compactToU8a)(this.size).length;

    for (const v of this.values()) {
      len += v.encodedLength;
    }

    return len;
  }
  /**
   * @description Returns a hash of the value
   */


  get hash() {
    return this.registry.hash(this.toU8a());
  }
  /**
   * @description Checks if the value is an empty value
   */


  get isEmpty() {
    return this.size === 0;
  }
  /**
   * @description The actual set values as a string[]
   */


  get strings() {
    return [...super.values()].map(v => v.toString());
  }
  /**
   * @description Compares the value of the input to see if there is a match
   */


  eq(other) {
    return (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_11__.compareSet)(this, other);
  }
  /**
   * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation
   */


  toHex() {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_12__.u8aToHex)(this.toU8a());
  }
  /**
   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
   */


  toHuman(isExtended) {
    const json = [];

    for (const v of this.values()) {
      json.push(v.toHuman(isExtended));
    }

    return json;
  }
  /**
   * @description Converts the Object to JSON, typically used for RPC transfers
   */


  toJSON() {
    const json = [];

    for (const v of this.values()) {
      json.push(v.toJSON());
    }

    return json;
  }
  /**
   * @description Returns the base runtime type name for this instance
   */


  toRawType() {
    return `BTreeSet<${this.registry.getClassName((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _ValClass)[_ValClass]) || new ((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _ValClass)[_ValClass])(this.registry).toRawType()}>`;
  }
  /**
   * @description Returns the string representation of the value
   */


  toString() {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_13__.stringify)(this.toJSON());
  }
  /**
   * @description Encodes the value as a Uint8Array as per the SCALE specifications
   * @param isBare true when the value has none of the type-specific prefixes (internal)
   */


  toU8a(isBare) {
    const encoded = new Array();

    if (!isBare) {
      encoded.push((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_10__.compactToU8a)(this.size));
    }

    for (const v of this.values()) {
      encoded.push(v.toU8a(isBare));
    }

    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_14__.u8aConcat)(...encoded);
  }

}

/***/ }),
/* 565 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "compareSet": () => (/* binding */ compareSet)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(286);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0


function compareSetArray(a, b) {
  // equal number of entries and each entry in the array should match
  return a.size === b.length && !b.some(e => !a.has(e));
} // NOTE These are used internally and when comparing objects, expects that
// when the second is an Set<string, Codec> that the first has to be as well


function compareSet(a, b) {
  if (Array.isArray(b)) {
    return compareSetArray(a, b);
  } else if (b instanceof Set) {
    return compareSetArray(a, [...b.values()]);
  } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.isObject)(b)) {
    return compareSetArray(a, Object.values(b));
  }

  return false;
}

/***/ }),
/* 566 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Compact": () => (/* binding */ Compact)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(169);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(124);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(237);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(130);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(423);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(239);
/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(317);


// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0


/**
 * @name Compact
 * @description
 * A compact length-encoding codec wrapper. It performs the same function as Length, however
 * differs in that it uses a variable number of bytes to do the actual encoding. This is mostly
 * used by other types to add length-prefixed encoding, or in the case of wrapped types, taking
 * a number and making the compact representation thereof
 */

var _Type = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("Type");

var _raw = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("raw");

class Compact {
  constructor(registry, Type, value = 0) {
    this.registry = void 0;
    this.createdAtHash = void 0;
    this.initialU8aLength = void 0;
    Object.defineProperty(this, _Type, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _raw, {
      writable: true,
      value: void 0
    });
    this.registry = registry;
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _Type)[_Type] = (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_2__.typeToConstructor)(registry, Type);
    const [raw, decodedLength] = Compact.decodeCompact(registry, (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _Type)[_Type], value);
    this.initialU8aLength = decodedLength;
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _raw)[_raw] = raw;
  }

  static with(Type) {
    return class extends Compact {
      constructor(registry, value) {
        super(registry, Type, value);
      }

    };
  }
  /** @internal */


  static decodeCompact(registry, Type, value) {
    if (value instanceof Compact) {
      return [new Type(registry, (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(value, _raw)[_raw]), 0];
    } else if (value instanceof Type) {
      return [value, 0];
    } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.isString)(value) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.isNumber)(value) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.isBn)(value) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.isBigInt)(value)) {
      return [new Type(registry, value), 0];
    }

    const [decodedLength, bn] = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_7__.compactFromU8a)(value);
    return [new Type(registry, bn), decodedLength];
  }
  /**
   * @description The length of the value when encoded as a Uint8Array
   */


  get encodedLength() {
    return this.toU8a().length;
  }
  /**
   * @description returns a hash of the contents
   */


  get hash() {
    return this.registry.hash(this.toU8a());
  }
  /**
   * @description Checks if the value is an empty value
   */


  get isEmpty() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _raw)[_raw].isEmpty;
  }
  /**
   * @description Returns the number of bits in the value
   */


  bitLength() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _raw)[_raw].bitLength();
  }
  /**
   * @description Compares the value of the input to see if there is a match
   */


  eq(other) {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _raw)[_raw].eq(other instanceof Compact ? (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(other, _raw)[_raw] : other);
  }
  /**
   * @description Returns a BigInt representation of the number
   */


  toBigInt() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _raw)[_raw].toBigInt();
  }
  /**
   * @description Returns the BN representation of the number
   */


  toBn() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _raw)[_raw].toBn();
  }
  /**
   * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation
   */


  toHex(isLe) {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _raw)[_raw].toHex(isLe);
  }
  /**
   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
   */


  toHuman(isExtended) {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _raw)[_raw].toHuman(isExtended);
  }
  /**
   * @description Converts the Object to JSON, typically used for RPC transfers
   */


  toJSON() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _raw)[_raw].toJSON();
  }
  /**
   * @description Returns the number representation for the value
   */


  toNumber() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _raw)[_raw].toNumber();
  }
  /**
   * @description Returns the base runtime type name for this instance
   */


  toRawType() {
    return `Compact<${this.registry.getClassName((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _Type)[_Type]) || (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _raw)[_raw].toRawType()}>`;
  }
  /**
   * @description Returns the string representation of the value
   */


  toString() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _raw)[_raw].toString();
  }
  /**
   * @description Encodes the value as a Uint8Array as per the SCALE specifications
   * @param isBare true when the value has none of the type-specific prefixes (internal)
   */
  // eslint-disable-next-line @typescript-eslint/no-unused-vars


  toU8a(isBare) {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_8__.compactToU8a)((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _raw)[_raw].toBn());
  }
  /**
   * @description Returns the embedded [[UInt]] or [[Moment]] value
   */


  unwrap() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _raw)[_raw];
  }

}

/***/ }),
/* 567 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DoNotConstruct": () => (/* binding */ DoNotConstruct)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);



var _neverError = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("neverError");

// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name DoNotConstruct
 * @description
 * An unknown type that fails on construction with the type info
 */
class DoNotConstruct {
  constructor(registry, typeName = 'DoNotConstruct') {
    this.registry = void 0;
    this.createdAtHash = void 0;
    Object.defineProperty(this, _neverError, {
      writable: true,
      value: void 0
    });
    this.registry = registry;
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _neverError)[_neverError] = new Error(`DoNotConstruct: Cannot construct unknown type ${typeName}`);
    throw (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _neverError)[_neverError];
  }

  static with(typeName) {
    return class extends DoNotConstruct {
      constructor(registry) {
        super(registry, typeName);
      }

    };
  }
  /**
   * @description The length of the value when encoded as a Uint8Array
   */


  get encodedLength() {
    throw (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _neverError)[_neverError];
  }
  /**
   * @description returns a hash of the contents
   */


  get hash() {
    throw (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _neverError)[_neverError];
  }
  /**
   * @description Checks if the value is an empty value (always true)
   */


  get isEmpty() {
    throw (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _neverError)[_neverError];
  }

  eq() {
    throw (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _neverError)[_neverError];
  }

  toHex() {
    throw (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _neverError)[_neverError];
  }

  toHuman() {
    throw (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _neverError)[_neverError];
  }

  toJSON() {
    throw (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _neverError)[_neverError];
  }

  toRawType() {
    throw (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _neverError)[_neverError];
  }

  toString() {
    throw (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _neverError)[_neverError];
  }

  toU8a() {
    throw (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _neverError)[_neverError];
  }

}

/***/ }),
/* 568 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HashMap": () => (/* binding */ HashMap)
/* harmony export */ });
/* harmony import */ var _Map_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(562);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

class HashMap extends _Map_js__WEBPACK_IMPORTED_MODULE_0__.CodecMap {
  static with(keyType, valType) {
    return class extends HashMap {
      constructor(registry, value) {
        super(registry, keyType, valType, value);
      }

    };
  }

}

/***/ }),
/* 569 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Range": () => (/* binding */ Range),
/* harmony export */   "RangeInclusive": () => (/* binding */ RangeInclusive)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);
/* harmony import */ var _Tuple_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(312);


// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0


var _rangeName = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("rangeName");

/**
 * @name Range
 * @description
 * Rust `Range<T>` representation
 */
class Range extends _Tuple_js__WEBPACK_IMPORTED_MODULE_2__.Tuple {
  constructor(registry, Type, value, rangeName = 'Range') {
    super(registry, {
      end: Type,
      start: Type
    }, value);
    Object.defineProperty(this, _rangeName, {
      writable: true,
      value: void 0
    });
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _rangeName)[_rangeName] = rangeName;
  }

  static with(Types) {
    return class extends Range {
      constructor(registry, value) {
        super(registry, Types, value);
      }

    };
  }
  /**
   * @description Returns the starting range value
   */


  get start() {
    return this[0];
  }
  /**
   * @description Returns the ending range value
   */


  get end() {
    return this[1];
  }
  /**
   * @description Returns the base runtime type name for this instance
   */


  toRawType() {
    return `${(0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _rangeName)[_rangeName]}<${this.start.toRawType()}>`;
  }

}
class RangeInclusive extends Range {
  constructor(registry, type, value) {
    super(registry, type, value, 'RangeInclusive');
  }

  static with(Types) {
    return class extends RangeInclusive {
      constructor(registry, value) {
        super(registry, Types, value);
      }

    };
  }

}

/***/ }),
/* 570 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Result": () => (/* binding */ Result)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(80);
/* harmony import */ var _Enum_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(426);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0


/**
 * @name Result
 * @description
 * A Result maps to the Rust Result type, that can either wrap a success or error value
 */

class Result extends _Enum_js__WEBPACK_IMPORTED_MODULE_0__.Enum {
  constructor(registry, Ok, Err, value) {
    // NOTE This is order-dependent, Ok (with index 0) needs to be first
    // eslint-disable-next-line sort-keys
    super(registry, {
      Ok,
      Err
    }, value);
  }

  static with(Types) {
    return class extends Result {
      constructor(registry, value) {
        super(registry, Types.Ok, Types.Err, value);
      }

    };
  }
  /**
   * @description Returns the wrapper Err value (if isErr)
   */


  get asErr() {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(this.isErr, 'Cannot extract Err value from Ok result, check isErr first');
    return this.value;
  }
  /**
   * @deprecated Use asErr
   */


  get asError() {
    return this.asErr;
  }
  /**
   * @description Returns the wrapper Ok value (if isOk)
   */


  get asOk() {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(this.isOk, 'Cannot extract Ok value from Err result, check isOk first');
    return this.value;
  }
  /**
   * @description Checks if the Result has no value
   */


  get isEmpty() {
    return this.isOk && this.value.isEmpty;
  }
  /**
   * @description Checks if the Result wraps an Err value
   */


  get isErr() {
    return !this.isOk;
  }
  /**
   * @deprecated Use isErr
   */


  get isError() {
    return this.isErr;
  }
  /**
   * @description Checks if the Result wraps an Ok value
   */


  get isOk() {
    return this.index === 0;
  }
  /**
   * @description Returns the base runtime type name for this instance
   */


  toRawType() {
    const Types = this._toRawStruct();

    return `Result<${Types.Ok},${Types.Err}>`;
  }

}

/***/ }),
/* 571 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CodecSet": () => (/* binding */ CodecSet)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(88);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(125);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(82);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(215);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(169);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(303);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(320);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(124);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(237);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(196);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(292);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(121);
/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(315);


// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0



function encodeSet(setValues, values) {
  const encoded = new _polkadot_util__WEBPACK_IMPORTED_MODULE_2__(0);

  for (let i = 0; i < values.length; i++) {
    encoded.ior((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.bnToBn)(setValues[values[i]] || 0));
  }

  return encoded;
}
/** @internal */


function decodeSetArray(setValues, values) {
  const result = new Array(values.length);

  for (let i = 0; i < values.length; i++) {
    const key = values[i];
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.assert)(!(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(setValues[key]), () => `Set: Invalid key '${key}' passed to Set, allowed ${Object.keys(setValues).join(', ')}`);
    result[i] = key;
  }

  return result;
}
/** @internal */


function decodeSetNumber(setValues, _value) {
  const bn = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.bnToBn)(_value);
  const keys = Object.keys(setValues);
  const result = [];

  for (let i = 0; i < keys.length; i++) {
    const key = keys[i];

    if (bn.and((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.bnToBn)(setValues[key])).eq((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.bnToBn)(setValues[key]))) {
      result.push(key);
    }
  }

  const computed = encodeSet(setValues, result);
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.assert)(bn.eq(computed), () => `Set: Mismatch decoding '${bn.toString()}', computed as '${computed.toString()}' with ${result.join(', ')}`);
  return result;
}
/** @internal */


function decodeSet(setValues, value = 0, bitLength) {
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.assert)(bitLength % 8 === 0, () => `Expected valid bitLength, power of 8, found ${bitLength}`);
  const byteLength = bitLength / 8;

  if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.isU8a)(value)) {
    return value.length === 0 ? [] : decodeSetNumber(setValues, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_7__.u8aToBn)(value.subarray(0, byteLength), {
      isLe: true
    }));
  } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_8__.isString)(value)) {
    return decodeSet(setValues, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.u8aToU8a)(value), byteLength);
  } else if (value instanceof Set || Array.isArray(value)) {
    const input = Array.isArray(value) ? value : [...value.values()];
    return decodeSetArray(setValues, input);
  }

  return decodeSetNumber(setValues, value);
}
/**
 * @name Set
 * @description
 * An Set is an array of string values, represented an an encoded type by
 * a bitwise representation of the values.
 */


var _allowed = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("allowed");

var _byteLength = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("byteLength");

class CodecSet extends Set {
  constructor(registry, setValues, value, bitLength = 8) {
    super(decodeSet(setValues, value, bitLength));
    this.registry = void 0;
    this.createdAtHash = void 0;
    Object.defineProperty(this, _allowed, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _byteLength, {
      writable: true,
      value: void 0
    });

    this.add = key => {
      // ^^^ add = () property done to assign this instance's this, otherwise Set.add creates "some" chaos
      // we have the isUndefined(this._setValues) in here as well, add is used internally
      // in the Set constructor (so it is undefined at this point, and should allow)
      (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.assert)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.isUndefined)((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _allowed)[_allowed]) || !(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.isUndefined)((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _allowed)[_allowed][key]), () => `Set: Invalid key '${key}' on add`);
      super.add(key);
      return this;
    };

    this.registry = registry;
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _allowed)[_allowed] = setValues;
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _byteLength)[_byteLength] = bitLength / 8;
  }

  static with(values, bitLength) {
    const keys = Object.keys(values);
    const isKeys = new Array(keys.length);

    for (let i = 0; i < keys.length; i++) {
      isKeys[i] = `is${(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_10__.stringPascalCase)(keys[i])}`;
    }

    return class extends CodecSet {
      constructor(registry, value) {
        super(registry, values, value, bitLength);
        (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_11__.objectProperties)(this, isKeys, (_, i) => this.strings.includes(keys[i]));
      }

    };
  }
  /**
   * @description The length of the value when encoded as a Uint8Array
   */


  get encodedLength() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _byteLength)[_byteLength];
  }
  /**
   * @description returns a hash of the contents
   */


  get hash() {
    return this.registry.hash(this.toU8a());
  }
  /**
   * @description true is the Set contains no values
   */


  get isEmpty() {
    return this.size === 0;
  }
  /**
   * @description The actual set values as a string[]
   */


  get strings() {
    return [...super.values()];
  }
  /**
   * @description The encoded value for the set members
   */


  get valueEncoded() {
    return encodeSet((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _allowed)[_allowed], this.strings);
  }
  /**
   * @description adds a value to the Set (extended to allow for validity checking)
   */


  /**
   * @description Compares the value of the input to see if there is a match
   */
  eq(other) {
    if (Array.isArray(other)) {
      // we don't actually care about the order, sort the values
      return (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_12__.compareArray)(this.strings.sort(), other.sort());
    } else if (other instanceof Set) {
      return this.eq([...other.values()]);
    } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_13__.isNumber)(other) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_14__.isBn)(other)) {
      return this.valueEncoded.eq((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.bnToBn)(other));
    }

    return false;
  }
  /**
   * @description Returns a hex string representation of the value
   */


  toHex() {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_15__.u8aToHex)(this.toU8a());
  }
  /**
   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
   */


  toHuman() {
    return this.toJSON();
  }
  /**
   * @description Converts the Object to JSON, typically used for RPC transfers
   */


  toJSON() {
    return this.strings;
  }
  /**
   * @description The encoded value for the set members
   */


  toNumber() {
    return this.valueEncoded.toNumber();
  }
  /**
   * @description Returns the base runtime type name for this instance
   */


  toRawType() {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_16__.stringify)({
      _set: (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _allowed)[_allowed]
    });
  }
  /**
   * @description Returns the string representation of the value
   */


  toString() {
    return `[${this.strings.join(', ')}]`;
  }
  /**
   * @description Encodes the value as a Uint8Array as per the SCALE specifications
   * @param isBare true when the value has none of the type-specific prefixes (internal)
   */
  // eslint-disable-next-line @typescript-eslint/no-unused-vars


  toU8a(isBare) {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_17__.bnToU8a)(this.valueEncoded, {
      bitLength: (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _byteLength)[_byteLength] * 8,
      isLe: true
    });
  }

}

/***/ }),
/* 572 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "decodeVec": () => (/* binding */ decodeVec),
/* harmony export */   "Vec": () => (/* binding */ Vec)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(285);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(423);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(80);
/* harmony import */ var _AbstractArray_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(314);
/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(313);
/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(317);


// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0



const MAX_LENGTH = 64 * 1024;
const l = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.logger)('Vec');
function decodeVec(registry, Type, value, length = -1) {
  if (Array.isArray(value)) {
    const result = new Array(value.length);

    for (let i = 0; i < value.length; i++) {
      const entry = value[i];

      try {
        result[i] = entry instanceof Type ? entry : new Type(registry, entry);
      } catch (error) {
        l.error(`Unable to decode on index ${i}`, error.message);
        throw error;
      }
    }

    return [result, 0, 0];
  }

  const u8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.u8aToU8a)(value);
  let offset = 0;

  if (length === -1) {
    const [_offset, _length] = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.compactFromU8a)(u8a);
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.assert)(_length.lten(MAX_LENGTH), () => `Vec length ${_length.toString()} exceeds ${MAX_LENGTH}`);
    length = _length.toNumber();
    offset = _offset;
  }

  return (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_6__.decodeU8aVec)(registry, u8a, offset, Type, length);
}
/**
 * @name Vec
 * @description
 * This manages codec arrays. Internally it keeps track of the length (as decoded) and allows
 * construction with the passed `Type` in the constructor. It is an extension to Array, providing
 * specific encoding/decoding on top of the base type.
 */

var _Type = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("Type");

class Vec extends _AbstractArray_js__WEBPACK_IMPORTED_MODULE_7__.AbstractArray {
  constructor(registry, Type, value = []) {
    const Clazz = (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_8__.typeToConstructor)(registry, Type);
    const [values, decodedLength] = decodeVec(registry, Clazz, value);
    super(registry, values, decodedLength);
    Object.defineProperty(this, _Type, {
      writable: true,
      value: void 0
    });
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _Type)[_Type] = Clazz;
  }

  static with(Type) {
    return class extends Vec {
      constructor(registry, value) {
        super(registry, Type, value);
      }

    };
  }
  /**
   * @description The type for the items
   */


  get Type() {
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _Type)[_Type].name;
  }
  /**
   * @description Finds the index of the value in the array
   */


  indexOf(_other) {
    // convert type first, this removes overhead from the eq
    const other = _other instanceof (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _Type)[_Type] ? _other : new ((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _Type)[_Type])(this.registry, _other);

    for (let i = 0; i < this.length; i++) {
      if (other.eq(this[i])) {
        return i;
      }
    }

    return -1;
  }
  /**
   * @description Returns the base runtime type name for this instance
   */


  toRawType() {
    return `Vec<${this.registry.getClassName((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _Type)[_Type]) || new ((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _Type)[_Type])(this.registry).toRawType()}>`;
  }

}

/***/ }),
/* 573 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "VecFixed": () => (/* binding */ VecFixed)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(197);
/* harmony import */ var _AbstractArray_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(314);
/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(317);
/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(313);
/* harmony import */ var _Vec_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(572);


// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0




/** @internal */

function decodeVecFixed(registry, value, Type, length) {
  const [values, decodedLength, decodedLengthNoOffset] = (0,_Vec_js__WEBPACK_IMPORTED_MODULE_2__.decodeVec)(registry, Type, value, length);

  while (values.length < length) {
    values.push(new Type(registry));
  }

  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.assert)(values.length === length, () => `Expected a length of exactly ${length} entries`);
  return [values, decodedLength, decodedLengthNoOffset];
}
/**
 * @name VecFixed
 * @description
 * This manages codec arrays of a fixed length
 */


var _Type = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("Type");

class VecFixed extends _AbstractArray_js__WEBPACK_IMPORTED_MODULE_4__.AbstractArray {
  constructor(registry, Type, length, value = []) {
    const Clazz = (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_5__.typeToConstructor)(registry, Type);
    const [values,, decodedLengthNoOffset] = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.isU8a)(value) ? (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_7__.decodeU8aVec)(registry, value, 0, Clazz, length) : decodeVecFixed(registry, value, Clazz, length);
    super(registry, values, decodedLengthNoOffset);
    Object.defineProperty(this, _Type, {
      writable: true,
      value: void 0
    });
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _Type)[_Type] = Clazz;
  }

  static with(Type, length) {
    return class extends VecFixed {
      constructor(registry, value) {
        super(registry, Type, length, value);
      }

    };
  }
  /**
   * @description The type for the items
   */


  get Type() {
    return new ((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _Type)[_Type])(this.registry).toRawType();
  }
  /**
   * @description The length of the value when encoded as a Uint8Array
   */


  get encodedLength() {
    let total = 0;

    for (let i = 0; i < this.length; i++) {
      total += this[i].encodedLength;
    }

    return total;
  }

  toU8a() {
    // we override, we don't add the length prefix for ourselves, and at the same time we
    // ignore isBare on entries, since they should be properly encoded at all times
    const encoded = new Array(this.length);

    for (let i = 0; i < this.length; i++) {
      encoded[i] = this[i].toU8a();
    }

    return encoded.length ? (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_8__.u8aConcat)(...encoded) : new Uint8Array([]);
  }
  /**
   * @description Returns the base runtime type name for this instance
   */


  toRawType() {
    return `[${this.Type};${this.length}]`;
  }

}

/***/ }),
/* 574 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "WrapperOpaque": () => (/* binding */ WrapperOpaque)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(575);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(238);
/* harmony import */ var _Base_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(421);
/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(317);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0




function decodeRaw(registry, Type, value) {
  const Clazz = (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_0__.typeToConstructor)(registry, Type);

  if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isU8a)(value)) {
    const [, u8a] = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.compactStripLength)(value);
    return new Clazz(registry, u8a);
  }

  return new Clazz(registry, value);
}

class WrapperOpaque extends _Base_js__WEBPACK_IMPORTED_MODULE_3__.Base {
  constructor(registry, Type, value) {
    super(registry, decodeRaw(registry, Type, value));
  }

  static with(Type) {
    return class extends WrapperOpaque {
      constructor(registry, value) {
        super(registry, Type, value);
      }

    };
  }
  /**
   * @description Returns the base runtime type name for this instance
   */


  toRawType() {
    return `WrapperOpaque<${this._raw.toRawType()}>`;
  }
  /**
   * @description The length of the value when encoded as a Uint8Array
   */


  toU8a(isBare) {
    const u8a = super.toU8a(isBare);
    return isBare ? u8a : (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.compactAddLength)(u8a);
  }
  /**
   * @description Return the inner value for the wrapped type
   */


  unwrap() {
    return this._raw;
  }

}

/***/ }),
/* 575 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "compactStripLength": () => (/* binding */ compactStripLength)
/* harmony export */ });
/* harmony import */ var _fromU8a_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(423);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name compactStripLength
 * @description Removes the length prefix, returning both the total length (including the value + compact encoding) and the decoded value with the correct length
 * @example
 * <BR>
 *
 * ```javascript
 * import { compactStripLength } from '@polkadot/util';
 *
 * console.log(compactStripLength(new Uint8Array([2 << 2, 0xde, 0xad]))); // [2, Uint8Array[0xde, 0xad]]
 * ```
 */

function compactStripLength(input) {
  const [offset, length] = (0,_fromU8a_js__WEBPACK_IMPORTED_MODULE_0__.compactFromU8a)(input);
  const total = offset + length.toNumber();
  return [total, input.subarray(offset, total)];
}

/***/ }),
/* 576 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createTypeUnsafe": () => (/* binding */ createTypeUnsafe),
/* harmony export */   "createType": () => (/* binding */ createType)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(228);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(196);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(126);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(166);
/* harmony import */ var _codec_Option_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(431);
/* harmony import */ var _createClass_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(560);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0


 // With isPedantic, actually check that the encoding matches that supplied. This
// is much slower, but verifies that we have the correct types defined

function checkInstance(created, matcher) {
  const u8a = created.toU8a();
  const rawType = created.toRawType();
  const isOk = // full match, all ok
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aEq)(u8a, matcher) || // on a length-prefixed type, just check the actual length
  ['Bytes', 'Text', 'Type'].includes(rawType) && matcher.length === created.length || // when the created is empty and matcher is also empty, let it slide...
  created.isEmpty && matcher.every(v => !v);
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(isOk, () => `${rawType}:: Decoded input doesn't match input, received ${(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aToHex)(matcher, 512)} (${matcher.length} bytes), created ${(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aToHex)(u8a, 512)} (${u8a.length} bytes)`);
}

function checkPedantic(created, [value], isPedantic = false) {
  if (isPedantic) {
    if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.isU8a)(value)) {
      checkInstance(created, value);
    } else if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.isHex)(value)) {
      checkInstance(created, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.u8aToU8a)(value));
    }
  }
} // Initializes a type with a value. This also checks for fallbacks and in the cases
// where isPedantic is specified (storage decoding), also check the format/structure


function initType(registry, Type, params = [], {
  blockHash,
  isOptional,
  isPedantic
} = {}) {
  const created = new (isOptional ? _codec_Option_js__WEBPACK_IMPORTED_MODULE_6__.Option["with"](Type) : Type)(registry, ...params);
  checkPedantic(created, params, isPedantic);

  if (blockHash) {
    created.createdAtHash = createType(registry, 'Hash', blockHash);
  } // eslint-disable-next-line @typescript-eslint/no-unsafe-return


  return created;
} // An unsafe version of the `createType` below. It's unsafe because the `type`
// argument here can be any string, which, when it cannot parse, will yield a
// runtime error.


function createTypeUnsafe(registry, type, params = [], options = {}) {
  let Clazz = null;
  let firstError = null;

  try {
    Clazz = (0,_createClass_js__WEBPACK_IMPORTED_MODULE_7__.createClass)(registry, type);
    return initType(registry, Clazz, params, options);
  } catch (error) {
    firstError = new Error(`createType(${type}):: ${error.message}`);
  }

  if (Clazz && Clazz.__fallbackType) {
    try {
      Clazz = (0,_createClass_js__WEBPACK_IMPORTED_MODULE_7__.createClass)(registry, Clazz.__fallbackType);
      return initType(registry, Clazz, params, options);
    } catch {// swallow, we will throw the first error again
    }
  }

  throw firstError;
}
/**
 * Create an instance of a `type` with a given `params`.
 * @param type - A recognizable string representing the type to create an
 * instance from
 * @param params - The value to instantiate the type with
 */

function createType(registry, type, ...params) {
  return createTypeUnsafe(registry, type, params);
}

/***/ }),
/* 577 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "from": () => (/* binding */ from)
/* harmony export */ });
/* harmony import */ var _scheduled_scheduled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(578);
/* harmony import */ var _innerFrom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(581);


function from(input, scheduler) {
    return scheduler ? (0,_scheduled_scheduled__WEBPACK_IMPORTED_MODULE_0__.scheduled)(input, scheduler) : (0,_innerFrom__WEBPACK_IMPORTED_MODULE_1__.innerFrom)(input);
}
//# sourceMappingURL=from.js.map

/***/ }),
/* 578 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scheduled": () => (/* binding */ scheduled)
/* harmony export */ });
/* harmony import */ var _scheduleObservable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(580);
/* harmony import */ var _schedulePromise__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(595);
/* harmony import */ var _scheduleArray__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(594);
/* harmony import */ var _scheduleIterable__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(597);
/* harmony import */ var _scheduleAsyncIterable__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(596);
/* harmony import */ var _util_isInteropObservable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(579);
/* harmony import */ var _util_isPromise__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(583);
/* harmony import */ var _util_isArrayLike__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(582);
/* harmony import */ var _util_isIterable__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(585);
/* harmony import */ var _util_isAsyncIterable__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(584);
/* harmony import */ var _util_throwUnobservableError__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(588);
/* harmony import */ var _util_isReadableStreamLike__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(587);
/* harmony import */ var _scheduleReadableStreamLike__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(598);













function scheduled(input, scheduler) {
    if (input != null) {
        if ((0,_util_isInteropObservable__WEBPACK_IMPORTED_MODULE_0__.isInteropObservable)(input)) {
            return (0,_scheduleObservable__WEBPACK_IMPORTED_MODULE_1__.scheduleObservable)(input, scheduler);
        }
        if ((0,_util_isArrayLike__WEBPACK_IMPORTED_MODULE_2__.isArrayLike)(input)) {
            return (0,_scheduleArray__WEBPACK_IMPORTED_MODULE_3__.scheduleArray)(input, scheduler);
        }
        if ((0,_util_isPromise__WEBPACK_IMPORTED_MODULE_4__.isPromise)(input)) {
            return (0,_schedulePromise__WEBPACK_IMPORTED_MODULE_5__.schedulePromise)(input, scheduler);
        }
        if ((0,_util_isAsyncIterable__WEBPACK_IMPORTED_MODULE_6__.isAsyncIterable)(input)) {
            return (0,_scheduleAsyncIterable__WEBPACK_IMPORTED_MODULE_7__.scheduleAsyncIterable)(input, scheduler);
        }
        if ((0,_util_isIterable__WEBPACK_IMPORTED_MODULE_8__.isIterable)(input)) {
            return (0,_scheduleIterable__WEBPACK_IMPORTED_MODULE_9__.scheduleIterable)(input, scheduler);
        }
        if ((0,_util_isReadableStreamLike__WEBPACK_IMPORTED_MODULE_10__.isReadableStreamLike)(input)) {
            return (0,_scheduleReadableStreamLike__WEBPACK_IMPORTED_MODULE_11__.scheduleReadableStreamLike)(input, scheduler);
        }
    }
    throw (0,_util_throwUnobservableError__WEBPACK_IMPORTED_MODULE_12__.createInvalidObservableTypeError)(input);
}
//# sourceMappingURL=scheduled.js.map

/***/ }),
/* 579 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isInteropObservable": () => (/* binding */ isInteropObservable)
/* harmony export */ });
/* harmony import */ var _symbol_observable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(69);
/* harmony import */ var _isFunction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60);


function isInteropObservable(input) {
    return (0,_isFunction__WEBPACK_IMPORTED_MODULE_0__.isFunction)(input[_symbol_observable__WEBPACK_IMPORTED_MODULE_1__.observable]);
}
//# sourceMappingURL=isInteropObservable.js.map

/***/ }),
/* 580 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scheduleObservable": () => (/* binding */ scheduleObservable)
/* harmony export */ });
/* harmony import */ var _observable_innerFrom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(581);
/* harmony import */ var _operators_observeOn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(591);
/* harmony import */ var _operators_subscribeOn__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(589);



function scheduleObservable(input, scheduler) {
    return (0,_observable_innerFrom__WEBPACK_IMPORTED_MODULE_0__.innerFrom)(input).pipe((0,_operators_subscribeOn__WEBPACK_IMPORTED_MODULE_1__.subscribeOn)(scheduler), (0,_operators_observeOn__WEBPACK_IMPORTED_MODULE_2__.observeOn)(scheduler));
}
//# sourceMappingURL=scheduleObservable.js.map

/***/ }),
/* 581 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "innerFrom": () => (/* binding */ innerFrom),
/* harmony export */   "fromInteropObservable": () => (/* binding */ fromInteropObservable),
/* harmony export */   "fromArrayLike": () => (/* binding */ fromArrayLike),
/* harmony export */   "fromPromise": () => (/* binding */ fromPromise),
/* harmony export */   "fromIterable": () => (/* binding */ fromIterable),
/* harmony export */   "fromAsyncIterable": () => (/* binding */ fromAsyncIterable),
/* harmony export */   "fromReadableStreamLike": () => (/* binding */ fromReadableStreamLike)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(52);
/* harmony import */ var _util_isArrayLike__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(582);
/* harmony import */ var _util_isPromise__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(583);
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(63);
/* harmony import */ var _util_isInteropObservable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(579);
/* harmony import */ var _util_isAsyncIterable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(584);
/* harmony import */ var _util_throwUnobservableError__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(588);
/* harmony import */ var _util_isIterable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(585);
/* harmony import */ var _util_isReadableStreamLike__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(587);
/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(60);
/* harmony import */ var _util_reportUnhandledError__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(67);
/* harmony import */ var _symbol_observable__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(69);












function innerFrom(input) {
    if (input instanceof _Observable__WEBPACK_IMPORTED_MODULE_0__.Observable) {
        return input;
    }
    if (input != null) {
        if ((0,_util_isInteropObservable__WEBPACK_IMPORTED_MODULE_1__.isInteropObservable)(input)) {
            return fromInteropObservable(input);
        }
        if ((0,_util_isArrayLike__WEBPACK_IMPORTED_MODULE_2__.isArrayLike)(input)) {
            return fromArrayLike(input);
        }
        if ((0,_util_isPromise__WEBPACK_IMPORTED_MODULE_3__.isPromise)(input)) {
            return fromPromise(input);
        }
        if ((0,_util_isAsyncIterable__WEBPACK_IMPORTED_MODULE_4__.isAsyncIterable)(input)) {
            return fromAsyncIterable(input);
        }
        if ((0,_util_isIterable__WEBPACK_IMPORTED_MODULE_5__.isIterable)(input)) {
            return fromIterable(input);
        }
        if ((0,_util_isReadableStreamLike__WEBPACK_IMPORTED_MODULE_6__.isReadableStreamLike)(input)) {
            return fromReadableStreamLike(input);
        }
    }
    throw (0,_util_throwUnobservableError__WEBPACK_IMPORTED_MODULE_7__.createInvalidObservableTypeError)(input);
}
function fromInteropObservable(obj) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__.Observable(function (subscriber) {
        var obs = obj[_symbol_observable__WEBPACK_IMPORTED_MODULE_8__.observable]();
        if ((0,_util_isFunction__WEBPACK_IMPORTED_MODULE_9__.isFunction)(obs.subscribe)) {
            return obs.subscribe(subscriber);
        }
        throw new TypeError('Provided object does not correctly implement Symbol.observable');
    });
}
function fromArrayLike(array) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__.Observable(function (subscriber) {
        for (var i = 0; i < array.length && !subscriber.closed; i++) {
            subscriber.next(array[i]);
        }
        subscriber.complete();
    });
}
function fromPromise(promise) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__.Observable(function (subscriber) {
        promise
            .then(function (value) {
            if (!subscriber.closed) {
                subscriber.next(value);
                subscriber.complete();
            }
        }, function (err) { return subscriber.error(err); })
            .then(null, _util_reportUnhandledError__WEBPACK_IMPORTED_MODULE_10__.reportUnhandledError);
    });
}
function fromIterable(iterable) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__.Observable(function (subscriber) {
        var e_1, _a;
        try {
            for (var iterable_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__values)(iterable), iterable_1_1 = iterable_1.next(); !iterable_1_1.done; iterable_1_1 = iterable_1.next()) {
                var value = iterable_1_1.value;
                subscriber.next(value);
                if (subscriber.closed) {
                    return;
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (iterable_1_1 && !iterable_1_1.done && (_a = iterable_1.return)) _a.call(iterable_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        subscriber.complete();
    });
}
function fromAsyncIterable(asyncIterable) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__.Observable(function (subscriber) {
        process(asyncIterable, subscriber).catch(function (err) { return subscriber.error(err); });
    });
}
function fromReadableStreamLike(readableStream) {
    return fromAsyncIterable((0,_util_isReadableStreamLike__WEBPACK_IMPORTED_MODULE_6__.readableStreamLikeToAsyncGenerator)(readableStream));
}
function process(asyncIterable, subscriber) {
    var asyncIterable_1, asyncIterable_1_1;
    var e_2, _a;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__awaiter)(this, void 0, void 0, function () {
        var value, e_2_1;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__generator)(this, function (_b) {
            switch (_b.label) {
                case 0:
                    _b.trys.push([0, 5, 6, 11]);
                    asyncIterable_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_11__.__asyncValues)(asyncIterable);
                    _b.label = 1;
                case 1: return [4, asyncIterable_1.next()];
                case 2:
                    if (!(asyncIterable_1_1 = _b.sent(), !asyncIterable_1_1.done)) return [3, 4];
                    value = asyncIterable_1_1.value;
                    subscriber.next(value);
                    if (subscriber.closed) {
                        return [2];
                    }
                    _b.label = 3;
                case 3: return [3, 1];
                case 4: return [3, 11];
                case 5:
                    e_2_1 = _b.sent();
                    e_2 = { error: e_2_1 };
                    return [3, 11];
                case 6:
                    _b.trys.push([6, , 9, 10]);
                    if (!(asyncIterable_1_1 && !asyncIterable_1_1.done && (_a = asyncIterable_1.return))) return [3, 8];
                    return [4, _a.call(asyncIterable_1)];
                case 7:
                    _b.sent();
                    _b.label = 8;
                case 8: return [3, 10];
                case 9:
                    if (e_2) throw e_2.error;
                    return [7];
                case 10: return [7];
                case 11:
                    subscriber.complete();
                    return [2];
            }
        });
    });
}
//# sourceMappingURL=innerFrom.js.map

/***/ }),
/* 582 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isArrayLike": () => (/* binding */ isArrayLike)
/* harmony export */ });
var isArrayLike = (function (x) { return x && typeof x.length === 'number' && typeof x !== 'function'; });
//# sourceMappingURL=isArrayLike.js.map

/***/ }),
/* 583 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isPromise": () => (/* binding */ isPromise)
/* harmony export */ });
/* harmony import */ var _isFunction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60);

function isPromise(value) {
    return (0,_isFunction__WEBPACK_IMPORTED_MODULE_0__.isFunction)(value === null || value === void 0 ? void 0 : value.then);
}
//# sourceMappingURL=isPromise.js.map

/***/ }),
/* 584 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isAsyncIterable": () => (/* binding */ isAsyncIterable)
/* harmony export */ });
/* harmony import */ var _isFunction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60);

function isAsyncIterable(obj) {
    return Symbol.asyncIterator && (0,_isFunction__WEBPACK_IMPORTED_MODULE_0__.isFunction)(obj === null || obj === void 0 ? void 0 : obj[Symbol.asyncIterator]);
}
//# sourceMappingURL=isAsyncIterable.js.map

/***/ }),
/* 585 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isIterable": () => (/* binding */ isIterable)
/* harmony export */ });
/* harmony import */ var _symbol_iterator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(586);
/* harmony import */ var _isFunction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60);


function isIterable(input) {
    return (0,_isFunction__WEBPACK_IMPORTED_MODULE_0__.isFunction)(input === null || input === void 0 ? void 0 : input[_symbol_iterator__WEBPACK_IMPORTED_MODULE_1__.iterator]);
}
//# sourceMappingURL=isIterable.js.map

/***/ }),
/* 586 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getSymbolIterator": () => (/* binding */ getSymbolIterator),
/* harmony export */   "iterator": () => (/* binding */ iterator)
/* harmony export */ });
function getSymbolIterator() {
    if (typeof Symbol !== 'function' || !Symbol.iterator) {
        return '@@iterator';
    }
    return Symbol.iterator;
}
var iterator = getSymbolIterator();
//# sourceMappingURL=iterator.js.map

/***/ }),
/* 587 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "readableStreamLikeToAsyncGenerator": () => (/* binding */ readableStreamLikeToAsyncGenerator),
/* harmony export */   "isReadableStreamLike": () => (/* binding */ isReadableStreamLike)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52);
/* harmony import */ var _isFunction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(60);


function readableStreamLikeToAsyncGenerator(readableStream) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__asyncGenerator)(this, arguments, function readableStreamLikeToAsyncGenerator_1() {
        var reader, _a, value, done;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function (_b) {
            switch (_b.label) {
                case 0:
                    reader = readableStream.getReader();
                    _b.label = 1;
                case 1:
                    _b.trys.push([1, , 9, 10]);
                    _b.label = 2;
                case 2:
                    if (false) {}
                    return [4, (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__await)(reader.read())];
                case 3:
                    _a = _b.sent(), value = _a.value, done = _a.done;
                    if (!done) return [3, 5];
                    return [4, (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__await)(void 0)];
                case 4: return [2, _b.sent()];
                case 5: return [4, (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__await)(value)];
                case 6: return [4, _b.sent()];
                case 7:
                    _b.sent();
                    return [3, 2];
                case 8: return [3, 10];
                case 9:
                    reader.releaseLock();
                    return [7];
                case 10: return [2];
            }
        });
    });
}
function isReadableStreamLike(obj) {
    return (0,_isFunction__WEBPACK_IMPORTED_MODULE_1__.isFunction)(obj === null || obj === void 0 ? void 0 : obj.getReader);
}
//# sourceMappingURL=isReadableStreamLike.js.map

/***/ }),
/* 588 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createInvalidObservableTypeError": () => (/* binding */ createInvalidObservableTypeError)
/* harmony export */ });
function createInvalidObservableTypeError(input) {
    return new TypeError("You provided " + (input !== null && typeof input === 'object' ? 'an invalid object' : "'" + input + "'") + " where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.");
}
//# sourceMappingURL=throwUnobservableError.js.map

/***/ }),
/* 589 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "subscribeOn": () => (/* binding */ subscribeOn)
/* harmony export */ });
/* harmony import */ var _util_lift__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(590);

function subscribeOn(scheduler, delay) {
    if (delay === void 0) { delay = 0; }
    return (0,_util_lift__WEBPACK_IMPORTED_MODULE_0__.operate)(function (source, subscriber) {
        subscriber.add(scheduler.schedule(function () { return source.subscribe(subscriber); }, delay));
    });
}
//# sourceMappingURL=subscribeOn.js.map

/***/ }),
/* 590 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "hasLift": () => (/* binding */ hasLift),
/* harmony export */   "operate": () => (/* binding */ operate)
/* harmony export */ });
/* harmony import */ var _isFunction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60);

function hasLift(source) {
    return (0,_isFunction__WEBPACK_IMPORTED_MODULE_0__.isFunction)(source === null || source === void 0 ? void 0 : source.lift);
}
function operate(init) {
    return function (source) {
        if (hasLift(source)) {
            return source.lift(function (liftedSource) {
                try {
                    return init(liftedSource, this);
                }
                catch (err) {
                    this.error(err);
                }
            });
        }
        throw new TypeError('Unable to lift unknown Observable type');
    };
}
//# sourceMappingURL=lift.js.map

/***/ }),
/* 591 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "observeOn": () => (/* binding */ observeOn)
/* harmony export */ });
/* harmony import */ var _util_executeSchedule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(593);
/* harmony import */ var _util_lift__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(590);
/* harmony import */ var _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(592);



function observeOn(scheduler, delay) {
    if (delay === void 0) { delay = 0; }
    return (0,_util_lift__WEBPACK_IMPORTED_MODULE_0__.operate)(function (source, subscriber) {
        source.subscribe(new _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__.OperatorSubscriber(subscriber, function (value) { return (0,_util_executeSchedule__WEBPACK_IMPORTED_MODULE_2__.executeSchedule)(subscriber, scheduler, function () { return subscriber.next(value); }, delay); }, function () { return (0,_util_executeSchedule__WEBPACK_IMPORTED_MODULE_2__.executeSchedule)(subscriber, scheduler, function () { return subscriber.complete(); }, delay); }, function (err) { return (0,_util_executeSchedule__WEBPACK_IMPORTED_MODULE_2__.executeSchedule)(subscriber, scheduler, function () { return subscriber.error(err); }, delay); }));
    });
}
//# sourceMappingURL=observeOn.js.map

/***/ }),
/* 592 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OperatorSubscriber": () => (/* binding */ OperatorSubscriber)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(64);


var OperatorSubscriber = (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(OperatorSubscriber, _super);
    function OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize) {
        var _this = _super.call(this, destination) || this;
        _this.onFinalize = onFinalize;
        _this._next = onNext
            ? function (value) {
                try {
                    onNext(value);
                }
                catch (err) {
                    destination.error(err);
                }
            }
            : _super.prototype._next;
        _this._error = onError
            ? function (err) {
                try {
                    onError(err);
                }
                catch (err) {
                    destination.error(err);
                }
                finally {
                    this.unsubscribe();
                }
            }
            : _super.prototype._error;
        _this._complete = onComplete
            ? function () {
                try {
                    onComplete();
                }
                catch (err) {
                    destination.error(err);
                }
                finally {
                    this.unsubscribe();
                }
            }
            : _super.prototype._complete;
        return _this;
    }
    OperatorSubscriber.prototype.unsubscribe = function () {
        var _a;
        var closed = this.closed;
        _super.prototype.unsubscribe.call(this);
        !closed && ((_a = this.onFinalize) === null || _a === void 0 ? void 0 : _a.call(this));
    };
    return OperatorSubscriber;
}(_Subscriber__WEBPACK_IMPORTED_MODULE_1__.Subscriber));

//# sourceMappingURL=OperatorSubscriber.js.map

/***/ }),
/* 593 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "executeSchedule": () => (/* binding */ executeSchedule)
/* harmony export */ });
function executeSchedule(parentSubscription, scheduler, work, delay, repeat) {
    if (delay === void 0) { delay = 0; }
    if (repeat === void 0) { repeat = false; }
    var scheduleSubscription = scheduler.schedule(function () {
        work();
        if (repeat) {
            parentSubscription.add(this.schedule(null, delay));
        }
        else {
            this.unsubscribe();
        }
    }, delay);
    parentSubscription.add(scheduleSubscription);
    if (!repeat) {
        return scheduleSubscription;
    }
}
//# sourceMappingURL=executeSchedule.js.map

/***/ }),
/* 594 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scheduleArray": () => (/* binding */ scheduleArray)
/* harmony export */ });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(63);

function scheduleArray(input, scheduler) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__.Observable(function (subscriber) {
        var i = 0;
        return scheduler.schedule(function () {
            if (i === input.length) {
                subscriber.complete();
            }
            else {
                subscriber.next(input[i++]);
                if (!subscriber.closed) {
                    this.schedule();
                }
            }
        });
    });
}
//# sourceMappingURL=scheduleArray.js.map

/***/ }),
/* 595 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "schedulePromise": () => (/* binding */ schedulePromise)
/* harmony export */ });
/* harmony import */ var _observable_innerFrom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(581);
/* harmony import */ var _operators_observeOn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(591);
/* harmony import */ var _operators_subscribeOn__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(589);



function schedulePromise(input, scheduler) {
    return (0,_observable_innerFrom__WEBPACK_IMPORTED_MODULE_0__.innerFrom)(input).pipe((0,_operators_subscribeOn__WEBPACK_IMPORTED_MODULE_1__.subscribeOn)(scheduler), (0,_operators_observeOn__WEBPACK_IMPORTED_MODULE_2__.observeOn)(scheduler));
}
//# sourceMappingURL=schedulePromise.js.map

/***/ }),
/* 596 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scheduleAsyncIterable": () => (/* binding */ scheduleAsyncIterable)
/* harmony export */ });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(63);
/* harmony import */ var _util_executeSchedule__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(593);


function scheduleAsyncIterable(input, scheduler) {
    if (!input) {
        throw new Error('Iterable cannot be null');
    }
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__.Observable(function (subscriber) {
        (0,_util_executeSchedule__WEBPACK_IMPORTED_MODULE_1__.executeSchedule)(subscriber, scheduler, function () {
            var iterator = input[Symbol.asyncIterator]();
            (0,_util_executeSchedule__WEBPACK_IMPORTED_MODULE_1__.executeSchedule)(subscriber, scheduler, function () {
                iterator.next().then(function (result) {
                    if (result.done) {
                        subscriber.complete();
                    }
                    else {
                        subscriber.next(result.value);
                    }
                });
            }, 0, true);
        });
    });
}
//# sourceMappingURL=scheduleAsyncIterable.js.map

/***/ }),
/* 597 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scheduleIterable": () => (/* binding */ scheduleIterable)
/* harmony export */ });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(63);
/* harmony import */ var _symbol_iterator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(586);
/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(60);
/* harmony import */ var _util_executeSchedule__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(593);




function scheduleIterable(input, scheduler) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__.Observable(function (subscriber) {
        var iterator;
        (0,_util_executeSchedule__WEBPACK_IMPORTED_MODULE_1__.executeSchedule)(subscriber, scheduler, function () {
            iterator = input[_symbol_iterator__WEBPACK_IMPORTED_MODULE_2__.iterator]();
            (0,_util_executeSchedule__WEBPACK_IMPORTED_MODULE_1__.executeSchedule)(subscriber, scheduler, function () {
                var _a;
                var value;
                var done;
                try {
                    (_a = iterator.next(), value = _a.value, done = _a.done);
                }
                catch (err) {
                    subscriber.error(err);
                    return;
                }
                if (done) {
                    subscriber.complete();
                }
                else {
                    subscriber.next(value);
                }
            }, 0, true);
        });
        return function () { return (0,_util_isFunction__WEBPACK_IMPORTED_MODULE_3__.isFunction)(iterator === null || iterator === void 0 ? void 0 : iterator.return) && iterator.return(); };
    });
}
//# sourceMappingURL=scheduleIterable.js.map

/***/ }),
/* 598 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scheduleReadableStreamLike": () => (/* binding */ scheduleReadableStreamLike)
/* harmony export */ });
/* harmony import */ var _scheduleAsyncIterable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(596);
/* harmony import */ var _util_isReadableStreamLike__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(587);


function scheduleReadableStreamLike(input, scheduler) {
    return (0,_scheduleAsyncIterable__WEBPACK_IMPORTED_MODULE_0__.scheduleAsyncIterable)((0,_util_isReadableStreamLike__WEBPACK_IMPORTED_MODULE_1__.readableStreamLikeToAsyncGenerator)(input), scheduler);
}
//# sourceMappingURL=scheduleReadableStreamLike.js.map

/***/ }),
/* 599 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "map": () => (/* binding */ map)
/* harmony export */ });
/* harmony import */ var _util_lift__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(590);
/* harmony import */ var _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(592);


function map(project, thisArg) {
    return (0,_util_lift__WEBPACK_IMPORTED_MODULE_0__.operate)(function (source, subscriber) {
        var index = 0;
        source.subscribe(new _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__.OperatorSubscriber(subscriber, function (value) {
            subscriber.next(project.call(thisArg, value, index++));
        }));
    });
}
//# sourceMappingURL=map.js.map

/***/ }),
/* 600 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_2__.packageInfo),
/* harmony export */   "drr": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_3__.drr),
/* harmony export */   "memo": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_3__.memo),
/* harmony export */   "refCountDelay": () => (/* reexport safe */ _util_index_js__WEBPACK_IMPORTED_MODULE_3__.refCountDelay),
/* harmony export */   "RpcCore": () => (/* binding */ RpcCore)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(63);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(607);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(612);
/* harmony import */ var _polkadot_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(626);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(285);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(81);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(625);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(122);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(304);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(83);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(82);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(167);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(613);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(603);
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(601);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(602);


// Copyright 2017-2021 @polkadot/rpc-core authors & contributors
// SPDX-License-Identifier: Apache-2.0






const l = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.logger)('rpc-core');
const EMPTY_META = {
  fallback: undefined,
  modifier: {
    isOptional: true
  },
  type: {
    asMap: {
      linked: {
        isTrue: false
      }
    },
    isMap: false
  }
}; // utility method to create a nicely-formatted error

/** @internal */

function logErrorMessage(method, {
  params,
  type
}, error) {
  const inputs = params.map(({
    isOptional,
    name,
    type
  }) => `${name}${isOptional ? '?' : ''}: ${type}`).join(', ');
  l.error(`${method}(${inputs}): ${type}:: ${error.message}`);
}

function isTreatAsHex(key) {
  // :code is problematic - it does not have the length attached, which is
  // unlike all other storage entries where it is indeed properly encoded
  return ['0x3a636f6465'].includes(key.toHex());
}
/**
 * @name Rpc
 * @summary The API may use a HTTP or WebSockets provider.
 * @description It allows for querying a Polkadot Client Node.
 * WebSockets provider is recommended since HTTP provider only supports basic querying.
 *
 * ```mermaid
 * graph LR;
 *   A[Api] --> |WebSockets| B[WsProvider];
 *   B --> |endpoint| C[ws://127.0.0.1:9944]
 * ```
 *
 * @example
 * <BR>
 *
 * ```javascript
 * import Rpc from '@polkadot/rpc-core';
 * import { WsProvider } from '@polkadot/rpc-provider/ws';
 *
 * const provider = new WsProvider('ws://127.0.0.1:9944');
 * const rpc = new Rpc(provider);
 * ```
 */


var _instanceId = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("instanceId");

var _registryDefault = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("registryDefault");

var _getBlockRegistry = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("getBlockRegistry");

var _storageCache = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("storageCache");

class RpcCore {
  /**
   * @constructor
   * Default constructor for the Api Object
   * @param  {ProviderInterface} provider An API provider using HTTP or WebSocket
   */
  constructor(instanceId, registry, provider, userRpc = {}) {
    Object.defineProperty(this, _instanceId, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _registryDefault, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _getBlockRegistry, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _storageCache, {
      writable: true,
      value: new Map()
    });
    this.mapping = new Map();
    this.provider = void 0;
    this.sections = [];
    // eslint-disable-next-line @typescript-eslint/unbound-method
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.assert)(provider && (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.isFunction)(provider.send), 'Expected Provider to API create');
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _instanceId)[_instanceId] = instanceId;
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _registryDefault)[_registryDefault] = registry;
    this.provider = provider;
    const sectionNames = Object.keys(_polkadot_types__WEBPACK_IMPORTED_MODULE_7__["default"]); // these are the base keys (i.e. part of jsonrpc)

    this.sections.push(...sectionNames); // decorate all interfaces, defined and user on this instance

    this.addUserInterfaces(userRpc);
  }
  /**
   * @description Returns the connected status of a provider
   */


  get isConnected() {
    return this.provider.isConnected;
  }
  /**
   * @description Manually connect from the attached provider
   */


  connect() {
    return this.provider.connect();
  }
  /**
   * @description Manually disconnect from the attached provider
   */


  disconnect() {
    return this.provider.disconnect();
  }
  /**
   * @description Sets a registry swap (typically from Api)
   */


  setRegistrySwap(registrySwap) {
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _getBlockRegistry)[_getBlockRegistry] = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_8__.memoize)(registrySwap, {
      getInstanceId: () => (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _instanceId)[_instanceId]
    });
  }

  addUserInterfaces(userRpc) {
    // add any extra user-defined sections
    this.sections.push(...Object.keys(userRpc).filter(k => !this.sections.includes(k)));

    for (let s = 0; s < this.sections.length; s++) {
      const section = this.sections[s];
      const defs = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.objectSpread)({}, _polkadot_types__WEBPACK_IMPORTED_MODULE_7__["default"][section], userRpc[section]);
      const methods = Object.keys(defs);

      for (let m = 0; m < methods.length; m++) {
        const method = methods[m];
        const def = defs[method];
        const jsonrpc = def.endpoint || `${section}_${method}`;

        if (!this.mapping.has(jsonrpc)) {
          const isSubscription = !!def.pubsub;

          if (!this[section]) {
            this[section] = {};
          }

          this.mapping.set(jsonrpc, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.objectSpread)({}, def, {
            isSubscription,
            jsonrpc,
            method,
            section
          }));
          (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_10__.lazyMethod)(this[section], method, () => isSubscription ? this._createMethodSubscribe(section, method, def) : this._createMethodSend(section, method, def));
        }
      }
    }
  }

  _memomize(creator, def) {
    const memoOpts = {
      getInstanceId: () => (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _instanceId)[_instanceId]
    };
    const memoized = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_8__.memoize)(creator(true), memoOpts);
    memoized.raw = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_8__.memoize)(creator(false), memoOpts);
    memoized.meta = def;
    return memoized;
  }

  _formatResult(isScale, registry, blockHash, method, def, params, result) {
    return isScale ? this._formatOutput(registry, blockHash, method, def, params, result) : result;
  }

  _createMethodSend(section, method, def) {
    const rpcName = def.endpoint || `${section}_${method}`;
    const hashIndex = def.params.findIndex(({
      isHistoric
    }) => isHistoric);
    let memoized = null; // execute the RPC call, doing a registry swap for historic as applicable

    const callWithRegistry = async (isScale, values) => {
      const blockHash = hashIndex === -1 ? null : values[hashIndex];
      const {
        registry
      } = isScale && blockHash && (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _getBlockRegistry)[_getBlockRegistry] ? await (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _getBlockRegistry)[_getBlockRegistry]((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_11__.u8aToU8a)(blockHash)) : {
        registry: (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _registryDefault)[_registryDefault]
      };

      const params = this._formatInputs(registry, null, def, values);

      const result = await this.provider.send(rpcName, params.map(p => p.toJSON()), !!blockHash);
      return this._formatResult(isScale, registry, blockHash, method, def, params, result);
    };

    const creator = isScale => (...values) => {
      const isDelayed = isScale && hashIndex !== -1 && !!values[hashIndex];
      return new rxjs__WEBPACK_IMPORTED_MODULE_12__.Observable(observer => {
        callWithRegistry(isScale, values).then(value => {
          observer.next(value);
          observer.complete();
        }).catch(error => {
          logErrorMessage(method, def, error);
          observer.error(error);
          observer.complete();
        });
        return () => {
          var _memoized;

          // delete old results from cache
          (_memoized = memoized) === null || _memoized === void 0 ? void 0 : _memoized.unmemoize(...values);
        };
      }).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_13__.publishReplay)(1), // create a Replay(1)
      isDelayed ? (0,_util_index_js__WEBPACK_IMPORTED_MODULE_14__.refCountDelay)() // Unsubscribe after delay
      : (0,rxjs__WEBPACK_IMPORTED_MODULE_15__.refCount)());
    };

    memoized = this._memomize(creator, def);
    return memoized;
  } // create a subscriptor, it subscribes once and resolves with the id as subscribe


  _createSubscriber({
    paramsJson,
    subName,
    subType,
    update
  }, errorHandler) {
    return new Promise((resolve, reject) => {
      this.provider.subscribe(subType, subName, paramsJson, update).then(resolve).catch(error => {
        errorHandler(error);
        reject(error);
      });
    });
  }

  _createMethodSubscribe(section, method, def) {
    const [updateType, subMethod, unsubMethod] = def.pubsub;
    const subName = `${section}_${subMethod}`;
    const unsubName = `${section}_${unsubMethod}`;
    const subType = `${section}_${updateType}`;
    let memoized = null;

    const creator = isScale => (...values) => {
      return new rxjs__WEBPACK_IMPORTED_MODULE_12__.Observable(observer => {
        // Have at least an empty promise, as used in the unsubscribe
        let subscriptionPromise = Promise.resolve(null);

        const registry = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _registryDefault)[_registryDefault];

        const errorHandler = error => {
          logErrorMessage(method, def, error);
          observer.error(error);
        };

        try {
          const params = this._formatInputs(registry, null, def, values);

          const paramsJson = params.map(p => p.toJSON());

          const update = (error, result) => {
            if (error) {
              logErrorMessage(method, def, error);
              return;
            }

            try {
              observer.next(this._formatResult(isScale, registry, null, method, def, params, result));
            } catch (error) {
              observer.error(error);
            }
          };

          subscriptionPromise = this._createSubscriber({
            paramsJson,
            subName,
            subType,
            update
          }, errorHandler);
        } catch (error) {
          errorHandler(error);
        } // Teardown logic


        return () => {
          var _memoized2;

          // Delete from cache, so old results don't hang around
          (_memoized2 = memoized) === null || _memoized2 === void 0 ? void 0 : _memoized2.unmemoize(...values); // Unsubscribe from provider

          subscriptionPromise.then(subscriptionId => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_16__.isNull)(subscriptionId) ? Promise.resolve(false) : this.provider.unsubscribe(subType, unsubName, subscriptionId)).catch(error => logErrorMessage(method, def, error));
        };
      }).pipe((0,_util_index_js__WEBPACK_IMPORTED_MODULE_17__.drr)());
    };

    memoized = this._memomize(creator, def);
    return memoized;
  }

  _formatInputs(registry, blockHash, def, inputs) {
    const reqArgCount = def.params.filter(({
      isOptional
    }) => !isOptional).length;
    const optText = reqArgCount === def.params.length ? '' : ` (${def.params.length - reqArgCount} optional)`;
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.assert)(inputs.length >= reqArgCount && inputs.length <= def.params.length, () => `Expected ${def.params.length} parameters${optText}, ${inputs.length} found instead`);
    return inputs.map((input, index) => registry.createTypeUnsafe(def.params[index].type, [input], {
      blockHash
    }));
  }

  _formatOutput(registry, blockHash, method, rpc, params, result) {
    if (rpc.type === 'StorageData') {
      const key = params[0];
      return this._formatStorageData(registry, blockHash, key, result);
    } else if (rpc.type === 'StorageChangeSet') {
      const keys = params[0];
      return keys ? this._formatStorageSet(registry, result.block, keys, result.changes) : registry.createType('StorageChangeSet', result);
    } else if (rpc.type === 'Vec<StorageChangeSet>') {
      const mapped = result.map(({
        block,
        changes
      }) => [registry.createType('Hash', block), this._formatStorageSet(registry, block, params[0], changes)]); // we only query at a specific block, not a range - flatten

      return method === 'queryStorageAt' ? mapped[0][1] : mapped;
    }

    return registry.createTypeUnsafe(rpc.type, [result], {
      blockHash
    });
  }

  _formatStorageData(registry, blockHash, key, value) {
    const isEmpty = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_16__.isNull)(value); // we convert to Uint8Array since it maps to the raw encoding, all
    // data will be correctly encoded (incl. numbers, excl. :code)

    const input = isEmpty ? null : isTreatAsHex(key) ? value : (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_11__.u8aToU8a)(value);
    return this._newType(registry, blockHash, key, input, isEmpty);
  }

  _formatStorageSet(registry, blockHash, keys, changes) {
    // For StorageChangeSet, the changes has the [key, value] mappings
    const withCache = keys.length !== 1; // multiple return values (via state.storage subscription), decode the values
    // one at a time, all based on the query types. Three values can be returned -
    //   - Codec - There is a valid value, non-empty
    //   - null - The storage key is empty

    return keys.reduce((results, key, index) => {
      results.push(this._formatStorageSetEntry(registry, blockHash, key, changes, withCache, index));
      return results;
    }, []);
  }

  _formatStorageSetEntry(registry, blockHash, key, changes, witCache, entryIndex) {
    const hexKey = key.toHex();
    const found = changes.find(([key]) => key === hexKey); // if we don't find the value, this is our fallback
    //   - in the case of an array of values, fill the hole from the cache
    //   - if a single result value, don't fill - it is not an update hole
    //   - fallback to an empty option in all cases

    const value = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_18__.isUndefined)(found) ? witCache && (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _storageCache)[_storageCache].get(hexKey) || null : found[1];
    const isEmpty = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_16__.isNull)(value);
    const input = isEmpty || isTreatAsHex(key) ? value : (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_11__.u8aToU8a)(value); // store the retrieved result - the only issue with this cache is that there is no
    // clearing of it, so very long running processes (not just a couple of hours, longer)
    // will increase memory beyond what is allowed.

    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _storageCache)[_storageCache].set(hexKey, value);

    return this._newType(registry, blockHash, key, input, isEmpty, entryIndex);
  }

  _newType(registry, blockHash, key, input, isEmpty, entryIndex = -1) {
    // single return value (via state.getStorage), decode the value based on the
    // outputType that we have specified. Fallback to Raw on nothing
    const type = key.outputType || 'Raw';
    const meta = key.meta || EMPTY_META;
    const entryNum = entryIndex === -1 ? '' : ` entry ${entryIndex}:`;

    try {
      return registry.createTypeUnsafe(type, [isEmpty ? meta.fallback ? (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_19__.hexToU8a)(meta.fallback.toHex()) : undefined : meta.modifier.isOptional ? registry.createTypeUnsafe(type, [input], {
        blockHash,
        isPedantic: true
      }) : input], {
        blockHash,
        isOptional: meta.modifier.isOptional,
        isPedantic: !meta.modifier.isOptional
      });
    } catch (error) {
      throw new Error(`Unable to decode storage ${key.section || 'unknown'}.${key.method || 'unknown'}:${entryNum}: ${error.message}`);
    }
  }

}

/***/ }),
/* 601 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/rpc-core authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/rpc-core',
  version: '6.10.1'
};

/***/ }),
/* 602 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "drr": () => (/* reexport safe */ _drr_js__WEBPACK_IMPORTED_MODULE_0__.drr),
/* harmony export */   "memo": () => (/* reexport safe */ _memo_js__WEBPACK_IMPORTED_MODULE_1__.memo),
/* harmony export */   "refCountDelay": () => (/* reexport safe */ _refCountDelay_js__WEBPACK_IMPORTED_MODULE_2__.refCountDelay)
/* harmony export */ });
/* harmony import */ var _drr_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(603);
/* harmony import */ var _memo_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(624);
/* harmony import */ var _refCountDelay_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(613);
// Copyright 2017-2021 @polkadot/rpc-core authors & contributors
// SPDX-License-Identifier: Apache-2.0




/***/ }),
/* 603 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "drr": () => (/* binding */ drr)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(604);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(605);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(606);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(607);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(612);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(285);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(292);
/* harmony import */ var _refCountDelay_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(613);
// Copyright 2017-2021 @polkadot/rpc-core authors & contributors
// SPDX-License-Identifier: Apache-2.0



const l = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.logger)('drr');

const CMP = (a, b) => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.stringify)({
  t: a
}) === (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.stringify)({
  t: b
});

const ERR = error => {
  l.error(error.message);
  throw error;
};

const NOOP = () => undefined;
/**
 * Shorthand for distinctUntilChanged(), publishReplay(1) and refCount().
 *
 * @ignore
 * @internal
 */


const drr = ({
  delay,
  skipChange = false,
  skipTimeout = false
} = {}) => source$ => source$.pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_2__.catchError)(ERR), skipChange ? (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.tap)(NOOP) : (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.distinctUntilChanged)(CMP), (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.publishReplay)(1), skipTimeout ? (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.refCount)() : (0,_refCountDelay_js__WEBPACK_IMPORTED_MODULE_7__.refCountDelay)(delay));

/***/ }),
/* 604 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "catchError": () => (/* binding */ catchError)
/* harmony export */ });
/* harmony import */ var _observable_innerFrom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(581);
/* harmony import */ var _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(592);
/* harmony import */ var _util_lift__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(590);



function catchError(selector) {
    return (0,_util_lift__WEBPACK_IMPORTED_MODULE_0__.operate)(function (source, subscriber) {
        var innerSub = null;
        var syncUnsub = false;
        var handledResult;
        innerSub = source.subscribe(new _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__.OperatorSubscriber(subscriber, undefined, undefined, function (err) {
            handledResult = (0,_observable_innerFrom__WEBPACK_IMPORTED_MODULE_2__.innerFrom)(selector(err, catchError(selector)(source)));
            if (innerSub) {
                innerSub.unsubscribe();
                innerSub = null;
                handledResult.subscribe(subscriber);
            }
            else {
                syncUnsub = true;
            }
        }));
        if (syncUnsub) {
            innerSub.unsubscribe();
            innerSub = null;
            handledResult.subscribe(subscriber);
        }
    });
}
//# sourceMappingURL=catchError.js.map

/***/ }),
/* 605 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "tap": () => (/* binding */ tap)
/* harmony export */ });
/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60);
/* harmony import */ var _util_lift__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(590);
/* harmony import */ var _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(592);
/* harmony import */ var _util_identity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(71);




function tap(observerOrNext, error, complete) {
    var tapObserver = (0,_util_isFunction__WEBPACK_IMPORTED_MODULE_0__.isFunction)(observerOrNext) || error || complete
        ?
            { next: observerOrNext, error: error, complete: complete }
        : observerOrNext;
    return tapObserver
        ? (0,_util_lift__WEBPACK_IMPORTED_MODULE_1__.operate)(function (source, subscriber) {
            var _a;
            (_a = tapObserver.subscribe) === null || _a === void 0 ? void 0 : _a.call(tapObserver);
            var isUnsub = true;
            source.subscribe(new _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_2__.OperatorSubscriber(subscriber, function (value) {
                var _a;
                (_a = tapObserver.next) === null || _a === void 0 ? void 0 : _a.call(tapObserver, value);
                subscriber.next(value);
            }, function () {
                var _a;
                isUnsub = false;
                (_a = tapObserver.complete) === null || _a === void 0 ? void 0 : _a.call(tapObserver);
                subscriber.complete();
            }, function (err) {
                var _a;
                isUnsub = false;
                (_a = tapObserver.error) === null || _a === void 0 ? void 0 : _a.call(tapObserver, err);
                subscriber.error(err);
            }, function () {
                var _a, _b;
                if (isUnsub) {
                    (_a = tapObserver.unsubscribe) === null || _a === void 0 ? void 0 : _a.call(tapObserver);
                }
                (_b = tapObserver.finalize) === null || _b === void 0 ? void 0 : _b.call(tapObserver);
            }));
        })
        :
            _util_identity__WEBPACK_IMPORTED_MODULE_3__.identity;
}
//# sourceMappingURL=tap.js.map

/***/ }),
/* 606 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "distinctUntilChanged": () => (/* binding */ distinctUntilChanged)
/* harmony export */ });
/* harmony import */ var _util_identity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(71);
/* harmony import */ var _util_lift__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(590);
/* harmony import */ var _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(592);



function distinctUntilChanged(comparator, keySelector) {
    if (keySelector === void 0) { keySelector = _util_identity__WEBPACK_IMPORTED_MODULE_0__.identity; }
    comparator = comparator !== null && comparator !== void 0 ? comparator : defaultCompare;
    return (0,_util_lift__WEBPACK_IMPORTED_MODULE_1__.operate)(function (source, subscriber) {
        var previousKey;
        var first = true;
        source.subscribe(new _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_2__.OperatorSubscriber(subscriber, function (value) {
            var currentKey = keySelector(value);
            if (first || !comparator(previousKey, currentKey)) {
                first = false;
                previousKey = currentKey;
                subscriber.next(value);
            }
        }));
    });
}
function defaultCompare(a, b) {
    return a === b;
}
//# sourceMappingURL=distinctUntilChanged.js.map

/***/ }),
/* 607 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "publishReplay": () => (/* binding */ publishReplay)
/* harmony export */ });
/* harmony import */ var _ReplaySubject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(51);
/* harmony import */ var _multicast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(608);
/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60);



function publishReplay(bufferSize, windowTime, selectorOrScheduler, timestampProvider) {
    if (selectorOrScheduler && !(0,_util_isFunction__WEBPACK_IMPORTED_MODULE_0__.isFunction)(selectorOrScheduler)) {
        timestampProvider = selectorOrScheduler;
    }
    var selector = (0,_util_isFunction__WEBPACK_IMPORTED_MODULE_0__.isFunction)(selectorOrScheduler) ? selectorOrScheduler : undefined;
    return function (source) { return (0,_multicast__WEBPACK_IMPORTED_MODULE_1__.multicast)(new _ReplaySubject__WEBPACK_IMPORTED_MODULE_2__.ReplaySubject(bufferSize, windowTime, timestampProvider), selector)(source); };
}
//# sourceMappingURL=publishReplay.js.map

/***/ }),
/* 608 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "multicast": () => (/* binding */ multicast)
/* harmony export */ });
/* harmony import */ var _observable_ConnectableObservable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(611);
/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60);
/* harmony import */ var _connect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(609);



function multicast(subjectOrSubjectFactory, selector) {
    var subjectFactory = (0,_util_isFunction__WEBPACK_IMPORTED_MODULE_0__.isFunction)(subjectOrSubjectFactory) ? subjectOrSubjectFactory : function () { return subjectOrSubjectFactory; };
    if ((0,_util_isFunction__WEBPACK_IMPORTED_MODULE_0__.isFunction)(selector)) {
        return (0,_connect__WEBPACK_IMPORTED_MODULE_1__.connect)(selector, {
            connector: subjectFactory,
        });
    }
    return function (source) { return new _observable_ConnectableObservable__WEBPACK_IMPORTED_MODULE_2__.ConnectableObservable(source, subjectFactory); };
}
//# sourceMappingURL=multicast.js.map

/***/ }),
/* 609 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "connect": () => (/* binding */ connect)
/* harmony export */ });
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(54);
/* harmony import */ var _observable_from__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(577);
/* harmony import */ var _util_lift__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(590);
/* harmony import */ var _observable_fromSubscribable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(610);




var DEFAULT_CONFIG = {
    connector: function () { return new _Subject__WEBPACK_IMPORTED_MODULE_0__.Subject(); },
};
function connect(selector, config) {
    if (config === void 0) { config = DEFAULT_CONFIG; }
    var connector = config.connector;
    return (0,_util_lift__WEBPACK_IMPORTED_MODULE_1__.operate)(function (source, subscriber) {
        var subject = connector();
        (0,_observable_from__WEBPACK_IMPORTED_MODULE_2__.from)(selector((0,_observable_fromSubscribable__WEBPACK_IMPORTED_MODULE_3__.fromSubscribable)(subject))).subscribe(subscriber);
        subscriber.add(source.subscribe(subject));
    });
}
//# sourceMappingURL=connect.js.map

/***/ }),
/* 610 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fromSubscribable": () => (/* binding */ fromSubscribable)
/* harmony export */ });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(63);

function fromSubscribable(subscribable) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__.Observable(function (subscriber) { return subscribable.subscribe(subscriber); });
}
//# sourceMappingURL=fromSubscribable.js.map

/***/ }),
/* 611 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ConnectableObservable": () => (/* binding */ ConnectableObservable)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52);
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(63);
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(59);
/* harmony import */ var _operators_refCount__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(612);
/* harmony import */ var _operators_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(592);
/* harmony import */ var _util_lift__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(590);






var ConnectableObservable = (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(ConnectableObservable, _super);
    function ConnectableObservable(source, subjectFactory) {
        var _this = _super.call(this) || this;
        _this.source = source;
        _this.subjectFactory = subjectFactory;
        _this._subject = null;
        _this._refCount = 0;
        _this._connection = null;
        if ((0,_util_lift__WEBPACK_IMPORTED_MODULE_1__.hasLift)(source)) {
            _this.lift = source.lift;
        }
        return _this;
    }
    ConnectableObservable.prototype._subscribe = function (subscriber) {
        return this.getSubject().subscribe(subscriber);
    };
    ConnectableObservable.prototype.getSubject = function () {
        var subject = this._subject;
        if (!subject || subject.isStopped) {
            this._subject = this.subjectFactory();
        }
        return this._subject;
    };
    ConnectableObservable.prototype._teardown = function () {
        this._refCount = 0;
        var _connection = this._connection;
        this._subject = this._connection = null;
        _connection === null || _connection === void 0 ? void 0 : _connection.unsubscribe();
    };
    ConnectableObservable.prototype.connect = function () {
        var _this = this;
        var connection = this._connection;
        if (!connection) {
            connection = this._connection = new _Subscription__WEBPACK_IMPORTED_MODULE_2__.Subscription();
            var subject_1 = this.getSubject();
            connection.add(this.source.subscribe(new _operators_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_3__.OperatorSubscriber(subject_1, undefined, function () {
                _this._teardown();
                subject_1.complete();
            }, function (err) {
                _this._teardown();
                subject_1.error(err);
            }, function () { return _this._teardown(); })));
            if (connection.closed) {
                this._connection = null;
                connection = _Subscription__WEBPACK_IMPORTED_MODULE_2__.Subscription.EMPTY;
            }
        }
        return connection;
    };
    ConnectableObservable.prototype.refCount = function () {
        return (0,_operators_refCount__WEBPACK_IMPORTED_MODULE_4__.refCount)()(this);
    };
    return ConnectableObservable;
}(_Observable__WEBPACK_IMPORTED_MODULE_5__.Observable));

//# sourceMappingURL=ConnectableObservable.js.map

/***/ }),
/* 612 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "refCount": () => (/* binding */ refCount)
/* harmony export */ });
/* harmony import */ var _util_lift__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(590);
/* harmony import */ var _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(592);


function refCount() {
    return (0,_util_lift__WEBPACK_IMPORTED_MODULE_0__.operate)(function (source, subscriber) {
        var connection = null;
        source._refCount++;
        var refCounter = new _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__.OperatorSubscriber(subscriber, undefined, undefined, undefined, function () {
            if (!source || source._refCount <= 0 || 0 < --source._refCount) {
                connection = null;
                return;
            }
            var sharedConnection = source._connection;
            var conn = connection;
            connection = null;
            if (sharedConnection && (!conn || sharedConnection === conn)) {
                sharedConnection.unsubscribe();
            }
            subscriber.unsubscribe();
        });
        source.subscribe(refCounter);
        if (!refCounter.closed) {
            connection = source.connect();
        }
    });
}
//# sourceMappingURL=refCount.js.map

/***/ }),
/* 613 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "refCountDelay": () => (/* binding */ refCountDelay)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(59);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(63);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(614);
// Copyright 2017-2021 @polkadot/rpc-core authors & contributors
// SPDX-License-Identifier: Apache-2.0

/** @internal */

function refCountDelay(delay = 1750) {
  return source => {
    // state: 0 = disconnected, 1 = disconnecting, 2 = connecting, 3 = connected
    let [state, refCount, connection, scheduler] = [0, 0, rxjs__WEBPACK_IMPORTED_MODULE_0__.Subscription.EMPTY, rxjs__WEBPACK_IMPORTED_MODULE_0__.Subscription.EMPTY];
    return new rxjs__WEBPACK_IMPORTED_MODULE_1__.Observable(ob => {
      source.subscribe(ob);

      if (refCount++ === 0) {
        if (state === 1) {
          scheduler.unsubscribe();
        } else {
          connection = source.connect();
        }

        state = 3;
      }

      return () => {
        if (--refCount === 0) {
          if (state === 2) {
            state = 0;
            scheduler.unsubscribe();
          } else {
            // state === 3
            state = 1;
            scheduler = rxjs__WEBPACK_IMPORTED_MODULE_2__.asapScheduler.schedule(() => {
              state = 0;
              connection.unsubscribe();
            }, delay);
          }
        }
      };
    });
  };
}

/***/ }),
/* 614 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "asapScheduler": () => (/* binding */ asapScheduler),
/* harmony export */   "asap": () => (/* binding */ asap)
/* harmony export */ });
/* harmony import */ var _AsapAction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(618);
/* harmony import */ var _AsapScheduler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(615);


var asapScheduler = new _AsapScheduler__WEBPACK_IMPORTED_MODULE_0__.AsapScheduler(_AsapAction__WEBPACK_IMPORTED_MODULE_1__.AsapAction);
var asap = asapScheduler;
//# sourceMappingURL=asap.js.map

/***/ }),
/* 615 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AsapScheduler": () => (/* binding */ AsapScheduler)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52);
/* harmony import */ var _AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(616);


var AsapScheduler = (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(AsapScheduler, _super);
    function AsapScheduler() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AsapScheduler.prototype.flush = function (action) {
        this._active = true;
        this._scheduled = undefined;
        var actions = this.actions;
        var error;
        var index = -1;
        action = action || actions.shift();
        var count = actions.length;
        do {
            if ((error = action.execute(action.state, action.delay))) {
                break;
            }
        } while (++index < count && (action = actions.shift()));
        this._active = false;
        if (error) {
            while (++index < count && (action = actions.shift())) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    return AsapScheduler;
}(_AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__.AsyncScheduler));

//# sourceMappingURL=AsapScheduler.js.map

/***/ }),
/* 616 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AsyncScheduler": () => (/* binding */ AsyncScheduler)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52);
/* harmony import */ var _Scheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(617);


var AsyncScheduler = (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(AsyncScheduler, _super);
    function AsyncScheduler(SchedulerAction, now) {
        if (now === void 0) { now = _Scheduler__WEBPACK_IMPORTED_MODULE_1__.Scheduler.now; }
        var _this = _super.call(this, SchedulerAction, now) || this;
        _this.actions = [];
        _this._active = false;
        _this._scheduled = undefined;
        return _this;
    }
    AsyncScheduler.prototype.flush = function (action) {
        var actions = this.actions;
        if (this._active) {
            actions.push(action);
            return;
        }
        var error;
        this._active = true;
        do {
            if ((error = action.execute(action.state, action.delay))) {
                break;
            }
        } while ((action = actions.shift()));
        this._active = false;
        if (error) {
            while ((action = actions.shift())) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    return AsyncScheduler;
}(_Scheduler__WEBPACK_IMPORTED_MODULE_1__.Scheduler));

//# sourceMappingURL=AsyncScheduler.js.map

/***/ }),
/* 617 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Scheduler": () => (/* binding */ Scheduler)
/* harmony export */ });
/* harmony import */ var _scheduler_dateTimestampProvider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(53);

var Scheduler = (function () {
    function Scheduler(schedulerActionCtor, now) {
        if (now === void 0) { now = Scheduler.now; }
        this.schedulerActionCtor = schedulerActionCtor;
        this.now = now;
    }
    Scheduler.prototype.schedule = function (work, delay, state) {
        if (delay === void 0) { delay = 0; }
        return new this.schedulerActionCtor(this, work).schedule(state, delay);
    };
    Scheduler.now = _scheduler_dateTimestampProvider__WEBPACK_IMPORTED_MODULE_0__.dateTimestampProvider.now;
    return Scheduler;
}());

//# sourceMappingURL=Scheduler.js.map

/***/ }),
/* 618 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AsapAction": () => (/* binding */ AsapAction)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52);
/* harmony import */ var _AsyncAction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(621);
/* harmony import */ var _immediateProvider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(619);



var AsapAction = (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(AsapAction, _super);
    function AsapAction(scheduler, work) {
        var _this = _super.call(this, scheduler, work) || this;
        _this.scheduler = scheduler;
        _this.work = work;
        return _this;
    }
    AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        if (delay !== null && delay > 0) {
            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
        }
        scheduler.actions.push(this);
        return scheduler._scheduled || (scheduler._scheduled = _immediateProvider__WEBPACK_IMPORTED_MODULE_1__.immediateProvider.setImmediate(scheduler.flush.bind(scheduler, undefined)));
    };
    AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        if ((delay != null && delay > 0) || (delay == null && this.delay > 0)) {
            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);
        }
        if (scheduler.actions.length === 0) {
            _immediateProvider__WEBPACK_IMPORTED_MODULE_1__.immediateProvider.clearImmediate(id);
            scheduler._scheduled = undefined;
        }
        return undefined;
    };
    return AsapAction;
}(_AsyncAction__WEBPACK_IMPORTED_MODULE_2__.AsyncAction));

//# sourceMappingURL=AsapAction.js.map

/***/ }),
/* 619 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "immediateProvider": () => (/* binding */ immediateProvider)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(52);
/* harmony import */ var _util_Immediate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(620);


var setImmediate = _util_Immediate__WEBPACK_IMPORTED_MODULE_0__.Immediate.setImmediate, clearImmediate = _util_Immediate__WEBPACK_IMPORTED_MODULE_0__.Immediate.clearImmediate;
var immediateProvider = {
    setImmediate: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var delegate = immediateProvider.delegate;
        return ((delegate === null || delegate === void 0 ? void 0 : delegate.setImmediate) || setImmediate).apply(void 0, (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)([], (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)(args)));
    },
    clearImmediate: function (handle) {
        var delegate = immediateProvider.delegate;
        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearImmediate) || clearImmediate)(handle);
    },
    delegate: undefined,
};
//# sourceMappingURL=immediateProvider.js.map

/***/ }),
/* 620 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Immediate": () => (/* binding */ Immediate),
/* harmony export */   "TestTools": () => (/* binding */ TestTools)
/* harmony export */ });
var nextHandle = 1;
var resolved;
var activeHandles = {};
function findAndClearHandle(handle) {
    if (handle in activeHandles) {
        delete activeHandles[handle];
        return true;
    }
    return false;
}
var Immediate = {
    setImmediate: function (cb) {
        var handle = nextHandle++;
        activeHandles[handle] = true;
        if (!resolved) {
            resolved = Promise.resolve();
        }
        resolved.then(function () { return findAndClearHandle(handle) && cb(); });
        return handle;
    },
    clearImmediate: function (handle) {
        findAndClearHandle(handle);
    },
};
var TestTools = {
    pending: function () {
        return Object.keys(activeHandles).length;
    }
};
//# sourceMappingURL=Immediate.js.map

/***/ }),
/* 621 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AsyncAction": () => (/* binding */ AsyncAction)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52);
/* harmony import */ var _Action__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(623);
/* harmony import */ var _intervalProvider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(622);
/* harmony import */ var _util_arrRemove__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(62);




var AsyncAction = (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(AsyncAction, _super);
    function AsyncAction(scheduler, work) {
        var _this = _super.call(this, scheduler, work) || this;
        _this.scheduler = scheduler;
        _this.work = work;
        _this.pending = false;
        return _this;
    }
    AsyncAction.prototype.schedule = function (state, delay) {
        if (delay === void 0) { delay = 0; }
        if (this.closed) {
            return this;
        }
        this.state = state;
        var id = this.id;
        var scheduler = this.scheduler;
        if (id != null) {
            this.id = this.recycleAsyncId(scheduler, id, delay);
        }
        this.pending = true;
        this.delay = delay;
        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);
        return this;
    };
    AsyncAction.prototype.requestAsyncId = function (scheduler, _id, delay) {
        if (delay === void 0) { delay = 0; }
        return _intervalProvider__WEBPACK_IMPORTED_MODULE_1__.intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);
    };
    AsyncAction.prototype.recycleAsyncId = function (_scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        if (delay != null && this.delay === delay && this.pending === false) {
            return id;
        }
        _intervalProvider__WEBPACK_IMPORTED_MODULE_1__.intervalProvider.clearInterval(id);
        return undefined;
    };
    AsyncAction.prototype.execute = function (state, delay) {
        if (this.closed) {
            return new Error('executing a cancelled action');
        }
        this.pending = false;
        var error = this._execute(state, delay);
        if (error) {
            return error;
        }
        else if (this.pending === false && this.id != null) {
            this.id = this.recycleAsyncId(this.scheduler, this.id, null);
        }
    };
    AsyncAction.prototype._execute = function (state, _delay) {
        var errored = false;
        var errorValue;
        try {
            this.work(state);
        }
        catch (e) {
            errored = true;
            errorValue = e ? e : new Error('Scheduled action threw falsy error');
        }
        if (errored) {
            this.unsubscribe();
            return errorValue;
        }
    };
    AsyncAction.prototype.unsubscribe = function () {
        if (!this.closed) {
            var _a = this, id = _a.id, scheduler = _a.scheduler;
            var actions = scheduler.actions;
            this.work = this.state = this.scheduler = null;
            this.pending = false;
            (0,_util_arrRemove__WEBPACK_IMPORTED_MODULE_2__.arrRemove)(actions, this);
            if (id != null) {
                this.id = this.recycleAsyncId(scheduler, id, null);
            }
            this.delay = null;
            _super.prototype.unsubscribe.call(this);
        }
    };
    return AsyncAction;
}(_Action__WEBPACK_IMPORTED_MODULE_3__.Action));

//# sourceMappingURL=AsyncAction.js.map

/***/ }),
/* 622 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "intervalProvider": () => (/* binding */ intervalProvider)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52);

var intervalProvider = {
    setInterval: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var delegate = intervalProvider.delegate;
        return ((delegate === null || delegate === void 0 ? void 0 : delegate.setInterval) || setInterval).apply(void 0, (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__spreadArray)([], (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__read)(args)));
    },
    clearInterval: function (handle) {
        var delegate = intervalProvider.delegate;
        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearInterval) || clearInterval)(handle);
    },
    delegate: undefined,
};
//# sourceMappingURL=intervalProvider.js.map

/***/ }),
/* 623 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Action": () => (/* binding */ Action)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52);
/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(59);


var Action = (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(Action, _super);
    function Action(scheduler, work) {
        return _super.call(this) || this;
    }
    Action.prototype.schedule = function (state, delay) {
        if (delay === void 0) { delay = 0; }
        return this;
    };
    return Action;
}(_Subscription__WEBPACK_IMPORTED_MODULE_1__.Subscription));

//# sourceMappingURL=Action.js.map

/***/ }),
/* 624 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "memo": () => (/* binding */ memo)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(63);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(625);
/* harmony import */ var _drr_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(603);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0



// Wraps a derive, doing 2 things to optimize calls -
//   1. creates a memo of the inner fn -> Observable, removing when unsubscribed
//   2. wraps the observable in a drr() (which includes an unsub delay)

/** @internal */
// eslint-disable-next-line @typescript-eslint/ban-types
function memo(instanceId, inner) {
  const options = {
    getInstanceId: () => instanceId
  };
  const cached = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.memoize)((...params) => new rxjs__WEBPACK_IMPORTED_MODULE_1__.Observable(observer => {
    const subscription = inner(...params).subscribe(observer);
    return () => {
      cached.unmemoize(...params);
      subscription.unsubscribe();
    };
  }).pipe((0,_drr_js__WEBPACK_IMPORTED_MODULE_2__.drr)()), options);
  return cached;
}

/***/ }),
/* 625 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "memoize": () => (/* binding */ memoize)
/* harmony export */ });
/* harmony import */ var _is_undefined_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(82);
/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(292);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0



function defaultGetId() {
  return 'none';
} // eslint-disable-next-line @typescript-eslint/no-explicit-any


function memoize(fn, {
  getInstanceId = defaultGetId
} = {}) {
  const cache = {};

  const memoized = (...args) => {
    const stringParams = (0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(args);
    const instanceId = getInstanceId();

    if (!cache[instanceId]) {
      cache[instanceId] = {};
    }

    if ((0,_is_undefined_js__WEBPACK_IMPORTED_MODULE_1__.isUndefined)(cache[instanceId][stringParams])) {
      cache[instanceId][stringParams] = fn(...args);
    }

    return cache[instanceId][stringParams];
  };

  memoized.unmemoize = (...args) => {
    const stringParams = (0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(args);
    const instanceId = getInstanceId();

    if (cache[instanceId] && !(0,_is_undefined_js__WEBPACK_IMPORTED_MODULE_1__.isUndefined)(cache[instanceId][stringParams])) {
      delete cache[instanceId][stringParams];
    }
  };

  return memoized;
}

/***/ }),
/* 626 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(122);
/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(486);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0


const jsonrpc = {};
Object.keys(_definitions_js__WEBPACK_IMPORTED_MODULE_0__).forEach(s => Object.entries(_definitions_js__WEBPACK_IMPORTED_MODULE_0__[s].rpc || {}).forEach(([method, def]) => {
  // allow for section overrides
  const section = def.aliasSection || s;

  if (!jsonrpc[section]) {
    jsonrpc[section] = {};
  }

  jsonrpc[section][method] = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.objectSpread)({}, def, {
    isSubscription: !!def.pubsub,
    jsonrpc: `${section}_${method}`,
    method,
    section
  });
}));
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (jsonrpc);

/***/ }),
/* 627 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BehaviorSubject": () => (/* binding */ BehaviorSubject)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52);
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(54);


var BehaviorSubject = (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(BehaviorSubject, _super);
    function BehaviorSubject(_value) {
        var _this = _super.call(this) || this;
        _this._value = _value;
        return _this;
    }
    Object.defineProperty(BehaviorSubject.prototype, "value", {
        get: function () {
            return this.getValue();
        },
        enumerable: false,
        configurable: true
    });
    BehaviorSubject.prototype._subscribe = function (subscriber) {
        var subscription = _super.prototype._subscribe.call(this, subscriber);
        !subscription.closed && subscriber.next(this._value);
        return subscription;
    };
    BehaviorSubject.prototype.getValue = function () {
        var _a = this, hasError = _a.hasError, thrownError = _a.thrownError, _value = _a._value;
        if (hasError) {
            throw thrownError;
        }
        this._throwIfClosed();
        return _value;
    };
    BehaviorSubject.prototype.next = function (value) {
        _super.prototype.next.call(this, (this._value = value));
    };
    return BehaviorSubject;
}(_Subject__WEBPACK_IMPORTED_MODULE_1__.Subject));

//# sourceMappingURL=BehaviorSubject.js.map

/***/ }),
/* 628 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "expandMetadata": () => (/* binding */ expandMetadata),
/* harmony export */   "decorateConstants": () => (/* reexport safe */ _constants_index_js__WEBPACK_IMPORTED_MODULE_2__.decorateConstants),
/* harmony export */   "decorateErrors": () => (/* reexport safe */ _errors_index_js__WEBPACK_IMPORTED_MODULE_3__.decorateErrors),
/* harmony export */   "decorateEvents": () => (/* reexport safe */ _events_index_js__WEBPACK_IMPORTED_MODULE_4__.decorateEvents),
/* harmony export */   "decorateExtrinsics": () => (/* reexport safe */ _extrinsics_index_js__WEBPACK_IMPORTED_MODULE_6__.decorateExtrinsics),
/* harmony export */   "decorateStorage": () => (/* reexport safe */ _storage_index_js__WEBPACK_IMPORTED_MODULE_5__.decorateStorage),
/* harmony export */   "filterCallsSome": () => (/* reexport safe */ _extrinsics_index_js__WEBPACK_IMPORTED_MODULE_6__.filterCallsSome),
/* harmony export */   "filterEventsSome": () => (/* reexport safe */ _events_index_js__WEBPACK_IMPORTED_MODULE_4__.filterEventsSome)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(80);
/* harmony import */ var _Metadata_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(362);
/* harmony import */ var _constants_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(326);
/* harmony import */ var _errors_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(309);
/* harmony import */ var _events_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(306);
/* harmony import */ var _extrinsics_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(323);
/* harmony import */ var _storage_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(629);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0







/**
 * Expands the metadata by decoration into consts, query and tx sections
 */

function expandMetadata(registry, metadata) {
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)(metadata instanceof _Metadata_js__WEBPACK_IMPORTED_MODULE_1__.Metadata, 'You need to pass a valid Metadata instance to Decorated');
  const latest = metadata.asLatest;
  const version = metadata.version;
  return {
    consts: (0,_constants_index_js__WEBPACK_IMPORTED_MODULE_2__.decorateConstants)(registry, latest, version),
    errors: (0,_errors_index_js__WEBPACK_IMPORTED_MODULE_3__.decorateErrors)(registry, latest, version),
    events: (0,_events_index_js__WEBPACK_IMPORTED_MODULE_4__.decorateEvents)(registry, latest, version),
    query: (0,_storage_index_js__WEBPACK_IMPORTED_MODULE_5__.decorateStorage)(registry, latest, version),
    registry,
    tx: (0,_extrinsics_index_js__WEBPACK_IMPORTED_MODULE_6__.decorateExtrinsics)(registry, latest, version)
  };
}


/***/ }),
/* 629 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "decorateStorage": () => (/* binding */ decorateStorage)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(303);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(304);
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(307);
/* harmony import */ var _createFunction_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(633);
/* harmony import */ var _getStorage_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(630);
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(632);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0





const VERSION_NAME = 'palletVersion';
const VERSION_KEY = ':__STORAGE_VERSION__:';
const VERSION_DOCS = {
  docs: 'Returns the current pallet version from storage',
  type: 'u16'
};
/** @internal */
// eslint-disable-next-line @typescript-eslint/no-unused-vars

function decorateStorage(registry, {
  pallets
}, _metaVersion) {
  const result = (0,_getStorage_js__WEBPACK_IMPORTED_MODULE_0__.getStorage)(registry);

  for (let i = 0; i < pallets.length; i++) {
    const {
      name,
      storage
    } = pallets[i];

    if (storage.isSome) {
      const section = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.stringCamelCase)(name);
      const {
        items,
        prefix: _prefix
      } = storage.unwrap();

      const prefix = _prefix.toString();

      (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.lazyMethod)(result, section, () => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.lazyMethods)({
        palletVersion: (0,_util_js__WEBPACK_IMPORTED_MODULE_3__.createRuntimeFunction)({
          method: VERSION_NAME,
          prefix,
          section
        }, (0,_createFunction_js__WEBPACK_IMPORTED_MODULE_4__.createKeyRaw)(registry, {
          method: VERSION_KEY,
          prefix: name.toString()
        }, [], [], []), VERSION_DOCS)(registry)
      }, items, meta => (0,_createFunction_js__WEBPACK_IMPORTED_MODULE_4__.createFunction)(registry, {
        meta,
        method: meta.name.toString(),
        prefix,
        section
      }, {}), _util_js__WEBPACK_IMPORTED_MODULE_5__.objectNameFirstLower));
    }
  }

  return result;
}

/***/ }),
/* 630 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getStorage": () => (/* binding */ getStorage)
/* harmony export */ });
/* harmony import */ var _substrate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(631);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

/** @internal */

function getStorage(registry) {
  const storage = {};
  const entries = Object.entries(_substrate_js__WEBPACK_IMPORTED_MODULE_0__.substrate);

  for (let e = 0; e < entries.length; e++) {
    storage[entries[e][0]] = entries[e][1](registry);
  }

  return {
    substrate: storage
  };
}

/***/ }),
/* 631 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "substrate": () => (/* binding */ substrate)
/* harmony export */ });
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(632);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0

const prefix = 'Substrate';
const section = 'substrate';

function createSubstrateFn(method, key, meta) {
  return (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.createRuntimeFunction)({
    method,
    prefix,
    section
  }, key, meta);
}

const substrate = {
  changesTrieConfig: createSubstrateFn('changesTrieConfig', ':changes_trie', {
    docs: 'Changes trie configuration is stored under this key.',
    type: 'u32'
  }),
  childStorageKeyPrefix: createSubstrateFn('childStorageKeyPrefix', ':child_storage:', {
    docs: 'Prefix of child storage keys.',
    type: 'u32'
  }),
  code: createSubstrateFn('code', ':code', {
    docs: 'Wasm code of the runtime.',
    type: 'Bytes'
  }),
  extrinsicIndex: createSubstrateFn('extrinsicIndex', ':extrinsic_index', {
    docs: 'Current extrinsic index (u32) is stored under this key.',
    type: 'u32'
  }),
  heapPages: createSubstrateFn('heapPages', ':heappages', {
    docs: 'Number of wasm linear memory pages required for execution of the runtime.',
    type: 'u64'
  })
};

/***/ }),
/* 632 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createRuntimeFunction": () => (/* binding */ createRuntimeFunction)
/* harmony export */ });
/* harmony import */ var _createFunction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(633);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0


function findSiPrimitive(registry, _prim) {
  const prim = _prim.toLowerCase();

  return registry.lookup.types.find(t => t.type.def.isPrimitive && t.type.def.asPrimitive.toString().toLowerCase() === prim || t.type.def.isHistoricMetaCompat && t.type.def.asHistoricMetaCompat.toString().toLowerCase() === prim);
}

function findSiType(registry, orig) {
  let portable = findSiPrimitive(registry, orig);

  if (!portable && orig === 'Bytes') {
    const u8 = findSiPrimitive(registry, 'u8');

    if (u8) {
      portable = registry.lookup.types.find(t => t.type.def.isSequence && t.type.def.asSequence.type.eq(u8.id) || t.type.def.isHistoricMetaCompat && t.type.def.asHistoricMetaCompat.eq(orig));
    }
  }

  if (!portable) {
    console.warn(`Unable to map ${orig} to a lookup index`);
  }

  return portable;
} // Small helper function to factorize code on this page.

/** @internal */


function createRuntimeFunction({
  method,
  prefix,
  section
}, key, {
  docs,
  type
}) {
  return registry => {
    var _findSiType;

    return (0,_createFunction_js__WEBPACK_IMPORTED_MODULE_0__.createFunction)(registry, {
      meta: registry.createType('StorageEntryMetadataLatest', {
        docs: registry.createType('Vec<Text>', [docs]),
        modifier: registry.createType('StorageEntryModifierLatest', 'Required'),
        name: registry.createType('Text', method),
        toJSON: () => key,
        type: registry.createType('StorageEntryTypeLatest', {
          Plain: ((_findSiType = findSiType(registry, type)) === null || _findSiType === void 0 ? void 0 : _findSiType.id) || 0
        })
      }),
      method,
      prefix,
      section
    }, {
      key,
      skipHashing: true
    });
  };
}

/***/ }),
/* 633 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createKeyRaw": () => (/* binding */ createKeyRaw),
/* harmony export */   "createFunction": () => (/* binding */ createFunction)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(197);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(82);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(303);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(238);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(308);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(122);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(575);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(635);
/* harmony import */ var _codec_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(410);
/* harmony import */ var _getHasher_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(634);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0





/** @internal */
function createKeyRaw(registry, itemFn, keys, hashers, args) {
  const extra = new Array(keys.length);

  for (let i = 0; i < keys.length; i++) {
    extra[i] = (0,_getHasher_js__WEBPACK_IMPORTED_MODULE_0__.getHasher)(hashers[i])(registry.createType(registry.createLookupType(keys[i]), args[i]).toU8a());
  }

  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aConcat)((0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_2__.xxhashAsU8a)(itemFn.prefix, 128), (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_2__.xxhashAsU8a)(itemFn.method, 128), ...extra);
}
/** @internal */

function filterDefined(a) {
  return !(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(a);
}
/** @internal */


function createKey(registry, itemFn, keys, hashers, args) {
  const {
    method,
    section
  } = itemFn;
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.assert)(Array.isArray(args), () => `Call to ${(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.stringCamelCase)(section || 'unknown')}.${(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.stringCamelCase)(method || 'unknown')} needs ${keys.length} arguments`);
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.assert)(args.filter(filterDefined).length === keys.length, () => `Call to ${(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.stringCamelCase)(section || 'unknown')}.${(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.stringCamelCase)(method || 'unknown')} needs ${keys.length} arguments, found [${args.join(', ')}]`); // as per createKey, always add the length prefix (underlying it is Bytes)

  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.compactAddLength)(createKeyRaw(registry, itemFn, keys, hashers, args));
}
/** @internal */


function expandWithMeta({
  meta,
  method,
  prefix,
  section
}, _storageFn) {
  const storageFn = _storageFn;
  storageFn.meta = meta;
  storageFn.method = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_7__.stringLowerFirst)(method);
  storageFn.prefix = prefix;
  storageFn.section = section; // explicitly add the actual method in the toJSON, this gets used to determine caching and without it
  // instances (e.g. collective) will not work since it is only matched on param meta

  storageFn.toJSON = () => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_8__.objectSpread)({
    storage: {
      method,
      prefix,
      section
    }
  }, meta.toJSON());

  return storageFn;
}
/** @internal */


function extendHeadMeta(registry, {
  meta: {
    docs,
    name,
    type
  },
  section
}, {
  method
}, iterFn) {
  const outputType = registry.createLookupType(type.asMap.key); // metadata with a fallback value using the type of the key, the normal
  // meta fallback only applies to actual entry values, create one for head

  iterFn.meta = registry.createType('StorageEntryMetadataLatest', {
    docs,
    fallback: registry.createType('Bytes'),
    modifier: registry.createType('StorageEntryModifierLatest', 1),
    // required
    name,
    // FIXME???
    type: registry.createType('StorageEntryTypeLatest', outputType, 0)
  });
  return (...args) => registry.createType('StorageKey', iterFn(...args), {
    method,
    section
  });
}
/** @internal */


function extendPrefixedMap(registry, itemFn, storageFn) {
  const {
    meta: {
      type
    },
    method,
    section
  } = itemFn;
  storageFn.iterKey = extendHeadMeta(registry, itemFn, storageFn, (...args) => {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.assert)(args.length === 0 || type.isMap && args.length < type.asMap.hashers.length, () => `Iteration ${(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.stringCamelCase)(section || 'unknown')}.${(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.stringCamelCase)(method || 'unknown')} needs arguments to be at least one less than the full arguments, found [${args.join(', ')}]`);

    if (args.length) {
      if (type.isMap) {
        const {
          hashers,
          key
        } = type.asMap;
        const keysVec = hashers.length === 1 ? [key] : registry.lookup.getSiType(key).def.asTuple;
        return new _codec_index_js__WEBPACK_IMPORTED_MODULE_9__.Raw(registry, createKeyRaw(registry, itemFn, keysVec.slice(0, args.length), hashers.slice(0, args.length), args));
      }
    }

    return new _codec_index_js__WEBPACK_IMPORTED_MODULE_9__.Raw(registry, createKeyRaw(registry, itemFn, [], [], []));
  });
  return storageFn;
}
/** @internal */


function createFunction(registry, itemFn, options) {
  const {
    meta: {
      type
    }
  } = itemFn;
  let cacheKey = null; // Can only have zero or one argument:
  //   - storage.system.account(address)
  //   - storage.timestamp.blockPeriod()
  // For higher-map queries the params are passed in as an tuple, [key1, key2]

  const storageFn = expandWithMeta(itemFn, (...args) => {
    if (type.isPlain) {
      if (!cacheKey) {
        cacheKey = options.skipHashing ? (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.compactAddLength)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_10__.u8aToU8a)(options.key)) : createKey(registry, itemFn, [], [], []);
      }

      return cacheKey;
    }

    const {
      hashers,
      key
    } = type.asMap;
    return hashers.length === 1 ? createKey(registry, itemFn, [key], hashers, args) : createKey(registry, itemFn, registry.lookup.getSiType(key).def.asTuple, hashers, args);
  });

  if (type.isMap) {
    extendPrefixedMap(registry, itemFn, storageFn);
  }

  storageFn.keyPrefix = (...args) => storageFn.iterKey && storageFn.iterKey(...args) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_11__.compactStripLength)(storageFn())[1];

  return storageFn;
}

/***/ }),
/* 634 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getHasher": () => (/* binding */ getHasher)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(197);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(635);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(327);
// Copyright 2017-2021 @polkadot/types authors & contributors
// SPDX-License-Identifier: Apache-2.0



const DEFAULT_FN = data => (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_0__.xxhashAsU8a)(data, 128);

const HASHERS = {
  Blake2_128: data => // eslint-disable-line camelcase
  (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_1__.blake2AsU8a)(data, 128),
  Blake2_128Concat: data => // eslint-disable-line camelcase
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aConcat)((0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_1__.blake2AsU8a)(data, 128), (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.u8aToU8a)(data)),
  Blake2_256: data => // eslint-disable-line camelcase
  (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_1__.blake2AsU8a)(data, 256),
  Identity: data => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.u8aToU8a)(data),
  Twox128: data => (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_0__.xxhashAsU8a)(data, 128),
  Twox256: data => (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_0__.xxhashAsU8a)(data, 256),
  Twox64Concat: data => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aConcat)((0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_0__.xxhashAsU8a)(data, 64), (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.u8aToU8a)(data))
};
/** @internal */

function getHasher(hasher) {
  return HASHERS[hasher.type] || DEFAULT_FN;
}

/***/ }),
/* 635 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "xxhashAsU8a": () => (/* binding */ xxhashAsU8a),
/* harmony export */   "xxhashAsHex": () => (/* binding */ xxhashAsHex)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(177);
/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(328);
/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(354);
/* harmony import */ var _xxhash64_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(636);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0





/**
 * @name xxhashAsU8a
 * @summary Creates a xxhash64 u8a from the input.
 * @description
 * From either a `string`, `Uint8Array` or a `Buffer` input, create the xxhash64 and return the result as a `Uint8Array` with the specified `bitLength`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { xxhashAsU8a } from '@polkadot/util-crypto';
 *
 * xxhashAsU8a('abc'); // => 0x44bc2cf5ad770999
 * ```
 */
function xxhashAsU8a(data, bitLength = 64, onlyJs) {
  const rounds = Math.ceil(bitLength / 64);
  const u8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(data);

  if (!_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.hasBigInt || !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.isReady)()) {
    return (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.twox)(u8a, rounds);
  }

  const result = new Uint8Array(rounds * 8);

  for (let seed = 0; seed < rounds; seed++) {
    result.set((0,_xxhash64_js__WEBPACK_IMPORTED_MODULE_3__.xxhash64)(u8a, seed).reverse(), seed * 8);
  }

  return result;
}
/**
 * @name xxhashAsHex
 * @description Creates a xxhash64 hex from the input.
 */

const xxhashAsHex = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_4__.createAsHex)(xxhashAsU8a);

/***/ }),
/* 636 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "xxhash64": () => (/* binding */ xxhash64)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(637);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
 // Adapted from https://github.com/pierrec/js-xxhash/blob/0504e76f3d31a21ae8528a7f590c7289c9e431d2/lib/xxhash64.js
//
// xxHash64 implementation in pure Javascript
// Copyright (C) 2016, Pierre Curto
// MIT license
//
// Changes made:
//   - converted to TypeScript
//   - uses native JS BigInt (no external dependencies)
//   - support only for Uint8Array inputs
//   - no constructor function, straight fill & digest
//   - update code removed, only called once, no streams

const P64_1 = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__._n)('11400714785074694791');

const P64_2 = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__._n)('14029467366897019727');

const P64_3 = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__._n)('1609587929392839161');

const P64_4 = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__._n)('9650029242287828579');

const P64_5 = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__._n)('2870177450012600261'); // mask for a u64, all bits set


const U64 = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__._n)('0xffffffffffffffff'); // various constants


const _7n = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__._n)(7);

const _11n = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__._n)(11);

const _12n = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__._n)(12);

const _16n = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__._n)(16);

const _18n = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__._n)(18);

const _23n = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__._n)(23);

const _27n = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__._n)(27);

const _29n = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__._n)(29);

const _31n = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__._n)(31);

const _32n = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__._n)(32);

const _33n = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__._n)(33);

const _64n = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__._n)(64);

const _256n = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__._n)(256);

function rotl(a, b) {
  const c = a & U64;
  return (c << b | c >> _64n - b) & U64;
}

function fromU8a(u8a, p, count) {
  const bigints = new Array(count);
  let offset = 0;

  for (let i = 0; i < count; i++, offset += 2) {
    bigints[i] = BigInt(u8a[p + offset] | u8a[p + 1 + offset] << 8);
  }

  let result = _polkadot_util__WEBPACK_IMPORTED_MODULE_0__._0n;

  for (let i = count - 1; i >= 0; i--) {
    result = (result << _16n) + bigints[i];
  }

  return result;
}

function toU8a(h64) {
  const result = new Uint8Array(8);

  for (let i = 7; i >= 0; i--) {
    result[i] = Number(h64 % _256n);
    h64 = h64 / _256n;
  }

  return result;
}

function state(initSeed) {
  const seed = BigInt(initSeed);
  return {
    seed,
    u8a: new Uint8Array(32),
    u8asize: 0,
    v1: seed + P64_1 + P64_2,
    v2: seed + P64_2,
    v3: seed,
    v4: seed - P64_1
  };
}

function init(state, input) {
  if (input.length < 32) {
    state.u8a.set(input);
    state.u8asize = input.length;
    return state;
  }

  const limit = input.length - 32;
  let p = 0;

  if (limit >= 0) {
    const adjustV = v => P64_1 * rotl(v + P64_2 * fromU8a(input, p, 4), _31n);

    do {
      state.v1 = adjustV(state.v1);
      p += 8;
      state.v2 = adjustV(state.v2);
      p += 8;
      state.v3 = adjustV(state.v3);
      p += 8;
      state.v4 = adjustV(state.v4);
      p += 8;
    } while (p <= limit);
  }

  if (p < input.length) {
    state.u8a.set(input.subarray(p, input.length));
    state.u8asize = input.length - p;
  }

  return state;
}

function xxhash64(input, initSeed) {
  const {
    seed,
    u8a,
    u8asize,
    v1,
    v2,
    v3,
    v4
  } = init(state(initSeed), input);
  let p = 0;
  let h64 = U64 & BigInt(input.length) + (input.length >= 32 ? ((((rotl(v1, _polkadot_util__WEBPACK_IMPORTED_MODULE_0__._1n) + rotl(v2, _7n) + rotl(v3, _12n) + rotl(v4, _18n) ^ P64_1 * rotl(v1 * P64_2, _31n)) * P64_1 + P64_4 ^ P64_1 * rotl(v2 * P64_2, _31n)) * P64_1 + P64_4 ^ P64_1 * rotl(v3 * P64_2, _31n)) * P64_1 + P64_4 ^ P64_1 * rotl(v4 * P64_2, _31n)) * P64_1 + P64_4 : seed + P64_5);

  while (p <= u8asize - 8) {
    h64 = U64 & P64_4 + P64_1 * rotl(h64 ^ P64_1 * rotl(P64_2 * fromU8a(u8a, p, 4), _31n), _27n);
    p += 8;
  }

  if (p + 4 <= u8asize) {
    h64 = U64 & P64_3 + P64_2 * rotl(h64 ^ P64_1 * fromU8a(u8a, p, 2), _23n);
    p += 4;
  }

  while (p < u8asize) {
    h64 = U64 & P64_1 * rotl(h64 ^ P64_5 * BigInt(u8a[p++]), _11n);
  }

  h64 = U64 & P64_2 * (h64 ^ h64 >> _33n);
  h64 = U64 & P64_3 * (h64 ^ h64 >> _29n);
  return toU8a(U64 & (h64 ^ h64 >> _32n));
}

/***/ }),
/* 637 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "_n": () => (/* binding */ _n),
/* harmony export */   "_0n": () => (/* binding */ _0n),
/* harmony export */   "_1n": () => (/* binding */ _1n),
/* harmony export */   "_1Mn": () => (/* binding */ _1Mn),
/* harmony export */   "_1Bn": () => (/* binding */ _1Bn),
/* harmony export */   "_1Qn": () => (/* binding */ _1Qn),
/* harmony export */   "_2pow53n": () => (/* binding */ _2pow53n)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name _n
 * @description Creates a new instance of BigInt in environments that do support it
 */
const _n = typeof BigInt !== 'undefined' ? BigInt : () => Number.NaN;
/**
 * @name _0n
 * @summary BigInt constant for 0.
 */

const _0n = _n(0);
/**
 * @name _1n
 * @summary BigInt constant for 1.
 */

const _1n = _n(1);
/**
 * @name _1Mn
 * @summary BigInt constant for 1,000,000.
 */

const _1Mn = _n(1000000);
/**
* @name _1Bn
* @summary BigInt constant for 1,000,000,000.
*/

const _1Bn = _n(1000000000);
/**
* @name _1Qn
* @summary BigInt constant for 1,000,000,000,000,000,000.
*/

const _1Qn = _1Bn * _1Bn;
/**
* @name _2pow53n
* @summary BigInt constant for MAX_SAFE_INTEGER
*/

const _2pow53n = _n(Number.MAX_SAFE_INTEGER);

/***/ }),
/* 638 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "augmentObject": () => (/* binding */ augmentObject)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(285);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(304);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(639);
// Copyright 2017-2021 @polkadot/api authors & contributors
// SPDX-License-Identifier: Apache-2.0

const l = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.logger)('api/augment');

function logLength(type, values, and = []) {
  return values.length ? ` ${values.length} ${type}${and.length ? ' and' : ''}` : '';
}

function logValues(type, values) {
  return values.length ? `\n\t${type.padStart(7)}: ${values.sort().join(', ')}` : '';
} // log details to console


function warn(prefix, type, [added, removed]) {
  if (added.length || removed.length) {
    l.warn(`api.${prefix}: Found${logLength('added', added, removed)}${logLength('removed', removed)} ${type}:${logValues('added', added)}${logValues('removed', removed)}`);
  }
}

function findSectionExcludes(a, b) {
  return a.filter(s => !b.includes(s));
}

function findSectionIncludes(a, b) {
  return a.filter(s => b.includes(s));
}

function extractSections(src, dst) {
  const srcSections = Object.keys(src);
  const dstSections = Object.keys(dst);
  return [findSectionExcludes(srcSections, dstSections), findSectionExcludes(dstSections, srcSections)];
}

function findMethodExcludes(src, dst) {
  const srcSections = Object.keys(src);
  const dstSections = findSectionIncludes(Object.keys(dst), srcSections);
  const excludes = [];

  for (let s = 0; s < dstSections.length; s++) {
    const section = dstSections[s];
    const srcMethods = Object.keys(src[section]);
    const dstMethods = Object.keys(dst[section]);
    excludes.push(...dstMethods.filter(m => !srcMethods.includes(m)).map(m => `${section}.${m}`));
  }

  return excludes;
}

function extractMethods(src, dst) {
  return [findMethodExcludes(dst, src), findMethodExcludes(src, dst)];
}

function lazySection(src, dst) {
  const creator = m => src[m];

  const methods = Object.keys(src);

  for (let i = 0; i < methods.length; i++) {
    const method = methods[i]; // We use hasOwnproperty here to only check for the existence of the key,
    // instead of reading dst[section][method] which will evaluate when already
    // set as a lazy value previously

    if (!Object.prototype.hasOwnProperty.call(dst, method)) {
      (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.lazyMethod)(dst, method, creator);
    }
  }
}
/**
 * @description Takes a decorated api section (e.g. api.tx) and augment it with the details. It does not override what is
 * already available, but rather just adds new missing items into the result object.
 * @internal
 */


function augmentObject(prefix, src, dst, fromEmpty = false) {
  fromEmpty && (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.objectClear)(dst); // NOTE: This part is slightly problematic since it will get the
  // values for at least all the sections and the names of the methods
  // (Since methods won't be decorated before lazy, this _may_ be ok)

  if (prefix && Object.keys(dst).length) {
    warn(prefix, 'modules', extractSections(src, dst));
    warn(prefix, 'calls', extractMethods(src, dst));
  }

  const sections = Object.keys(src);

  for (let i = 0; i < sections.length; i++) {
    const section = sections[i]; // We don't set here with a lazy interface, we decorate based
    // on the top-level structure (this bypasses adding lazy onto lazy)

    if (!dst[section]) {
      dst[section] = {};
    }

    lazySection(src[section], dst[section]);
  }

  return dst;
}

/***/ }),
/* 639 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "objectClear": () => (/* binding */ objectClear)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name objectClear
 * @summary Removes all the keys from the input object
 */
function objectClear(value) {
  const keys = Object.keys(value);

  for (let i = 0; i < keys.length; i++) {
    delete value[keys[i]];
  }

  return value;
}

/***/ }),
/* 640 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "findCall": () => (/* binding */ findCall),
/* harmony export */   "findError": () => (/* binding */ findError)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(166);
// Copyright 2017-2021 @polkadot/api authors & contributors
// SPDX-License-Identifier: Apache-2.0

function findCall(registry, callIndex) {
  return registry.findMetaCall((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(callIndex));
}
function findError(registry, errorIndex) {
  return registry.findMetaError((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(errorIndex));
}

/***/ }),
/* 641 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createSubmittable": () => (/* binding */ createSubmittable)
/* harmony export */ });
/* harmony import */ var _createClass_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(642);
// Copyright 2017-2021 @polkadot/api authors & contributors
// SPDX-License-Identifier: Apache-2.0

function createSubmittable(apiType, api, decorateMethod) {
  const Submittable = (0,_createClass_js__WEBPACK_IMPORTED_MODULE_0__.createClass)({
    api,
    apiType,
    decorateMethod
  });
  return extrinsic => new Submittable(api.registry, extrinsic);
}

/***/ }),
/* 642 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createClass": () => (/* binding */ createClass)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(644);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(651);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(653);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(604);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(605);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(660);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(124);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(81);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(122);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(237);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(169);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(178);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(643);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(658);
/* harmony import */ var _Result_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(657);


// Copyright 2017-2021 @polkadot/api authors & contributors
// SPDX-License-Identifier: Apache-2.0

/* eslint-disable no-dupe-class-members */





const identity = input => input;

function makeEraOptions(api, registry, partialOptions, {
  header,
  mortalLength,
  nonce
}) {
  if (!header) {
    if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isNumber)(partialOptions.era)) {
      // since we have no header, it is immortal, remove any option overrides
      // so we only supply the genesisHash and no era to the construction
      delete partialOptions.era;
      delete partialOptions.blockHash;
    }

    return makeSignOptions(api, partialOptions, {
      nonce
    });
  }

  return makeSignOptions(api, partialOptions, {
    blockHash: header.hash,
    era: registry.createType('ExtrinsicEra', {
      current: header.number,
      period: partialOptions.era || mortalLength
    }),
    nonce
  });
}

function makeSignAndSendOptions(partialOptions, statusCb) {
  let options = {};

  if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.isFunction)(partialOptions)) {
    statusCb = partialOptions;
  } else {
    options = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.objectSpread)({}, partialOptions);
  }

  return [options, statusCb];
}

function makeSignOptions(api, partialOptions, extras) {
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.objectSpread)({
    blockHash: api.genesisHash,
    genesisHash: api.genesisHash
  }, partialOptions, extras, {
    runtimeVersion: api.runtimeVersion,
    signedExtensions: api.registry.signedExtensions,
    version: api.extrinsicType
  });
}

function optionsOrNonce(partialOptions = {}) {
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.isBn)(partialOptions) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isNumber)(partialOptions) ? {
    nonce: partialOptions
  } : partialOptions;
}

function createClass({
  api,
  apiType,
  decorateMethod
}) {
  // an instance of the base extrinsic for us to extend
  const ExtrinsicBase = api.registry.createClass('Extrinsic');

  var _ignoreStatusCb = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("ignoreStatusCb");

  var _transformResult = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("transformResult");

  var _observeSign = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("observeSign");

  var _observeStatus = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("observeStatus");

  var _observeSend = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("observeSend");

  var _observeSubscribe = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("observeSubscribe");

  var _signViaSigner = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("signViaSigner");

  var _updateSigner = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("updateSigner");

  class Submittable extends ExtrinsicBase {
    constructor(registry, extrinsic) {
      super(registry, extrinsic, {
        version: api.extrinsicType
      });
      Object.defineProperty(this, _ignoreStatusCb, {
        writable: true,
        value: void 0
      });
      Object.defineProperty(this, _transformResult, {
        writable: true,
        value: identity
      });
      Object.defineProperty(this, _observeSign, {
        writable: true,
        value: (account, partialOptions) => {
          const address = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_6__.isKeyringPair)(account) ? account.address : account.toString();
          const options = optionsOrNonce(partialOptions);
          let updateId;
          return api.derive.tx.signingInfo(address, options.nonce, options.era).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_7__.first)(), (0,rxjs__WEBPACK_IMPORTED_MODULE_8__.mergeMap)(async signingInfo => {
            const eraOptions = makeEraOptions(api, this.registry, options, signingInfo);

            if ((0,_util_index_js__WEBPACK_IMPORTED_MODULE_6__.isKeyringPair)(account)) {
              this.sign(account, eraOptions);
            } else {
              updateId = await (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _signViaSigner)[_signViaSigner](address, eraOptions, signingInfo.header);
            }
          }), (0,rxjs__WEBPACK_IMPORTED_MODULE_9__.mapTo)(updateId));
        }
      });
      Object.defineProperty(this, _observeStatus, {
        writable: true,
        value: (hash, status) => {
          if (!status.isFinalized && !status.isInBlock) {
            return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.of)((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _transformResult)[_transformResult](new _Result_js__WEBPACK_IMPORTED_MODULE_11__.SubmittableResult({
              status
            })));
          }

          const blockHash = status.isInBlock ? status.asInBlock : status.asFinalized;
          return api.derive.tx.events(blockHash).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_12__.map)(({
            block,
            events
          }) => (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _transformResult)[_transformResult](new _Result_js__WEBPACK_IMPORTED_MODULE_11__.SubmittableResult({
            events: (0,_util_index_js__WEBPACK_IMPORTED_MODULE_13__.filterEvents)(hash, block, events, status),
            status
          }))), (0,rxjs__WEBPACK_IMPORTED_MODULE_14__.catchError)(internalError => (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.of)((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _transformResult)[_transformResult](new _Result_js__WEBPACK_IMPORTED_MODULE_11__.SubmittableResult({
            internalError,
            status
          })))));
        }
      });
      Object.defineProperty(this, _observeSend, {
        writable: true,
        value: (updateId = -1) => {
          return api.rpc.author.submitExtrinsic(this).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_15__.tap)(hash => {
            (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _updateSigner)[_updateSigner](updateId, hash);
          }));
        }
      });
      Object.defineProperty(this, _observeSubscribe, {
        writable: true,
        value: (updateId = -1) => {
          const hash = this.hash;
          return api.rpc.author.submitAndWatchExtrinsic(this).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_16__.switchMap)(status => (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _observeStatus)[_observeStatus](hash, status)), (0,rxjs__WEBPACK_IMPORTED_MODULE_15__.tap)(status => {
            (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _updateSigner)[_updateSigner](updateId, status);
          }));
        }
      });
      Object.defineProperty(this, _signViaSigner, {
        writable: true,
        value: async (address, options, header) => {
          const signer = options.signer || api.signer;
          (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_17__.assert)(signer, 'No signer specified, either via api.setSigner or via sign options. You possibly need to pass through an explicit keypair for the origin so it can be used for signing.');
          const payload = this.registry.createType('SignerPayload', (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.objectSpread)({}, options, {
            address,
            blockNumber: header ? header.number : 0,
            method: this.method
          }));
          let result;

          if (signer.signPayload) {
            result = await signer.signPayload(payload.toPayload());
          } else if (signer.signRaw) {
            result = await signer.signRaw(payload.toRaw());
          } else {
            throw new Error('Invalid signer interface, it should implement either signPayload or signRaw (or both)');
          } // Here we explicitly call `toPayload()` again instead of working with an object
          // (reference) as passed to the signer. This means that we are sure that the
          // payload data is not modified from our inputs, but the signer


          super.addSignature(address, result.signature, payload.toPayload());
          return result.id;
        }
      });
      Object.defineProperty(this, _updateSigner, {
        writable: true,
        value: (updateId, status) => {
          if (updateId !== -1 && api.signer && api.signer.update) {
            api.signer.update(updateId, status);
          }
        }
      });
      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _ignoreStatusCb)[_ignoreStatusCb] = apiType === 'rxjs';
    } // dry run an extrinsic


    dryRun(account, optionsOrHash) {
      if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_18__.isString)(optionsOrHash) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_19__.isU8a)(optionsOrHash)) {
        // eslint-disable-next-line @typescript-eslint/no-unsafe-return
        return decorateMethod(() => api.rpc.system.dryRun(this.toHex(), optionsOrHash));
      } // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call


      return decorateMethod(() => (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _observeSign)[_observeSign](account, optionsOrHash).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_16__.switchMap)(() => api.rpc.system.dryRun(this.toHex()))))();
    } // calculate the payment info for this transaction (if signed and submitted)


    paymentInfo(account, optionsOrHash) {
      if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_18__.isString)(optionsOrHash) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_19__.isU8a)(optionsOrHash)) {
        // eslint-disable-next-line @typescript-eslint/no-unsafe-return
        return decorateMethod(() => api.rpc.payment.queryInfo(this.toHex(), optionsOrHash));
      }

      const [allOptions] = makeSignAndSendOptions(optionsOrHash);
      const address = (0,_util_index_js__WEBPACK_IMPORTED_MODULE_6__.isKeyringPair)(account) ? account.address : account.toString(); // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call

      return decorateMethod(() => api.derive.tx.signingInfo(address, allOptions.nonce, allOptions.era).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_7__.first)(), (0,rxjs__WEBPACK_IMPORTED_MODULE_16__.switchMap)(signingInfo => {
        // setup our options (same way as in signAndSend)
        const eraOptions = makeEraOptions(api, this.registry, allOptions, signingInfo);
        const signOptions = makeSignOptions(api, eraOptions, {});
        this.signFake(address, signOptions);
        return api.rpc.payment.queryInfo(this.toHex());
      })))();
    } // send with an immediate Hash result


    // send implementation for both immediate Hash and statusCb variants
    send(statusCb) {
      const isSubscription = api.hasSubscriptions && ((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _ignoreStatusCb)[_ignoreStatusCb] || !!statusCb); // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call

      return decorateMethod(isSubscription ? (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _observeSubscribe)[_observeSubscribe] : (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _observeSend)[_observeSend])(statusCb);
    }
    /**
     * @description Sign a transaction, returning the this to allow chaining, i.e. .sign(...).send(). When options, e.g. nonce/blockHash are not specified, it will be inferred. To retrieve eg. nonce use `signAsync` (the preferred interface, this is provided for backwards compatibility)
     * @deprecated
     */


    sign(account, partialOptions) {
      super.sign(account, makeSignOptions(api, optionsOrNonce(partialOptions), {}));
      return this;
    }
    /**
     * @description Signs a transaction, returning `this` to allow chaining. E.g.: `sign(...).send()`. Like `.signAndSend` this will retrieve the nonce and blockHash to send the tx with.
     */


    signAsync(account, partialOptions) {
      // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call
      return decorateMethod(() => (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _observeSign)[_observeSign](account, partialOptions).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_9__.mapTo)(this)))();
    } // signAndSend with an immediate Hash result


    // signAndSend implementation for all 3 cases above
    signAndSend(account, partialOptions, optionalStatusCb) {
      const [options, statusCb] = makeSignAndSendOptions(partialOptions, optionalStatusCb);
      const isSubscription = api.hasSubscriptions && ((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _ignoreStatusCb)[_ignoreStatusCb] || !!statusCb); // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call

      return decorateMethod(() => (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _observeSign)[_observeSign](account, options).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_16__.switchMap)(updateId => isSubscription ? (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _observeSubscribe)[_observeSubscribe](updateId) : (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _observeSend)[_observeSend](updateId))) // FIXME This is wrong, SubmittableResult is _not_ a codec
      )(statusCb);
    } // adds a transform to the result, applied before result is returned


    withResultTransform(transform) {
      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _transformResult)[_transformResult] = transform;
      return this;
    }

  }

  return Submittable;
}

/***/ }),
/* 643 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isKeyringPair": () => (/* binding */ isKeyringPair)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(81);
// Copyright 2017-2021 @polkadot/api authors & contributors
// SPDX-License-Identifier: Apache-2.0

function isKeyringPair(account) {
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.isFunction)(account.sign);
}

/***/ }),
/* 644 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "first": () => (/* binding */ first)
/* harmony export */ });
/* harmony import */ var _util_EmptyError__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(650);
/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(645);
/* harmony import */ var _take__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(646);
/* harmony import */ var _defaultIfEmpty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(648);
/* harmony import */ var _throwIfEmpty__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(649);
/* harmony import */ var _util_identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(71);






function first(predicate, defaultValue) {
    var hasDefaultValue = arguments.length >= 2;
    return function (source) {
        return source.pipe(predicate ? (0,_filter__WEBPACK_IMPORTED_MODULE_0__.filter)(function (v, i) { return predicate(v, i, source); }) : _util_identity__WEBPACK_IMPORTED_MODULE_1__.identity, (0,_take__WEBPACK_IMPORTED_MODULE_2__.take)(1), hasDefaultValue ? (0,_defaultIfEmpty__WEBPACK_IMPORTED_MODULE_3__.defaultIfEmpty)(defaultValue) : (0,_throwIfEmpty__WEBPACK_IMPORTED_MODULE_4__.throwIfEmpty)(function () { return new _util_EmptyError__WEBPACK_IMPORTED_MODULE_5__.EmptyError(); }));
    };
}
//# sourceMappingURL=first.js.map

/***/ }),
/* 645 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "filter": () => (/* binding */ filter)
/* harmony export */ });
/* harmony import */ var _util_lift__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(590);
/* harmony import */ var _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(592);


function filter(predicate, thisArg) {
    return (0,_util_lift__WEBPACK_IMPORTED_MODULE_0__.operate)(function (source, subscriber) {
        var index = 0;
        source.subscribe(new _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__.OperatorSubscriber(subscriber, function (value) { return predicate.call(thisArg, value, index++) && subscriber.next(value); }));
    });
}
//# sourceMappingURL=filter.js.map

/***/ }),
/* 646 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "take": () => (/* binding */ take)
/* harmony export */ });
/* harmony import */ var _observable_empty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(647);
/* harmony import */ var _util_lift__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(590);
/* harmony import */ var _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(592);



function take(count) {
    return count <= 0
        ?
            function () { return _observable_empty__WEBPACK_IMPORTED_MODULE_0__.EMPTY; }
        : (0,_util_lift__WEBPACK_IMPORTED_MODULE_1__.operate)(function (source, subscriber) {
            var seen = 0;
            source.subscribe(new _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_2__.OperatorSubscriber(subscriber, function (value) {
                if (++seen <= count) {
                    subscriber.next(value);
                    if (count <= seen) {
                        subscriber.complete();
                    }
                }
            }));
        });
}
//# sourceMappingURL=take.js.map

/***/ }),
/* 647 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EMPTY": () => (/* binding */ EMPTY),
/* harmony export */   "empty": () => (/* binding */ empty)
/* harmony export */ });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(63);

var EMPTY = new _Observable__WEBPACK_IMPORTED_MODULE_0__.Observable(function (subscriber) { return subscriber.complete(); });
function empty(scheduler) {
    return scheduler ? emptyScheduled(scheduler) : EMPTY;
}
function emptyScheduled(scheduler) {
    return new _Observable__WEBPACK_IMPORTED_MODULE_0__.Observable(function (subscriber) { return scheduler.schedule(function () { return subscriber.complete(); }); });
}
//# sourceMappingURL=empty.js.map

/***/ }),
/* 648 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "defaultIfEmpty": () => (/* binding */ defaultIfEmpty)
/* harmony export */ });
/* harmony import */ var _util_lift__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(590);
/* harmony import */ var _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(592);


function defaultIfEmpty(defaultValue) {
    return (0,_util_lift__WEBPACK_IMPORTED_MODULE_0__.operate)(function (source, subscriber) {
        var hasValue = false;
        source.subscribe(new _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__.OperatorSubscriber(subscriber, function (value) {
            hasValue = true;
            subscriber.next(value);
        }, function () {
            if (!hasValue) {
                subscriber.next(defaultValue);
            }
            subscriber.complete();
        }));
    });
}
//# sourceMappingURL=defaultIfEmpty.js.map

/***/ }),
/* 649 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "throwIfEmpty": () => (/* binding */ throwIfEmpty)
/* harmony export */ });
/* harmony import */ var _util_EmptyError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(650);
/* harmony import */ var _util_lift__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(590);
/* harmony import */ var _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(592);



function throwIfEmpty(errorFactory) {
    if (errorFactory === void 0) { errorFactory = defaultErrorFactory; }
    return (0,_util_lift__WEBPACK_IMPORTED_MODULE_0__.operate)(function (source, subscriber) {
        var hasValue = false;
        source.subscribe(new _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__.OperatorSubscriber(subscriber, function (value) {
            hasValue = true;
            subscriber.next(value);
        }, function () { return (hasValue ? subscriber.complete() : subscriber.error(errorFactory())); }));
    });
}
function defaultErrorFactory() {
    return new _util_EmptyError__WEBPACK_IMPORTED_MODULE_2__.EmptyError();
}
//# sourceMappingURL=throwIfEmpty.js.map

/***/ }),
/* 650 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EmptyError": () => (/* binding */ EmptyError)
/* harmony export */ });
/* harmony import */ var _createErrorClass__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(56);

var EmptyError = (0,_createErrorClass__WEBPACK_IMPORTED_MODULE_0__.createErrorClass)(function (_super) { return function EmptyErrorImpl() {
    _super(this);
    this.name = 'EmptyError';
    this.message = 'no elements in sequence';
}; });
//# sourceMappingURL=EmptyError.js.map

/***/ }),
/* 651 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "mergeMap": () => (/* binding */ mergeMap)
/* harmony export */ });
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(599);
/* harmony import */ var _observable_innerFrom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(581);
/* harmony import */ var _util_lift__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(590);
/* harmony import */ var _mergeInternals__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(652);
/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60);





function mergeMap(project, resultSelector, concurrent) {
    if (concurrent === void 0) { concurrent = Infinity; }
    if ((0,_util_isFunction__WEBPACK_IMPORTED_MODULE_0__.isFunction)(resultSelector)) {
        return mergeMap(function (a, i) { return (0,_map__WEBPACK_IMPORTED_MODULE_1__.map)(function (b, ii) { return resultSelector(a, b, i, ii); })((0,_observable_innerFrom__WEBPACK_IMPORTED_MODULE_2__.innerFrom)(project(a, i))); }, concurrent);
    }
    else if (typeof resultSelector === 'number') {
        concurrent = resultSelector;
    }
    return (0,_util_lift__WEBPACK_IMPORTED_MODULE_3__.operate)(function (source, subscriber) { return (0,_mergeInternals__WEBPACK_IMPORTED_MODULE_4__.mergeInternals)(source, subscriber, project, concurrent); });
}
//# sourceMappingURL=mergeMap.js.map

/***/ }),
/* 652 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "mergeInternals": () => (/* binding */ mergeInternals)
/* harmony export */ });
/* harmony import */ var _observable_innerFrom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(581);
/* harmony import */ var _util_executeSchedule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(593);
/* harmony import */ var _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(592);



function mergeInternals(source, subscriber, project, concurrent, onBeforeNext, expand, innerSubScheduler, additionalTeardown) {
    var buffer = [];
    var active = 0;
    var index = 0;
    var isComplete = false;
    var checkComplete = function () {
        if (isComplete && !buffer.length && !active) {
            subscriber.complete();
        }
    };
    var outerNext = function (value) { return (active < concurrent ? doInnerSub(value) : buffer.push(value)); };
    var doInnerSub = function (value) {
        expand && subscriber.next(value);
        active++;
        var innerComplete = false;
        (0,_observable_innerFrom__WEBPACK_IMPORTED_MODULE_0__.innerFrom)(project(value, index++)).subscribe(new _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__.OperatorSubscriber(subscriber, function (innerValue) {
            onBeforeNext === null || onBeforeNext === void 0 ? void 0 : onBeforeNext(innerValue);
            if (expand) {
                outerNext(innerValue);
            }
            else {
                subscriber.next(innerValue);
            }
        }, function () {
            innerComplete = true;
        }, undefined, function () {
            if (innerComplete) {
                try {
                    active--;
                    var _loop_1 = function () {
                        var bufferedValue = buffer.shift();
                        if (innerSubScheduler) {
                            (0,_util_executeSchedule__WEBPACK_IMPORTED_MODULE_2__.executeSchedule)(subscriber, innerSubScheduler, function () { return doInnerSub(bufferedValue); });
                        }
                        else {
                            doInnerSub(bufferedValue);
                        }
                    };
                    while (buffer.length && active < concurrent) {
                        _loop_1();
                    }
                    checkComplete();
                }
                catch (err) {
                    subscriber.error(err);
                }
            }
        }));
    };
    source.subscribe(new _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__.OperatorSubscriber(subscriber, outerNext, function () {
        isComplete = true;
        checkComplete();
    }));
    return function () {
        additionalTeardown === null || additionalTeardown === void 0 ? void 0 : additionalTeardown();
    };
}
//# sourceMappingURL=mergeInternals.js.map

/***/ }),
/* 653 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "mapTo": () => (/* binding */ mapTo)
/* harmony export */ });
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(599);

function mapTo(value) {
    return (0,_map__WEBPACK_IMPORTED_MODULE_0__.map)(function () { return value; });
}
//# sourceMappingURL=mapTo.js.map

/***/ }),
/* 654 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "of": () => (/* binding */ of)
/* harmony export */ });
/* harmony import */ var _util_args__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(655);
/* harmony import */ var _from__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(577);


function of() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var scheduler = (0,_util_args__WEBPACK_IMPORTED_MODULE_0__.popScheduler)(args);
    return (0,_from__WEBPACK_IMPORTED_MODULE_1__.from)(args, scheduler);
}
//# sourceMappingURL=of.js.map

/***/ }),
/* 655 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "popResultSelector": () => (/* binding */ popResultSelector),
/* harmony export */   "popScheduler": () => (/* binding */ popScheduler),
/* harmony export */   "popNumber": () => (/* binding */ popNumber)
/* harmony export */ });
/* harmony import */ var _isFunction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60);
/* harmony import */ var _isScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(656);


function last(arr) {
    return arr[arr.length - 1];
}
function popResultSelector(args) {
    return (0,_isFunction__WEBPACK_IMPORTED_MODULE_0__.isFunction)(last(args)) ? args.pop() : undefined;
}
function popScheduler(args) {
    return (0,_isScheduler__WEBPACK_IMPORTED_MODULE_1__.isScheduler)(last(args)) ? args.pop() : undefined;
}
function popNumber(args, defaultValue) {
    return typeof last(args) === 'number' ? args.pop() : defaultValue;
}
//# sourceMappingURL=args.js.map

/***/ }),
/* 656 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isScheduler": () => (/* binding */ isScheduler)
/* harmony export */ });
/* harmony import */ var _isFunction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(60);

function isScheduler(value) {
    return value && (0,_isFunction__WEBPACK_IMPORTED_MODULE_0__.isFunction)(value.schedule);
}
//# sourceMappingURL=isScheduler.js.map

/***/ }),
/* 657 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SubmittableResult": () => (/* binding */ SubmittableResult)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/api authors & contributors
// SPDX-License-Identifier: Apache-2.0
const recordIdentity = record => record;

function filterAndApply(events, section, methods, onFound) {
  return events.filter(({
    event
  }) => section === event.section && methods.includes(event.method)).map(record => onFound(record));
}

function getDispatchError({
  event: {
    data: [dispatchError]
  }
}) {
  return dispatchError;
}

function getDispatchInfo({
  event: {
    data,
    method
  }
}) {
  return method === 'ExtrinsicSuccess' ? data[0] : data[1];
}

function extractError(events = []) {
  return filterAndApply(events, 'system', ['ExtrinsicFailed'], getDispatchError)[0];
}

function extractInfo(events = []) {
  return filterAndApply(events, 'system', ['ExtrinsicFailed', 'ExtrinsicSuccess'], getDispatchInfo)[0];
}

class SubmittableResult {
  constructor({
    dispatchError,
    dispatchInfo,
    events,
    internalError,
    status
  }) {
    this.dispatchError = void 0;
    this.dispatchInfo = void 0;
    this.internalError = void 0;
    this.events = void 0;
    this.status = void 0;
    this.dispatchError = dispatchError || extractError(events);
    this.dispatchInfo = dispatchInfo || extractInfo(events);
    this.events = events || [];
    this.internalError = internalError;
    this.status = status;
  }

  get isCompleted() {
    return this.isError || this.status.isInBlock || this.status.isFinalized;
  }

  get isError() {
    return this.status.isDropped || this.status.isFinalityTimeout || this.status.isInvalid || this.status.isUsurped;
  }

  get isFinalized() {
    return this.status.isFinalized;
  }

  get isInBlock() {
    return this.status.isInBlock;
  }

  get isWarning() {
    return this.status.isRetracted;
  }
  /**
   * @description Filters EventRecords for the specified method & section (there could be multiple)
   */


  filterRecords(section, method) {
    return filterAndApply(this.events, section, Array.isArray(method) ? method : [method], recordIdentity);
  }
  /**
   * @description Finds an EventRecord for the specified method & section
   */


  findRecord(section, method) {
    return this.filterRecords(section, method)[0];
  }
  /**
   * @description Creates a human representation of the output
   */


  toHuman(isExtended) {
    var _this$dispatchError, _this$dispatchInfo, _this$internalError;

    return {
      dispatchError: (_this$dispatchError = this.dispatchError) === null || _this$dispatchError === void 0 ? void 0 : _this$dispatchError.toHuman(),
      dispatchInfo: (_this$dispatchInfo = this.dispatchInfo) === null || _this$dispatchInfo === void 0 ? void 0 : _this$dispatchInfo.toHuman(),
      events: this.events.map(e => e.toHuman(isExtended)),
      internalError: (_this$internalError = this.internalError) === null || _this$internalError === void 0 ? void 0 : _this$internalError.message.toString(),
      status: this.status.toHuman(isExtended)
    };
  }

}

/***/ }),
/* 658 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "filterEvents": () => (/* binding */ filterEvents)
/* harmony export */ });
/* harmony import */ var _logging_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(659);
// Copyright 2017-2021 @polkadot/api authors & contributors
// SPDX-License-Identifier: Apache-2.0

function filterEvents(extHash, {
  block: {
    extrinsics,
    header
  }
}, allEvents, status) {
  // extrinsics to hashes
  for (const [index, extrinsic] of extrinsics.entries()) {
    if (extrinsic.hash.eq(extHash)) {
      return allEvents.filter(({
        phase
      }) => // only ApplyExtrinsic has the extrinsic index
      phase.isApplyExtrinsic && phase.asApplyExtrinsic.eqn(index));
    }
  } // if we do get the block after finalized, it _should_ be there
  // only warn on filtering with isInBlock (finalization finalizes after)


  if (status.isInBlock) {
    const allHashes = extrinsics.map(ext => ext.hash.toHex());
    _logging_js__WEBPACK_IMPORTED_MODULE_0__.l.warn(`block ${header.hash.toHex()}: Unable to find extrinsic ${extHash.toHex()} inside ${allHashes.join(', ')}`);
  }

  return undefined;
}

/***/ }),
/* 659 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "l": () => (/* binding */ l)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(285);
// Copyright 2017-2021 @polkadot/api authors & contributors
// SPDX-License-Identifier: Apache-2.0

const l = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.logger)('api/util');

/***/ }),
/* 660 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "switchMap": () => (/* binding */ switchMap)
/* harmony export */ });
/* harmony import */ var _observable_innerFrom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(581);
/* harmony import */ var _util_lift__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(590);
/* harmony import */ var _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(592);



function switchMap(project, resultSelector) {
    return (0,_util_lift__WEBPACK_IMPORTED_MODULE_0__.operate)(function (source, subscriber) {
        var innerSubscriber = null;
        var index = 0;
        var isComplete = false;
        var checkComplete = function () { return isComplete && !innerSubscriber && subscriber.complete(); };
        source.subscribe(new _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__.OperatorSubscriber(subscriber, function (value) {
            innerSubscriber === null || innerSubscriber === void 0 ? void 0 : innerSubscriber.unsubscribe();
            var innerIndex = 0;
            var outerIndex = index++;
            (0,_observable_innerFrom__WEBPACK_IMPORTED_MODULE_2__.innerFrom)(project(value, outerIndex)).subscribe((innerSubscriber = new _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__.OperatorSubscriber(subscriber, function (innerValue) { return subscriber.next(resultSelector ? resultSelector(value, innerValue, outerIndex, innerIndex++) : innerValue); }, function () {
                innerSubscriber = null;
                checkComplete();
            })));
        }, function () {
            isComplete = true;
            checkComplete();
        }));
    });
}
//# sourceMappingURL=switchMap.js.map

/***/ }),
/* 661 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "extractStorageArgs": () => (/* binding */ extractStorageArgs)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(82);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(80);
// Copyright 2017-2019 @polkadot/api authors & contributors
// SPDX-License-Identifier: Apache-2.0


function sig({
  lookup
}, {
  method,
  section
}, args) {
  return `${section}.${method}(${args.map(a => lookup.getTypeDef(a).type).join(', ')})`;
} // sets up the arguments in the form of [creator, args] ready to be used in a storage
// call. Additionally, it verifies that the correct number of arguments have been passed


function extractStorageArgs(registry, creator, _args) {
  const args = _args.filter(arg => !(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(arg));

  if (creator.meta.type.isPlain) {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(args.length === 0, () => `${sig(registry, creator, [])} does not take any arguments, ${args.length} found`);
  } else {
    const {
      hashers,
      key
    } = creator.meta.type.asMap;
    const keys = hashers.length === 1 ? [key] : registry.lookup.getSiType(key).def.asTuple.map(t => t);
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(args.length === keys.length, () => `${sig(registry, creator, keys)} is a map, requiring ${keys.length} arguments, ${args.length} found`);
  } // pass as tuple


  return [creator, args];
}

/***/ }),
/* 662 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "combineLatest": () => (/* binding */ combineLatest),
/* harmony export */   "combineLatestInit": () => (/* binding */ combineLatestInit)
/* harmony export */ });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(63);
/* harmony import */ var _util_argsArgArrayOrObject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(663);
/* harmony import */ var _from__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(577);
/* harmony import */ var _util_identity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(71);
/* harmony import */ var _util_mapOneOrManyArgs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(665);
/* harmony import */ var _util_args__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(655);
/* harmony import */ var _util_createObject__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(664);
/* harmony import */ var _operators_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(592);
/* harmony import */ var _util_executeSchedule__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(593);









function combineLatest() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var scheduler = (0,_util_args__WEBPACK_IMPORTED_MODULE_0__.popScheduler)(args);
    var resultSelector = (0,_util_args__WEBPACK_IMPORTED_MODULE_0__.popResultSelector)(args);
    var _a = (0,_util_argsArgArrayOrObject__WEBPACK_IMPORTED_MODULE_1__.argsArgArrayOrObject)(args), observables = _a.args, keys = _a.keys;
    if (observables.length === 0) {
        return (0,_from__WEBPACK_IMPORTED_MODULE_2__.from)([], scheduler);
    }
    var result = new _Observable__WEBPACK_IMPORTED_MODULE_3__.Observable(combineLatestInit(observables, scheduler, keys
        ?
            function (values) { return (0,_util_createObject__WEBPACK_IMPORTED_MODULE_4__.createObject)(keys, values); }
        :
            _util_identity__WEBPACK_IMPORTED_MODULE_5__.identity));
    return resultSelector ? result.pipe((0,_util_mapOneOrManyArgs__WEBPACK_IMPORTED_MODULE_6__.mapOneOrManyArgs)(resultSelector)) : result;
}
function combineLatestInit(observables, scheduler, valueTransform) {
    if (valueTransform === void 0) { valueTransform = _util_identity__WEBPACK_IMPORTED_MODULE_5__.identity; }
    return function (subscriber) {
        maybeSchedule(scheduler, function () {
            var length = observables.length;
            var values = new Array(length);
            var active = length;
            var remainingFirstValues = length;
            var _loop_1 = function (i) {
                maybeSchedule(scheduler, function () {
                    var source = (0,_from__WEBPACK_IMPORTED_MODULE_2__.from)(observables[i], scheduler);
                    var hasFirstValue = false;
                    source.subscribe(new _operators_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_7__.OperatorSubscriber(subscriber, function (value) {
                        values[i] = value;
                        if (!hasFirstValue) {
                            hasFirstValue = true;
                            remainingFirstValues--;
                        }
                        if (!remainingFirstValues) {
                            subscriber.next(valueTransform(values.slice()));
                        }
                    }, function () {
                        if (!--active) {
                            subscriber.complete();
                        }
                    }));
                }, subscriber);
            };
            for (var i = 0; i < length; i++) {
                _loop_1(i);
            }
        }, subscriber);
    };
}
function maybeSchedule(scheduler, execute, subscription) {
    if (scheduler) {
        (0,_util_executeSchedule__WEBPACK_IMPORTED_MODULE_8__.executeSchedule)(subscription, scheduler, execute);
    }
    else {
        execute();
    }
}
//# sourceMappingURL=combineLatest.js.map

/***/ }),
/* 663 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "argsArgArrayOrObject": () => (/* binding */ argsArgArrayOrObject)
/* harmony export */ });
var isArray = Array.isArray;
var getPrototypeOf = Object.getPrototypeOf, objectProto = Object.prototype, getKeys = Object.keys;
function argsArgArrayOrObject(args) {
    if (args.length === 1) {
        var first_1 = args[0];
        if (isArray(first_1)) {
            return { args: first_1, keys: null };
        }
        if (isPOJO(first_1)) {
            var keys = getKeys(first_1);
            return {
                args: keys.map(function (key) { return first_1[key]; }),
                keys: keys,
            };
        }
    }
    return { args: args, keys: null };
}
function isPOJO(obj) {
    return obj && typeof obj === 'object' && getPrototypeOf(obj) === objectProto;
}
//# sourceMappingURL=argsArgArrayOrObject.js.map

/***/ }),
/* 664 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createObject": () => (/* binding */ createObject)
/* harmony export */ });
function createObject(keys, values) {
    return keys.reduce(function (result, key, i) { return ((result[key] = values[i]), result); }, {});
}
//# sourceMappingURL=createObject.js.map

/***/ }),
/* 665 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "mapOneOrManyArgs": () => (/* binding */ mapOneOrManyArgs)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52);
/* harmony import */ var _operators_map__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(599);


var isArray = Array.isArray;
function callOrApply(fn, args) {
    return isArray(args) ? fn.apply(void 0, (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__spreadArray)([], (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__read)(args))) : fn(args);
}
function mapOneOrManyArgs(fn) {
    return (0,_operators_map__WEBPACK_IMPORTED_MODULE_1__.map)(function (args) { return callOrApply(fn, args); });
}
//# sourceMappingURL=mapOneOrManyArgs.js.map

/***/ }),
/* 666 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "arrayChunk": () => (/* binding */ arrayChunk)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name arrayChunk
 * @summary Split T[] into T[][] based on the defind size
 * @description
 * Returns a set ao arrays based on the chunksize
 * @example
 * <BR>
 *
 * ```javascript
 * import { arrayChunk } from '@polkadot/util';
 *
 * arrayChunk([1, 2, 3, 4, 5]); // [[1, 2], [3, 4], [5]]
 * ```
 */
function arrayChunk(array, chunkSize) {
  const outputSize = Math.ceil(array.length / chunkSize);
  const output = Array(outputSize);

  for (let i = 0; i < outputSize; i++) {
    const offset = i * chunkSize;
    output[i] = array.slice(offset, offset + chunkSize);
  }

  return output;
}

/***/ }),
/* 667 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "arrayFlatten": () => (/* binding */ arrayFlatten)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
// This is supposed to be a faster concat...
// https://dev.to/uilicious/javascript-array-push-is-945x-faster-than-array-concat-1oki

/**
 * @name arrayFlatten
 * @summary Merge T[][] into T[]
 * @description
 * Returns a new array with all arrays merged into one
 * @example
 * <BR>
 *
 * ```javascript
 * import { arrayFlatten } from '@polkadot/util';
 *
 * arrayFlatten([[1, 2], [3, 4], [5]]); // [1, 2, 3, 4, 5]
 * ```
 */
function arrayFlatten(arrays) {
  // pre-allocate based on the combined size
  let size = 0;

  for (let i = 0; i < arrays.length; i++) {
    size += arrays[i].length;
  }

  const output = new Array(size);
  let i = -1;

  for (let j = 0; j < arrays.length; j++) {
    const a = arrays[j]; // instead of pushing, we just set the entries

    for (let e = 0; e < a.length; e++) {
      output[++i] = a[e];
    }
  }

  return output;
}

/***/ }),
/* 668 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "toArray": () => (/* binding */ toArray)
/* harmony export */ });
/* harmony import */ var _reduce__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(669);
/* harmony import */ var _util_lift__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(590);


var arrReducer = function (arr, value) { return (arr.push(value), arr); };
function toArray() {
    return (0,_util_lift__WEBPACK_IMPORTED_MODULE_0__.operate)(function (source, subscriber) {
        (0,_reduce__WEBPACK_IMPORTED_MODULE_1__.reduce)(arrReducer, [])(source).subscribe(subscriber);
    });
}
//# sourceMappingURL=toArray.js.map

/***/ }),
/* 669 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "reduce": () => (/* binding */ reduce)
/* harmony export */ });
/* harmony import */ var _scanInternals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(670);
/* harmony import */ var _util_lift__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(590);


function reduce(accumulator, seed) {
    return (0,_util_lift__WEBPACK_IMPORTED_MODULE_0__.operate)((0,_scanInternals__WEBPACK_IMPORTED_MODULE_1__.scanInternals)(accumulator, seed, arguments.length >= 2, false, true));
}
//# sourceMappingURL=reduce.js.map

/***/ }),
/* 670 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scanInternals": () => (/* binding */ scanInternals)
/* harmony export */ });
/* harmony import */ var _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(592);

function scanInternals(accumulator, seed, hasSeed, emitOnNext, emitBeforeComplete) {
    return function (source, subscriber) {
        var hasState = hasSeed;
        var state = seed;
        var index = 0;
        source.subscribe(new _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_0__.OperatorSubscriber(subscriber, function (value) {
            var i = index++;
            state = hasState
                ?
                    accumulator(state, value, i)
                :
                    ((hasState = true), value);
            emitOnNext && subscriber.next(state);
        }, emitBeforeComplete &&
            (function () {
                hasState && subscriber.next(state);
                subscriber.complete();
            })));
    };
}
//# sourceMappingURL=scanInternals.js.map

/***/ }),
/* 671 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),
/* harmony export */   "createHeaderExtended": () => (/* reexport safe */ _type_index_js__WEBPACK_IMPORTED_MODULE_1__.createHeaderExtended),
/* harmony export */   "createSignedBlockExtended": () => (/* reexport safe */ _type_index_js__WEBPACK_IMPORTED_MODULE_1__.createSignedBlockExtended),
/* harmony export */   "lazyDeriveSection": () => (/* reexport safe */ _util_lazy_js__WEBPACK_IMPORTED_MODULE_2__.lazyDeriveSection),
/* harmony export */   "derive": () => (/* binding */ derive),
/* harmony export */   "getAvailableDerives": () => (/* binding */ getAvailableDerives)
/* harmony export */ });
/* harmony import */ var _util_lazy_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(677);
/* harmony import */ var _accounts_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(678);
/* harmony import */ var _balances_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(725);
/* harmony import */ var _bounties_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(732);
/* harmony import */ var _chain_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(735);
/* harmony import */ var _contracts_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(743);
/* harmony import */ var _council_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(745);
/* harmony import */ var _crowdloan_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(755);
/* harmony import */ var _democracy_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(760);
/* harmony import */ var _elections_index_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(776);
/* harmony import */ var _imOnline_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(778);
/* harmony import */ var _membership_index_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(780);
/* harmony import */ var _parachains_index_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(784);
/* harmony import */ var _session_index_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(788);
/* harmony import */ var _society_index_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(795);
/* harmony import */ var _staking_index_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(800);
/* harmony import */ var _technicalCommittee_index_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(826);
/* harmony import */ var _treasury_index_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(830);
/* harmony import */ var _tx_index_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(832);
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(672);
/* harmony import */ var _type_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(673);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0






















const derive = {
  accounts: _accounts_index_js__WEBPACK_IMPORTED_MODULE_3__,
  balances: _balances_index_js__WEBPACK_IMPORTED_MODULE_4__,
  bounties: _bounties_index_js__WEBPACK_IMPORTED_MODULE_5__,
  chain: _chain_index_js__WEBPACK_IMPORTED_MODULE_6__,
  contracts: _contracts_index_js__WEBPACK_IMPORTED_MODULE_7__,
  council: _council_index_js__WEBPACK_IMPORTED_MODULE_8__,
  crowdloan: _crowdloan_index_js__WEBPACK_IMPORTED_MODULE_9__,
  democracy: _democracy_index_js__WEBPACK_IMPORTED_MODULE_10__,
  elections: _elections_index_js__WEBPACK_IMPORTED_MODULE_11__,
  imOnline: _imOnline_index_js__WEBPACK_IMPORTED_MODULE_12__,
  membership: _membership_index_js__WEBPACK_IMPORTED_MODULE_13__,
  parachains: _parachains_index_js__WEBPACK_IMPORTED_MODULE_14__,
  session: _session_index_js__WEBPACK_IMPORTED_MODULE_15__,
  society: _society_index_js__WEBPACK_IMPORTED_MODULE_16__,
  staking: _staking_index_js__WEBPACK_IMPORTED_MODULE_17__,
  technicalCommittee: _technicalCommittee_index_js__WEBPACK_IMPORTED_MODULE_18__,
  treasury: _treasury_index_js__WEBPACK_IMPORTED_MODULE_19__,
  tx: _tx_index_js__WEBPACK_IMPORTED_MODULE_20__
};
// Enable derive only if some of these modules are available
const checks = {
  contracts: {
    instances: ['contracts'],
    methods: []
  },
  council: {
    instances: ['council'],
    methods: [],
    withDetect: true
  },
  crowdloan: {
    instances: ['crowdloan'],
    methods: []
  },
  democracy: {
    instances: ['democracy'],
    methods: []
  },
  elections: {
    instances: ['phragmenElection', 'electionsPhragmen', 'elections', 'council'],
    methods: [],
    withDetect: true
  },
  imOnline: {
    instances: ['imOnline'],
    methods: []
  },
  membership: {
    instances: ['membership'],
    methods: []
  },
  parachains: {
    instances: ['parachains', 'registrar'],
    methods: []
  },
  session: {
    instances: ['session'],
    methods: []
  },
  society: {
    instances: ['society'],
    methods: []
  },
  staking: {
    instances: ['staking'],
    methods: ['erasRewardPoints']
  },
  technicalCommittee: {
    instances: ['technicalCommittee'],
    methods: [],
    withDetect: true
  },
  treasury: {
    instances: ['treasury'],
    methods: []
  }
};

function getModuleInstances(api, specName, moduleName) {
  return api.registry.getModuleInstances(specName, moduleName) || [];
}
/**
 * Returns an object that will inject `api` into all the functions inside
 * `allSections`, and keep the object architecture of `allSections`.
 */

/** @internal */


function injectFunctions(instanceId, api, derives) {
  const queryKeys = Object.keys(api.query);
  const specName = api.runtimeVersion.specName.toString();

  const filterQueryKeys = q => queryKeys.includes(q);

  const filterInstances = q => getModuleInstances(api, specName, q).some(filterQueryKeys);

  const filterMethods = instances => m => instances.some(q => queryKeys.includes(q) && !!api.query[q][m]);

  const isIncluded = s => !checks[s] || checks[s].instances.some(filterQueryKeys) && (!checks[s].methods.length || checks[s].methods.every(filterMethods(checks[s].instances))) || checks[s].withDetect && checks[s].instances.some(filterInstances);

  const getKeys = section => Object.keys(derives[section]);

  const creator = (section, method) => derives[section][method](instanceId, api);

  const result = {};
  const names = Object.keys(derives);

  for (let i = 0; i < names.length; i++) {
    const name = names[i];

    if (isIncluded(name)) {
      (0,_util_lazy_js__WEBPACK_IMPORTED_MODULE_2__.lazyDeriveSection)(result, name, getKeys, creator);
    }
  }

  return result;
} // FIXME The return type of this function should be {...ExactDerive, ...DeriveCustom}
// For now we just drop the custom derive typings

/** @internal */


function getAvailableDerives(instanceId, api, custom = {}) {
  return { ...injectFunctions(instanceId, api, derive),
    ...injectFunctions(instanceId, api, custom)
  };
}

/***/ }),
/* 672 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/api-derive',
  version: '6.10.1'
};

/***/ }),
/* 673 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createHeaderExtended": () => (/* reexport safe */ _HeaderExtended_js__WEBPACK_IMPORTED_MODULE_0__.createHeaderExtended),
/* harmony export */   "createSignedBlockExtended": () => (/* reexport safe */ _SignedBlockExtended_js__WEBPACK_IMPORTED_MODULE_1__.createSignedBlockExtended)
/* harmony export */ });
/* harmony import */ var _HeaderExtended_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(674);
/* harmony import */ var _SignedBlockExtended_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(676);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0



/***/ }),
/* 674 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createHeaderExtended": () => (/* binding */ createHeaderExtended)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(675);


// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0

function createHeaderExtended(registry, header, validators) {
  // an instance of the base extrinsic for us to extend
  const HeaderBase = registry.createClass('Header');

  var _author = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("author");

  var _validators = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("validators");

  class Implementation extends HeaderBase {
    constructor(registry, header, validators) {
      super(registry, header);
      Object.defineProperty(this, _author, {
        writable: true,
        value: void 0
      });
      Object.defineProperty(this, _validators, {
        writable: true,
        value: void 0
      });
      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _author)[_author] = (0,_util_js__WEBPACK_IMPORTED_MODULE_2__.extractAuthor)(this.digest, validators);
      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _validators)[_validators] = validators;
      this.createdAtHash = header === null || header === void 0 ? void 0 : header.createdAtHash;
    }
    /**
     * @description Convenience method, returns the author for the block
     */


    get author() {
      return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _author)[_author];
    }
    /**
     * @description Convenience method, returns the validators for the block
     */


    get validators() {
      return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _validators)[_validators];
    }

  }

  return new Implementation(registry, header, validators);
}

/***/ }),
/* 675 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "extractAuthor": () => (/* binding */ extractAuthor)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
function extractAuthor(digest, sessionValidators = []) {
  const [citem] = digest.logs.filter(({
    type
  }) => type === 'Consensus');
  const [pitem] = digest.logs.filter(({
    type
  }) => type === 'PreRuntime');
  const [sitem] = digest.logs.filter(({
    type
  }) => type === 'Seal');
  let accountId; // This is critical to be first for BABE (before Consensus)
  // If not first, we end up dropping the author at session-end

  if (pitem) {
    try {
      const [engine, data] = pitem.asPreRuntime;
      accountId = engine.extractAuthor(data, sessionValidators);
    } catch {// ignore
    }
  }

  if (!accountId && citem) {
    try {
      const [engine, data] = citem.asConsensus;
      accountId = engine.extractAuthor(data, sessionValidators);
    } catch {// ignore
    }
  } // SEAL, still used in e.g. Kulupu for pow


  if (!accountId && sitem) {
    try {
      const [engine, data] = sitem.asSeal;
      accountId = engine.extractAuthor(data, sessionValidators);
    } catch {// ignore
    }
  }

  return accountId;
}

/***/ }),
/* 676 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createSignedBlockExtended": () => (/* binding */ createSignedBlockExtended)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(675);


// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


function mapExtrinsics(extrinsics, records) {
  return extrinsics.map((extrinsic, index) => {
    let dispatchError;
    let dispatchInfo;
    const events = records.filter(({
      phase
    }) => phase.isApplyExtrinsic && phase.asApplyExtrinsic.eq(index)).map(({
      event
    }) => {
      if (event.section === 'system') {
        if (event.method === 'ExtrinsicSuccess') {
          dispatchInfo = event.data[0];
        } else if (event.method === 'ExtrinsicFailed') {
          dispatchError = event.data[0];
          dispatchInfo = event.data[1];
        }
      }

      return event;
    });
    return {
      dispatchError,
      dispatchInfo,
      events,
      extrinsic
    };
  });
}

function createSignedBlockExtended(registry, block, events, validators) {
  // an instance of the base extrinsic for us to extend
  const SignedBlockBase = registry.createClass('SignedBlock');

  var _author = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("author");

  var _events = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("events");

  var _extrinsics = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("extrinsics");

  class Implementation extends SignedBlockBase {
    constructor(registry, block, events, validators) {
      super(registry, block);
      Object.defineProperty(this, _author, {
        writable: true,
        value: void 0
      });
      Object.defineProperty(this, _events, {
        writable: true,
        value: void 0
      });
      Object.defineProperty(this, _extrinsics, {
        writable: true,
        value: void 0
      });
      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _author)[_author] = (0,_util_js__WEBPACK_IMPORTED_MODULE_2__.extractAuthor)(this.block.header.digest, validators);
      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _events)[_events] = events || [];
      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _extrinsics)[_extrinsics] = mapExtrinsics(this.block.extrinsics, (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _events)[_events]);
      this.createdAtHash = block === null || block === void 0 ? void 0 : block.createdAtHash;
    }
    /**
     * @description Convenience method, returns the author for the block
     */


    get author() {
      return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _author)[_author];
    }
    /**
     * @description Convenience method, returns the events associated with the block
     */


    get events() {
      return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _events)[_events];
    }
    /**
     * @description Returns the extrinsics and their events, mapped
     */


    get extrinsics() {
      return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _extrinsics)[_extrinsics];
    }

  }

  return new Implementation(registry, block, events, validators);
}

/***/ }),
/* 677 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "lazyDeriveSection": () => (/* binding */ lazyDeriveSection)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(304);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0

function lazyDeriveSection(result, section, getKeys, creator) {
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.lazyMethod)(result, section, () => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.lazyMethods)({}, getKeys(section), method => creator(section, method)));
}

/***/ }),
/* 678 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "accountId": () => (/* reexport safe */ _accountId_js__WEBPACK_IMPORTED_MODULE_0__.accountId),
/* harmony export */   "flags": () => (/* reexport safe */ _flags_js__WEBPACK_IMPORTED_MODULE_1__.flags),
/* harmony export */   "idAndIndex": () => (/* reexport safe */ _idAndIndex_js__WEBPACK_IMPORTED_MODULE_2__.idAndIndex),
/* harmony export */   "idToIndex": () => (/* reexport safe */ _idToIndex_js__WEBPACK_IMPORTED_MODULE_3__.idToIndex),
/* harmony export */   "hasIdentity": () => (/* reexport safe */ _identity_js__WEBPACK_IMPORTED_MODULE_4__.hasIdentity),
/* harmony export */   "hasIdentityMulti": () => (/* reexport safe */ _identity_js__WEBPACK_IMPORTED_MODULE_4__.hasIdentityMulti),
/* harmony export */   "identity": () => (/* reexport safe */ _identity_js__WEBPACK_IMPORTED_MODULE_4__.identity),
/* harmony export */   "indexToId": () => (/* reexport safe */ _indexToId_js__WEBPACK_IMPORTED_MODULE_5__.indexToId),
/* harmony export */   "indexes": () => (/* reexport safe */ _indexes_js__WEBPACK_IMPORTED_MODULE_6__.indexes),
/* harmony export */   "info": () => (/* reexport safe */ _info_js__WEBPACK_IMPORTED_MODULE_7__.info)
/* harmony export */ });
/* harmony import */ var _accountId_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(679);
/* harmony import */ var _flags_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(714);
/* harmony import */ var _idAndIndex_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(715);
/* harmony import */ var _idToIndex_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(716);
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(717);
/* harmony import */ var _indexToId_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(718);
/* harmony import */ var _indexes_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(719);
/* harmony import */ var _info_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(724);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0









/***/ }),
/* 679 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "accountId": () => (/* binding */ accountId)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(599);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(680);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0





function retrieve(api, address) {
  const decoded = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.isU8a)(address) ? address : (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_1__.decodeAddress)((address || '').toString());

  if (decoded.length > 8) {
    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)(api.registry.createType('AccountId', decoded));
  }

  const accountIndex = api.registry.createType('AccountIndex', decoded);
  return api.derive.accounts.indexToId(accountIndex.toString()).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_3__.map)(accountId => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_4__.assertReturn)(accountId, 'Unable to retrieve accountId')));
}
/**
 * @name accountId
 * @param {(Address | AccountId | AccountIndex | string | null)} address - An accounts address in various formats.
 * @description  An [[AccountId]]
 */


function accountId(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_5__.memo)(instanceId, address => retrieve(api, address));
}

/***/ }),
/* 680 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "decodeAddress": () => (/* binding */ decodeAddress)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(80);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(126);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(166);
/* harmony import */ var _base58_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(681);
/* harmony import */ var _checksum_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(684);
/* harmony import */ var _defaults_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(683);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Original implementation: https://github.com/paritytech/polka-ui/blob/4858c094684769080f5811f32b081dd7780b0880/src/polkadot.js#L6




function decodeAddress(encoded, ignoreChecksum, ss58Format = -1) {
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)(encoded, 'Invalid empty address passed');

  if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isU8a)(encoded) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isHex)(encoded)) {
    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.u8aToU8a)(encoded);
  }

  try {
    const decoded = (0,_base58_index_js__WEBPACK_IMPORTED_MODULE_4__.base58Decode)(encoded);
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)(_defaults_js__WEBPACK_IMPORTED_MODULE_5__.defaults.allowedEncodedLengths.includes(decoded.length), 'Invalid decoded address length');
    const [isValid, endPos, ss58Length, ss58Decoded] = (0,_checksum_js__WEBPACK_IMPORTED_MODULE_6__.checkAddressChecksum)(decoded);
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)(ignoreChecksum || isValid, 'Invalid decoded address checksum');
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)([-1, ss58Decoded].includes(ss58Format), () => `Expected ss58Format ${ss58Format}, received ${ss58Decoded}`);
    return decoded.slice(ss58Length, endPos);
  } catch (error) {
    throw new Error(`Decoding ${encoded}: ${error.message}`);
  }
}

/***/ }),
/* 681 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "base58Validate": () => (/* binding */ base58Validate),
/* harmony export */   "base58Decode": () => (/* binding */ base58Decode),
/* harmony export */   "base58Encode": () => (/* binding */ base58Encode),
/* harmony export */   "isBase58": () => (/* binding */ isBase58)
/* harmony export */ });
/* harmony import */ var micro_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(182);
/* harmony import */ var _base32_helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(682);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0


const BASE58_CONFIG = {
  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz',
  coder: micro_base__WEBPACK_IMPORTED_MODULE_0__.base58,
  ipfsChar: 'z',
  type: 'base58'
};
/**
 * @name base58Validate
 * @summary Validates a base58 value.
 * @description
 * Validates that the supplied value is valid base58, throwing exceptions if not
 */

const base58Validate = (0,_base32_helpers_js__WEBPACK_IMPORTED_MODULE_1__.createValidate)(BASE58_CONFIG);
/**
 * @name base58Decode
 * @summary Decodes a base58 value.
 * @description
 * From the provided input, decode the base58 and return the result as an `Uint8Array`.
 */

const base58Decode = (0,_base32_helpers_js__WEBPACK_IMPORTED_MODULE_1__.createDecode)(BASE58_CONFIG, base58Validate);
/**
* @name base58Encode
* @summary Creates a base58 value.
* @description
* From the provided input, create the base58 and return the result as a string.
*/

const base58Encode = (0,_base32_helpers_js__WEBPACK_IMPORTED_MODULE_1__.createEncode)(BASE58_CONFIG);
/**
* @name isBase58
* @description Checks if the input is in base58, returning true/false
*/

const isBase58 = (0,_base32_helpers_js__WEBPACK_IMPORTED_MODULE_1__.createIs)(base58Validate);

/***/ }),
/* 682 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createDecode": () => (/* binding */ createDecode),
/* harmony export */   "createEncode": () => (/* binding */ createEncode),
/* harmony export */   "createIs": () => (/* binding */ createIs),
/* harmony export */   "createValidate": () => (/* binding */ createValidate)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(80);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
 // NOTE: Work around a TS issue. These are re-defined like in @polkadot/util/types
// since without it the import
//
//   import type { U8aLike } from '@polkadot/util/types';
//
// ends up in the build-generated code as
//
//   impor("../../../util/src/types").U8aLike
//
// eslint-disable-next-line @typescript-eslint/ban-types

function createDecode({
  coder,
  ipfsChar
}, validate) {
  return (value, ipfsCompat) => {
    validate(value, ipfsCompat);
    return coder.decode(ipfsChar && ipfsCompat ? value.substr(1) : value);
  };
}
function createEncode({
  coder,
  ipfsChar
}) {
  return (value, ipfsCompat) => {
    const out = coder.encode((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(value));
    return ipfsChar && ipfsCompat ? `${ipfsChar}${out}` : out;
  };
}
function createIs(validate) {
  return (value, ipfsCompat) => {
    try {
      return validate(value, ipfsCompat);
    } catch (error) {
      return false;
    }
  };
}
function createValidate({
  alphabet,
  ipfsChar,
  regex,
  type
}) {
  return (value, ipfsCompat) => {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(value && typeof value === 'string', () => `Expected non-null, non-empty ${type} string input`);

    if (ipfsChar && ipfsCompat) {
      (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(value[0] === ipfsChar, () => `Expected ipfs-compatible ${type} to start with '${ipfsChar}'`);
    }

    if (regex) {
      (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(regex.test(value), `Invalid ${type} encoding`);
    } else {
      for (let i = ipfsCompat ? 1 : 0; i < value.length; i++) {
        (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(alphabet.includes(value[i]), () => `Invalid ${type} character "${value[i]}" (0x${value.charCodeAt(i).toString(16)}) at index ${i}`);
      }
    }

    return true;
  };
}

/***/ }),
/* 683 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "defaults": () => (/* binding */ defaults)
/* harmony export */ });
/* harmony import */ var _networks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(185);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0


function networkToPrefix({
  prefix
}) {
  return prefix;
}

const defaults = {
  allowedDecodedLengths: [1, 2, 4, 8, 32, 33],
  // publicKey has prefix + 2 checksum bytes, short only prefix + 1 checksum byte
  allowedEncodedLengths: [3, 4, 6, 10, 35, 36, 37, 38],
  allowedPrefix: _networks_js__WEBPACK_IMPORTED_MODULE_0__.availableNetworks.map(networkToPrefix),
  prefix: 42
};

/***/ }),
/* 684 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "checkAddressChecksum": () => (/* binding */ checkAddressChecksum)
/* harmony export */ });
/* harmony import */ var _sshash_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(685);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

function checkAddressChecksum(decoded) {
  const ss58Length = decoded[0] & 0b01000000 ? 2 : 1;
  const ss58Decoded = ss58Length === 1 ? decoded[0] : (decoded[0] & 0b00111111) << 2 | decoded[1] >> 6 | (decoded[1] & 0b00111111) << 8; // 32/33 bytes public + 2 bytes checksum + prefix

  const isPublicKey = [34 + ss58Length, 35 + ss58Length].includes(decoded.length);
  const length = decoded.length - (isPublicKey ? 2 : 1); // calculate the hash and do the checksum byte checks

  const hash = (0,_sshash_js__WEBPACK_IMPORTED_MODULE_0__.sshash)(decoded.subarray(0, length));
  const isValid = (decoded[0] & 0b10000000) === 0 && ![46, 47].includes(decoded[0]) && (isPublicKey ? decoded[decoded.length - 2] === hash[0] && decoded[decoded.length - 1] === hash[1] : decoded[decoded.length - 1] === hash[0]);
  return [isValid, length, ss58Length, ss58Decoded];
}

/***/ }),
/* 685 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "sshash": () => (/* binding */ sshash)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(170);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(197);
/* harmony import */ var _blake2_asU8a_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(686);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0


const SS58_PREFIX = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.stringToU8a)('SS58PRE');
function sshash(key) {
  return (0,_blake2_asU8a_js__WEBPACK_IMPORTED_MODULE_1__.blake2AsU8a)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aConcat)(SS58_PREFIX, key), 512);
}

/***/ }),
/* 686 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "blake2AsU8a": () => (/* binding */ blake2AsU8a),
/* harmony export */   "blake2AsHex": () => (/* binding */ blake2AsHex)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(166);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(177);
/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(687);
/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(713);
/* harmony import */ var _noble_hashes_lib_blake2b_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(709);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0





/**
 * @name blake2AsU8a
 * @summary Creates a blake2b u8a from the input.
 * @description
 * From a `Uint8Array` input, create the blake2b and return the result as a u8a with the specified `bitLength`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { blake2AsU8a } from '@polkadot/util-crypto';
 *
 * blake2AsU8a('abc'); // => [0xba, 0x80, 0xa5, 0x3f, 0x98, 0x1c, 0x4d, 0x0d]
 * ```
 */
function blake2AsU8a(data, bitLength = 256, key, onlyJs) {
  const byteLength = Math.ceil(bitLength / 8);
  const u8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(data);
  return !_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.hasBigInt || !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.isReady)() ? (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.blake2b)(u8a, (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(key), byteLength) : (0,_noble_hashes_lib_blake2b_js__WEBPACK_IMPORTED_MODULE_3__.blake2b)(u8a, {
    dkLen: byteLength,
    key: key || undefined
  });
}
/**
 * @name blake2AsHex
 * @description Creates a blake2b hex from the input.
 */

const blake2AsHex = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_4__.createAsHex)(blake2AsU8a);

/***/ }),
/* 687 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),
/* harmony export */   "bip39Generate": () => (/* binding */ bip39Generate),
/* harmony export */   "bip39ToEntropy": () => (/* binding */ bip39ToEntropy),
/* harmony export */   "bip39ToMiniSecret": () => (/* binding */ bip39ToMiniSecret),
/* harmony export */   "bip39ToSeed": () => (/* binding */ bip39ToSeed),
/* harmony export */   "bip39Validate": () => (/* binding */ bip39Validate),
/* harmony export */   "ed25519KeypairFromSeed": () => (/* binding */ ed25519KeypairFromSeed),
/* harmony export */   "ed25519Sign": () => (/* binding */ ed25519Sign),
/* harmony export */   "ed25519Verify": () => (/* binding */ ed25519Verify),
/* harmony export */   "sr25519DeriveKeypairHard": () => (/* binding */ sr25519DeriveKeypairHard),
/* harmony export */   "sr25519DeriveKeypairSoft": () => (/* binding */ sr25519DeriveKeypairSoft),
/* harmony export */   "sr25519DerivePublicSoft": () => (/* binding */ sr25519DerivePublicSoft),
/* harmony export */   "sr25519KeypairFromSeed": () => (/* binding */ sr25519KeypairFromSeed),
/* harmony export */   "sr25519Sign": () => (/* binding */ sr25519Sign),
/* harmony export */   "sr25519Verify": () => (/* binding */ sr25519Verify),
/* harmony export */   "sr25519Agree": () => (/* binding */ sr25519Agree),
/* harmony export */   "vrfSign": () => (/* binding */ vrfSign),
/* harmony export */   "vrfVerify": () => (/* binding */ vrfVerify),
/* harmony export */   "blake2b": () => (/* binding */ blake2b),
/* harmony export */   "hmacSha256": () => (/* binding */ hmacSha256),
/* harmony export */   "hmacSha512": () => (/* binding */ hmacSha512),
/* harmony export */   "keccak256": () => (/* binding */ keccak256),
/* harmony export */   "keccak512": () => (/* binding */ keccak512),
/* harmony export */   "pbkdf2": () => (/* binding */ pbkdf2),
/* harmony export */   "scrypt": () => (/* binding */ scrypt),
/* harmony export */   "sha256": () => (/* binding */ sha256),
/* harmony export */   "sha512": () => (/* binding */ sha512),
/* harmony export */   "twox": () => (/* binding */ twox),
/* harmony export */   "isReady": () => (/* binding */ isReady),
/* harmony export */   "waitReady": () => (/* binding */ waitReady)
/* harmony export */ });
/* harmony import */ var _polkadot_wasm_crypto_asmjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(161);
/* harmony import */ var _polkadot_wasm_crypto_wasm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(156);
/* harmony import */ var _bridge_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(689);
/* harmony import */ var _imports_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(706);
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(688);
// Copyright 2019-2021 @polkadot/wasm-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0





const PTR_VEC = 8;
const wasmPromise = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.initWasm)(_polkadot_wasm_crypto_wasm__WEBPACK_IMPORTED_MODULE_2__.wasmBytes, _polkadot_wasm_crypto_asmjs__WEBPACK_IMPORTED_MODULE_3__.asmJsInit, _imports_js__WEBPACK_IMPORTED_MODULE_4__).catch(() => null);
const bip39Generate = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => words => {
  wasm.ext_bip39_generate(PTR_VEC, words);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultString)();
});
const bip39ToEntropy = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => phrase => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocString)(phrase);
  wasm.ext_bip39_to_entropy(PTR_VEC, ptr0, len0);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const bip39ToMiniSecret = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (phrase, password) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocString)(phrase);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocString)(password);
  wasm.ext_bip39_to_mini_secret(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const bip39ToSeed = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (phrase, password) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocString)(phrase);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocString)(password);
  wasm.ext_bip39_to_seed(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const bip39Validate = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => phrase => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocString)(phrase);
  const ret = wasm.ext_bip39_validate(ptr0, len0);
  return ret !== 0;
});
const ed25519KeypairFromSeed = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => seed => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(seed);
  wasm.ext_ed_from_seed(PTR_VEC, ptr0, len0);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const ed25519Sign = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (pubkey, seckey, message) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pubkey);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(seckey);
  const [ptr2, len2] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(message);
  wasm.ext_ed_sign(PTR_VEC, ptr0, len0, ptr1, len1, ptr2, len2);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const ed25519Verify = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (signature, message, pubkey) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(signature);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(message);
  const [ptr2, len2] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pubkey);
  const ret = wasm.ext_ed_verify(ptr0, len0, ptr1, len1, ptr2, len2);
  return ret !== 0;
});
const sr25519DeriveKeypairHard = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (pair, cc) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pair);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(cc);
  wasm.ext_sr_derive_keypair_hard(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const sr25519DeriveKeypairSoft = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (pair, cc) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pair);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(cc);
  wasm.ext_sr_derive_keypair_soft(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const sr25519DerivePublicSoft = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (pubkey, cc) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pubkey);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(cc);
  wasm.ext_sr_derive_public_soft(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const sr25519KeypairFromSeed = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => seed => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(seed);
  wasm.ext_sr_from_seed(PTR_VEC, ptr0, len0);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const sr25519Sign = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (pubkey, secret, message) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pubkey);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(secret);
  const [ptr2, len2] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(message);
  wasm.ext_sr_sign(PTR_VEC, ptr0, len0, ptr1, len1, ptr2, len2);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const sr25519Verify = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (signature, message, pubkey) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(signature);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(message);
  const [ptr2, len2] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pubkey);
  const ret = wasm.ext_sr_verify(ptr0, len0, ptr1, len1, ptr2, len2);
  return ret !== 0;
});
const sr25519Agree = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (pubkey, secret) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pubkey);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(secret);
  wasm.ext_sr_agree(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const vrfSign = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (secret, context, message, extra) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(secret);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(context);
  const [ptr2, len2] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(message);
  const [ptr3, len3] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(extra);
  wasm.ext_vrf_sign(PTR_VEC, ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const vrfVerify = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (pubkey, context, message, extra, outAndProof) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pubkey);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(context);
  const [ptr2, len2] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(message);
  const [ptr3, len3] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(extra);
  const [ptr4, len4] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(outAndProof);
  const ret = wasm.ext_vrf_verify(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4);
  return ret !== 0;
});
const blake2b = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (data, key, size) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(key);
  wasm.ext_blake2b(PTR_VEC, ptr0, len0, ptr1, len1, size);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const hmacSha256 = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (key, data) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(key);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  wasm.ext_hmac_sha256(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const hmacSha512 = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (key, data) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(key);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  wasm.ext_hmac_sha512(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const keccak256 = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => data => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  wasm.ext_keccak256(PTR_VEC, ptr0, len0);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const keccak512 = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => data => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  wasm.ext_keccak512(PTR_VEC, ptr0, len0);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const pbkdf2 = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (data, salt, rounds) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(salt);
  wasm.ext_pbkdf2(PTR_VEC, ptr0, len0, ptr1, len1, rounds);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const scrypt = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (password, salt, log2n, r, p) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(password);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(salt);
  wasm.ext_scrypt(PTR_VEC, ptr0, len0, ptr1, len1, log2n, r, p);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const sha256 = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => data => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  wasm.ext_sha256(PTR_VEC, ptr0, len0);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const sha512 = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => data => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  wasm.ext_sha512(PTR_VEC, ptr0, len0);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const twox = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (data, rounds) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  wasm.ext_twox(PTR_VEC, ptr0, len0, rounds);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
function isReady() {
  return !!(0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.getWasm)();
}
function waitReady() {
  return wasmPromise.then(() => isReady());
}

/***/ }),
/* 688 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/wasm-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/wasm-crypto',
  version: '4.4.1'
};

/***/ }),
/* 689 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "initWasm": () => (/* binding */ initWasm),
/* harmony export */   "withWasm": () => (/* binding */ withWasm),
/* harmony export */   "getWasm": () => (/* binding */ getWasm),
/* harmony export */   "getInt32": () => (/* binding */ getInt32),
/* harmony export */   "getUint8": () => (/* binding */ getUint8),
/* harmony export */   "getU8a": () => (/* binding */ getU8a),
/* harmony export */   "getString": () => (/* binding */ getString),
/* harmony export */   "allocU8a": () => (/* binding */ allocU8a),
/* harmony export */   "allocString": () => (/* binding */ allocString),
/* harmony export */   "resultU8a": () => (/* binding */ resultU8a),
/* harmony export */   "resultString": () => (/* binding */ resultString)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(690);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(694);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(700);
// Copyright 2019-2021 @polkadot/wasm-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/* eslint-disable @typescript-eslint/no-non-null-assertion */

let wasm = null;
let cachegetInt32 = null;
let cachegetUint8 = null;
async function initWasm(wasmBytes, asmFn, wbg) {
  try {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)(typeof WebAssembly !== 'undefined' && wasmBytes && wasmBytes.length, 'WebAssembly is not available in your environment');
    const source = await WebAssembly.instantiate(wasmBytes, {
      wbg
    });
    wasm = source.instance.exports;
  } catch (error) {
    // if we have a valid supplied asm.js, return that
    if (asmFn) {
      wasm = asmFn(wbg);
    } else {
      console.error('FATAL: Unable to initialize @polkadot/wasm-crypto');
      console.error(error);
      wasm = null;
    }
  }
} // FIXME We really would love to clean this up and have a sign like (wasm, ...params) => T
// Alas, TypeScript foo is not that great today, so we sadly have an extra closure here

function withWasm(fn) {
  return (...params) => {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)(wasm, 'The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces.');
    return fn(wasm)(...params);
  };
}
function getWasm() {
  return wasm;
}
function getInt32() {
  if (cachegetInt32 === null || cachegetInt32.buffer !== wasm.memory.buffer) {
    cachegetInt32 = new Int32Array(wasm.memory.buffer);
  }

  return cachegetInt32;
}
function getUint8() {
  if (cachegetUint8 === null || cachegetUint8.buffer !== wasm.memory.buffer) {
    cachegetUint8 = new Uint8Array(wasm.memory.buffer);
  }

  return cachegetUint8;
}
function getU8a(ptr, len) {
  return getUint8().subarray(ptr / 1, ptr / 1 + len);
}
function getString(ptr, len) {
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToString)(getU8a(ptr, len));
}
function allocU8a(arg) {
  const ptr = wasm.__wbindgen_malloc(arg.length * 1);

  getUint8().set(arg, ptr / 1);
  return [ptr, arg.length];
}
function allocString(arg) {
  return allocU8a((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.stringToU8a)(arg));
}
function resultU8a() {
  const r0 = getInt32()[8 / 4 + 0];
  const r1 = getInt32()[8 / 4 + 1];
  const ret = getU8a(r0, r1).slice();

  wasm.__wbindgen_free(r0, r1 * 1);

  return ret;
}
function resultString() {
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToString)(resultU8a());
}

/***/ }),
/* 690 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "assert": () => (/* binding */ assert),
/* harmony export */   "assertReturn": () => (/* binding */ assertReturn)
/* harmony export */ });
/* harmony import */ var _is_function_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(691);
/* harmony import */ var _is_null_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(693);
/* harmony import */ var _is_undefined_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(692);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0




/**
 * @name assert
 * @summary Checks for a valid test, if not Error is thrown.
 * @description
 * Checks that `test` is a truthy value. If value is falsy (`null`, `undefined`, `false`, ...), it throws an Error with the supplied `message`. When `test` passes, `true` is returned.
 * @example
 * <BR>
 *
 * ```javascript
 * const { assert } from '@polkadot/util';
 *
 * assert(true, 'True should be true'); // passes
 * assert(false, 'False should not be true'); // Error thrown
 * assert(false, () => 'message'); // Error with 'message'
 * ```
 */
function assert(condition, message) {
  if (!condition) {
    throw new Error((0,_is_function_js__WEBPACK_IMPORTED_MODULE_0__.isFunction)(message) ? message() : message);
  }
}
/**
 * @name assertReturn
 * @description Returns when the value is not undefined/null, otherwise throws assertion error
 */

function assertReturn(value, message) {
  assert(!(0,_is_undefined_js__WEBPACK_IMPORTED_MODULE_1__.isUndefined)(value) && !(0,_is_null_js__WEBPACK_IMPORTED_MODULE_2__.isNull)(value), message);
  return value;
}

/***/ }),
/* 691 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isFunction": () => (/* binding */ isFunction)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
// eslint-disable-next-line @typescript-eslint/ban-types

/**
 * @name isFunction
 * @summary Tests for a `function`.
 * @description
 * Checks to see if the input value is a JavaScript function.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isFunction } from '@polkadot/util';
 *
 * isFunction(() => false); // => true
 * ```
 */
function isFunction(value) {
  return typeof value === 'function';
}

/***/ }),
/* 692 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isUndefined": () => (/* binding */ isUndefined)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isUndefined
 * @summary Tests for a `undefined` values.
 * @description
 * Checks to see if the input value is `undefined`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isUndefined } from '@polkadot/util';
 *
 * console.log('isUndefined', isUndefined(void(0))); // => true
 * ```
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function isUndefined(value) {
  return typeof value === 'undefined';
}

/***/ }),
/* 693 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isNull": () => (/* binding */ isNull)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isNull
 * @summary Tests for a `null` values.
 * @description
 * Checks to see if the input value is `null`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isNull } from '@polkadot/util';
 *
 * console.log('isNull', isNull(null)); // => true
 * ```
 */
function isNull(value) {
  return value === null;
}

/***/ }),
/* 694 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "u8aToString": () => (/* binding */ u8aToString)
/* harmony export */ });
/* harmony import */ var _polkadot_x_textdecoder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(695);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

const decoder = new _polkadot_x_textdecoder__WEBPACK_IMPORTED_MODULE_0__.TextDecoder('utf-8');
/**
 * @name u8aToString
 * @summary Creates a utf-8 string from a Uint8Array object.
 * @description
 * `UInt8Array` input values return the actual decoded utf-8 string. `null` or `undefined` values returns an empty string.
 * @example
 * <BR>
 *
 * ```javascript
 * import { u8aToString } from '@polkadot/util';
 *
 * u8aToString(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0x6f])); // hello
 * ```
 */

function u8aToString(value) {
  return !(value !== null && value !== void 0 && value.length) ? '' : decoder.decode(value);
}

/***/ }),
/* 695 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),
/* harmony export */   "TextDecoder": () => (/* binding */ TextDecoder)
/* harmony export */ });
/* harmony import */ var _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(697);
/* harmony import */ var _fallback_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(699);
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(696);
// Copyright 2017-2021 @polkadot/x-textencoder authors & contributors
// SPDX-License-Identifier: Apache-2.0



const TextDecoder = typeof _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__.xglobal.TextDecoder === 'undefined' ? _fallback_js__WEBPACK_IMPORTED_MODULE_2__.TextDecoder : _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__.xglobal.TextDecoder;

/***/ }),
/* 696 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-textdecoder authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/x-textdecoder',
  version: '8.0.4'
};

/***/ }),
/* 697 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),
/* harmony export */   "xglobal": () => (/* binding */ xglobal)
/* harmony export */ });
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(698);
// Copyright 2017-2021 @polkadot/x-global authors & contributors
// SPDX-License-Identifier: Apache-2.0


function evaluateThis(fn) {
  return fn('return this');
}

const xglobal = typeof globalThis !== 'undefined' ? globalThis : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : evaluateThis(Function);

/***/ }),
/* 698 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-global authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/x-global',
  version: '8.0.4'
};

/***/ }),
/* 699 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TextDecoder": () => (/* binding */ TextDecoder)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-textencoder authors & contributors
// SPDX-License-Identifier: Apache-2.0
// This is very limited, only handling Ascii values
class TextDecoder {
  // eslint-disable-next-line @typescript-eslint/no-unused-vars,no-useless-constructor
  constructor(_) {// nothing
  }

  decode(value) {
    let result = '';

    for (let i = 0; i < value.length; i++) {
      result += String.fromCharCode(value[i]);
    }

    return result;
  }

}

/***/ }),
/* 700 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "stringToU8a": () => (/* binding */ stringToU8a)
/* harmony export */ });
/* harmony import */ var _polkadot_x_textencoder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(701);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

const encoder = new _polkadot_x_textencoder__WEBPACK_IMPORTED_MODULE_0__.TextEncoder();
/**
 * @name stringToU8a
 * @summary Creates a Uint8Array object from a utf-8 string.
 * @description
 * String input values return the actual encoded `UInt8Array`. `null` or `undefined` values returns an empty encoded array.
 * @example
 * <BR>
 *
 * ```javascript
 * import { stringToU8a } from '@polkadot/util';
 *
 * stringToU8a('hello'); // [0x68, 0x65, 0x6c, 0x6c, 0x6f]
 * ```
 */
// eslint-disable-next-line @typescript-eslint/ban-types

function stringToU8a(value) {
  return value ? encoder.encode(value.toString()) : new Uint8Array();
}

/***/ }),
/* 701 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),
/* harmony export */   "TextEncoder": () => (/* binding */ TextEncoder)
/* harmony export */ });
/* harmony import */ var _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(703);
/* harmony import */ var _fallback_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(705);
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(702);
// Copyright 2017-2021 @polkadot/x-textencoder authors & contributors
// SPDX-License-Identifier: Apache-2.0



const TextEncoder = typeof _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__.xglobal.TextEncoder === 'undefined' ? _fallback_js__WEBPACK_IMPORTED_MODULE_2__.TextEncoder : _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__.xglobal.TextEncoder;

/***/ }),
/* 702 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-textencoder authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/x-textencoder',
  version: '8.0.4'
};

/***/ }),
/* 703 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),
/* harmony export */   "xglobal": () => (/* binding */ xglobal)
/* harmony export */ });
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(704);
// Copyright 2017-2021 @polkadot/x-global authors & contributors
// SPDX-License-Identifier: Apache-2.0


function evaluateThis(fn) {
  return fn('return this');
}

const xglobal = typeof globalThis !== 'undefined' ? globalThis : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : evaluateThis(Function);

/***/ }),
/* 704 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-global authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/x-global',
  version: '8.0.4'
};

/***/ }),
/* 705 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TextEncoder": () => (/* binding */ TextEncoder)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-textencoder authors & contributors
// SPDX-License-Identifier: Apache-2.0
// This is very limited, only handling Ascii values
class TextEncoder {
  encode(value) {
    const u8a = new Uint8Array(value.length);

    for (let i = 0; i < value.length; i++) {
      u8a[i] = value.charCodeAt(i);
    }

    return u8a;
  }

}

/***/ }),
/* 706 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__wbindgen_is_undefined": () => (/* binding */ __wbindgen_is_undefined),
/* harmony export */   "__wbg_self_1b7a39e3a92c949c": () => (/* binding */ __wbg_self_1b7a39e3a92c949c),
/* harmony export */   "__wbg_require_604837428532a733": () => (/* binding */ __wbg_require_604837428532a733),
/* harmony export */   "__wbg_crypto_968f1772287e2df0": () => (/* binding */ __wbg_crypto_968f1772287e2df0),
/* harmony export */   "__wbg_getRandomValues_a3d34b4fee3c2869": () => (/* binding */ __wbg_getRandomValues_a3d34b4fee3c2869),
/* harmony export */   "__wbg_getRandomValues_f5e14ab7ac8e995d": () => (/* binding */ __wbg_getRandomValues_f5e14ab7ac8e995d),
/* harmony export */   "__wbg_randomFillSync_d5bd2d655fdf256a": () => (/* binding */ __wbg_randomFillSync_d5bd2d655fdf256a),
/* harmony export */   "__wbindgen_object_drop_ref": () => (/* binding */ __wbindgen_object_drop_ref),
/* harmony export */   "abort": () => (/* binding */ abort)
/* harmony export */ });
/* harmony import */ var _polkadot_x_randomvalues__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(707);
/* harmony import */ var _bridge_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(689);
// Copyright 2019-2021 @polkadot/wasm-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/* eslint-disable camelcase */


const DEFAULT_CRYPTO = {
  getRandomValues: _polkadot_x_randomvalues__WEBPACK_IMPORTED_MODULE_0__.getRandomValues
};
const DEFAULT_SELF = {
  crypto: DEFAULT_CRYPTO
};
const heap = new Array(32).fill(undefined).concat(undefined, null, true, false);
let heapNext = heap.length;

function getObject(idx) {
  return heap[idx];
}

function dropObject(idx) {
  if (idx < 36) {
    return;
  }

  heap[idx] = heapNext;
  heapNext = idx;
}

function takeObject(idx) {
  const ret = getObject(idx);
  dropObject(idx);
  return ret;
}

function addObject(obj) {
  if (heapNext === heap.length) {
    heap.push(heap.length + 1);
  }

  const idx = heapNext;
  heapNext = heap[idx];
  heap[idx] = obj;
  return idx;
}

function __wbindgen_is_undefined(idx) {
  return getObject(idx) === undefined;
}
function __wbg_self_1b7a39e3a92c949c() {
  return addObject(DEFAULT_SELF);
}
function __wbg_require_604837428532a733(ptr, len) {
  throw new Error(`Unable to require ${(0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.getString)(ptr, len)}`);
} // eslint-disable-next-line @typescript-eslint/no-unused-vars

function __wbg_crypto_968f1772287e2df0(_idx) {
  return addObject(DEFAULT_CRYPTO);
} // eslint-disable-next-line @typescript-eslint/no-unused-vars

function __wbg_getRandomValues_a3d34b4fee3c2869(_idx) {
  return addObject(DEFAULT_CRYPTO.getRandomValues);
} // eslint-disable-next-line @typescript-eslint/no-unused-vars

function __wbg_getRandomValues_f5e14ab7ac8e995d(_arg0, ptr, len) {
  DEFAULT_CRYPTO.getRandomValues((0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.getU8a)(ptr, len));
} // eslint-disable-next-line @typescript-eslint/no-unused-vars

function __wbg_randomFillSync_d5bd2d655fdf256a(_idx, _ptr, _len) {
  throw new Error('randomFillsync is not available'); // getObject(idx).randomFillSync(getU8a(ptr, len));
}
function __wbindgen_object_drop_ref(idx) {
  takeObject(idx);
}
function abort() {
  throw new Error('abort');
}

/***/ }),
/* 707 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),
/* harmony export */   "getRandomValues": () => (/* binding */ getRandomValues)
/* harmony export */ });
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(708);
// Copyright 2017-2021 @polkadot/x-randomvalues authors & contributors
// SPDX-License-Identifier: Apache-2.0

function getRandomValues(arr) {
  return crypto.getRandomValues(arr);
}

/***/ }),
/* 708 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-randomvalues authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/x-randomvalues',
  version: '8.0.4'
};

/***/ }),
/* 709 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "blake2b": () => (/* binding */ blake2b)
/* harmony export */ });
/* harmony import */ var _blake2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(712);
/* harmony import */ var _u64_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(710);
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(711);
/*! noble-hashes - MIT License (c) 2021 Paul Miller (paulmillr.com) */
// https://github.com/paulmillr/noble-hashes/pull/13


 // Same as SHA-512 but LE
// prettier-ignore

const IV = new Uint32Array([0xf3bcc908, 0x6a09e667, 0x84caa73b, 0xbb67ae85, 0xfe94f82b, 0x3c6ef372, 0x5f1d36f1, 0xa54ff53a, 0xade682d1, 0x510e527f, 0x2b3e6c1f, 0x9b05688c, 0xfb41bd6b, 0x1f83d9ab, 0x137e2179, 0x5be0cd19]); // Temporary buffer

const BUF = new Uint32Array(32); // Mixing function G splitted in two halfs

function G1(a, b, c, d, msg, x) {
  // NOTE: V is LE here
  const Xl = msg[x],
        Xh = msg[x + 1]; // prettier-ignore

  let Al = BUF[2 * a],
      Ah = BUF[2 * a + 1]; // prettier-ignore

  let Bl = BUF[2 * b],
      Bh = BUF[2 * b + 1]; // prettier-ignore

  let Cl = BUF[2 * c],
      Ch = BUF[2 * c + 1]; // prettier-ignore

  let Dl = BUF[2 * d],
      Dh = BUF[2 * d + 1]; // prettier-ignore
  // v[a] = (v[a] + v[b] + x) | 0;

  let ll = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add3L(Al, Bl, Xl);
  Ah = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add3H(ll, Ah, Bh, Xh);
  Al = ll | 0; // v[d] = rotr(v[d] ^ v[a], 32)

  ({
    Dh,
    Dl
  } = {
    Dh: Dh ^ Ah,
    Dl: Dl ^ Al
  });
  ({
    Dh,
    Dl
  } = {
    Dh: _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotr32H(Dh, Dl),
    Dl: _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotr32L(Dh, Dl)
  }); // v[c] = (v[c] + v[d]) | 0;

  ({
    h: Ch,
    l: Cl
  } = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add(Ch, Cl, Dh, Dl)); // v[b] = rotr(v[b] ^ v[c], 24)

  ({
    Bh,
    Bl
  } = {
    Bh: Bh ^ Ch,
    Bl: Bl ^ Cl
  });
  ({
    Bh,
    Bl
  } = {
    Bh: _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrSH(Bh, Bl, 24),
    Bl: _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrSL(Bh, Bl, 24)
  });
  BUF[2 * a] = Al, BUF[2 * a + 1] = Ah;
  BUF[2 * b] = Bl, BUF[2 * b + 1] = Bh;
  BUF[2 * c] = Cl, BUF[2 * c + 1] = Ch;
  BUF[2 * d] = Dl, BUF[2 * d + 1] = Dh;
}

function G2(a, b, c, d, msg, x) {
  // NOTE: V is LE here
  const Xl = msg[x],
        Xh = msg[x + 1]; // prettier-ignore

  let Al = BUF[2 * a],
      Ah = BUF[2 * a + 1]; // prettier-ignore

  let Bl = BUF[2 * b],
      Bh = BUF[2 * b + 1]; // prettier-ignore

  let Cl = BUF[2 * c],
      Ch = BUF[2 * c + 1]; // prettier-ignore

  let Dl = BUF[2 * d],
      Dh = BUF[2 * d + 1]; // prettier-ignore
  // v[a] = (v[a] + v[b] + x) | 0;

  let ll = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add3L(Al, Bl, Xl);
  Ah = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add3H(ll, Ah, Bh, Xh);
  Al = ll | 0; // v[d] = rotr(v[d] ^ v[a], 16)

  ({
    Dh,
    Dl
  } = {
    Dh: Dh ^ Ah,
    Dl: Dl ^ Al
  });
  ({
    Dh,
    Dl
  } = {
    Dh: _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrSH(Dh, Dl, 16),
    Dl: _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrSL(Dh, Dl, 16)
  }); // v[c] = (v[c] + v[d]) | 0;

  ({
    h: Ch,
    l: Cl
  } = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add(Ch, Cl, Dh, Dl)); // v[b] = rotr(v[b] ^ v[c], 63)

  ({
    Bh,
    Bl
  } = {
    Bh: Bh ^ Ch,
    Bl: Bl ^ Cl
  });
  ({
    Bh,
    Bl
  } = {
    Bh: _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrBH(Bh, Bl, 63),
    Bl: _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrBL(Bh, Bl, 63)
  });
  BUF[2 * a] = Al, BUF[2 * a + 1] = Ah;
  BUF[2 * b] = Bl, BUF[2 * b + 1] = Bh;
  BUF[2 * c] = Cl, BUF[2 * c + 1] = Ch;
  BUF[2 * d] = Dl, BUF[2 * d + 1] = Dh;
}

class BLAKE2b extends _blake2_js__WEBPACK_IMPORTED_MODULE_1__.BLAKE2 {
  // Same as SHA-512, but LE
  constructor(opts = {}) {
    super(128, opts.dkLen === undefined ? 64 : opts.dkLen, opts, 64, 16, 16);
    this.v0l = IV[0] | 0;
    this.v0h = IV[1] | 0;
    this.v1l = IV[2] | 0;
    this.v1h = IV[3] | 0;
    this.v2l = IV[4] | 0;
    this.v2h = IV[5] | 0;
    this.v3l = IV[6] | 0;
    this.v3h = IV[7] | 0;
    this.v4l = IV[8] | 0;
    this.v4h = IV[9] | 0;
    this.v5l = IV[10] | 0;
    this.v5h = IV[11] | 0;
    this.v6l = IV[12] | 0;
    this.v6h = IV[13] | 0;
    this.v7l = IV[14] | 0;
    this.v7h = IV[15] | 0;
    const keyLength = opts.key ? opts.key.length : 0;
    this.v0l ^= this.outputLen | keyLength << 8 | 0x01 << 16 | 0x01 << 24;

    if (opts.salt) {
      const salt = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.u32)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.toBytes)(opts.salt));
      this.v4l ^= salt[0];
      this.v4h ^= salt[1];
      this.v5l ^= salt[2];
      this.v5h ^= salt[3];
    }

    if (opts.personalization) {
      const pers = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.u32)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.toBytes)(opts.personalization));
      this.v6l ^= pers[0];
      this.v6h ^= pers[1];
      this.v7l ^= pers[2];
      this.v7h ^= pers[3];
    }

    if (opts.key) {
      // Pad to blockLen and update
      const tmp = new Uint8Array(this.blockLen);
      tmp.set((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.toBytes)(opts.key));
      this.update(tmp);
    }
  } // prettier-ignore


  get() {
    let {
      v0l,
      v0h,
      v1l,
      v1h,
      v2l,
      v2h,
      v3l,
      v3h,
      v4l,
      v4h,
      v5l,
      v5h,
      v6l,
      v6h,
      v7l,
      v7h
    } = this;
    return [v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h];
  } // prettier-ignore


  set(v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h) {
    this.v0l = v0l | 0;
    this.v0h = v0h | 0;
    this.v1l = v1l | 0;
    this.v1h = v1h | 0;
    this.v2l = v2l | 0;
    this.v2h = v2h | 0;
    this.v3l = v3l | 0;
    this.v3h = v3h | 0;
    this.v4l = v4l | 0;
    this.v4h = v4h | 0;
    this.v5l = v5l | 0;
    this.v5h = v5h | 0;
    this.v6l = v6l | 0;
    this.v6h = v6h | 0;
    this.v7l = v7l | 0;
    this.v7h = v7h | 0;
  }

  compress(msg, offset, isLast) {
    this.get().forEach((v, i) => BUF[i] = v); // First half from state.

    BUF.set(IV, 16); // Second half from IV.

    let {
      h,
      l
    } = _u64_js__WEBPACK_IMPORTED_MODULE_0__.fromBig(BigInt(this.length));
    BUF[24] = IV[8] ^ l; // Low word of the offset.

    BUF[25] = IV[9] ^ h; // High word.
    // Invert all bits for last block

    if (isLast) {
      BUF[28] = ~BUF[28];
      BUF[29] = ~BUF[29];
    }

    let j = 0;
    const s = _blake2_js__WEBPACK_IMPORTED_MODULE_1__.SIGMA;

    for (let i = 0; i < 12; i++) {
      G1(0, 4, 8, 12, msg, offset + 2 * s[j++]);
      G2(0, 4, 8, 12, msg, offset + 2 * s[j++]);
      G1(1, 5, 9, 13, msg, offset + 2 * s[j++]);
      G2(1, 5, 9, 13, msg, offset + 2 * s[j++]);
      G1(2, 6, 10, 14, msg, offset + 2 * s[j++]);
      G2(2, 6, 10, 14, msg, offset + 2 * s[j++]);
      G1(3, 7, 11, 15, msg, offset + 2 * s[j++]);
      G2(3, 7, 11, 15, msg, offset + 2 * s[j++]);
      G1(0, 5, 10, 15, msg, offset + 2 * s[j++]);
      G2(0, 5, 10, 15, msg, offset + 2 * s[j++]);
      G1(1, 6, 11, 12, msg, offset + 2 * s[j++]);
      G2(1, 6, 11, 12, msg, offset + 2 * s[j++]);
      G1(2, 7, 8, 13, msg, offset + 2 * s[j++]);
      G2(2, 7, 8, 13, msg, offset + 2 * s[j++]);
      G1(3, 4, 9, 14, msg, offset + 2 * s[j++]);
      G2(3, 4, 9, 14, msg, offset + 2 * s[j++]);
    }

    this.v0l ^= BUF[0] ^ BUF[16];
    this.v0h ^= BUF[1] ^ BUF[17];
    this.v1l ^= BUF[2] ^ BUF[18];
    this.v1h ^= BUF[3] ^ BUF[19];
    this.v2l ^= BUF[4] ^ BUF[20];
    this.v2h ^= BUF[5] ^ BUF[21];
    this.v3l ^= BUF[6] ^ BUF[22];
    this.v3h ^= BUF[7] ^ BUF[23];
    this.v4l ^= BUF[8] ^ BUF[24];
    this.v4h ^= BUF[9] ^ BUF[25];
    this.v5l ^= BUF[10] ^ BUF[26];
    this.v5h ^= BUF[11] ^ BUF[27];
    this.v6l ^= BUF[12] ^ BUF[28];
    this.v6h ^= BUF[13] ^ BUF[29];
    this.v7l ^= BUF[14] ^ BUF[30];
    this.v7h ^= BUF[15] ^ BUF[31];
    BUF.fill(0);
  }

  destroy() {
    this.destroyed = true;
    this.buffer32.fill(0);
    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  }

}

const blake2b = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapConstructorWithOpts)(opts => new BLAKE2b(opts));

/***/ }),
/* 710 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fromBig": () => (/* binding */ fromBig),
/* harmony export */   "split": () => (/* binding */ split),
/* harmony export */   "toBig": () => (/* binding */ toBig),
/* harmony export */   "shrSH": () => (/* binding */ shrSH),
/* harmony export */   "shrSL": () => (/* binding */ shrSL),
/* harmony export */   "rotrSH": () => (/* binding */ rotrSH),
/* harmony export */   "rotrSL": () => (/* binding */ rotrSL),
/* harmony export */   "rotrBH": () => (/* binding */ rotrBH),
/* harmony export */   "rotrBL": () => (/* binding */ rotrBL),
/* harmony export */   "rotr32H": () => (/* binding */ rotr32H),
/* harmony export */   "rotr32L": () => (/* binding */ rotr32L),
/* harmony export */   "rotlSH": () => (/* binding */ rotlSH),
/* harmony export */   "rotlSL": () => (/* binding */ rotlSL),
/* harmony export */   "rotlBH": () => (/* binding */ rotlBH),
/* harmony export */   "rotlBL": () => (/* binding */ rotlBL),
/* harmony export */   "add": () => (/* binding */ add),
/* harmony export */   "add3L": () => (/* binding */ add3L),
/* harmony export */   "add3H": () => (/* binding */ add3H),
/* harmony export */   "add4L": () => (/* binding */ add4L),
/* harmony export */   "add4H": () => (/* binding */ add4H),
/* harmony export */   "add5L": () => (/* binding */ add5L),
/* harmony export */   "add5H": () => (/* binding */ add5H)
/* harmony export */ });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(711);
/*! noble-hashes - MIT License (c) 2021 Paul Miller (paulmillr.com) */
// https://github.com/paulmillr/noble-hashes/pull/13


const U32_MASK64 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__._n)(2 ** 32 - 1);

const _32n = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__._n)(32);

function fromBig(n, le = false) {
  if (le) return {
    h: Number(n & U32_MASK64),
    l: Number(n >> _32n & U32_MASK64)
  };
  return {
    h: Number(n >> _32n & U32_MASK64) | 0,
    l: Number(n & U32_MASK64) | 0
  };
}
function split(lst, le = false) {
  let [Ah, Al] = [new Uint32Array(lst.length), new Uint32Array(lst.length)];

  for (let i = 0; i < lst.length; i++) {
    const {
      h,
      l
    } = fromBig(lst[i], le);
    [Ah[i], Al[i]] = [h, l];
  }

  return [Ah, Al];
}
const toBig = (h, l) => BigInt(h >>> 0) << _32n | BigInt(l >>> 0); // for Shift in [0, 32)

const shrSH = (h, l, s) => h >>> s;
const shrSL = (h, l, s) => h << 32 - s | l >>> s; // Right rotate for Shift in [1, 32)

const rotrSH = (h, l, s) => h >>> s | l << 32 - s;
const rotrSL = (h, l, s) => h << 32 - s | l >>> s; // Right rotate for Shift in (32, 64), NOTE: 32 is special case.

const rotrBH = (h, l, s) => h << 64 - s | l >>> s - 32;
const rotrBL = (h, l, s) => h >>> s - 32 | l << 64 - s; // Right rotate for shift===32 (just swaps l&h)

const rotr32H = (h, l) => l;
const rotr32L = (h, l) => h; // Left rotate for Shift in [1, 32)

const rotlSH = (h, l, s) => h << s | l >>> 32 - s;
const rotlSL = (h, l, s) => l << s | h >>> 32 - s; // Left rotate for Shift in (32, 64), NOTE: 32 is special case.

const rotlBH = (h, l, s) => l << s - 32 | h >>> 64 - s;
const rotlBL = (h, l, s) => h << s - 32 | l >>> 64 - s; // JS uses 32-bit signed integers for bitwise operations which means we cannot
// simple take carry out of low bit sum by shift, we need to use division.

function add(Ah, Al, Bh, Bl) {
  const l = (Al >>> 0) + (Bl >>> 0);
  return {
    h: Ah + Bh + (l / 2 ** 32 | 0) | 0,
    l: l | 0
  };
} // Addition with more than 2 elements

const add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);
const add3H = (low, Ah, Bh, Ch) => Ah + Bh + Ch + (low / 2 ** 32 | 0) | 0;
const add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);
const add4H = (low, Ah, Bh, Ch, Dh) => Ah + Bh + Ch + Dh + (low / 2 ** 32 | 0) | 0;
const add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);
const add5H = (low, Ah, Bh, Ch, Dh, Eh) => Ah + Bh + Ch + Dh + Eh + (low / 2 ** 32 | 0) | 0;

/***/ }),
/* 711 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "_n": () => (/* binding */ _n),
/* harmony export */   "u8": () => (/* binding */ u8),
/* harmony export */   "u32": () => (/* binding */ u32),
/* harmony export */   "createView": () => (/* binding */ createView),
/* harmony export */   "rotr": () => (/* binding */ rotr),
/* harmony export */   "isLE": () => (/* binding */ isLE),
/* harmony export */   "bytesToHex": () => (/* binding */ bytesToHex),
/* harmony export */   "nextTick": () => (/* binding */ nextTick),
/* harmony export */   "asyncLoop": () => (/* binding */ asyncLoop),
/* harmony export */   "toBytes": () => (/* binding */ toBytes),
/* harmony export */   "assertNumber": () => (/* binding */ assertNumber),
/* harmony export */   "assertBool": () => (/* binding */ assertBool),
/* harmony export */   "assertHash": () => (/* binding */ assertHash),
/* harmony export */   "Hash": () => (/* binding */ Hash),
/* harmony export */   "checkOpts": () => (/* binding */ checkOpts),
/* harmony export */   "wrapConstructor": () => (/* binding */ wrapConstructor),
/* harmony export */   "wrapConstructorWithOpts": () => (/* binding */ wrapConstructorWithOpts),
/* harmony export */   "crypto": () => (/* binding */ crypto),
/* harmony export */   "randomBytes": () => (/* binding */ randomBytes)
/* harmony export */ });
/*! noble-hashes - MIT License (c) 2021 Paul Miller (paulmillr.com) */
// https://github.com/paulmillr/noble-hashes/pull/13
// prettier-ignore
// helper to protect against older bundlers
const _n = typeof BigInt !== 'undefined' ? BigInt : () => Number.NaN; // Cast array to different type

const u8 = arr => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);
const u32 = arr => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4)); // Cast array to view

const createView = arr => new DataView(arr.buffer, arr.byteOffset, arr.byteLength); // The rotate right (circular right shift) operation for uint32

const rotr = (word, shift) => word << 32 - shift | word >>> shift;
const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44; // There is almost no big endian hardware, but js typed arrays uses platform specific endianess.
// So, just to be sure not to corrupt anything.

if (!isLE) throw new Error('Non little-endian hardware is not supported');
const hexes = Array.from({
  length: 256
}, (v, i) => i.toString(16).padStart(2, '0'));
function bytesToHex(uint8a) {
  // pre-caching chars could speed this up 6x.
  let hex = '';

  for (let i = 0; i < uint8a.length; i++) {
    hex += hexes[uint8a[i]];
  }

  return hex;
} // Currently avoid insertion of polyfills with packers (browserify/webpack/etc)
// But setTimeout is pretty slow, maybe worth to investigate howto do minimal polyfill here

const nextTick = (() => {
  const nodeRequire = typeof module !== 'undefined' && typeof module.require === 'function' && module.require.bind(module);

  try {
    if (nodeRequire) {
      const {
        setImmediate
      } = nodeRequire('timers');
      return () => new Promise(resolve => setImmediate(resolve));
    }
  } catch (e) {}

  return () => new Promise(resolve => setTimeout(resolve, 0));
})(); // Returns control to thread each 'tick' ms to avoid blocking

async function asyncLoop(iters, tick, cb) {
  let ts = Date.now();

  for (let i = 0; i < iters; i++) {
    cb(i); // Date.now() is not monotonic, so in case if clock goes backwards we return return control too

    const diff = Date.now() - ts;
    if (diff >= 0 && diff < tick) continue;
    await nextTick();
    ts += diff;
  }
}
function toBytes(data) {
  if (typeof data === 'string') data = new TextEncoder().encode(data);
  if (!(data instanceof Uint8Array)) throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);
  return data;
}
function assertNumber(n) {
  if (!Number.isSafeInteger(n)) throw new Error(`Wrong integer: ${n}`);
}
function assertBool(b) {
  if (typeof b !== 'boolean') {
    throw new Error(`Expected boolean, not ${b}`);
  }
}
function assertHash(hash) {
  if (typeof hash !== 'function' || typeof hash.init !== 'function') throw new Error('Hash should be wrapped by utils.wrapConstructor');
  assertNumber(hash.outputLen);
  assertNumber(hash.blockLen);
} // For runtime check if class implements interface

class Hash {
  constructor() {
    this.blockLen = void 0;
    this.outputLen = void 0;
  }

  // Safe version that clones internal state
  clone() {
    return this._cloneInto();
  }

}

// Check if object doens't have custom constructor (like Uint8Array/Array)
const isPlainObject = obj => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;

function checkOpts(def, _opts) {
  if (_opts !== undefined && (typeof _opts !== 'object' || !isPlainObject(_opts))) throw new TypeError('Options should be object or undefined');
  const opts = Object.assign(def, _opts);
  return opts;
}
function wrapConstructor(hashConstructor) {
  const hashC = message => hashConstructor().update(toBytes(message)).digest();

  const tmp = hashConstructor();
  hashC.outputLen = tmp.outputLen;
  hashC.blockLen = tmp.blockLen;

  hashC.create = () => hashConstructor();

  hashC.init = hashC.create;
  return hashC;
}
function wrapConstructorWithOpts(hashCons) {
  const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();

  const tmp = hashCons({});
  hashC.outputLen = tmp.outputLen;
  hashC.blockLen = tmp.blockLen;

  hashC.create = opts => hashCons(opts);

  hashC.init = hashC.create;
  return hashC;
}
const crypto = (() => {
  const webCrypto = typeof self === 'object' && 'crypto' in self ? self.crypto : undefined;
  const nodeRequire = typeof module !== 'undefined' && typeof require === 'function';
  return {
    node: nodeRequire && !webCrypto ? require('crypto') : undefined,
    web: webCrypto
  };
})();
function randomBytes(bytesLength = 32) {
  if (crypto.web) {
    return crypto.web.getRandomValues(new Uint8Array(bytesLength));
  } else if (crypto.node) {
    return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);
  } else {
    throw new Error("The environment doesn't have randomBytes function");
  }
}

/***/ }),
/* 712 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SIGMA": () => (/* binding */ SIGMA),
/* harmony export */   "BLAKE2": () => (/* binding */ BLAKE2)
/* harmony export */ });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(711);
/*! noble-hashes - MIT License (c) 2021 Paul Miller (paulmillr.com) */
// https://github.com/paulmillr/noble-hashes/pull/13
 // prettier-ignore

const SIGMA = new Uint8Array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, // For BLAKE2b, the two extra permutations for rounds 10 and 11 are SIGMA[10..11] = SIGMA[0..1].
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3]);
class BLAKE2 extends _utils_js__WEBPACK_IMPORTED_MODULE_0__.Hash {
  constructor(blockLen, outputLen, opts = {}, keyLen, saltLen, persLen) {
    super();
    this.blockLen = blockLen;
    this.outputLen = outputLen;
    this.buffer = void 0;
    this.buffer32 = void 0;
    this.length = 0;
    this.pos = 0;
    this.finished = false;
    this.destroyed = false;
    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertNumber)(blockLen);
    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertNumber)(outputLen);
    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertNumber)(keyLen);
    if (outputLen < 0 || outputLen > keyLen) throw new Error('Blake2: outputLen bigger than keyLen');
    if (opts.key !== undefined && (opts.key.length < 1 || opts.key.length > keyLen)) throw new Error(`Key should be up 1..${keyLen} byte long or undefined`);
    if (opts.salt !== undefined && opts.salt.length !== saltLen) throw new Error(`Salt should be ${saltLen} byte long or undefined`);
    if (opts.personalization !== undefined && opts.personalization.length !== persLen) throw new Error(`Personalization should be ${persLen} byte long or undefined`);
    this.buffer32 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.u32)(this.buffer = new Uint8Array(blockLen));
  }

  update(data) {
    if (this.destroyed) throw new Error('instance is destroyed'); // Main difference with other hashes: there is flag for last block,
    // so we cannot process current block before we know that there
    // is the next one. This significantly complicates logic and reduces ability
    // to do zero-copy processing

    const {
      finished,
      blockLen,
      buffer,
      buffer32
    } = this;
    if (finished) throw new Error('digest() was already called');
    data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.toBytes)(data);
    const len = data.length;

    for (let pos = 0; pos < len;) {
      // If buffer is full and we still have input (don't process last block, same as blake2s)
      if (this.pos === blockLen) {
        this.compress(buffer32, 0, false);
        this.pos = 0;
      }

      const take = Math.min(blockLen - this.pos, len - pos);
      const dataOffset = data.byteOffset + pos; // full block && aligned to 4 bytes && not last in input

      if (take === blockLen && !(dataOffset % 4) && pos + take < len) {
        const data32 = new Uint32Array(data.buffer, dataOffset, Math.floor((len - pos) / 4));

        for (let pos32 = 0; pos + blockLen < len; pos32 += buffer32.length, pos += blockLen) {
          this.length += blockLen;
          this.compress(data32, pos32, false);
        }

        continue;
      }

      buffer.set(data.subarray(pos, pos + take), this.pos);
      this.pos += take;
      this.length += take;
      pos += take;
    }

    return this;
  }

  digestInto(out) {
    if (this.destroyed) throw new Error('instance is destroyed');
    if (!(out instanceof Uint8Array) || out.length < this.outputLen) throw new Error('_Blake2: Invalid output buffer');
    const {
      finished,
      pos,
      buffer32
    } = this;
    if (finished) throw new Error('digest() was already called');
    this.finished = true; // Padding

    this.buffer.subarray(pos).fill(0);
    this.compress(buffer32, 0, true);
    const out32 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.u32)(out);
    this.get().forEach((v, i) => out32[i] = v);
  }

  digest() {
    const {
      buffer,
      outputLen
    } = this;
    this.digestInto(buffer);
    const res = buffer.slice(0, outputLen);
    this.destroy();
    return res;
  }

  _cloneInto(to) {
    const {
      buffer,
      length,
      finished,
      destroyed,
      outputLen,
      pos
    } = this;
    to || (to = new this.constructor({
      dkLen: outputLen
    }));
    to.set(...this.get());
    to.length = length;
    to.finished = finished;
    to.destroyed = destroyed;
    to.outputLen = outputLen;
    to.buffer.set(buffer);
    to.pos = pos;
    return to;
  }

}

/***/ }),
/* 713 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAsHex": () => (/* binding */ createAsHex),
/* harmony export */   "createBitHasher": () => (/* binding */ createBitHasher)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(196);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
 // eslint-disable-next-line @typescript-eslint/no-explicit-any

function createAsHex(fn) {
  return (...args) => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToHex)(fn(...args));
}
function createBitHasher(bitLength, fn) {
  return (data, onlyJs) => fn(data, bitLength, onlyJs);
}

/***/ }),
/* 714 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "flags": () => (/* binding */ flags)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(662);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(599);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0



function parseFlags(address, [electionsMembers, councilMembers, technicalCommitteeMembers, societyMembers, sudoKey]) {
  const isIncluded = id => address ? id.toString() === address.toString() : false;

  return {
    isCouncil: ((electionsMembers === null || electionsMembers === void 0 ? void 0 : electionsMembers.map(([id]) => id)) || councilMembers || []).some(isIncluded),
    isSociety: (societyMembers || []).some(isIncluded),
    isSudo: (sudoKey === null || sudoKey === void 0 ? void 0 : sudoKey.toString()) === (address === null || address === void 0 ? void 0 : address.toString()),
    isTechCommittee: (technicalCommitteeMembers || []).some(isIncluded)
  };
}
/**
 * @name info
 * @description Returns account membership flags
 */


function flags(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, address => {
    var _api$query$councilSec, _api$query$council, _api$query$technicalC, _api$query$society, _api$query$sudo;

    const councilSection = api.query.phragmenElection ? 'phragmenElection' : api.query.electionsPhragmen ? 'electionsPhragmen' : 'elections';
    return (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.combineLatest)([address && (_api$query$councilSec = api.query[councilSection]) !== null && _api$query$councilSec !== void 0 && _api$query$councilSec.members ? api.query[councilSection].members() : (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)(undefined), address && (_api$query$council = api.query.council) !== null && _api$query$council !== void 0 && _api$query$council.members ? api.query.council.members() : (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)([]), address && (_api$query$technicalC = api.query.technicalCommittee) !== null && _api$query$technicalC !== void 0 && _api$query$technicalC.members ? api.query.technicalCommittee.members() : (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)([]), address && (_api$query$society = api.query.society) !== null && _api$query$society !== void 0 && _api$query$society.members ? api.query.society.members() : (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)([]), address && (_api$query$sudo = api.query.sudo) !== null && _api$query$sudo !== void 0 && _api$query$sudo.key ? api.query.sudo.key() : (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)(undefined)]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_3__.map)(result => parseFlags(address, result)));
  });
}

/***/ }),
/* 715 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "idAndIndex": () => (/* binding */ idAndIndex)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(654);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(178);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(680);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0





function retrieve(api, address) {
  try {
    // yes, this can fail, don't care too much, catch will catch it
    const decoded = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.isU8a)(address) ? address : (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_1__.decodeAddress)((address || '').toString());

    if (decoded.length > 8) {
      const accountId = api.registry.createType('AccountId', decoded);
      return api.derive.accounts.idToIndex(accountId).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_2__.map)(accountIndex => [accountId, accountIndex]));
    }

    const accountIndex = api.registry.createType('AccountIndex', decoded);
    return api.derive.accounts.indexToId(accountIndex.toString()).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_2__.map)(accountId => [accountId, accountIndex]));
  } catch (error) {
    return (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)([undefined, undefined]);
  }
}
/**
 * @name idAndIndex
 * @param {(Address | AccountId | AccountIndex | Uint8Array | string | null)} address - An accounts address in various formats.
 * @description  An array containing the [[AccountId]] and [[AccountIndex]] as optional values.
 * @example
 * <BR>
 *
 * ```javascript
 * api.derive.accounts.idAndIndex('F7Hs', ([id, ix]) => {
 *   console.log(`AccountId #${id} with corresponding AccountIndex ${ix}`);
 * });
 * ```
 */


function idAndIndex(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_4__.memo)(instanceId, address => retrieve(api, address));
}

/***/ }),
/* 716 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "idToIndex": () => (/* binding */ idToIndex)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(599);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


/**
 * @name idToIndex
 * @param {( AccountId | string )} accountId - An accounts Id in different formats.
 * @returns Returns the corresponding AccountIndex.
 * @example
 * <BR>
 *
 * ```javascript
 * const ALICE = '5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY';
 * api.derive.accounts.idToIndex(ALICE, (accountIndex) => {
 *   console.log(`The AccountIndex of ${ALICE} is ${accountIndex}`);
 * });
 * ```
 */

function idToIndex(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, accountId => api.derive.accounts.indexes().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(indexes => (indexes || {})[accountId.toString()])));
}

/***/ }),
/* 717 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "identity": () => (/* binding */ identity),
/* harmony export */   "hasIdentity": () => (/* binding */ hasIdentity),
/* harmony export */   "hasIdentityMulti": () => (/* binding */ hasIdentityMulti)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(662);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(660);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(599);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(413);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(126);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0



const UNDEF_HEX = {
  toHex: () => undefined
};

function dataAsString(data) {
  return data.isRaw ? (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToString)(data.asRaw.toU8a(true)) : data.isNone ? undefined : data.toHex();
}

function extractOther(additional) {
  return additional.reduce((other, [_key, _value]) => {
    const key = dataAsString(_key);
    const value = dataAsString(_value);

    if (key && value) {
      other[key] = value;
    }

    return other;
  }, {});
}

function extractIdentity(identityOfOpt, superOf) {
  if (!(identityOfOpt !== null && identityOfOpt !== void 0 && identityOfOpt.isSome)) {
    return {
      judgements: []
    };
  }

  const {
    info,
    judgements
  } = identityOfOpt.unwrap();
  const topDisplay = dataAsString(info.display);
  return {
    display: superOf && dataAsString(superOf[1]) || topDisplay,
    displayParent: superOf && topDisplay,
    email: dataAsString(info.email),
    image: dataAsString(info.image),
    judgements,
    legal: dataAsString(info.legal),
    other: extractOther(info.additional),
    parent: superOf && superOf[0],
    pgp: info.pgpFingerprint.unwrapOr(UNDEF_HEX).toHex(),
    riot: dataAsString(info.riot),
    twitter: dataAsString(info.twitter),
    web: dataAsString(info.web)
  };
}

function getParent(api, identityOfOpt, superOfOpt) {
  if (identityOfOpt !== null && identityOfOpt !== void 0 && identityOfOpt.isSome) {
    // this identity has something set
    return (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.of)([identityOfOpt, undefined]);
  } else if (superOfOpt !== null && superOfOpt !== void 0 && superOfOpt.isSome) {
    const superOf = superOfOpt.unwrap(); // we have a super

    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.combineLatest)([api.query.identity.identityOf(superOf[0]), (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.of)(superOf)]);
  } // nothing of value returned


  return (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.of)([undefined, undefined]);
}

function getBase(api, accountId) {
  var _api$query$identity;

  return accountId && (_api$query$identity = api.query.identity) !== null && _api$query$identity !== void 0 && _api$query$identity.identityOf ? api.queryMulti([[api.query.identity.identityOf, accountId], [api.query.identity.superOf, accountId]]) : (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.of)([undefined, undefined]);
}
/**
 * @name identity
 * @description Returns identity info for an account
 */


function identity(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.memo)(instanceId, accountId => getBase(api, accountId).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_4__.switchMap)(([identityOfOpt, superOfOpt]) => getParent(api, identityOfOpt, superOfOpt)), (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.map)(([identityOfOpt, superOf]) => extractIdentity(identityOfOpt, superOf))));
}
function hasIdentity(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.memo)(instanceId, accountId => api.derive.accounts.hasIdentityMulti([accountId]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_5__.map)(([first]) => first)));
}
function hasIdentityMulti(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.memo)(instanceId, accountIds => {
    var _api$query$identity2;

    return (_api$query$identity2 = api.query.identity) !== null && _api$query$identity2 !== void 0 && _api$query$identity2.identityOf ? (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.combineLatest)([api.query.identity.identityOf.multi(accountIds), api.query.identity.superOf.multi(accountIds)]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_5__.map)(([identities, supers]) => identities.map((identityOfOpt, index) => {
      const superOfOpt = supers[index];
      const parentId = superOfOpt && superOfOpt.isSome ? superOfOpt.unwrap()[0].toString() : undefined;
      let display;

      if (identityOfOpt && identityOfOpt.isSome) {
        const value = dataAsString(identityOfOpt.unwrap().info.display);

        if (value && !(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.isHex)(value)) {
          display = value;
        }
      }

      return {
        display,
        hasIdentity: !!(display || parentId),
        parentId
      };
    }))) : (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.of)(accountIds.map(() => ({
      hasIdentity: false
    })));
  });
}

/***/ }),
/* 718 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "indexToId": () => (/* binding */ indexToId)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(654);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


/**
 * @name indexToId
 * @param {( AccountIndex | string )} accountIndex - An accounts index in different formats.
 * @returns Returns the corresponding AccountId.
 * @example
 * <BR>
 *
 * ```javascript
 * api.derive.accounts.indexToId('F7Hs', (accountId) => {
 *   console.log(`The AccountId of F7Hs is ${accountId}`);
 * });
 * ```
 */

function indexToId(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, accountIndex => api.query.indices ? api.query.indices.accounts(accountIndex).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(optResult => optResult.unwrapOr([])[0])) : (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)(undefined));
}

/***/ }),
/* 719 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "indexes": () => (/* binding */ indexes)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(720);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


let indicesCache = null;

function queryAccounts(api) {
  return api.query.indices.accounts.entries().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_0__.map)(entries => entries.reduce((indexes, [key, idOpt]) => {
    if (idOpt.isSome) {
      indexes[idOpt.unwrap()[0].toString()] = api.registry.createType('AccountIndex', key.args[0]);
    }

    return indexes;
  }, {})));
}
/**
 * @name indexes
 * @returns Returns all the indexes on the system.
 * @description This is an unwieldly query since it loops through
 * all of the enumsets and returns all of the values found. This could be up to 32k depending
 * on the number of active accounts in the system
 * @example
 * <BR>
 *
 * ```javascript
 * api.derive.accounts.indexes((indexes) => {
 *   console.log('All existing AccountIndexes', indexes);
 * });
 * ```
 */


function indexes(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.memo)(instanceId, () => indicesCache ? (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)(indicesCache) : (api.query.indices ? queryAccounts(api).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_3__.startWith)({})) : (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)({})).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_0__.map)(indices => {
    indicesCache = indices;
    return indices;
  })));
}

/***/ }),
/* 720 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "startWith": () => (/* binding */ startWith)
/* harmony export */ });
/* harmony import */ var _observable_concat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(721);
/* harmony import */ var _util_args__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(655);
/* harmony import */ var _util_lift__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(590);



function startWith() {
    var values = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        values[_i] = arguments[_i];
    }
    var scheduler = (0,_util_args__WEBPACK_IMPORTED_MODULE_0__.popScheduler)(values);
    return (0,_util_lift__WEBPACK_IMPORTED_MODULE_1__.operate)(function (source, subscriber) {
        (scheduler ? (0,_observable_concat__WEBPACK_IMPORTED_MODULE_2__.concat)(values, source, scheduler) : (0,_observable_concat__WEBPACK_IMPORTED_MODULE_2__.concat)(values, source)).subscribe(subscriber);
    });
}
//# sourceMappingURL=startWith.js.map

/***/ }),
/* 721 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "concat": () => (/* binding */ concat)
/* harmony export */ });
/* harmony import */ var _operators_concatAll__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(722);
/* harmony import */ var _util_args__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(655);
/* harmony import */ var _from__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(577);



function concat() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    return (0,_operators_concatAll__WEBPACK_IMPORTED_MODULE_0__.concatAll)()((0,_from__WEBPACK_IMPORTED_MODULE_1__.from)(args, (0,_util_args__WEBPACK_IMPORTED_MODULE_2__.popScheduler)(args)));
}
//# sourceMappingURL=concat.js.map

/***/ }),
/* 722 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "concatAll": () => (/* binding */ concatAll)
/* harmony export */ });
/* harmony import */ var _mergeAll__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(723);

function concatAll() {
    return (0,_mergeAll__WEBPACK_IMPORTED_MODULE_0__.mergeAll)(1);
}
//# sourceMappingURL=concatAll.js.map

/***/ }),
/* 723 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "mergeAll": () => (/* binding */ mergeAll)
/* harmony export */ });
/* harmony import */ var _mergeMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(651);
/* harmony import */ var _util_identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(71);


function mergeAll(concurrent) {
    if (concurrent === void 0) { concurrent = Infinity; }
    return (0,_mergeMap__WEBPACK_IMPORTED_MODULE_0__.mergeMap)(_util_identity__WEBPACK_IMPORTED_MODULE_1__.identity, concurrent);
}
//# sourceMappingURL=mergeAll.js.map

/***/ }),
/* 724 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "info": () => (/* binding */ info)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(660);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(662);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(413);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0




function retrieveNick(api, accountId) {
  var _api$query$nicks;

  return (accountId && (_api$query$nicks = api.query.nicks) !== null && _api$query$nicks !== void 0 && _api$query$nicks.nameOf ? api.query.nicks.nameOf(accountId) : (0,rxjs__WEBPACK_IMPORTED_MODULE_0__.of)(undefined)).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(nameOf => nameOf !== null && nameOf !== void 0 && nameOf.isSome ? (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.u8aToString)(nameOf.unwrap()[0]).substr(0, api.consts.nicks.maxLength.toNumber()) : undefined));
}
/**
 * @name info
 * @description Returns aux. info with regards to an account, current that includes the accountId, accountIndex and nickname
 */


function info(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.memo)(instanceId, address => api.derive.accounts.idAndIndex(address).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_4__.switchMap)(([accountId, accountIndex]) => (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.combineLatest)([(0,rxjs__WEBPACK_IMPORTED_MODULE_0__.of)({
    accountId,
    accountIndex
  }), api.derive.accounts.identity(accountId), retrieveNick(api, accountId)])), (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(([{
    accountId,
    accountIndex
  }, identity, nickname]) => ({
    accountId,
    accountIndex,
    identity,
    nickname
  }))));
}

/***/ }),
/* 725 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "account": () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_0__.account),
/* harmony export */   "fees": () => (/* reexport safe */ _fees_js__WEBPACK_IMPORTED_MODULE_1__.fees),
/* harmony export */   "votingBalances": () => (/* reexport safe */ _votingBalances_js__WEBPACK_IMPORTED_MODULE_2__.votingBalances),
/* harmony export */   "all": () => (/* reexport safe */ _all_js__WEBPACK_IMPORTED_MODULE_3__.all),
/* harmony export */   "votingBalance": () => (/* binding */ votingBalance)
/* harmony export */ });
/* harmony import */ var _all_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(729);
/* harmony import */ var _account_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(726);
/* harmony import */ var _fees_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(727);
/* harmony import */ var _votingBalances_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(728);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0




const votingBalance = _all_js__WEBPACK_IMPORTED_MODULE_3__.all;


/***/ }),
/* 726 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "account": () => (/* binding */ account)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(660);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(662);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(81);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0




function zeroBalance(api) {
  return api.registry.createType('Balance');
}

function getBalance(api, [freeBalance, reservedBalance, frozenFee, frozenMisc]) {
  const votingBalance = api.registry.createType('Balance', freeBalance.toBn());
  return {
    freeBalance,
    frozenFee,
    frozenMisc,
    reservedBalance,
    votingBalance
  };
}

function calcBalances(api, [accountId, [accountNonce, [primary, ...additional]]]) {
  return {
    accountId,
    accountNonce,
    additional: additional.map(b => getBalance(api, b)),
    ...getBalance(api, primary)
  };
} // old


function queryBalancesFree(api, accountId) {
  return api.queryMulti([[api.query.balances.freeBalance, accountId], [api.query.balances.reservedBalance, accountId], [api.query.system.accountNonce, accountId]]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_0__.map)(([freeBalance, reservedBalance, accountNonce]) => [accountNonce, [[freeBalance, reservedBalance, zeroBalance(api), zeroBalance(api)]]]));
}

function queryNonceOnly(api, accountId) {
  const fill = nonce => [nonce, [[zeroBalance(api), zeroBalance(api), zeroBalance(api), zeroBalance(api)]]];

  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isFunction)(api.query.system.account) ? api.query.system.account(accountId).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_0__.map)(({
    nonce
  }) => fill(nonce))) : (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isFunction)(api.query.system.accountNonce) ? api.query.system.accountNonce(accountId).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_0__.map)(nonce => fill(nonce))) : (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)(fill(api.registry.createType('Index')));
}

function queryBalancesAccount(api, accountId, modules = ['balances']) {
  const balances = modules.map(m => {
    var _m, _api$query$m;

    return ((_m = api.derive[m]) === null || _m === void 0 ? void 0 : _m.customAccount) || ((_api$query$m = api.query[m]) === null || _api$query$m === void 0 ? void 0 : _api$query$m.account);
  }).filter(q => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isFunction)(q)).map(q => [q, accountId]);

  const extract = (nonce, data) => [nonce, data.map(({
    feeFrozen,
    free,
    miscFrozen,
    reserved
  }) => [free, reserved, feeFrozen, miscFrozen])]; // NOTE this is for the first case where we do have instances specified


  return balances.length ? (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isFunction)(api.query.system.account) ? api.queryMulti([[api.query.system.account, accountId], ...balances]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_0__.map)(([{
    nonce
  }, ...balances]) => extract(nonce, balances))) : api.queryMulti([[api.query.system.accountNonce, accountId], ...balances]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_0__.map)(([nonce, ...balances]) => extract(nonce, balances))) : queryNonceOnly(api, accountId);
}

function querySystemAccount(api, accountId) {
  // AccountInfo is current, support old, eg. Edgeware
  return api.query.system.account(accountId).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_0__.map)(infoOrTuple => {
    const data = infoOrTuple.nonce ? infoOrTuple.data : infoOrTuple[1];
    const nonce = infoOrTuple.nonce || infoOrTuple[0];

    if (!data || data.isEmpty) {
      return [nonce, [[zeroBalance(api), zeroBalance(api), zeroBalance(api), zeroBalance(api)]]];
    }

    const {
      feeFrozen,
      free,
      miscFrozen,
      reserved
    } = data;
    return [nonce, [[free, reserved, feeFrozen, miscFrozen]]];
  }));
}
/**
 * @name account
 * @param {( AccountIndex | AccountId | Address | string )} address - An accounts Id in different formats.
 * @returns An object containing the results of various balance queries
 * @example
 * <BR>
 *
 * ```javascript
 * const ALICE = 'F7Hs';
 *
 * api.derive.balances.all(ALICE, ({ accountId, lockedBalance }) => {
 *   console.log(`The account ${accountId} has a locked balance ${lockedBalance} units.`);
 * });
 * ```
 */


function account(instanceId, api) {
  const balanceInstances = api.registry.getModuleInstances(api.runtimeVersion.specName.toString(), 'balances');
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.memo)(instanceId, address => api.derive.accounts.accountId(address).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_4__.switchMap)(accountId => {
    var _api$query$system, _api$query$balances, _api$query$balances2;

    return accountId ? (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.combineLatest)([(0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)(accountId), balanceInstances ? queryBalancesAccount(api, accountId, balanceInstances) : (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isFunction)((_api$query$system = api.query.system) === null || _api$query$system === void 0 ? void 0 : _api$query$system.account) ? querySystemAccount(api, accountId) : (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isFunction)((_api$query$balances = api.query.balances) === null || _api$query$balances === void 0 ? void 0 : _api$query$balances.account) ? queryBalancesAccount(api, accountId) : (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isFunction)((_api$query$balances2 = api.query.balances) === null || _api$query$balances2 === void 0 ? void 0 : _api$query$balances2.freeBalance) ? queryBalancesFree(api, accountId) : queryNonceOnly(api, accountId)]) : (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)([api.registry.createType('AccountId'), [api.registry.createType('Index'), [[zeroBalance(api), zeroBalance(api), zeroBalance(api), zeroBalance(api)]]]]);
  }), (0,rxjs__WEBPACK_IMPORTED_MODULE_0__.map)(result => calcBalances(api, result))));
}

/***/ }),
/* 727 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fees": () => (/* binding */ fees)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(599);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


/**
 * @name fees
 * @returns An object containing the combined results of the storage queries for
 * all relevant fees as declared in the substrate chain spec.
 * @example
 * <BR>
 *
 * ```javascript
 * api.derive.balances.fees(({ creationFee, transferFee }) => {
 *   console.log(`The fee for creating a new account on this chain is ${creationFee} units. The fee required for making a transfer is ${transferFee} units.`);
 * });
 * ```
 */

function fees(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, () => {
    var _api$consts$balances, _api$consts$balances2, _api$consts$balances3, _api$consts$transacti, _api$consts$transacti2;

    return (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.of)([// deprecated - remove
    ((_api$consts$balances = api.consts.balances) === null || _api$consts$balances === void 0 ? void 0 : _api$consts$balances.creationFee) || api.registry.createType('Balance'), ((_api$consts$balances2 = api.consts.balances) === null || _api$consts$balances2 === void 0 ? void 0 : _api$consts$balances2.transferFee) || api.registry.createType('Balance'), // current
    ((_api$consts$balances3 = api.consts.balances) === null || _api$consts$balances3 === void 0 ? void 0 : _api$consts$balances3.existentialDeposit) || api.registry.createType('Balance'), ((_api$consts$transacti = api.consts.transactionPayment) === null || _api$consts$transacti === void 0 ? void 0 : _api$consts$transacti.transactionBaseFee) || api.registry.createType('Balance'), ((_api$consts$transacti2 = api.consts.transactionPayment) === null || _api$consts$transacti2 === void 0 ? void 0 : _api$consts$transacti2.transactionByteFee) || api.registry.createType('Balance')]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_2__.map)(([creationFee, transferFee, existentialDeposit, transactionBaseFee, transactionByteFee]) => ({
      creationFee,
      existentialDeposit,
      transactionBaseFee,
      transactionByteFee,
      transferFee
    })));
  });
}

/***/ }),
/* 728 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "votingBalances": () => (/* binding */ votingBalances)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(662);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


function votingBalances(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, addresses => !addresses || !addresses.length ? (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.of)([]) : (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.combineLatest)(addresses.map(accountId => api.derive.balances.account(accountId))));
}

/***/ }),
/* 729 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "all": () => (/* binding */ all)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(660);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(662);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(88);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(730);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(731);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(240);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(81);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0



const VESTING_ID = '0x76657374696e6720';

function calcLocked(api, bestNumber, locks) {
  let lockedBalance = api.registry.createType('Balance');
  let lockedBreakdown = [];
  let vestingLocked = api.registry.createType('Balance');
  let allLocked = false;

  if (Array.isArray(locks)) {
    // only get the locks that are valid until passed the current block
    lockedBreakdown = locks.filter(({
      until
    }) => !until || bestNumber && until.gt(bestNumber));
    allLocked = lockedBreakdown.some(({
      amount
    }) => amount && amount.isMax());
    vestingLocked = api.registry.createType('Balance', lockedBreakdown.filter(({
      id
    }) => id.eq(VESTING_ID)).reduce((result, {
      amount
    }) => result.iadd(amount), new _polkadot_util__WEBPACK_IMPORTED_MODULE_0__(0))); // get the maximum of the locks according to https://github.com/paritytech/substrate/blob/master/srml/balances/src/lib.rs#L699

    const notAll = lockedBreakdown.filter(({
      amount
    }) => amount && !amount.isMax());

    if (notAll.length) {
      lockedBalance = api.registry.createType('Balance', (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.bnMax)(...notAll.map(({
        amount
      }) => amount)));
    }
  }

  return {
    allLocked,
    lockedBalance,
    lockedBreakdown,
    vestingLocked
  };
}

function calcShared(api, bestNumber, data, locks) {
  const {
    allLocked,
    lockedBalance,
    lockedBreakdown,
    vestingLocked
  } = calcLocked(api, bestNumber, locks);
  return { ...data,
    availableBalance: api.registry.createType('Balance', allLocked ? 0 : (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.bnMax)(new _polkadot_util__WEBPACK_IMPORTED_MODULE_0__(0), data.freeBalance.sub(lockedBalance))),
    lockedBalance,
    lockedBreakdown,
    vestingLocked
  };
}

function calcVesting(bestNumber, shared, _vesting) {
  // Calculate the vesting balances,
  //  - offset = balance locked at startingBlock
  //  - perBlock is the unlock amount
  const vesting = _vesting || [];
  const isVesting = !shared.vestingLocked.isZero();
  const vestedBalances = vesting.map(({
    locked,
    perBlock,
    startingBlock
  }) => bestNumber.gt(startingBlock) ? (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.bnMin)(locked, perBlock.mul(bestNumber.sub(startingBlock))) : _polkadot_util__WEBPACK_IMPORTED_MODULE_3__.BN_ZERO);
  const vestedBalance = vestedBalances.reduce((all, value) => all.iadd(value), new _polkadot_util__WEBPACK_IMPORTED_MODULE_0__(0));
  const vestingTotal = vesting.reduce((all, {
    locked
  }) => all.iadd(locked), new _polkadot_util__WEBPACK_IMPORTED_MODULE_0__(0));
  return {
    isVesting,
    vestedBalance,
    vestedClaimable: isVesting ? shared.vestingLocked.sub(vestingTotal.sub(vestedBalance)) : _polkadot_util__WEBPACK_IMPORTED_MODULE_3__.BN_ZERO,
    vesting: vesting.map(({
      locked,
      perBlock,
      startingBlock
    }, index) => ({
      endBlock: locked.div(perBlock).iadd(startingBlock),
      locked,
      perBlock,
      startingBlock,
      vested: vestedBalances[index]
    })).filter(({
      locked
    }) => !locked.isZero()),
    vestingTotal
  };
}

function calcBalances(api, [data, bestNumber, [vesting, allLocks]]) {
  const shared = calcShared(api, bestNumber, data, allLocks[0]);
  return { ...shared,
    ...calcVesting(bestNumber, shared, vesting),
    accountId: data.accountId,
    accountNonce: data.accountNonce,
    additional: allLocks.filter((_, index) => index !== 0).map((l, index) => calcShared(api, bestNumber, data.additional[index], l))
  };
} // old


function queryOld(api, accountId) {
  return api.queryMulti([[api.query.balances.locks, accountId], [api.query.balances.vesting, accountId]]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_4__.map)(([locks, optVesting]) => {
    let vestingNew = null;

    if (optVesting.isSome) {
      const {
        offset: locked,
        perBlock,
        startingBlock
      } = optVesting.unwrap();
      vestingNew = api.registry.createType('VestingInfo', {
        locked,
        perBlock,
        startingBlock
      });
    }

    return [vestingNew ? [vestingNew] : null, [locks]];
  }));
}

const isNonNullable = nullable => !!nullable; // current (balances, vesting)


function queryCurrent(api, accountId, balanceInstances = ['balances']) {
  var _api$query$vesting;

  const calls = balanceInstances.map(m => {
    var _m, _api$query;

    return ((_m = api.derive[m]) === null || _m === void 0 ? void 0 : _m.customLocks) || ((_api$query = api.query[m]) === null || _api$query === void 0 ? void 0 : _api$query.locks);
  });
  const lockEmpty = calls.map(c => !c);
  const queries = calls.filter(isNonNullable).map(c => [c, accountId]);
  return ((_api$query$vesting = api.query.vesting) !== null && _api$query$vesting !== void 0 && _api$query$vesting.vesting ? api.queryMulti([[api.query.vesting.vesting, accountId], ...queries]) // TODO We need to check module instances here as well, not only the balances module
  : queries.length ? api.queryMulti(queries).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_4__.map)(r => [api.registry.createType('Option<VestingInfo>'), ...r])) : (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.of)([api.registry.createType('Option<VestingInfo>')])).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_4__.map)(([opt, ...locks]) => {
    let offset = -1;
    const vesting = opt.unwrapOr(null);
    return [vesting ? Array.isArray(vesting) ? vesting : [vesting] : null, lockEmpty.map(e => e ? api.registry.createType('Vec<BalanceLock>') : locks[++offset])];
  }));
}
/**
 * @name all
 * @param {( AccountIndex | AccountId | Address | string )} address - An accounts Id in different formats.
 * @returns An object containing the results of various balance queries
 * @example
 * <BR>
 *
 * ```javascript
 * const ALICE = 'F7Hs';
 *
 * api.derive.balances.all(ALICE, ({ accountId, lockedBalance }) => {
 *   console.log(`The account ${accountId} has a locked balance ${lockedBalance} units.`);
 * });
 * ```
 */


function all(instanceId, api) {
  const balanceInstances = api.registry.getModuleInstances(api.runtimeVersion.specName.toString(), 'balances');
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_6__.memo)(instanceId, address => api.derive.balances.account(address).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_7__.switchMap)(account => {
    var _api$query$system, _api$query$balances;

    return !account.accountId.isEmpty ? (0,rxjs__WEBPACK_IMPORTED_MODULE_8__.combineLatest)([(0,rxjs__WEBPACK_IMPORTED_MODULE_5__.of)(account), api.derive.chain.bestNumber(), (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.isFunction)((_api$query$system = api.query.system) === null || _api$query$system === void 0 ? void 0 : _api$query$system.account) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.isFunction)((_api$query$balances = api.query.balances) === null || _api$query$balances === void 0 ? void 0 : _api$query$balances.account) ? queryCurrent(api, account.accountId, balanceInstances) : queryOld(api, account.accountId)]) : (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.of)([account, api.registry.createType('BlockNumber'), [null, []]]);
  }), (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.map)(result => calcBalances(api, result))));
}

/***/ }),
/* 730 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "checkMaxMin": () => (/* binding */ checkMaxMin),
/* harmony export */   "bnMax": () => (/* binding */ bnMax)
/* harmony export */ });
/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(80);
/* harmony import */ var _bn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(88);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0


function checkMaxMin(type, items) {
  (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.assert)(items.length >= 1, 'Must provide one or more BN arguments');
  let result = items[0];

  for (let i = 1; i < items.length; i++) {
    result = _bn_js__WEBPACK_IMPORTED_MODULE_1__[type](result, items[i]);
  }

  return result;
}
/**
 * @name bnMax
 * @summary Finds and returns the highest value in an array of BNs.
 * @example
 * <BR>
 *
 * ```javascript
 * import BN from 'bn.js';
 * import { bnMax } from '@polkadot/util';
 *
 * bnMax([new BN(1), new BN(3), new BN(2)]).toString(); // => '3'
 * ```
 */

function bnMax(...items) {
  return checkMaxMin('max', items);
}

/***/ }),
/* 731 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "bnMin": () => (/* binding */ bnMin)
/* harmony export */ });
/* harmony import */ var _max_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(730);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name bnMin
 * @summary Finds and returns the smallest value in an array of BNs.
 * @example
 * <BR>
 *
 * ```javascript
 * import BN from 'bn.js';
 * import { bnMin } from '@polkadot/util';
 *
 * bnMin([new BN(1), new BN(3), new BN(2)]).toString(); // => '1'
 * ```
 */

function bnMin(...items) {
  return (0,_max_js__WEBPACK_IMPORTED_MODULE_0__.checkMaxMin)('min', items);
}

/***/ }),
/* 732 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "bounties": () => (/* reexport safe */ _bounties_js__WEBPACK_IMPORTED_MODULE_0__.bounties)
/* harmony export */ });
/* harmony import */ var _bounties_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(733);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


/***/ }),
/* 733 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "bounties": () => (/* binding */ bounties)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(662);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(660);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(599);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
/* harmony import */ var _helpers_filterBountyProposals_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(734);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0




function parseResult([maybeBounties, maybeDescriptions, ids, bountyProposals]) {
  const bounties = [];
  maybeBounties.forEach((bounty, index) => {
    if (bounty.isSome) {
      bounties.push({
        bounty: bounty.unwrap(),
        description: maybeDescriptions[index].unwrapOrDefault().toUtf8(),
        index: ids[index],
        proposals: bountyProposals.filter(bountyProposal => ids[index].eq(bountyProposal.proposal.args[0]))
      });
    }
  });
  return bounties;
}

function bounties(instanceId, api) {
  const bountyBase = api.query.bounties || api.query.treasury;
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, () => (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.combineLatest)([bountyBase.bountyCount(), api.query.council ? api.query.council.proposalCount() : (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)(0)]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_3__.switchMap)(() => (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.combineLatest)([bountyBase.bounties.keys(), api.derive.council ? api.derive.council.proposals() : (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)([])])), (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.switchMap)(([keys, proposals]) => {
    const ids = keys.map(({
      args: [id]
    }) => id);
    return (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.combineLatest)([bountyBase.bounties.multi(ids), bountyBase.bountyDescriptions.multi(ids), (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)(ids), (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)((0,_helpers_filterBountyProposals_js__WEBPACK_IMPORTED_MODULE_4__.filterBountiesProposals)(api, proposals))]);
  }), (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.map)(parseResult)));
}

/***/ }),
/* 734 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "filterBountiesProposals": () => (/* binding */ filterBountiesProposals)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
function filterBountiesProposals(api, allProposals) {
  const bountyTxBase = api.tx.bounties ? api.tx.bounties : api.tx.treasury;
  const bountyProposalCalls = [bountyTxBase.approveBounty, bountyTxBase.closeBounty, bountyTxBase.proposeCurator, bountyTxBase.unassignCurator];
  return allProposals.filter(proposal => bountyProposalCalls.find(bountyCall => bountyCall.is(proposal.proposal)));
}

/***/ }),
/* 735 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "bestNumber": () => (/* reexport safe */ _bestNumber_js__WEBPACK_IMPORTED_MODULE_0__.bestNumber),
/* harmony export */   "bestNumberFinalized": () => (/* reexport safe */ _bestNumberFinalized_js__WEBPACK_IMPORTED_MODULE_1__.bestNumberFinalized),
/* harmony export */   "bestNumberLag": () => (/* reexport safe */ _bestNumberLag_js__WEBPACK_IMPORTED_MODULE_2__.bestNumberLag),
/* harmony export */   "getHeader": () => (/* reexport safe */ _getHeader_js__WEBPACK_IMPORTED_MODULE_3__.getHeader),
/* harmony export */   "getBlock": () => (/* reexport safe */ _getBlock_js__WEBPACK_IMPORTED_MODULE_4__.getBlock),
/* harmony export */   "subscribeNewBlocks": () => (/* reexport safe */ _subscribeNewBlocks_js__WEBPACK_IMPORTED_MODULE_5__.subscribeNewBlocks),
/* harmony export */   "subscribeNewHeads": () => (/* reexport safe */ _subscribeNewHeads_js__WEBPACK_IMPORTED_MODULE_6__.subscribeNewHeads)
/* harmony export */ });
/* harmony import */ var _bestNumber_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(736);
/* harmony import */ var _bestNumberFinalized_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(737);
/* harmony import */ var _bestNumberLag_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(738);
/* harmony import */ var _getHeader_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(739);
/* harmony import */ var _getBlock_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(740);
/* harmony import */ var _subscribeNewBlocks_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(741);
/* harmony import */ var _subscribeNewHeads_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(742);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0








/***/ }),
/* 736 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "bestNumber": () => (/* binding */ bestNumber)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(599);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


/**
 * @name bestNumber
 * @returns The latest block number.
 * @example
 * <BR>
 *
 * ```javascript
 * api.derive.chain.bestNumber((blockNumber) => {
 *   console.log(`the current best block is #${blockNumber}`);
 * });
 * ```
 */

function bestNumber(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, () => api.derive.chain.subscribeNewHeads().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(header => header.number.unwrap())));
}

/***/ }),
/* 737 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "bestNumberFinalized": () => (/* binding */ bestNumberFinalized)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(599);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


/**
 * @name bestNumberFinalized
 * @returns A BlockNumber
 * @description Get the latest finalized block number.
 * @example
 * <BR>
 *
 * ```javascript
 * api.derive.chain.bestNumberFinalized((blockNumber) => {
 *   console.log(`the current finalized block is #${blockNumber}`);
 * });
 * ```
 */

function bestNumberFinalized(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, () => api.rpc.chain.subscribeFinalizedHeads().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(header => header.number.unwrap())));
}

/***/ }),
/* 738 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "bestNumberLag": () => (/* binding */ bestNumberLag)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(662);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(599);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


/**
 * @name bestNumberLag
 * @returns A number of blocks
 * @description Calculates the lag between finalized head and best head
 * @example
 * <BR>
 *
 * ```javascript
 * api.derive.chain.bestNumberLag((lag) => {
 *   console.log(`finalized is ${lag} blocks behind head`);
 * });
 * ```
 */

function bestNumberLag(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, () => (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.combineLatest)([api.derive.chain.bestNumber(), api.derive.chain.bestNumberFinalized()]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_2__.map)(([bestNumber, bestNumberFinalized]) => api.registry.createType('BlockNumber', bestNumber.sub(bestNumberFinalized)))));
}

/***/ }),
/* 739 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getHeader": () => (/* binding */ getHeader)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(662);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(660);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(604);
/* harmony import */ var _type_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(674);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0



/**
 * @name getHeader
 * @param {( Uint8Array | string )} hash - A block hash as U8 array or string.
 * @returns An array containing the block header and the block author
 * @description Get a specific block header and extend it with the author
 * @example
 * <BR>
 *
 * ```javascript
 * const { author, number } = await api.derive.chain.getHeader('0x123...456');
 *
 * console.log(`block #${number} was authored by ${author}`);
 * ```
 */

function getHeader(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, blockHash => (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.combineLatest)([api.rpc.chain.getHeader(blockHash), api.queryAt(blockHash).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_2__.switchMap)(queryAt => queryAt.session ? queryAt.session.validators() : (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)([])))]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_4__.map)(([header, validators]) => (0,_type_index_js__WEBPACK_IMPORTED_MODULE_5__.createHeaderExtended)(header.registry, header, validators)), (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.catchError)(() => // where rpc.chain.getHeader throws, we will land here - it can happen that
  // we supplied an invalid hash. (Due to defaults, storeage will have an
  // empty value, so only the RPC is affected). So return undefined
  (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)())));
}

/***/ }),
/* 740 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getBlock": () => (/* binding */ getBlock)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(662);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(660);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(604);
/* harmony import */ var _type_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(676);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0



/**
 * @name getBlock
 * @param {( Uint8Array | string )} hash - A block hash as U8 array or string.
 * @description Get a specific block (e.g. rpc.chain.getBlock) and extend it with the author
 * @example
 * <BR>
 *
 * ```javascript
 * const { author, block } = await api.derive.chain.getBlock('0x123...456');
 *
 * console.log(`block #${block.header.number} was authored by ${author}`);
 * ```
 */

function getBlock(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, blockHash => (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.combineLatest)([api.rpc.chain.getBlock(blockHash), api.queryAt(blockHash).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_2__.switchMap)(queryAt => (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.combineLatest)([queryAt.system.events(), queryAt.session ? queryAt.session.validators() : (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)([])])))]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_4__.map)(([signedBlock, [events, validators]]) => (0,_type_index_js__WEBPACK_IMPORTED_MODULE_5__.createSignedBlockExtended)(api.registry, signedBlock, events, validators)), (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.catchError)(() => // where rpc.chain.getHeader throws, we will land here - it can happen that
  // we supplied an invalid hash. (Due to defaults, storage will have an
  // empty value, so only the RPC is affected). So return undefined
  (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)())));
}

/***/ }),
/* 741 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "subscribeNewBlocks": () => (/* binding */ subscribeNewBlocks)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(660);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(662);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(599);
/* harmony import */ var _type_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(676);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0



/**
 * @name subscribeNewBlocks
 * @returns The latest block & events for that block
 */

function subscribeNewBlocks(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, () => api.derive.chain.subscribeNewHeads().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.switchMap)(header => {
    const blockHash = header.createdAtHash || header.hash; // we get the block first, setting up the registry

    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.combineLatest)([(0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)(header), api.rpc.chain.getBlock(blockHash), api.queryAt(blockHash).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.switchMap)(queryAt => queryAt.system.events()))]);
  }), (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.map)(([header, block, events]) => (0,_type_index_js__WEBPACK_IMPORTED_MODULE_5__.createSignedBlockExtended)(block.registry, block, events, header.validators))));
}

/***/ }),
/* 742 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "subscribeNewHeads": () => (/* binding */ subscribeNewHeads)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(662);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(599);
/* harmony import */ var _type_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(674);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0



/**
 * @name subscribeNewHeads
 * @returns A header with the current header (including extracted author)
 * @description An observable of the current block header and it's author
 * @example
 * <BR>
 *
 * ```javascript
 * api.derive.chain.subscribeNewHeads((header) => {
 *   console.log(`block #${header.number} was authored by ${header.author}`);
 * });
 * ```
 */

function subscribeNewHeads(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, () => (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.combineLatest)([api.rpc.chain.subscribeNewHeads(), api.query.session ? api.query.session.validators() : (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)(undefined)]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_3__.map)(([header, validators]) => {
    header.createdAtHash = header.hash;
    return (0,_type_index_js__WEBPACK_IMPORTED_MODULE_4__.createHeaderExtended)(header.registry, header, validators);
  })));
}

/***/ }),
/* 743 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fees": () => (/* reexport safe */ _fees_js__WEBPACK_IMPORTED_MODULE_0__.fees)
/* harmony export */ });
/* harmony import */ var _fees_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(744);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


/***/ }),
/* 744 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fees": () => (/* binding */ fees)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(599);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0



// query via constants (current applicable path)
function queryConstants(api) {
  return (0,rxjs__WEBPACK_IMPORTED_MODULE_0__.of)([// deprecated
  api.consts.contracts.callBaseFee || api.registry.createType('Balance'), api.consts.contracts.contractFee || api.registry.createType('Balance'), api.consts.contracts.creationFee || api.registry.createType('Balance'), api.consts.contracts.transactionBaseFee || api.registry.createType('Balance'), api.consts.contracts.transactionByteFee || api.registry.createType('Balance'), api.consts.contracts.transferFee || api.registry.createType('Balance'), // current
  api.consts.contracts.rentByteFee, api.consts.contracts.rentDepositOffset, api.consts.contracts.surchargeReward, api.consts.contracts.tombstoneDeposit]);
}
/**
 * @name fees
 * @returns An object containing the combined results of the queries for
 * all relevant contract fees as declared in the substrate chain spec.
 * @example
 * <BR>
 *
 * ```javascript
 * api.derive.contracts.fees(([creationFee, transferFee]) => {
 *   console.log(`The fee for creating a new contract on this chain is ${creationFee} units. The fee required to call this contract is ${transferFee} units.`);
 * });
 * ```
 */


function fees(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.memo)(instanceId, () => {
    return queryConstants(api).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_2__.map)(([callBaseFee, contractFee, creationFee, transactionBaseFee, transactionByteFee, transferFee, rentByteFee, rentDepositOffset, surchargeReward, tombstoneDeposit]) => ({
      callBaseFee,
      contractFee,
      creationFee,
      rentByteFee,
      rentDepositOffset,
      surchargeReward,
      tombstoneDeposit,
      transactionBaseFee,
      transactionByteFee,
      transferFee
    })));
  });
}

/***/ }),
/* 745 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "members": () => (/* reexport safe */ _members_js__WEBPACK_IMPORTED_MODULE_0__.members),
/* harmony export */   "prime": () => (/* reexport safe */ _prime_js__WEBPACK_IMPORTED_MODULE_1__.prime),
/* harmony export */   "hasProposals": () => (/* reexport safe */ _proposals_js__WEBPACK_IMPORTED_MODULE_2__.hasProposals),
/* harmony export */   "proposal": () => (/* reexport safe */ _proposals_js__WEBPACK_IMPORTED_MODULE_2__.proposal),
/* harmony export */   "proposalCount": () => (/* reexport safe */ _proposals_js__WEBPACK_IMPORTED_MODULE_2__.proposalCount),
/* harmony export */   "proposalHashes": () => (/* reexport safe */ _proposals_js__WEBPACK_IMPORTED_MODULE_2__.proposalHashes),
/* harmony export */   "proposals": () => (/* reexport safe */ _proposals_js__WEBPACK_IMPORTED_MODULE_2__.proposals),
/* harmony export */   "votes": () => (/* reexport safe */ _votes_js__WEBPACK_IMPORTED_MODULE_3__.votes),
/* harmony export */   "votesOf": () => (/* reexport safe */ _votesOf_js__WEBPACK_IMPORTED_MODULE_4__.votesOf)
/* harmony export */ });
/* harmony import */ var _members_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(746);
/* harmony import */ var _prime_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(749);
/* harmony import */ var _proposals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(751);
/* harmony import */ var _votes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(753);
/* harmony import */ var _votesOf_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(754);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0






/***/ }),
/* 746 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "members": () => (/* binding */ members)
/* harmony export */ });
/* harmony import */ var _collective_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(747);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


function members(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (0,_collective_index_js__WEBPACK_IMPORTED_MODULE_1__.members)(instanceId, api, 'council'));
}

/***/ }),
/* 747 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "members": () => (/* binding */ members)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(654);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(81);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(624);
/* harmony import */ var _getInstance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(748);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0




function members(instanceId, api, _section) {
  const section = (0,_getInstance_js__WEBPACK_IMPORTED_MODULE_0__.getInstance)(api, _section);
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.memo)(instanceId, () => {
    var _api$query$section;

    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isFunction)((_api$query$section = api.query[section]) === null || _api$query$section === void 0 ? void 0 : _api$query$section.members) ? api.query[section].members() : (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)([]);
  });
}

/***/ }),
/* 748 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getInstance": () => (/* binding */ getInstance)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
function getInstance(api, section) {
  const instances = api.registry.getModuleInstances(api.runtimeVersion.specName.toString(), section);
  return instances && instances.length ? instances[0] : section;
}

/***/ }),
/* 749 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "prime": () => (/* binding */ prime)
/* harmony export */ });
/* harmony import */ var _collective_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(750);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


function prime(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (0,_collective_index_js__WEBPACK_IMPORTED_MODULE_1__.prime)(instanceId, api, 'council'));
}

/***/ }),
/* 750 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "prime": () => (/* binding */ prime)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(654);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(81);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(624);
/* harmony import */ var _getInstance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(748);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0




function prime(instanceId, api, _section) {
  const section = (0,_getInstance_js__WEBPACK_IMPORTED_MODULE_0__.getInstance)(api, _section);
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.memo)(instanceId, () => {
    var _api$query;

    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isFunction)((_api$query = api.query[section]) === null || _api$query === void 0 ? void 0 : _api$query.prime) ? api.query[section].prime().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_3__.map)(optPrime => optPrime.unwrapOr(null))) : (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.of)(null);
  });
}

/***/ }),
/* 751 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "hasProposals": () => (/* binding */ hasProposals),
/* harmony export */   "proposal": () => (/* binding */ proposal),
/* harmony export */   "proposalCount": () => (/* binding */ proposalCount),
/* harmony export */   "proposalHashes": () => (/* binding */ proposalHashes),
/* harmony export */   "proposals": () => (/* binding */ proposals)
/* harmony export */ });
/* harmony import */ var _collective_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(752);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


function hasProposals(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (0,_collective_index_js__WEBPACK_IMPORTED_MODULE_1__.hasProposals)(instanceId, api, 'council'));
}
function proposal(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (0,_collective_index_js__WEBPACK_IMPORTED_MODULE_1__.proposal)(instanceId, api, 'council'));
}
function proposalCount(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (0,_collective_index_js__WEBPACK_IMPORTED_MODULE_1__.proposalCount)(instanceId, api, 'council'));
}
function proposalHashes(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (0,_collective_index_js__WEBPACK_IMPORTED_MODULE_1__.proposalHashes)(instanceId, api, 'council'));
}
function proposals(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (0,_collective_index_js__WEBPACK_IMPORTED_MODULE_1__.proposals)(instanceId, api, 'council'));
}

/***/ }),
/* 752 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "hasProposals": () => (/* binding */ hasProposals),
/* harmony export */   "proposalCount": () => (/* binding */ proposalCount),
/* harmony export */   "proposalHashes": () => (/* binding */ proposalHashes),
/* harmony export */   "proposals": () => (/* binding */ proposals),
/* harmony export */   "proposal": () => (/* binding */ proposal)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(662);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(604);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(660);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(81);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
/* harmony import */ var _getInstance_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(748);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0





function parse(api, [hashes, proposals, votes]) {
  return proposals.map((proposalOpt, index) => proposalOpt && proposalOpt.isSome ? {
    hash: api.registry.createType('Hash', hashes[index]),
    proposal: proposalOpt.unwrap(),
    votes: votes[index].unwrapOr(null)
  } : null).filter(proposal => !!proposal);
}

function _proposalsFrom(instanceId, api, section) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, hashes => {
    var _api$query$section;

    return ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isFunction)((_api$query$section = api.query[section]) === null || _api$query$section === void 0 ? void 0 : _api$query$section.proposals) && hashes.length ? (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.combineLatest)([(0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)(hashes), // this should simply be api.query[section].proposalOf.multi<Option<Proposal>>(hashes),
    // however we have had cases on Edgeware where the indices have moved around after an
    // upgrade, which results in invalid on-chain data
    (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.combineLatest)(hashes.map(hash => api.query[section].proposalOf(hash).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_4__.catchError)(() => (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)(null))))), api.query[section].voting.multi(hashes)]) : (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)([[], [], []])).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_5__.map)(result => parse(api, result)));
  });
}

function hasProposals(instanceId, api, _section) {
  const section = (0,_getInstance_js__WEBPACK_IMPORTED_MODULE_6__.getInstance)(api, _section);
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, () => {
    var _api$query$section2;

    return (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isFunction)((_api$query$section2 = api.query[section]) === null || _api$query$section2 === void 0 ? void 0 : _api$query$section2.proposals));
  });
}
function proposalCount(instanceId, api, _section) {
  const section = (0,_getInstance_js__WEBPACK_IMPORTED_MODULE_6__.getInstance)(api, _section);
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, () => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isFunction)(api.query[section].proposalCount) ? api.query[section].proposalCount() : (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)(null));
}
function proposalHashes(instanceId, api, _section) {
  const section = (0,_getInstance_js__WEBPACK_IMPORTED_MODULE_6__.getInstance)(api, _section);
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, () => {
    var _api$query$section3;

    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isFunction)((_api$query$section3 = api.query[section]) === null || _api$query$section3 === void 0 ? void 0 : _api$query$section3.proposals) ? api.query[section].proposals() : (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)([]);
  });
}
function proposals(instanceId, api, _section) {
  const section = (0,_getInstance_js__WEBPACK_IMPORTED_MODULE_6__.getInstance)(api, _section);

  const proposalsFrom = _proposalsFrom(instanceId, api, section);

  const getHashes = proposalHashes(instanceId, api, _section);
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, () => getHashes().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_7__.switchMap)(proposalsFrom)));
}
function proposal(instanceId, api, _section) {
  const section = (0,_getInstance_js__WEBPACK_IMPORTED_MODULE_6__.getInstance)(api, _section);

  const proposalsFrom = _proposalsFrom(instanceId, api, section);

  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, hash => {
    var _api$query$section4;

    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isFunction)((_api$query$section4 = api.query[section]) === null || _api$query$section4 === void 0 ? void 0 : _api$query$section4.proposals) ? proposalsFrom([hash]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_5__.map)(([proposal]) => proposal)) : (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)(null);
  });
}

/***/ }),
/* 753 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "votes": () => (/* binding */ votes)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(662);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(654);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0

 // Voter is current tuple is 2.x-era

function isVoter(value) {
  return !Array.isArray(value);
}

function retrieveStakeOf(elections) {
  return elections.stakeOf.entries().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_0__.map)(entries => entries.map(([{
    args: [accountId]
  }, stake]) => [accountId, stake])));
}

function retrieveVoteOf(elections) {
  return elections.votesOf.entries().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_0__.map)(entries => entries.map(([{
    args: [accountId]
  }, votes]) => [accountId, votes])));
}

function retrievePrev(api, elections) {
  return (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.combineLatest)([retrieveStakeOf(elections), retrieveVoteOf(elections)]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_0__.map)(([stakes, votes]) => {
    const result = [];
    votes.forEach(([voter, votes]) => {
      result.push([voter, {
        stake: api.registry.createType('Balance'),
        votes
      }]);
    });
    stakes.forEach(([staker, stake]) => {
      const entry = result.find(([voter]) => voter.eq(staker));

      if (entry) {
        entry[1].stake = stake;
      } else {
        result.push([staker, {
          stake,
          votes: []
        }]);
      }
    });
    return result;
  }));
}

function retrieveCurrent(elections) {
  return elections.voting.entries().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_0__.map)(entries => entries.map(([{
    args: [accountId]
  }, value]) => [accountId, isVoter(value) ? {
    stake: value.stake,
    votes: value.votes
  } : {
    stake: value[0],
    votes: value[1]
  }])));
}

function votes(instanceId, api) {
  const elections = api.query.phragmenElection || api.query.electionsPhragmen || api.query.elections;
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_2__.memo)(instanceId, () => elections ? elections.stakeOf ? retrievePrev(api, elections) : retrieveCurrent(elections) : (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)([]));
}

/***/ }),
/* 754 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "votesOf": () => (/* binding */ votesOf)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(599);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


function votesOf(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, accountId => api.derive.council.votes().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(votes => (votes.find(([from]) => from.eq(accountId)) || [null, {
    stake: api.registry.createType('Balance'),
    votes: []
  }])[1])));
}

/***/ }),
/* 755 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "childKey": () => (/* reexport safe */ _childKey_js__WEBPACK_IMPORTED_MODULE_0__.childKey),
/* harmony export */   "contributions": () => (/* reexport safe */ _contributions_js__WEBPACK_IMPORTED_MODULE_1__.contributions),
/* harmony export */   "ownContributions": () => (/* reexport safe */ _onwContributions_js__WEBPACK_IMPORTED_MODULE_2__.ownContributions)
/* harmony export */ });
/* harmony import */ var _childKey_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(756);
/* harmony import */ var _contributions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(757);
/* harmony import */ var _onwContributions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(759);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0




/***/ }),
/* 756 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "childKey": () => (/* binding */ childKey)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(599);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(196);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(197);
/* harmony import */ var _polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(686);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0





function createChildKey({
  trieIndex
}) {
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToHex)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aConcat)(':child_storage:default:', (0,_polkadot_util_crypto__WEBPACK_IMPORTED_MODULE_2__.blake2AsU8a)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aConcat)('crowdloan', trieIndex.toU8a()))));
}

function childKey(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.memo)(instanceId, paraId => api.query.crowdloan.funds(paraId).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_4__.map)(optInfo => optInfo.isSome ? createChildKey(optInfo.unwrap()) : null)));
}

/***/ }),
/* 757 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "contributions": () => (/* binding */ contributions)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(660);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(647);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(720);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(627);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(605);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(668);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(662);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(667);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(81);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(624);
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(758);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0




const PAGE_SIZE_K = 1000; // limit aligned with the 1k on the node (trie lookups are heavy)

function _getUpdates(api, paraId) {
  let added = [];
  let removed = [];
  return api.query.system.events().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_0__.switchMap)(events => {
    const changes = (0,_util_js__WEBPACK_IMPORTED_MODULE_1__.extractContributed)(paraId, events);

    if (changes.added.length || changes.removed.length) {
      var _events$createdAtHash;

      added = added.concat(...changes.added);
      removed = removed.concat(...changes.removed);
      return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)({
        added,
        addedDelta: changes.added,
        blockHash: ((_events$createdAtHash = events.createdAtHash) === null || _events$createdAtHash === void 0 ? void 0 : _events$createdAtHash.toHex()) || '-',
        removed,
        removedDelta: changes.removed
      });
    }

    return rxjs__WEBPACK_IMPORTED_MODULE_3__.EMPTY;
  }), (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.startWith)({
    added,
    addedDelta: [],
    blockHash: '-',
    removed,
    removedDelta: []
  }));
}

function _eventTriggerAll(api, paraId) {
  return api.query.system.events().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_0__.switchMap)(events => {
    var _events$createdAtHash2;

    const items = events.filter(({
      event: {
        data: [eventParaId],
        method,
        section
      }
    }) => section === 'crowdloan' && ['AllRefunded', 'Dissolved', 'PartiallyRefunded'].includes(method) && eventParaId.eq(paraId));
    return items.length ? (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)(((_events$createdAtHash2 = events.createdAtHash) === null || _events$createdAtHash2 === void 0 ? void 0 : _events$createdAtHash2.toHex()) || '-') : rxjs__WEBPACK_IMPORTED_MODULE_3__.EMPTY;
  }), (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.startWith)('-'));
}

function _getKeysPaged(api, childKey) {
  const startSubject = new rxjs__WEBPACK_IMPORTED_MODULE_5__.BehaviorSubject(undefined);
  return startSubject.pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_0__.switchMap)(startKey => api.rpc.childstate.getKeysPaged(childKey, '0x', PAGE_SIZE_K, startKey)), (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.tap)(keys => {
    setTimeout(() => {
      keys.length === PAGE_SIZE_K ? startSubject.next(keys[PAGE_SIZE_K - 1].toHex()) : startSubject.complete();
    }, 0);
  }), (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.toArray)(), // toArray since we want to startSubject to be completed
  (0,rxjs__WEBPACK_IMPORTED_MODULE_8__.map)(keyArr => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_9__.arrayFlatten)(keyArr)));
}

function _getAll(api, paraId, childKey) {
  return _eventTriggerAll(api, paraId).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_0__.switchMap)(() => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_10__.isFunction)(api.rpc.childstate.getKeysPaged) ? _getKeysPaged(api, childKey) : api.rpc.childstate.getKeys(childKey, '0x')), (0,rxjs__WEBPACK_IMPORTED_MODULE_8__.map)(keys => keys.map(k => k.toHex())));
}

function _contributions(api, paraId, childKey) {
  return (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.combineLatest)([_getAll(api, paraId, childKey), _getUpdates(api, paraId)]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_8__.map)(([keys, {
    added,
    blockHash,
    removed
  }]) => {
    const contributorsMap = {};
    keys.forEach(k => {
      contributorsMap[k] = true;
    });
    added.forEach(k => {
      contributorsMap[k] = true;
    });
    removed.forEach(k => {
      delete contributorsMap[k];
    });
    return {
      blockHash,
      contributorsHex: Object.keys(contributorsMap)
    };
  }));
}

function contributions(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_12__.memo)(instanceId, paraId => api.derive.crowdloan.childKey(paraId).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_0__.switchMap)(childKey => childKey ? _contributions(api, paraId, childKey) : (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)({
    blockHash: '-',
    contributorsHex: []
  }))));
}

/***/ }),
/* 758 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "extractContributed": () => (/* binding */ extractContributed)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
function extractContributed(paraId, events) {
  var _events$createdAtHash;

  const added = [];
  const removed = [];
  return events.filter(({
    event: {
      data: [, eventParaId],
      method,
      section
    }
  }) => section === 'crowdloan' && ['Contributed', 'Withdrew'].includes(method) && eventParaId.eq(paraId)).reduce((result, {
    event: {
      data: [accountId],
      method
    }
  }) => {
    if (method === 'Contributed') {
      result.added.push(accountId.toHex());
    } else {
      result.removed.push(accountId.toHex());
    }

    return result;
  }, {
    added,
    blockHash: ((_events$createdAtHash = events.createdAtHash) === null || _events$createdAtHash === void 0 ? void 0 : _events$createdAtHash.toHex()) || '-',
    removed
  });
}

/***/ }),
/* 759 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ownContributions": () => (/* binding */ ownContributions)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(662);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(660);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(647);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(720);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(654);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(624);
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(758);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0




function _getValues(api, childKey, keys) {
  // We actually would love to use multi-keys https://github.com/paritytech/substrate/issues/9203
  return (0,rxjs__WEBPACK_IMPORTED_MODULE_0__.combineLatest)(keys.map(k => api.rpc.childstate.getStorage(childKey, k))).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(values => values.map(v => api.registry.createType('Option<StorageData>', v)).map(o => o.isSome ? api.registry.createType('Balance', o.unwrap()) : api.registry.createType('Balance')).reduce((all, b, index) => ({ ...all,
    [keys[index]]: b
  }), {})));
}

function _watchOwnChanges(api, paraId, childkey, keys) {
  return api.query.system.events().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_2__.switchMap)(events => {
    const changes = (0,_util_js__WEBPACK_IMPORTED_MODULE_3__.extractContributed)(paraId, events);
    const filtered = keys.filter(k => changes.added.includes(k) || changes.removed.includes(k));
    return filtered.length ? _getValues(api, childkey, filtered) : rxjs__WEBPACK_IMPORTED_MODULE_4__.EMPTY;
  }), (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.startWith)({}));
}

function _contributions(api, paraId, childKey, keys) {
  return (0,rxjs__WEBPACK_IMPORTED_MODULE_0__.combineLatest)([_getValues(api, childKey, keys), _watchOwnChanges(api, paraId, childKey, keys)]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(([all, latest]) => ({ ...all,
    ...latest
  })));
}

function ownContributions(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_6__.memo)(instanceId, (paraId, keys) => api.derive.crowdloan.childKey(paraId).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_2__.switchMap)(childKey => childKey && keys.length ? _contributions(api, paraId, childKey, keys) : (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.of)({}))));
}

/***/ }),
/* 760 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "dispatchQueue": () => (/* reexport safe */ _dispatchQueue_js__WEBPACK_IMPORTED_MODULE_0__.dispatchQueue),
/* harmony export */   "locks": () => (/* reexport safe */ _locks_js__WEBPACK_IMPORTED_MODULE_1__.locks),
/* harmony export */   "nextExternal": () => (/* reexport safe */ _nextExternal_js__WEBPACK_IMPORTED_MODULE_2__.nextExternal),
/* harmony export */   "preimage": () => (/* reexport safe */ _preimage_js__WEBPACK_IMPORTED_MODULE_3__.preimage),
/* harmony export */   "preimages": () => (/* reexport safe */ _preimages_js__WEBPACK_IMPORTED_MODULE_4__.preimages),
/* harmony export */   "proposals": () => (/* reexport safe */ _proposals_js__WEBPACK_IMPORTED_MODULE_5__.proposals),
/* harmony export */   "referendumIds": () => (/* reexport safe */ _referendumIds_js__WEBPACK_IMPORTED_MODULE_6__.referendumIds),
/* harmony export */   "referendums": () => (/* reexport safe */ _referendums_js__WEBPACK_IMPORTED_MODULE_7__.referendums),
/* harmony export */   "referendumsActive": () => (/* reexport safe */ _referendumsActive_js__WEBPACK_IMPORTED_MODULE_8__.referendumsActive),
/* harmony export */   "referendumsFinished": () => (/* reexport safe */ _referendumsFinished_js__WEBPACK_IMPORTED_MODULE_9__.referendumsFinished),
/* harmony export */   "_referendumInfo": () => (/* reexport safe */ _referendumsInfo_js__WEBPACK_IMPORTED_MODULE_10__._referendumInfo),
/* harmony export */   "_referendumVotes": () => (/* reexport safe */ _referendumsInfo_js__WEBPACK_IMPORTED_MODULE_10__._referendumVotes),
/* harmony export */   "_referendumsVotes": () => (/* reexport safe */ _referendumsInfo_js__WEBPACK_IMPORTED_MODULE_10__._referendumsVotes),
/* harmony export */   "referendumsInfo": () => (/* reexport safe */ _referendumsInfo_js__WEBPACK_IMPORTED_MODULE_10__.referendumsInfo),
/* harmony export */   "sqrtElectorate": () => (/* reexport safe */ _sqrtElectorate_js__WEBPACK_IMPORTED_MODULE_11__.sqrtElectorate)
/* harmony export */ });
/* harmony import */ var _dispatchQueue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(761);
/* harmony import */ var _locks_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(763);
/* harmony import */ var _nextExternal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(764);
/* harmony import */ var _preimage_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(765);
/* harmony import */ var _preimages_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(768);
/* harmony import */ var _proposals_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(769);
/* harmony import */ var _referendumIds_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(770);
/* harmony import */ var _referendums_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(771);
/* harmony import */ var _referendumsActive_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(772);
/* harmony import */ var _referendumsFinished_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(773);
/* harmony import */ var _referendumsInfo_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(774);
/* harmony import */ var _sqrtElectorate_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(775);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0













/***/ }),
/* 761 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "dispatchQueue": () => (/* binding */ dispatchQueue)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(660);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(662);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(604);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(762);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(81);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0



const DEMOCRACY_ID = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.stringToHex)('democrac');

function queryQueue(api) {
  return api.query.democracy.dispatchQueue().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.switchMap)(dispatches => (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.combineLatest)([(0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)(dispatches), api.derive.democracy.preimages(dispatches.map(([, hash]) => hash))])), (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.map)(([dispatches, images]) => dispatches.map(([at, imageHash, index], dispatchIndex) => ({
    at,
    image: images[dispatchIndex],
    imageHash,
    index
  }))));
}

function schedulerEntries(api) {
  // We don't get entries, but rather we get the keys (triggered via finished referendums) and
  // the subscribe to those keys - this means we pickup when the schedulers actually executes
  // at a block, the entry for that block will become empty
  return api.derive.democracy.referendumsFinished().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.switchMap)(() => api.query.scheduler.agenda.keys()), (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.switchMap)(keys => {
    const blockNumbers = keys.map(({
      args: [blockNumber]
    }) => blockNumber);
    return blockNumbers.length ? (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.combineLatest)([(0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)(blockNumbers), // this should simply be api.query.scheduler.agenda.multi,
    // however we have had cases on Darwinia where the indices have moved around after an
    // upgrade, which results in invalid on-chain data
    (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.combineLatest)(blockNumbers.map(blockNumber => api.query.scheduler.agenda(blockNumber).pipe( // this does create an issue since it discards all at that block
    (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.catchError)(() => (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)(null)))))]) : (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)([[], []]);
  }));
}

function queryScheduler(api) {
  return schedulerEntries(api).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.switchMap)(([blockNumbers, agendas]) => {
    const result = [];
    blockNumbers.forEach((at, index) => {
      (agendas[index] || []).filter(opt => opt.isSome).forEach(optScheduled => {
        const scheduled = optScheduled.unwrap();

        if (scheduled.maybeId.isSome) {
          const id = scheduled.maybeId.unwrap().toHex();

          if (id.startsWith(DEMOCRACY_ID)) {
            const [, index] = api.registry.createType('(u64, ReferendumIndex)', id);
            const imageHash = scheduled.call.args[0];
            result.push({
              at,
              imageHash,
              index
            });
          }
        }
      });
    });
    return result.length ? (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.combineLatest)([(0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)(result), api.derive.democracy.preimages(result.map(({
      imageHash
    }) => imageHash))]) : (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)([[], []]);
  }), (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.map)(([infos, images]) => infos.map((info, index) => ({ ...info,
    image: images[index]
  }))));
}

function dispatchQueue(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_6__.memo)(instanceId, () => {
    var _api$query$scheduler;

    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_7__.isFunction)((_api$query$scheduler = api.query.scheduler) === null || _api$query$scheduler === void 0 ? void 0 : _api$query$scheduler.agenda) ? queryScheduler(api) : api.query.democracy.dispatchQueue ? queryQueue(api) : (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)([]);
  });
}

/***/ }),
/* 762 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "stringToHex": () => (/* binding */ stringToHex)
/* harmony export */ });
/* harmony import */ var _u8a_toHex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(196);
/* harmony import */ var _toU8a_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(170);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0


/**
 * @name stringToHex
 * @summary Creates a hex string from a utf-8 string
 * @description
 * String input values return the actual encoded hex value.
 * @example
 * <BR>
 *
 * ```javascript
 * import { stringToHex } from '@polkadot/util';
 *
 * stringToU8a('hello'); // 0x68656c6c6f
 * ```
 */

function stringToHex(value) {
  return (0,_u8a_toHex_js__WEBPACK_IMPORTED_MODULE_0__.u8aToHex)((0,_toU8a_js__WEBPACK_IMPORTED_MODULE_1__.stringToU8a)(value));
}

/***/ }),
/* 763 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "locks": () => (/* binding */ locks)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(660);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(240);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(82);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0



const LOCKUPS = [0, 1, 2, 4, 8, 16, 32];

function parseEnd(api, vote, {
  approved,
  end
}) {
  return [end, approved.isTrue && vote.isAye || approved.isFalse && vote.isNay ? end.add((api.consts.democracy.voteLockingPeriod || api.consts.democracy.enactmentPeriod).muln(LOCKUPS[vote.conviction.index])) : _polkadot_util__WEBPACK_IMPORTED_MODULE_0__.BN_ZERO];
}

function parseLock(api, [referendumId, accountVote], referendum) {
  const {
    balance,
    vote
  } = accountVote.asStandard;
  const [referendumEnd, unlockAt] = referendum.isFinished ? parseEnd(api, vote, referendum.asFinished) : [_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.BN_ZERO, _polkadot_util__WEBPACK_IMPORTED_MODULE_0__.BN_ZERO];
  return {
    balance,
    isDelegated: false,
    isFinished: referendum.isFinished,
    referendumEnd,
    referendumId,
    unlockAt,
    vote
  };
}

function delegateLocks(api, {
  balance,
  conviction,
  target
}) {
  return api.derive.democracy.locks(target).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(available => available.map(({
    isFinished,
    referendumEnd,
    referendumId,
    unlockAt,
    vote
  }) => ({
    balance,
    isDelegated: true,
    isFinished,
    referendumEnd,
    referendumId,
    unlockAt: unlockAt.isZero() ? unlockAt : referendumEnd.add((api.consts.democracy.voteLockingPeriod || api.consts.democracy.enactmentPeriod).muln(LOCKUPS[conviction.index])),
    vote: api.registry.createType('Vote', {
      aye: vote.isAye,
      conviction
    })
  }))));
}

function directLocks(api, {
  votes
}) {
  if (!votes.length) {
    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)([]);
  }

  return api.query.democracy.referendumInfoOf.multi(votes.map(([referendumId]) => referendumId)).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(referendums => votes.map((vote, index) => [vote, referendums[index].unwrapOr(null)]).filter(item => !!item[1] && (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.isUndefined)(item[1].end) && item[0][1].isStandard).map(([directVote, referendum]) => parseLock(api, directVote, referendum))));
}

function locks(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_4__.memo)(instanceId, accountId => api.query.democracy.votingOf ? api.query.democracy.votingOf(accountId).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_5__.switchMap)(voting => voting.isDirect ? directLocks(api, voting.asDirect) : voting.isDelegating ? delegateLocks(api, voting.asDelegating) : (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)([]))) : (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)([]));
}

/***/ }),
/* 764 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "nextExternal": () => (/* binding */ nextExternal)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(660);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0



function withImage(api, nextOpt) {
  if (nextOpt.isNone) {
    return (0,rxjs__WEBPACK_IMPORTED_MODULE_0__.of)(null);
  }

  const [imageHash, threshold] = nextOpt.unwrap();
  return api.derive.democracy.preimage(imageHash).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(image => ({
    image,
    imageHash,
    threshold
  })));
}

function nextExternal(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_2__.memo)(instanceId, () => {
    var _api$query$democracy;

    return (_api$query$democracy = api.query.democracy) !== null && _api$query$democracy !== void 0 && _api$query$democracy.nextExternal ? api.query.democracy.nextExternal().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_3__.switchMap)(nextOpt => withImage(api, nextOpt))) : (0,rxjs__WEBPACK_IMPORTED_MODULE_0__.of)(null);
  });
}

/***/ }),
/* 765 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "preimage": () => (/* binding */ preimage)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(599);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(766);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0



function preimage(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, hash => api.query.democracy.preimages(hash).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(imageOpt => (0,_util_js__WEBPACK_IMPORTED_MODULE_2__.parseImage)(api, imageOpt))));
}

/***/ }),
/* 766 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "compareRationals": () => (/* binding */ compareRationals),
/* harmony export */   "calcPassing": () => (/* binding */ calcPassing),
/* harmony export */   "calcVotes": () => (/* binding */ calcVotes),
/* harmony export */   "getStatus": () => (/* binding */ getStatus),
/* harmony export */   "parseImage": () => (/* binding */ parseImage)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(767);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(88);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


function isOldInfo(info) {
  return !!info.proposalHash;
}

function isCurrentStatus(status) {
  return !!status.tally;
}

function isCurrentPreimage(api, imageOpt) {
  return !!imageOpt && !api.query.democracy.dispatchQueue;
}

function compareRationals(n1, d1, n2, d2) {
  while (true) {
    const q1 = n1.div(d1);
    const q2 = n2.div(d2);

    if (q1.lt(q2)) {
      return true;
    } else if (q2.lt(q1)) {
      return false;
    }

    const r1 = n1.mod(d1);
    const r2 = n2.mod(d2);

    if (r2.isZero()) {
      return false;
    } else if (r1.isZero()) {
      return true;
    }

    n1 = d2;
    n2 = d1;
    d1 = r2;
    d2 = r1;
  }
}

function calcPassingOther(threshold, sqrtElectorate, {
  votedAye,
  votedNay,
  votedTotal
}) {
  const sqrtVoters = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.bnSqrt)(votedTotal);
  return sqrtVoters.isZero() ? false : threshold.isSuperMajorityApprove ? compareRationals(votedNay, sqrtVoters, votedAye, sqrtElectorate) : compareRationals(votedNay, sqrtElectorate, votedAye, sqrtVoters);
}

function calcPassing(threshold, sqrtElectorate, state) {
  return threshold.isSimpleMajority ? state.votedAye.gt(state.votedNay) : calcPassingOther(threshold, sqrtElectorate, state);
}

function calcVotesPrev(votesFor) {
  return votesFor.reduce((state, derived) => {
    const {
      balance,
      vote
    } = derived;
    const isDefault = vote.conviction.index === 0;
    const counted = balance.muln(isDefault ? 1 : vote.conviction.index).divn(isDefault ? 10 : 1);

    if (vote.isAye) {
      state.allAye.push(derived);
      state.voteCountAye++;
      state.votedAye.iadd(counted);
    } else {
      state.allNay.push(derived);
      state.voteCountNay++;
      state.votedNay.iadd(counted);
    }

    state.voteCount++;
    state.votedTotal.iadd(counted);
    return state;
  }, {
    allAye: [],
    allNay: [],
    voteCount: 0,
    voteCountAye: 0,
    voteCountNay: 0,
    votedAye: new _polkadot_util__WEBPACK_IMPORTED_MODULE_1__(0),
    votedNay: new _polkadot_util__WEBPACK_IMPORTED_MODULE_1__(0),
    votedTotal: new _polkadot_util__WEBPACK_IMPORTED_MODULE_1__(0)
  });
}

function calcVotesCurrent(tally, votes) {
  const allAye = [];
  const allNay = [];
  votes.forEach(derived => {
    if (derived.vote.isAye) {
      allAye.push(derived);
    } else {
      allNay.push(derived);
    }
  });
  return {
    allAye,
    allNay,
    voteCount: allAye.length + allNay.length,
    voteCountAye: allAye.length,
    voteCountNay: allNay.length,
    votedAye: tally.ayes,
    votedNay: tally.nays,
    votedTotal: tally.turnout
  };
}

function calcVotes(sqrtElectorate, referendum, votes) {
  const state = isCurrentStatus(referendum.status) ? calcVotesCurrent(referendum.status.tally, votes) : calcVotesPrev(votes);
  return { ...state,
    isPassing: calcPassing(referendum.status.threshold, sqrtElectorate, state),
    votes
  };
}
function getStatus(info) {
  if (info.isNone) {
    return null;
  }

  const unwrapped = info.unwrap();

  if (isOldInfo(unwrapped)) {
    return unwrapped;
  } else if (unwrapped.isOngoing) {
    return unwrapped.asOngoing;
  } // done, we don't include it here... only currently active


  return null;
}

function constructProposal(api, [bytes, proposer, balance, at]) {
  let proposal;

  try {
    proposal = api.registry.createType('Proposal', bytes.toU8a(true));
  } catch (error) {
    console.error(error);
  }

  return {
    at,
    balance,
    proposal,
    proposer
  };
}

function parseImage(api, imageOpt) {
  if (imageOpt.isNone) {
    return;
  }

  if (isCurrentPreimage(api, imageOpt)) {
    const status = imageOpt.unwrap();

    if (status.isMissing) {
      return;
    }

    const {
      data,
      deposit,
      provider,
      since
    } = status.asAvailable;
    return constructProposal(api, [data, provider, deposit, since]);
  }

  return constructProposal(api, imageOpt.unwrap());
}

/***/ }),
/* 767 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "bnSqrt": () => (/* binding */ bnSqrt)
/* harmony export */ });
/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(80);
/* harmony import */ var _bn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(88);
/* harmony import */ var _consts_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(240);
/* harmony import */ var _toBn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(125);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0




const SQRT_MAX_SAFE_INTEGER = new _bn_js__WEBPACK_IMPORTED_MODULE_0__(94906265);
/**
 * @name bnSqrt
 * @summary Calculates the integer square root of a BN
 * @example
 * <BR>
 *
 * ```javascript
 * import BN from 'bn.js';
 * import { bnSqrt } from '@polkadot/util';
 *
 * bnSqrt(new BN(16)).toString(); // => '4'
 * ```
 */

function bnSqrt(value) {
  const n = (0,_toBn_js__WEBPACK_IMPORTED_MODULE_1__.bnToBn)(value);
  (0,_assert_js__WEBPACK_IMPORTED_MODULE_2__.assert)(n.gte(_consts_js__WEBPACK_IMPORTED_MODULE_3__.BN_ZERO), 'square root of negative numbers is not supported'); // https://stackoverflow.com/questions/53683995/javascript-big-integer-square-root/
  // shortcut <= 2^53 - 1 to use the JS utils

  if (n.lte(_consts_js__WEBPACK_IMPORTED_MODULE_3__.BN_MAX_INTEGER)) {
    return new _bn_js__WEBPACK_IMPORTED_MODULE_0__(Math.floor(Math.sqrt(n.toNumber())));
  } // Use sqrt(MAX_SAFE_INTEGER) as starting point. since we already know the
  // output will be larger than this, we expect this to be a safe start


  let x0 = SQRT_MAX_SAFE_INTEGER.clone();

  while (true) {
    const x1 = n.div(x0).iadd(x0).ishrn(1);

    if (x0.eq(x1) || x0.eq(x1.sub(_consts_js__WEBPACK_IMPORTED_MODULE_3__.BN_ONE))) {
      return x0;
    }

    x0 = x1;
  }
}

/***/ }),
/* 768 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "preimages": () => (/* binding */ preimages)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(654);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(766);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0



function preimages(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, hashes => hashes.length ? api.query.democracy.preimages.multi(hashes).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(images => images.map(imageOpt => (0,_util_js__WEBPACK_IMPORTED_MODULE_2__.parseImage)(api, imageOpt)))) : (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)([]));
}

/***/ }),
/* 769 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "proposals": () => (/* binding */ proposals)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(660);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(662);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(599);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(81);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0




// eslint-disable-next-line @typescript-eslint/no-unused-vars
function isNewDepositors(depositors) {
  // Detect balance...
  // eslint-disable-next-line @typescript-eslint/unbound-method
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.isFunction)(depositors[1].mul);
}

function parse([proposals, images, optDepositors]) {
  return proposals.filter(([,, proposer], index) => {
    var _optDepositors$index;

    return !!((_optDepositors$index = optDepositors[index]) !== null && _optDepositors$index !== void 0 && _optDepositors$index.isSome) && !proposer.isEmpty;
  }).map(([index, imageHash, proposer], proposalIndex) => {
    const depositors = optDepositors[proposalIndex].unwrap();
    return { ...(isNewDepositors(depositors) ? {
        balance: depositors[1],
        seconds: depositors[0]
      } : {
        balance: depositors[0],
        seconds: depositors[1]
      }),
      image: images[proposalIndex],
      imageHash,
      index,
      proposer
    };
  });
}

function proposals(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.memo)(instanceId, () => {
    var _api$query$democracy, _api$query$democracy2;

    return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.isFunction)((_api$query$democracy = api.query.democracy) === null || _api$query$democracy === void 0 ? void 0 : _api$query$democracy.publicProps) && (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.isFunction)((_api$query$democracy2 = api.query.democracy) === null || _api$query$democracy2 === void 0 ? void 0 : _api$query$democracy2.preimages) ? api.query.democracy.publicProps().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_2__.switchMap)(proposals => proposals.length ? (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.combineLatest)([(0,rxjs__WEBPACK_IMPORTED_MODULE_4__.of)(proposals), api.derive.democracy.preimages(proposals.map(([, hash]) => hash)), api.query.democracy.depositOf.multi(proposals.map(([index]) => index))]) : (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.of)([[], [], []])), (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.map)(parse)) : (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.of)([]);
  });
}

/***/ }),
/* 770 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "referendumIds": () => (/* binding */ referendumIds)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(654);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


function referendumIds(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, () => {
    var _api$query$democracy;

    return (_api$query$democracy = api.query.democracy) !== null && _api$query$democracy !== void 0 && _api$query$democracy.lowestUnbaked ? api.queryMulti([api.query.democracy.lowestUnbaked, api.query.democracy.referendumCount]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(([first, total]) => total.gt(first) // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
    ? [...Array(total.sub(first).toNumber())].map((_, i) => first.addn(i)) : [])) : (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)([]);
  });
}

/***/ }),
/* 771 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "referendums": () => (/* binding */ referendums)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(660);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(662);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(599);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


function referendums(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, () => api.derive.democracy.referendumsActive().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.switchMap)(referendums => referendums.length ? (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.combineLatest)([(0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)(referendums), api.derive.democracy._referendumsVotes(referendums)]) : (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)([[], []])), (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.map)(([referendums, votes]) => referendums.map((referendum, index) => ({ ...referendum,
    ...votes[index]
  })))));
}

/***/ }),
/* 772 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "referendumsActive": () => (/* binding */ referendumsActive)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(660);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(654);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


function referendumsActive(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, () => api.derive.democracy.referendumIds().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.switchMap)(ids => ids.length ? api.derive.democracy.referendumsInfo(ids) : (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)([]))));
}

/***/ }),
/* 773 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "referendumsFinished": () => (/* binding */ referendumsFinished)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(660);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(599);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


function referendumsFinished(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, () => api.derive.democracy.referendumIds().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.switchMap)(ids => api.query.democracy.referendumInfoOf.multi(ids)), (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.map)(infos => infos.map(optInfo => optInfo.unwrapOr(null)).filter(info => !!info && info.isFinished).map(info => info.asFinished))));
}

/***/ }),
/* 774 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "_referendumVotes": () => (/* binding */ _referendumVotes),
/* harmony export */   "_referendumsVotes": () => (/* binding */ _referendumsVotes),
/* harmony export */   "_referendumInfo": () => (/* binding */ _referendumInfo),
/* harmony export */   "referendumsInfo": () => (/* binding */ referendumsInfo)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(660);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(662);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(599);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(81);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(624);
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(766);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0





function votesPrev(api, referendumId) {
  return api.query.democracy.votersFor(referendumId).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_0__.switchMap)(votersFor => (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.combineLatest)([(0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)(votersFor), votersFor.length ? api.query.democracy.voteOf.multi(votersFor.map(accountId => [referendumId, accountId])) : (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)([]), api.derive.balances.votingBalances(votersFor)])), (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.map)(([votersFor, votes, balances]) => votersFor.map((accountId, index) => ({
    accountId,
    balance: balances[index].votingBalance || api.registry.createType('Balance'),
    isDelegating: false,
    vote: votes[index] || api.registry.createType('Vote')
  }))));
}

function extractVotes(mapped, referendumId) {
  return mapped.filter(([, voting]) => voting.isDirect).map(([accountId, voting]) => [accountId, voting.asDirect.votes.filter(([idx]) => idx.eq(referendumId))]).filter(([, directVotes]) => !!directVotes.length).reduce((result, [accountId, votes]) => // FIXME We are ignoring split votes
  votes.reduce((result, [, vote]) => {
    if (vote.isStandard) {
      result.push({
        accountId,
        isDelegating: false,
        ...vote.asStandard
      });
    }

    return result;
  }, result), []);
}

function votesCurr(api, referendumId) {
  return api.query.democracy.votingOf.entries().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_3__.map)(allVoting => {
    const mapped = allVoting.map(([{
      args: [accountId]
    }, voting]) => [accountId, voting]);
    const votes = extractVotes(mapped, referendumId);
    const delegations = mapped.filter(([, voting]) => voting.isDelegating).map(([accountId, voting]) => [accountId, voting.asDelegating]); // add delegations

    delegations.forEach(([accountId, {
      balance,
      conviction,
      target
    }]) => {
      // Are we delegating to a delegator
      const toDelegator = delegations.find(([accountId]) => accountId.eq(target));
      const to = votes.find(({
        accountId
      }) => accountId.eq(toDelegator ? toDelegator[0] : target)); // this delegation has a target

      if (to) {
        votes.push({
          accountId,
          balance,
          isDelegating: true,
          vote: api.registry.createType('Vote', {
            aye: to.vote.isAye,
            conviction
          })
        });
      }
    });
    return votes;
  }));
}

function _referendumVotes(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_4__.memo)(instanceId, referendum => (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.combineLatest)([api.derive.democracy.sqrtElectorate(), (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.isFunction)(api.query.democracy.votingOf) ? votesCurr(api, referendum.index) : votesPrev(api, referendum.index)]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_3__.map)(([sqrtElectorate, votes]) => (0,_util_js__WEBPACK_IMPORTED_MODULE_6__.calcVotes)(sqrtElectorate, referendum, votes))));
}
function _referendumsVotes(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_4__.memo)(instanceId, referendums => referendums.length ? (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.combineLatest)(referendums.map(referendum => api.derive.democracy._referendumVotes(referendum))) : (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)([]));
}
function _referendumInfo(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_4__.memo)(instanceId, (index, info) => {
    const status = (0,_util_js__WEBPACK_IMPORTED_MODULE_6__.getStatus)(info);
    return status ? api.query.democracy.preimages(status.proposalHash).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_3__.map)(preimage => ({
      image: (0,_util_js__WEBPACK_IMPORTED_MODULE_6__.parseImage)(api, preimage),
      imageHash: status.proposalHash,
      index: api.registry.createType('ReferendumIndex', index),
      status
    }))) : (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)(null);
  });
}
function referendumsInfo(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_4__.memo)(instanceId, ids => ids.length ? api.query.democracy.referendumInfoOf.multi(ids).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_0__.switchMap)(infos => (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.combineLatest)(ids.map((id, index) => api.derive.democracy._referendumInfo(id, infos[index])))), (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.map)(infos => infos.filter(referendum => !!referendum))) : (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)([]));
}

/***/ }),
/* 775 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "sqrtElectorate": () => (/* binding */ sqrtElectorate)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(599);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(767);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0



function sqrtElectorate(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, () => api.query.balances.totalIssuance().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(totalIssuance => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.bnSqrt)(totalIssuance))));
}

/***/ }),
/* 776 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "info": () => (/* reexport safe */ _info_js__WEBPACK_IMPORTED_MODULE_0__.info)
/* harmony export */ });
/* harmony import */ var _info_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(777);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


/***/ }),
/* 777 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "info": () => (/* binding */ info)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(662);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(599);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0

 // SeatHolder is current tuple is 2.x-era Substrate

function isSeatHolder(value) {
  return !Array.isArray(value);
}

function isCandidateTuple(value) {
  return Array.isArray(value);
}

function getAccountTuple(value) {
  return isSeatHolder(value) ? [value.who, value.stake] : value;
}

function getCandidate(value) {
  return isCandidateTuple(value) ? value[0] : value;
}

function sortAccounts([, balanceA], [, balanceB]) {
  return balanceB.cmp(balanceA);
}

function queryElections(api) {
  const elections = api.query.phragmenElection ? 'phragmenElection' : api.query.electionsPhragmen ? 'electionsPhragmen' : api.query.elections ? 'elections' : null;
  const [council] = api.registry.getModuleInstances(api.runtimeVersion.specName.toString(), 'council') || ['council'];
  return (elections ? api.queryMulti([api.query[council].members, api.query[elections].candidates, api.query[elections].members, api.query[elections].runnersUp]) : (0,rxjs__WEBPACK_IMPORTED_MODULE_0__.combineLatest)([api.query[council].members(), (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.of)([]), (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.of)([]), (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.of)([])])).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_2__.map)(([councilMembers, candidates, members, runnersUp]) => ({ ...(elections ? {
      candidacyBond: api.consts[elections].candidacyBond,
      desiredRunnersUp: api.consts[elections].desiredRunnersUp,
      desiredSeats: api.consts[elections].desiredMembers,
      termDuration: api.consts[elections].termDuration,
      votingBond: api.consts[elections].votingBond
    } : {}),
    candidateCount: api.registry.createType('u32', candidates.length),
    candidates: candidates.map(getCandidate),
    members: members.length ? members.map(getAccountTuple).sort(sortAccounts) : councilMembers.map(accountId => [accountId, api.registry.createType('Balance')]),
    runnersUp: runnersUp.map(getAccountTuple).sort(sortAccounts)
  })));
}
/**
 * @name info
 * @returns An object containing the combined results of the storage queries for
 * all relevant election module properties.
 * @example
 * <BR>
 *
 * ```javascript
 * api.derive.elections.info(({ members, candidates }) => {
 *   console.log(`There are currently ${members.length} council members and ${candidates.length} prospective council candidates.`);
 * });
 * ```
 */


function info(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.memo)(instanceId, () => queryElections(api));
}

/***/ }),
/* 778 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "receivedHeartbeats": () => (/* reexport safe */ _receivedHeartbeats_js__WEBPACK_IMPORTED_MODULE_0__.receivedHeartbeats)
/* harmony export */ });
/* harmony import */ var _receivedHeartbeats_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(779);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


/***/ }),
/* 779 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "receivedHeartbeats": () => (/* binding */ receivedHeartbeats)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(660);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(662);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(599);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(240);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0




function mapResult([result, validators, heartbeats, numBlocks]) {
  validators.forEach((validator, index) => {
    const validatorId = validator.toString();
    const blockCount = numBlocks[index];
    const hasMessage = !heartbeats[index].isEmpty;
    const prev = result[validatorId];

    if (!prev || prev.hasMessage !== hasMessage || !prev.blockCount.eq(blockCount)) {
      result[validatorId] = {
        blockCount,
        hasMessage,
        isOnline: hasMessage || blockCount.gt(_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.BN_ZERO)
      };
    }
  });
  return result;
}
/**
 * @description Return a boolean array indicating whether the passed accounts had received heartbeats in the current session
 */


function receivedHeartbeats(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.memo)(instanceId, () => {
    var _api$query$imOnline;

    return (_api$query$imOnline = api.query.imOnline) !== null && _api$query$imOnline !== void 0 && _api$query$imOnline.receivedHeartbeats ? api.derive.staking.overview().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_2__.switchMap)(({
      currentIndex,
      validators
    }) => (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.combineLatest)([(0,rxjs__WEBPACK_IMPORTED_MODULE_4__.of)({}), (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.of)(validators), api.query.imOnline.receivedHeartbeats.multi(validators.map((_address, index) => [currentIndex, index])), api.query.imOnline.authoredBlocks.multi(validators.map(address => [currentIndex, address]))])), (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.map)(mapResult)) : (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.of)({});
  });
}

/***/ }),
/* 780 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "members": () => (/* reexport safe */ _members_js__WEBPACK_IMPORTED_MODULE_0__.members),
/* harmony export */   "prime": () => (/* reexport safe */ _prime_js__WEBPACK_IMPORTED_MODULE_1__.prime),
/* harmony export */   "hasProposals": () => (/* reexport safe */ _proposals_js__WEBPACK_IMPORTED_MODULE_2__.hasProposals),
/* harmony export */   "proposal": () => (/* reexport safe */ _proposals_js__WEBPACK_IMPORTED_MODULE_2__.proposal),
/* harmony export */   "proposalCount": () => (/* reexport safe */ _proposals_js__WEBPACK_IMPORTED_MODULE_2__.proposalCount),
/* harmony export */   "proposalHashes": () => (/* reexport safe */ _proposals_js__WEBPACK_IMPORTED_MODULE_2__.proposalHashes),
/* harmony export */   "proposals": () => (/* reexport safe */ _proposals_js__WEBPACK_IMPORTED_MODULE_2__.proposals)
/* harmony export */ });
/* harmony import */ var _members_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(781);
/* harmony import */ var _prime_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(782);
/* harmony import */ var _proposals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(783);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0




/***/ }),
/* 781 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "members": () => (/* binding */ members)
/* harmony export */ });
/* harmony import */ var _collective_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(747);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


function members(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (0,_collective_index_js__WEBPACK_IMPORTED_MODULE_1__.members)(instanceId, api, 'membership'));
}

/***/ }),
/* 782 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "prime": () => (/* binding */ prime)
/* harmony export */ });
/* harmony import */ var _collective_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(750);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


function prime(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (0,_collective_index_js__WEBPACK_IMPORTED_MODULE_1__.prime)(instanceId, api, 'membership'));
}

/***/ }),
/* 783 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "hasProposals": () => (/* binding */ hasProposals),
/* harmony export */   "proposal": () => (/* binding */ proposal),
/* harmony export */   "proposalCount": () => (/* binding */ proposalCount),
/* harmony export */   "proposalHashes": () => (/* binding */ proposalHashes),
/* harmony export */   "proposals": () => (/* binding */ proposals)
/* harmony export */ });
/* harmony import */ var _collective_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(752);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


function hasProposals(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (0,_collective_index_js__WEBPACK_IMPORTED_MODULE_1__.hasProposals)(instanceId, api, 'membership'));
}
function proposal(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (0,_collective_index_js__WEBPACK_IMPORTED_MODULE_1__.proposal)(instanceId, api, 'membership'));
}
function proposalCount(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (0,_collective_index_js__WEBPACK_IMPORTED_MODULE_1__.proposalCount)(instanceId, api, 'membership'));
}
function proposalHashes(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (0,_collective_index_js__WEBPACK_IMPORTED_MODULE_1__.proposalHashes)(instanceId, api, 'membership'));
}
function proposals(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (0,_collective_index_js__WEBPACK_IMPORTED_MODULE_1__.proposals)(instanceId, api, 'membership'));
}

/***/ }),
/* 784 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "info": () => (/* reexport safe */ _info_js__WEBPACK_IMPORTED_MODULE_0__.info),
/* harmony export */   "overview": () => (/* reexport safe */ _overview_js__WEBPACK_IMPORTED_MODULE_1__.overview)
/* harmony export */ });
/* harmony import */ var _info_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(785);
/* harmony import */ var _overview_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(787);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0



/***/ }),
/* 785 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "info": () => (/* binding */ info)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(654);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(624);
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(786);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0




function parseActive(id, active) {
  const found = active.find(([paraId]) => paraId === id);

  if (found && found[1].isSome) {
    const [collatorId, retriable] = found[1].unwrap();
    return {
      collatorId,
      ...(retriable.isWithRetries ? {
        isRetriable: true,
        retries: retriable.asWithRetries.toNumber()
      } : {
        isRetriable: false,
        retries: 0
      })
    };
  }

  return null;
}

function parseCollators(id, collatorQueue) {
  return collatorQueue.map(queue => {
    const found = queue.find(([paraId]) => paraId === id);
    return found ? found[1] : null;
  });
}

function parse(id, [active, retryQueue, selectedThreads, didUpdate, info, pendingSwap, heads, relayDispatchQueue]) {
  if (info.isNone) {
    return null;
  }

  return {
    active: parseActive(id, active),
    didUpdate: (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.didUpdateToBool)(didUpdate, id),
    heads,
    id,
    info: {
      id,
      ...info.unwrap()
    },
    pendingSwapId: pendingSwap.unwrapOr(null),
    relayDispatchQueue,
    retryCollators: parseCollators(id, retryQueue),
    selectedCollators: parseCollators(id, selectedThreads)
  };
}

function info(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.memo)(instanceId, id => api.query.registrar && api.query.parachains ? api.queryMulti([api.query.registrar.active, api.query.registrar.retryQueue, api.query.registrar.selectedThreads, api.query.parachains.didUpdate, [api.query.registrar.paras, id], [api.query.registrar.pendingSwap, id], [api.query.parachains.heads, id], [api.query.parachains.relayDispatchQueue, id]]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_2__.map)(result => parse(api.registry.createType('ParaId', id), result))) : (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)(null));
}

/***/ }),
/* 786 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "didUpdateToBool": () => (/* binding */ didUpdateToBool)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
function didUpdateToBool(didUpdate, id) {
  return didUpdate.isSome ? didUpdate.unwrap().some(paraId => paraId.eq(id)) : false;
}

/***/ }),
/* 787 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "overview": () => (/* binding */ overview)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(660);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(662);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(599);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(624);
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(786);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0




function parse([ids, didUpdate, infos, pendingSwaps, relayDispatchQueueSizes]) {
  return ids.map((id, index) => ({
    didUpdate: (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.didUpdateToBool)(didUpdate, id),
    id,
    info: {
      id,
      ...infos[index].unwrapOr(null)
    },
    pendingSwapId: pendingSwaps[index].unwrapOr(null),
    relayDispatchQueueSize: relayDispatchQueueSizes[index][0].toNumber()
  }));
}

function overview(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.memo)(instanceId, () => {
    var _api$query$registrar;

    return (_api$query$registrar = api.query.registrar) !== null && _api$query$registrar !== void 0 && _api$query$registrar.parachains && api.query.parachains ? api.query.registrar.parachains().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_2__.switchMap)(paraIds => (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.combineLatest)([(0,rxjs__WEBPACK_IMPORTED_MODULE_4__.of)(paraIds), api.query.parachains.didUpdate(), api.query.registrar.paras.multi(paraIds), api.query.registrar.pendingSwap.multi(paraIds), api.query.parachains.relayDispatchQueueSize.multi(paraIds)])), (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.map)(parse)) : (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.of)([]);
  });
}

/***/ }),
/* 788 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "eraLength": () => (/* reexport safe */ _eraLength_js__WEBPACK_IMPORTED_MODULE_0__.eraLength),
/* harmony export */   "eraProgress": () => (/* reexport safe */ _eraProgress_js__WEBPACK_IMPORTED_MODULE_1__.eraProgress),
/* harmony export */   "indexes": () => (/* reexport safe */ _indexes_js__WEBPACK_IMPORTED_MODULE_2__.indexes),
/* harmony export */   "info": () => (/* reexport safe */ _info_js__WEBPACK_IMPORTED_MODULE_3__.info),
/* harmony export */   "progress": () => (/* reexport safe */ _progress_js__WEBPACK_IMPORTED_MODULE_4__.progress),
/* harmony export */   "sessionProgress": () => (/* reexport safe */ _sessionProgress_js__WEBPACK_IMPORTED_MODULE_5__.sessionProgress)
/* harmony export */ });
/* harmony import */ var _eraLength_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(789);
/* harmony import */ var _eraProgress_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(790);
/* harmony import */ var _indexes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(791);
/* harmony import */ var _info_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(792);
/* harmony import */ var _progress_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(793);
/* harmony import */ var _sessionProgress_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(794);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0







/***/ }),
/* 789 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "eraLength": () => (/* binding */ eraLength)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(599);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


function eraLength(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, () => api.derive.session.info().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(info => info.eraLength)));
}

/***/ }),
/* 790 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "eraProgress": () => (/* binding */ eraProgress)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(599);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


function eraProgress(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, () => api.derive.session.progress().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(info => info.eraProgress)));
}

/***/ }),
/* 791 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "indexes": () => (/* binding */ indexes)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(654);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0

 // parse into Indexes

function parse([currentIndex, activeEra, activeEraStart, currentEra, validatorCount]) {
  return {
    activeEra,
    activeEraStart,
    currentEra,
    currentIndex,
    validatorCount
  };
} // query based on latest


function queryStaking(api) {
  return api.queryMulti([api.query.session.currentIndex, api.query.staking.activeEra, api.query.staking.currentEra, api.query.staking.validatorCount]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_0__.map)(([currentIndex, activeOpt, currentEra, validatorCount]) => {
    const {
      index,
      start
    } = activeOpt.unwrapOrDefault();
    return parse([currentIndex, index, start, currentEra.unwrapOrDefault(), validatorCount]);
  }));
} // query based on latest


function querySession(api) {
  return api.query.session.currentIndex().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_0__.map)(currentIndex => parse([currentIndex, api.registry.createType('EraIndex'), api.registry.createType('Option<Moment>'), api.registry.createType('EraIndex'), api.registry.createType('u32')])));
} // empty set when none is available


function empty(api) {
  return (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.of)(parse([api.registry.createType('SessionIndex', 1), api.registry.createType('EraIndex'), api.registry.createType('Option<Moment>'), api.registry.createType('EraIndex'), api.registry.createType('u32')]));
}

function indexes(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_2__.memo)(instanceId, () => api.query.session ? api.query.staking ? queryStaking(api) : querySession(api) : empty(api));
}

/***/ }),
/* 792 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "info": () => (/* binding */ info)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(599);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


/**
 * @description Retrieves all the session and era query and calculates specific values on it as the length of the session and eras
 */

function info(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, () => api.derive.session.indexes().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(indexes => {
    var _api$consts, _api$consts$babe, _api$consts2, _api$consts2$staking;

    const sessionLength = ((_api$consts = api.consts) === null || _api$consts === void 0 ? void 0 : (_api$consts$babe = _api$consts.babe) === null || _api$consts$babe === void 0 ? void 0 : _api$consts$babe.epochDuration) || api.registry.createType('u64', 1);
    const sessionsPerEra = ((_api$consts2 = api.consts) === null || _api$consts2 === void 0 ? void 0 : (_api$consts2$staking = _api$consts2.staking) === null || _api$consts2$staking === void 0 ? void 0 : _api$consts2$staking.sessionsPerEra) || api.registry.createType('SessionIndex', 1);
    return { ...indexes,
      eraLength: api.registry.createType('BlockNumber', sessionsPerEra.mul(sessionLength)),
      isEpoch: !!api.query.babe,
      sessionLength,
      sessionsPerEra
    };
  })));
}

/***/ }),
/* 793 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "progress": () => (/* binding */ progress)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(660);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(662);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(654);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0



function createDerive(api, info, [currentSlot, epochIndex, epochOrGenesisStartSlot, activeEraStartSessionIndex]) {
  const epochStartSlot = epochIndex.mul(info.sessionLength).iadd(epochOrGenesisStartSlot);
  const sessionProgress = currentSlot.sub(epochStartSlot);
  const eraProgress = info.currentIndex.sub(activeEraStartSessionIndex).imul(info.sessionLength).iadd(sessionProgress);
  return { ...info,
    eraProgress: api.registry.createType('BlockNumber', eraProgress),
    sessionProgress: api.registry.createType('BlockNumber', sessionProgress)
  };
}

function queryAura(api) {
  return api.derive.session.info().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_0__.map)(info => ({ ...info,
    eraProgress: api.registry.createType('BlockNumber'),
    sessionProgress: api.registry.createType('BlockNumber')
  })));
}

function queryBabe(api) {
  return api.derive.session.info().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.switchMap)(info => {
    var _api$query$staking;

    return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.combineLatest)([(0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)(info), // we may have no staking, but have babe (permissioned)
    (_api$query$staking = api.query.staking) !== null && _api$query$staking !== void 0 && _api$query$staking.erasStartSessionIndex ? api.queryMulti([api.query.babe.currentSlot, api.query.babe.epochIndex, api.query.babe.genesisSlot, [api.query.staking.erasStartSessionIndex, info.activeEra]]) : api.queryMulti([api.query.babe.currentSlot, api.query.babe.epochIndex, api.query.babe.genesisSlot])]);
  }), (0,rxjs__WEBPACK_IMPORTED_MODULE_0__.map)(([info, [currentSlot, epochIndex, genesisSlot, optStartIndex]]) => [info, [currentSlot, epochIndex, genesisSlot, optStartIndex && optStartIndex.isSome ? optStartIndex.unwrap() : api.registry.createType('SessionIndex', 1)]]));
}
/**
 * @description Retrieves all the session and era query and calculates specific values on it as the length of the session and eras
 */


function progress(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_4__.memo)(instanceId, () => api.query.babe ? queryBabe(api).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_0__.map)(([info, slots]) => createDerive(api, info, slots))) : queryAura(api));
}

/***/ }),
/* 794 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "sessionProgress": () => (/* binding */ sessionProgress)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(599);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


function sessionProgress(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, () => api.derive.session.progress().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(info => info.sessionProgress)));
}

/***/ }),
/* 795 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "candidates": () => (/* reexport safe */ _candidates_js__WEBPACK_IMPORTED_MODULE_0__.candidates),
/* harmony export */   "info": () => (/* reexport safe */ _info_js__WEBPACK_IMPORTED_MODULE_1__.info),
/* harmony export */   "member": () => (/* reexport safe */ _member_js__WEBPACK_IMPORTED_MODULE_2__.member),
/* harmony export */   "_members": () => (/* reexport safe */ _members_js__WEBPACK_IMPORTED_MODULE_3__._members),
/* harmony export */   "members": () => (/* reexport safe */ _members_js__WEBPACK_IMPORTED_MODULE_3__.members)
/* harmony export */ });
/* harmony import */ var _candidates_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(796);
/* harmony import */ var _info_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(797);
/* harmony import */ var _member_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(798);
/* harmony import */ var _members_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(799);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0





/***/ }),
/* 796 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "candidates": () => (/* binding */ candidates)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(660);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(662);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(599);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0



/**
 * @description Get the candidate info for a society
 */
function candidates(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, () => api.query.society.candidates().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.switchMap)(candidates => (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.combineLatest)([(0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)(candidates), api.query.society.suspendedCandidates.multi(candidates.map(({
    who
  }) => who))])), (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.map)(([candidates, suspended]) => candidates.map(({
    kind,
    value,
    who
  }, index) => ({
    accountId: who,
    isSuspended: suspended[index].isSome,
    kind,
    value
  })))));
}

/***/ }),
/* 797 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "info": () => (/* binding */ info)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(599);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0



/**
 * @description Get the overall info for a society
 */
function info(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, () => api.queryMulti([api.query.society.bids, api.query.society.defender, api.query.society.founder, api.query.society.head, api.query.society.maxMembers, api.query.society.pot]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(([bids, defender, founder, head, maxMembers, pot]) => ({
    bids,
    defender: defender.unwrapOr(undefined),
    founder: founder.unwrapOr(undefined),
    hasDefender: defender.isSome && head.isSome && !head.eq(defender) || false,
    head: head.unwrapOr(undefined),
    maxMembers,
    pot
  }))));
}

/***/ }),
/* 798 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "member": () => (/* binding */ member)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(599);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


/**
 * @description Get the member info for a society
 */

function member(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, accountId => api.derive.society._members([accountId]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(([result]) => result)));
}

/***/ }),
/* 799 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "_members": () => (/* binding */ _members),
/* harmony export */   "members": () => (/* binding */ members)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(662);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(660);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


function _members(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, accountIds => (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.combineLatest)([(0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)(accountIds), api.query.society.payouts.multi(accountIds), api.query.society.strikes.multi(accountIds), api.query.society.defenderVotes.multi(accountIds), api.query.society.suspendedMembers.multi(accountIds), api.query.society.vouching.multi(accountIds)]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_3__.map)(([accountIds, payouts, strikes, defenderVotes, suspended, vouching]) => accountIds.map((accountId, index) => ({
    accountId,
    isDefenderVoter: defenderVotes[index].isSome,
    isSuspended: suspended[index].isTrue,
    payouts: payouts[index],
    strikes: strikes[index],
    vote: defenderVotes[index].unwrapOr(undefined),
    vouching: vouching[index].unwrapOr(undefined)
  })))));
}
/**
 * @description Get the member info for a society
 */

function members(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, () => api.query.society.members().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_4__.switchMap)(members => api.derive.society._members(members))));
}

/***/ }),
/* 800 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "account": () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_0__.account),
/* harmony export */   "accounts": () => (/* reexport safe */ _account_js__WEBPACK_IMPORTED_MODULE_0__.accounts),
/* harmony export */   "currentPoints": () => (/* reexport safe */ _currentPoints_js__WEBPACK_IMPORTED_MODULE_1__.currentPoints),
/* harmony export */   "_eraExposure": () => (/* reexport safe */ _erasExposure_js__WEBPACK_IMPORTED_MODULE_2__._eraExposure),
/* harmony export */   "_erasExposure": () => (/* reexport safe */ _erasExposure_js__WEBPACK_IMPORTED_MODULE_2__._erasExposure),
/* harmony export */   "eraExposure": () => (/* reexport safe */ _erasExposure_js__WEBPACK_IMPORTED_MODULE_2__.eraExposure),
/* harmony export */   "erasExposure": () => (/* reexport safe */ _erasExposure_js__WEBPACK_IMPORTED_MODULE_2__.erasExposure),
/* harmony export */   "erasHistoric": () => (/* reexport safe */ _erasHistoric_js__WEBPACK_IMPORTED_MODULE_3__.erasHistoric),
/* harmony export */   "_erasPoints": () => (/* reexport safe */ _erasPoints_js__WEBPACK_IMPORTED_MODULE_4__._erasPoints),
/* harmony export */   "erasPoints": () => (/* reexport safe */ _erasPoints_js__WEBPACK_IMPORTED_MODULE_4__.erasPoints),
/* harmony export */   "_eraPrefs": () => (/* reexport safe */ _erasPrefs_js__WEBPACK_IMPORTED_MODULE_5__._eraPrefs),
/* harmony export */   "_erasPrefs": () => (/* reexport safe */ _erasPrefs_js__WEBPACK_IMPORTED_MODULE_5__._erasPrefs),
/* harmony export */   "eraPrefs": () => (/* reexport safe */ _erasPrefs_js__WEBPACK_IMPORTED_MODULE_5__.eraPrefs),
/* harmony export */   "erasPrefs": () => (/* reexport safe */ _erasPrefs_js__WEBPACK_IMPORTED_MODULE_5__.erasPrefs),
/* harmony export */   "_erasRewards": () => (/* reexport safe */ _erasRewards_js__WEBPACK_IMPORTED_MODULE_6__._erasRewards),
/* harmony export */   "erasRewards": () => (/* reexport safe */ _erasRewards_js__WEBPACK_IMPORTED_MODULE_6__.erasRewards),
/* harmony export */   "_eraSlashes": () => (/* reexport safe */ _erasSlashes_js__WEBPACK_IMPORTED_MODULE_7__._eraSlashes),
/* harmony export */   "_erasSlashes": () => (/* reexport safe */ _erasSlashes_js__WEBPACK_IMPORTED_MODULE_7__._erasSlashes),
/* harmony export */   "eraSlashes": () => (/* reexport safe */ _erasSlashes_js__WEBPACK_IMPORTED_MODULE_7__.eraSlashes),
/* harmony export */   "erasSlashes": () => (/* reexport safe */ _erasSlashes_js__WEBPACK_IMPORTED_MODULE_7__.erasSlashes),
/* harmony export */   "electedInfo": () => (/* reexport safe */ _electedInfo_js__WEBPACK_IMPORTED_MODULE_8__.electedInfo),
/* harmony export */   "keys": () => (/* reexport safe */ _keys_js__WEBPACK_IMPORTED_MODULE_9__.keys),
/* harmony export */   "keysMulti": () => (/* reexport safe */ _keys_js__WEBPACK_IMPORTED_MODULE_9__.keysMulti),
/* harmony export */   "overview": () => (/* reexport safe */ _overview_js__WEBPACK_IMPORTED_MODULE_10__.overview),
/* harmony export */   "_ownExposures": () => (/* reexport safe */ _ownExposure_js__WEBPACK_IMPORTED_MODULE_11__._ownExposures),
/* harmony export */   "ownExposure": () => (/* reexport safe */ _ownExposure_js__WEBPACK_IMPORTED_MODULE_11__.ownExposure),
/* harmony export */   "ownExposures": () => (/* reexport safe */ _ownExposure_js__WEBPACK_IMPORTED_MODULE_11__.ownExposures),
/* harmony export */   "_ownSlashes": () => (/* reexport safe */ _ownSlashes_js__WEBPACK_IMPORTED_MODULE_12__._ownSlashes),
/* harmony export */   "ownSlash": () => (/* reexport safe */ _ownSlashes_js__WEBPACK_IMPORTED_MODULE_12__.ownSlash),
/* harmony export */   "ownSlashes": () => (/* reexport safe */ _ownSlashes_js__WEBPACK_IMPORTED_MODULE_12__.ownSlashes),
/* harmony export */   "query": () => (/* reexport safe */ _query_js__WEBPACK_IMPORTED_MODULE_13__.query),
/* harmony export */   "queryMulti": () => (/* reexport safe */ _query_js__WEBPACK_IMPORTED_MODULE_13__.queryMulti),
/* harmony export */   "_stakerExposures": () => (/* reexport safe */ _stakerExposure_js__WEBPACK_IMPORTED_MODULE_14__._stakerExposures),
/* harmony export */   "stakerExposure": () => (/* reexport safe */ _stakerExposure_js__WEBPACK_IMPORTED_MODULE_14__.stakerExposure),
/* harmony export */   "stakerExposures": () => (/* reexport safe */ _stakerExposure_js__WEBPACK_IMPORTED_MODULE_14__.stakerExposures),
/* harmony export */   "_stakerPoints": () => (/* reexport safe */ _stakerPoints_js__WEBPACK_IMPORTED_MODULE_15__._stakerPoints),
/* harmony export */   "stakerPoints": () => (/* reexport safe */ _stakerPoints_js__WEBPACK_IMPORTED_MODULE_15__.stakerPoints),
/* harmony export */   "_stakerPrefs": () => (/* reexport safe */ _stakerPrefs_js__WEBPACK_IMPORTED_MODULE_16__._stakerPrefs),
/* harmony export */   "stakerPrefs": () => (/* reexport safe */ _stakerPrefs_js__WEBPACK_IMPORTED_MODULE_16__.stakerPrefs),
/* harmony export */   "_stakerRewards": () => (/* reexport safe */ _stakerRewards_js__WEBPACK_IMPORTED_MODULE_17__._stakerRewards),
/* harmony export */   "_stakerRewardsEras": () => (/* reexport safe */ _stakerRewards_js__WEBPACK_IMPORTED_MODULE_17__._stakerRewardsEras),
/* harmony export */   "stakerRewards": () => (/* reexport safe */ _stakerRewards_js__WEBPACK_IMPORTED_MODULE_17__.stakerRewards),
/* harmony export */   "stakerRewardsMulti": () => (/* reexport safe */ _stakerRewards_js__WEBPACK_IMPORTED_MODULE_17__.stakerRewardsMulti),
/* harmony export */   "stakerRewardsMultiEras": () => (/* reexport safe */ _stakerRewards_js__WEBPACK_IMPORTED_MODULE_17__.stakerRewardsMultiEras),
/* harmony export */   "_stakerSlashes": () => (/* reexport safe */ _stakerSlashes_js__WEBPACK_IMPORTED_MODULE_18__._stakerSlashes),
/* harmony export */   "stakerSlashes": () => (/* reexport safe */ _stakerSlashes_js__WEBPACK_IMPORTED_MODULE_18__.stakerSlashes),
/* harmony export */   "stashes": () => (/* reexport safe */ _stashes_js__WEBPACK_IMPORTED_MODULE_19__.stashes),
/* harmony export */   "nextElected": () => (/* reexport safe */ _validators_js__WEBPACK_IMPORTED_MODULE_20__.nextElected),
/* harmony export */   "validators": () => (/* reexport safe */ _validators_js__WEBPACK_IMPORTED_MODULE_20__.validators),
/* harmony export */   "waitingInfo": () => (/* reexport safe */ _waitingInfo_js__WEBPACK_IMPORTED_MODULE_21__.waitingInfo)
/* harmony export */ });
/* harmony import */ var _account_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(801);
/* harmony import */ var _currentPoints_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(802);
/* harmony import */ var _erasExposure_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(803);
/* harmony import */ var _erasHistoric_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(806);
/* harmony import */ var _erasPoints_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(807);
/* harmony import */ var _erasPrefs_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(809);
/* harmony import */ var _erasRewards_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(810);
/* harmony import */ var _erasSlashes_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(811);
/* harmony import */ var _electedInfo_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(812);
/* harmony import */ var _keys_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(813);
/* harmony import */ var _overview_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(814);
/* harmony import */ var _ownExposure_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(815);
/* harmony import */ var _ownSlashes_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(816);
/* harmony import */ var _query_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(817);
/* harmony import */ var _stakerExposure_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(818);
/* harmony import */ var _stakerPoints_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(819);
/* harmony import */ var _stakerPrefs_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(820);
/* harmony import */ var _stakerRewards_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(821);
/* harmony import */ var _stakerSlashes_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(822);
/* harmony import */ var _stashes_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(823);
/* harmony import */ var _validators_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(824);
/* harmony import */ var _waitingInfo_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(825);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0























/***/ }),
/* 801 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "accounts": () => (/* binding */ accounts),
/* harmony export */   "account": () => (/* binding */ account)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(660);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(662);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(599);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(240);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(88);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0



const QUERY_OPTS = {
  withDestination: true,
  withLedger: true,
  withNominations: true,
  withPrefs: true
};

function groupByEra(list) {
  return list.reduce((map, {
    era,
    value
  }) => {
    const key = era.toString();
    map[key] = (map[key] || _polkadot_util__WEBPACK_IMPORTED_MODULE_0__.BN_ZERO).add(value.unwrap());
    return map;
  }, {});
}

function calculateUnlocking(api, stakingLedger, sessionInfo) {
  const results = Object.entries(groupByEra(((stakingLedger === null || stakingLedger === void 0 ? void 0 : stakingLedger.unlocking) || []).filter(({
    era
  }) => era.unwrap().gt(sessionInfo.activeEra)))).map(([eraString, value]) => ({
    remainingEras: new _polkadot_util__WEBPACK_IMPORTED_MODULE_1__(eraString).isub(sessionInfo.activeEra),
    value: api.registry.createType('Balance', value)
  }));
  return results.length ? results : undefined;
}

function redeemableSum(api, stakingLedger, sessionInfo) {
  return api.registry.createType('Balance', ((stakingLedger === null || stakingLedger === void 0 ? void 0 : stakingLedger.unlocking) || []).reduce((total, {
    era,
    value
  }) => {
    return sessionInfo.activeEra.gte(era.unwrap()) ? total.iadd(value.unwrap()) : total;
  }, new _polkadot_util__WEBPACK_IMPORTED_MODULE_1__(0)));
}

function parseResult(api, sessionInfo, keys, query) {
  return { ...keys,
    ...query,
    redeemable: redeemableSum(api, query.stakingLedger, sessionInfo),
    unlocking: calculateUnlocking(api, query.stakingLedger, sessionInfo)
  };
}
/**
 * @description From a list of stashes, fill in all the relevant staking details
 */


function accounts(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_2__.memo)(instanceId, accountIds => api.derive.session.info().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_3__.switchMap)(sessionInfo => (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.combineLatest)([api.derive.staking.keysMulti(accountIds), api.derive.staking.queryMulti(accountIds, QUERY_OPTS)]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_5__.map)(([keys, queries]) => queries.map((query, index) => parseResult(api, sessionInfo, keys[index], query)))))));
}
/**
 * @description From a stash, retrieve the controllerId and fill in all the relevant staking details
 */

function account(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_2__.memo)(instanceId, accountId => api.derive.staking.accounts([accountId]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_5__.map)(([first]) => first)));
}

/***/ }),
/* 802 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "currentPoints": () => (/* binding */ currentPoints)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(660);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


/**
 * @description Retrieve the staking overview, including elected and points earned
 */

function currentPoints(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, () => api.derive.session.indexes().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.switchMap)(({
    activeEra
  }) => api.query.staking.erasRewardPoints(activeEra))));
}

/***/ }),
/* 803 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "_eraExposure": () => (/* binding */ _eraExposure),
/* harmony export */   "eraExposure": () => (/* binding */ eraExposure),
/* harmony export */   "_erasExposure": () => (/* binding */ _erasExposure),
/* harmony export */   "erasExposure": () => (/* binding */ erasExposure)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(662);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(660);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(804);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


const CACHE_KEY = 'eraExposure';

function mapStakers(era, stakers) {
  const nominators = {};
  const validators = {};
  stakers.forEach(([key, exposure]) => {
    const validatorId = key.args[1].toString();
    validators[validatorId] = exposure;
    exposure.others.forEach(({
      who
    }, validatorIndex) => {
      const nominatorId = who.toString();
      nominators[nominatorId] = nominators[nominatorId] || [];
      nominators[nominatorId].push({
        validatorId,
        validatorIndex
      });
    });
  });
  return {
    era,
    nominators,
    validators
  };
}

function _eraExposure(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (era, withActive) => {
    const cacheKey = `${CACHE_KEY}-${era.toString()}`;
    const cached = withActive ? undefined : _util_index_js__WEBPACK_IMPORTED_MODULE_1__.deriveCache.get(cacheKey);
    return cached ? (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)(cached) : api.query.staking.erasStakersClipped.entries(era).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_3__.map)(stakers => {
      const value = mapStakers(era, stakers);
      !withActive && _util_index_js__WEBPACK_IMPORTED_MODULE_1__.deriveCache.set(cacheKey, value);
      return value;
    }));
  });
}
function eraExposure(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, era => api.derive.staking._eraExposure(era, true));
}
function _erasExposure(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (eras, withActive) => eras.length ? (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.combineLatest)(eras.map(era => api.derive.staking._eraExposure(era, withActive))) : (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)([]));
}
function erasExposure(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (withActive = false) => api.derive.staking.erasHistoric(withActive).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_5__.switchMap)(eras => api.derive.staking._erasExposure(eras, withActive))));
}

/***/ }),
/* 804 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "setDeriveCache": () => (/* binding */ setDeriveCache),
/* harmony export */   "deriveCache": () => (/* binding */ deriveCache)
/* harmony export */ });
/* harmony import */ var _cacheImpl_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(805);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0

const CHACHE_EXPIRY = 7 * (24 * 60) * (60 * 1000);
let deriveCache;

function wrapCache(keyStart, cache) {
  return {
    del: partial => cache.del(`${keyStart}${partial}`),
    forEach: cache.forEach,
    get: partial => {
      const key = `${keyStart}${partial}`;
      const cached = cache.get(key);

      if (cached) {
        cached.x = Date.now();
        cache.set(key, cached);
        return cached.v;
      }

      return undefined;
    },
    set: (partial, v) => {
      cache.set(`${keyStart}${partial}`, {
        v,
        x: Date.now()
      });
    }
  };
}

function clearCache(cache) {
  // clear all expired values
  const now = Date.now();
  const all = [];
  cache.forEach((key, {
    x
  }) => {
    now - x > CHACHE_EXPIRY && all.push(key);
  }); // don't do delete inside loop, just in-case

  all.forEach(key => cache.del(key));
}

function setDeriveCache(prefix = '', cache) {
  deriveCache = cache ? wrapCache(`derive:${prefix}:`, cache) : _cacheImpl_js__WEBPACK_IMPORTED_MODULE_0__.deriveNoopCache;

  if (cache) {
    clearCache(cache);
  }
}
setDeriveCache();


/***/ }),
/* 805 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "deriveMapCache": () => (/* binding */ deriveMapCache),
/* harmony export */   "deriveNoopCache": () => (/* binding */ deriveNoopCache)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
const mapCache = new Map();
const deriveMapCache = {
  del: key => {
    mapCache.delete(key);
  },
  forEach: cb => {
    for (const [k, v] of mapCache.entries()) {
      cb(k, v);
    }
  },
  get: key => {
    return mapCache.get(key);
  },
  set: (key, value) => {
    mapCache.set(key, value);
  }
};
const deriveNoopCache = {
  del: () => undefined,
  forEach: () => undefined,
  get: () => undefined,
  set: (_, value) => value
};

/***/ }),
/* 806 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "erasHistoric": () => (/* binding */ erasHistoric)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(599);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(240);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0



function erasHistoric(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, withActive => api.queryMulti([api.query.staking.activeEra, api.query.staking.historyDepth]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(([activeEraOpt, historyDepth]) => {
    const result = [];
    const max = historyDepth.toNumber();
    const activeEra = activeEraOpt.unwrapOrDefault().index;
    let lastEra = activeEra;

    while (lastEra.gte(_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.BN_ZERO) && result.length < max) {
      if (lastEra !== activeEra || withActive === true) {
        result.push(api.registry.createType('EraIndex', lastEra));
      }

      lastEra = lastEra.sub(_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.BN_ONE);
    } // go from oldest to newest


    return result.reverse();
  })));
}

/***/ }),
/* 807 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "_erasPoints": () => (/* binding */ _erasPoints),
/* harmony export */   "erasPoints": () => (/* binding */ erasPoints)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(660);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(240);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(624);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(804);
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(808);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0




const CACHE_KEY = 'eraPoints';

function mapValidators({
  individual
}) {
  return [...individual.entries()].filter(([, points]) => points.gt(_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.BN_ZERO)).reduce((result, [validatorId, points]) => {
    result[validatorId.toString()] = points;
    return result;
  }, {});
}

function mapPoints(eras, points) {
  return eras.map((era, index) => ({
    era,
    eraPoints: points[index].total,
    validators: mapValidators(points[index])
  }));
}

function _erasPoints(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.memo)(instanceId, (eras, withActive) => {
    if (!eras.length) {
      return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)([]);
    }

    const cached = withActive ? [] : eras.map(era => _util_index_js__WEBPACK_IMPORTED_MODULE_3__.deriveCache.get(`${CACHE_KEY}-${era.toString()}`)).filter(value => !!value);
    const remaining = (0,_util_js__WEBPACK_IMPORTED_MODULE_4__.filterEras)(eras, cached);
    return !remaining.length ? (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)(cached) : api.query.staking.erasRewardPoints.multi(remaining).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_5__.map)(points => {
      const query = mapPoints(remaining, points);
      !withActive && query.forEach(q => _util_index_js__WEBPACK_IMPORTED_MODULE_3__.deriveCache.set(`${CACHE_KEY}-${q.era.toString()}`, q));
      return eras.map(era => cached.find(cached => era.eq(cached.era)) || query.find(query => era.eq(query.era)));
    }));
  });
}
function erasPoints(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.memo)(instanceId, (withActive = false) => api.derive.staking.erasHistoric(withActive).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_6__.switchMap)(eras => api.derive.staking._erasPoints(eras, withActive))));
}

/***/ }),
/* 808 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "filterEras": () => (/* binding */ filterEras)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0
function filterEras(eras, list) {
  return eras.filter(era => !list.some(entry => era.eq(entry.era)));
}

/***/ }),
/* 809 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "_eraPrefs": () => (/* binding */ _eraPrefs),
/* harmony export */   "eraPrefs": () => (/* binding */ eraPrefs),
/* harmony export */   "_erasPrefs": () => (/* binding */ _erasPrefs),
/* harmony export */   "erasPrefs": () => (/* binding */ erasPrefs)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(662);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(660);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(804);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


const CACHE_KEY = 'eraPrefs';

function mapPrefs(era, all) {
  const validators = {};
  all.forEach(([key, prefs]) => {
    validators[key.args[1].toString()] = prefs;
  });
  return {
    era,
    validators
  };
}

function _eraPrefs(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (era, withActive) => {
    const cacheKey = `${CACHE_KEY}-${era.toString()}`;
    const cached = withActive ? undefined : _util_index_js__WEBPACK_IMPORTED_MODULE_1__.deriveCache.get(cacheKey);
    return cached ? (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)(cached) : api.query.staking.erasValidatorPrefs.entries(era).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_3__.map)(prefs => {
      const value = mapPrefs(era, prefs);
      !withActive && _util_index_js__WEBPACK_IMPORTED_MODULE_1__.deriveCache.set(cacheKey, value);
      return value;
    }));
  });
}
function eraPrefs(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, era => api.derive.staking._eraPrefs(era, true));
}
function _erasPrefs(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (eras, withActive) => eras.length ? (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.combineLatest)(eras.map(era => api.derive.staking._eraPrefs(era, withActive))) : (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)([]));
}
function erasPrefs(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (withActive = false) => api.derive.staking.erasHistoric(withActive).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_5__.switchMap)(eras => api.derive.staking._erasPrefs(eras, withActive))));
}

/***/ }),
/* 810 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "_erasRewards": () => (/* binding */ _erasRewards),
/* harmony export */   "erasRewards": () => (/* binding */ erasRewards)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(660);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(804);
/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(808);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0



const CACHE_KEY = 'eraRewards';

function mapRewards(eras, optRewards) {
  return eras.map((era, index) => ({
    era,
    eraReward: optRewards[index].unwrapOrDefault()
  }));
}

function _erasRewards(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (eras, withActive) => {
    if (!eras.length) {
      return (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.of)([]);
    }

    const cached = withActive ? [] : eras.map(era => _util_index_js__WEBPACK_IMPORTED_MODULE_2__.deriveCache.get(`${CACHE_KEY}-${era.toString()}`)).filter(value => !!value);
    const remaining = (0,_util_js__WEBPACK_IMPORTED_MODULE_3__.filterEras)(eras, cached);

    if (!remaining.length) {
      return (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.of)(cached);
    }

    return api.query.staking.erasValidatorReward.multi(remaining).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_4__.map)(optRewards => {
      const query = mapRewards(remaining, optRewards);
      !withActive && query.forEach(q => _util_index_js__WEBPACK_IMPORTED_MODULE_2__.deriveCache.set(`${CACHE_KEY}-${q.era.toString()}`, q));
      return eras.map(era => cached.find(cached => era.eq(cached.era)) || query.find(query => era.eq(query.era)));
    }));
  });
}
function erasRewards(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (withActive = false) => api.derive.staking.erasHistoric(withActive).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_5__.switchMap)(eras => api.derive.staking._erasRewards(eras, withActive))));
}

/***/ }),
/* 811 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "_eraSlashes": () => (/* binding */ _eraSlashes),
/* harmony export */   "eraSlashes": () => (/* binding */ eraSlashes),
/* harmony export */   "_erasSlashes": () => (/* binding */ _erasSlashes),
/* harmony export */   "erasSlashes": () => (/* binding */ erasSlashes)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(662);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(660);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(804);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


const CACHE_KEY = 'eraSlashes';

function mapSlashes(era, noms, vals) {
  const nominators = {};
  const validators = {};
  noms.forEach(([key, optBalance]) => {
    nominators[key.args[1].toString()] = optBalance.unwrap();
  });
  vals.forEach(([key, optRes]) => {
    validators[key.args[1].toString()] = optRes.unwrapOrDefault()[1];
  });
  return {
    era,
    nominators,
    validators
  };
}

function _eraSlashes(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (era, withActive) => {
    const cacheKey = `${CACHE_KEY}-${era.toString()}`;
    const cached = withActive ? undefined : _util_index_js__WEBPACK_IMPORTED_MODULE_1__.deriveCache.get(cacheKey);
    return cached ? (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)(cached) : (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.combineLatest)([api.query.staking.nominatorSlashInEra.entries(era), api.query.staking.validatorSlashInEra.entries(era)]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_4__.map)(([noms, vals]) => {
      const value = mapSlashes(era, noms, vals);
      !withActive && _util_index_js__WEBPACK_IMPORTED_MODULE_1__.deriveCache.set(cacheKey, value);
      return value;
    }));
  });
}
function eraSlashes(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, era => api.derive.staking._eraSlashes(era, true));
}
function _erasSlashes(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (eras, withActive) => eras.length ? (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.combineLatest)(eras.map(era => api.derive.staking._eraSlashes(era, withActive))) : (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)([]));
}
function erasSlashes(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (withActive = false) => api.derive.staking.erasHistoric(withActive).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_5__.switchMap)(eras => api.derive.staking._erasSlashes(eras, withActive))));
}

/***/ }),
/* 812 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "electedInfo": () => (/* binding */ electedInfo)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(660);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(599);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(667);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0



const DEFAULT_FLAGS = {
  withController: true,
  withExposure: true,
  withPrefs: true
};

function combineAccounts(nextElected, validators) {
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.arrayFlatten)([nextElected, validators.filter(v => !nextElected.find(n => n.eq(v)))]);
}

function electedInfo(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.memo)(instanceId, (flags = DEFAULT_FLAGS) => api.derive.staking.validators().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_2__.switchMap)(({
    nextElected,
    validators
  }) => api.derive.staking.queryMulti(combineAccounts(nextElected, validators), flags).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_3__.map)(info => ({
    info,
    nextElected,
    validators
  }))))));
}

/***/ }),
/* 813 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "keys": () => (/* binding */ keys),
/* harmony export */   "keysMulti": () => (/* binding */ keysMulti)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(660);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(662);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(654);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0



function extractsIds(stashId, queuedKeys, nextKeys) {
  const sessionIds = (queuedKeys.find(([currentId]) => currentId.eq(stashId)) || [undefined, []])[1];
  const nextSessionIds = nextKeys.unwrapOr([]);
  return {
    nextSessionIds: Array.isArray(nextSessionIds) ? nextSessionIds : [...nextSessionIds.values()],
    sessionIds: Array.isArray(sessionIds) ? sessionIds : [...sessionIds.values()]
  };
}

function keys(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, stashId => api.derive.staking.keysMulti([stashId]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(([first]) => first)));
}
function keysMulti(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, stashIds => stashIds.length ? api.query.session.queuedKeys().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_2__.switchMap)(queuedKeys => {
    var _api$consts$session;

    return (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.combineLatest)([(0,rxjs__WEBPACK_IMPORTED_MODULE_4__.of)(queuedKeys), (_api$consts$session = api.consts.session) !== null && _api$consts$session !== void 0 && _api$consts$session.dedupKeyPrefix ? api.query.session.nextKeys.multi(stashIds.map(stashId => [api.consts.session.dedupKeyPrefix, stashId])) : api.query.session.nextKeys.multi(stashIds)]);
  }), (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(([queuedKeys, nextKeys]) => stashIds.map((stashId, index) => extractsIds(stashId, queuedKeys, nextKeys[index])))) : (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.of)([]));
}

/***/ }),
/* 814 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "overview": () => (/* binding */ overview)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(662);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(599);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


/**
 * @description Retrieve the staking overview, including elected and points earned
 */

function overview(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, () => (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.combineLatest)([api.derive.session.indexes(), api.derive.staking.validators()]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_2__.map)(([indexes, {
    nextElected,
    validators
  }]) => ({ ...indexes,
    nextElected,
    validators
  }))));
}

/***/ }),
/* 815 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "_ownExposures": () => (/* binding */ _ownExposures),
/* harmony export */   "ownExposure": () => (/* binding */ ownExposure),
/* harmony export */   "ownExposures": () => (/* binding */ ownExposures)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(660);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


function _ownExposures(instanceId, api) {
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (accountId, eras, _withActive) => eras.length ? api.queryMulti([...eras.map(era => [api.query.staking.erasStakersClipped, [era, accountId]]), ...eras.map(era => [api.query.staking.erasStakers, [era, accountId]])]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(all => eras.map((era, index) => ({
    clipped: all[index],
    era,
    exposure: all[eras.length + index]
  })))) : (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)([]));
}
function ownExposure(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (accountId, era) => api.derive.staking._ownExposures(accountId, [era], true).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(([first]) => first)));
}
function ownExposures(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (accountId, withActive = false) => {
    return api.derive.staking.erasHistoric(withActive).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_3__.switchMap)(eras => api.derive.staking._ownExposures(accountId, eras, withActive)));
  });
}

/***/ }),
/* 816 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "_ownSlashes": () => (/* binding */ _ownSlashes),
/* harmony export */   "ownSlash": () => (/* binding */ ownSlash),
/* harmony export */   "ownSlashes": () => (/* binding */ ownSlashes)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(660);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


function _ownSlashes(instanceId, api) {
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (accountId, eras, _withActive) => eras.length ? api.queryMulti([...eras.map(era => [api.query.staking.validatorSlashInEra, [era, accountId]]), ...eras.map(era => [api.query.staking.nominatorSlashInEra, [era, accountId]])]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(values => eras.map((era, index) => ({
    era,
    total: values[index].isSome ? values[index].unwrap()[1] : values[index + eras.length].unwrapOrDefault()
  })))) : (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)([]));
}
function ownSlash(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (accountId, era) => api.derive.staking._ownSlashes(accountId, [era], true).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(([first]) => first)));
}
function ownSlashes(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (accountId, withActive = false) => {
    return api.derive.staking.erasHistoric(withActive).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_3__.switchMap)(eras => api.derive.staking._ownSlashes(accountId, eras, withActive)));
  });
}

/***/ }),
/* 817 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "query": () => (/* binding */ query),
/* harmony export */   "queryMulti": () => (/* binding */ queryMulti)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(662);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(660);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0



function parseDetails(stashId, controllerIdOpt, nominatorsOpt, rewardDestination, validatorPrefs, exposure, stakingLedgerOpt) {
  return {
    accountId: stashId,
    controllerId: controllerIdOpt && controllerIdOpt.unwrapOr(null),
    exposure,
    nominators: nominatorsOpt.isSome ? nominatorsOpt.unwrap().targets : [],
    rewardDestination,
    stakingLedger: stakingLedgerOpt.unwrapOrDefault(),
    stashId,
    validatorPrefs
  };
}

function getLedgers(api, optIds, {
  withLedger = false
}) {
  const ids = optIds.filter(opt => withLedger && !!opt && opt.isSome).map(opt => opt.unwrap());
  const emptyLed = api.registry.createType('Option<StakingLedger>');
  return (ids.length ? api.query.staking.ledger.multi(ids) : (0,rxjs__WEBPACK_IMPORTED_MODULE_0__.of)([])).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(optLedgers => {
    let offset = -1;
    return optIds.map(opt => opt && opt.isSome ? optLedgers[++offset] || emptyLed : emptyLed);
  }));
}

function getStashInfo(api, stashIds, activeEra, {
  withController,
  withDestination,
  withExposure,
  withLedger,
  withNominations,
  withPrefs
}) {
  const emptyNoms = api.registry.createType('Option<Nominations>');
  const emptyRewa = api.registry.createType('RewardDestination');
  const emptyExpo = api.registry.createType('Exposure');
  const emptyPrefs = api.registry.createType('ValidatorPrefs');
  return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.combineLatest)([withController || withLedger ? api.query.staking.bonded.multi(stashIds) : (0,rxjs__WEBPACK_IMPORTED_MODULE_0__.of)(stashIds.map(() => null)), withNominations ? api.query.staking.nominators.multi(stashIds) : (0,rxjs__WEBPACK_IMPORTED_MODULE_0__.of)(stashIds.map(() => emptyNoms)), withDestination ? api.query.staking.payee.multi(stashIds) : (0,rxjs__WEBPACK_IMPORTED_MODULE_0__.of)(stashIds.map(() => emptyRewa)), withPrefs ? api.query.staking.validators.multi(stashIds) : (0,rxjs__WEBPACK_IMPORTED_MODULE_0__.of)(stashIds.map(() => emptyPrefs)), withExposure ? api.query.staking.erasStakers.multi(stashIds.map(stashId => [activeEra, stashId])) : (0,rxjs__WEBPACK_IMPORTED_MODULE_0__.of)(stashIds.map(() => emptyExpo))]);
}

function getBatch(api, activeEra, stashIds, flags) {
  return getStashInfo(api, stashIds, activeEra, flags).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_3__.switchMap)(([controllerIdOpt, nominatorsOpt, rewardDestination, validatorPrefs, exposure]) => getLedgers(api, controllerIdOpt, flags).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(stakingLedgerOpts => stashIds.map((stashId, index) => parseDetails(stashId, controllerIdOpt[index], nominatorsOpt[index], rewardDestination[index], validatorPrefs[index], exposure[index], stakingLedgerOpts[index]))))));
} //

/**
 * @description From a stash, retrieve the controllerId and all relevant details
 */


function query(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_4__.memo)(instanceId, (accountId, flags) => api.derive.staking.queryMulti([accountId], flags).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(([first]) => first)));
}
function queryMulti(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_4__.memo)(instanceId, (accountIds, flags) => accountIds.length ? api.derive.session.indexes().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_3__.switchMap)(({
    activeEra
  }) => {
    const stashIds = accountIds.map(accountId => api.registry.createType('AccountId', accountId));
    return getBatch(api, activeEra, stashIds, flags);
  })) : (0,rxjs__WEBPACK_IMPORTED_MODULE_0__.of)([]));
}

/***/ }),
/* 818 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "_stakerExposures": () => (/* binding */ _stakerExposures),
/* harmony export */   "stakerExposures": () => (/* binding */ stakerExposures),
/* harmony export */   "stakerExposure": () => (/* binding */ stakerExposure)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(660);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


function _stakerExposures(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (accountIds, eras, withActive) => {
    const stakerIds = accountIds.map(a => api.registry.createType('AccountId', a).toString());
    return api.derive.staking._erasExposure(eras, withActive).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(exposures => stakerIds.map(stakerId => exposures.map(({
      era,
      nominators: allNominators,
      validators: allValidators
    }) => {
      const isValidator = !!allValidators[stakerId];
      const validators = {};
      const nominating = allNominators[stakerId] || [];

      if (isValidator) {
        validators[stakerId] = allValidators[stakerId];
      } else if (nominating) {
        nominating.forEach(({
          validatorId
        }) => {
          validators[validatorId] = allValidators[validatorId];
        });
      }

      return {
        era,
        isEmpty: !Object.keys(validators).length,
        isValidator,
        nominating,
        validators
      };
    }))));
  });
}
function stakerExposures(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (accountIds, withActive = false) => api.derive.staking.erasHistoric(withActive).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_2__.switchMap)(eras => api.derive.staking._stakerExposures(accountIds, eras, withActive))));
}
function stakerExposure(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (accountId, withActive = false) => api.derive.staking.stakerExposures([accountId], withActive).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(([first]) => first)));
}

/***/ }),
/* 819 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "_stakerPoints": () => (/* binding */ _stakerPoints),
/* harmony export */   "stakerPoints": () => (/* binding */ stakerPoints)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(660);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


function _stakerPoints(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (accountId, eras, withActive) => {
    const stakerId = api.registry.createType('AccountId', accountId).toString();
    return api.derive.staking._erasPoints(eras, withActive).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(points => points.map(({
      era,
      eraPoints,
      validators
    }) => ({
      era,
      eraPoints,
      points: validators[stakerId] || api.registry.createType('RewardPoint')
    }))));
  });
}
function stakerPoints(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (accountId, withActive = false) => api.derive.staking.erasHistoric(withActive).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_2__.switchMap)(eras => api.derive.staking._stakerPoints(accountId, eras, withActive))));
}

/***/ }),
/* 820 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "_stakerPrefs": () => (/* binding */ _stakerPrefs),
/* harmony export */   "stakerPrefs": () => (/* binding */ stakerPrefs)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(660);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


function _stakerPrefs(instanceId, api) {
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (accountId, eras, _withActive) => api.query.staking.erasValidatorPrefs.multi(eras.map(era => [era, accountId])).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(all => all.map((validatorPrefs, index) => ({
    era: eras[index],
    validatorPrefs
  })))));
}
function stakerPrefs(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (accountId, withActive = false) => api.derive.staking.erasHistoric(withActive).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_2__.switchMap)(eras => api.derive.staking._stakerPrefs(accountId, eras, withActive))));
}

/***/ }),
/* 821 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "_stakerRewardsEras": () => (/* binding */ _stakerRewardsEras),
/* harmony export */   "_stakerRewards": () => (/* binding */ _stakerRewards),
/* harmony export */   "stakerRewards": () => (/* binding */ stakerRewards),
/* harmony export */   "stakerRewardsMultiEras": () => (/* binding */ stakerRewardsMultiEras),
/* harmony export */   "stakerRewardsMulti": () => (/* binding */ stakerRewardsMulti)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(662);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(660);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(599);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(240);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0




function parseRewards(api, stashId, [erasPoints, erasPrefs, erasRewards], exposures) {
  return exposures.map(({
    era,
    isEmpty,
    isValidator,
    nominating,
    validators: eraValidators
  }) => {
    const {
      eraPoints,
      validators: allValPoints
    } = erasPoints.find(p => p.era.eq(era)) || {
      eraPoints: _polkadot_util__WEBPACK_IMPORTED_MODULE_0__.BN_ZERO,
      validators: {}
    };
    const {
      eraReward
    } = erasRewards.find(r => r.era.eq(era)) || {
      eraReward: api.registry.createType('Balance')
    };
    const {
      validators: allValPrefs
    } = erasPrefs.find(p => p.era.eq(era)) || {
      validators: {}
    };
    const validators = {};
    const stakerId = stashId.toString();
    Object.entries(eraValidators).forEach(([validatorId, exposure]) => {
      var _allValPrefs$validato, _exposure$total;

      const valPoints = allValPoints[validatorId] || _polkadot_util__WEBPACK_IMPORTED_MODULE_0__.BN_ZERO;
      const valComm = ((_allValPrefs$validato = allValPrefs[validatorId]) === null || _allValPrefs$validato === void 0 ? void 0 : _allValPrefs$validato.commission.unwrap()) || _polkadot_util__WEBPACK_IMPORTED_MODULE_0__.BN_ZERO;
      const expTotal = ((_exposure$total = exposure.total) === null || _exposure$total === void 0 ? void 0 : _exposure$total.unwrap()) || _polkadot_util__WEBPACK_IMPORTED_MODULE_0__.BN_ZERO;
      let avail = _polkadot_util__WEBPACK_IMPORTED_MODULE_0__.BN_ZERO;
      let value;

      if (!(expTotal.isZero() || valPoints.isZero() || eraPoints.isZero())) {
        avail = eraReward.mul(valPoints).div(eraPoints);
        const valCut = valComm.mul(avail).div(_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.BN_BILLION);
        let staked;

        if (validatorId === stakerId) {
          staked = exposure.own.unwrap();
        } else {
          const stakerExp = exposure.others.find(({
            who
          }) => who.eq(stakerId));
          staked = stakerExp ? stakerExp.value.unwrap() : _polkadot_util__WEBPACK_IMPORTED_MODULE_0__.BN_ZERO;
        }

        value = avail.sub(valCut).imul(staked).div(expTotal).iadd(validatorId === stakerId ? valCut : _polkadot_util__WEBPACK_IMPORTED_MODULE_0__.BN_ZERO);
      }

      validators[validatorId] = {
        total: api.registry.createType('Balance', avail),
        value: api.registry.createType('Balance', value)
      };
    });
    return {
      era,
      eraReward,
      isEmpty,
      isValidator,
      nominating,
      validators
    };
  });
}

function allUniqValidators(rewards) {
  return rewards.reduce(([all, perStash], rewards) => {
    const uniq = [];
    perStash.push(uniq);
    rewards.forEach(({
      validators
    }) => Object.keys(validators).forEach(validatorId => {
      if (!uniq.includes(validatorId)) {
        uniq.push(validatorId);

        if (!all.includes(validatorId)) {
          all.push(validatorId);
        }
      }
    }));
    return [all, perStash];
  }, [[], []]);
}

function removeClaimed(validators, queryValidators, reward) {
  const rm = [];
  Object.keys(reward.validators).forEach(validatorId => {
    const index = validators.indexOf(validatorId);

    if (index !== -1) {
      const valLedger = queryValidators[index].stakingLedger;

      if (valLedger !== null && valLedger !== void 0 && valLedger.claimedRewards.some(era => reward.era.eq(era))) {
        rm.push(validatorId);
      }
    }
  });
  rm.forEach(validatorId => {
    delete reward.validators[validatorId];
  });
}

function filterRewards(eras, valInfo, {
  rewards,
  stakingLedger
}) {
  const filter = eras.filter(era => !stakingLedger.claimedRewards.some(e => e.eq(era)));
  const validators = valInfo.map(([v]) => v);
  const queryValidators = valInfo.map(([, q]) => q);
  return rewards.filter(({
    isEmpty
  }) => !isEmpty).filter(reward => {
    if (!filter.some(filter => reward.era.eq(filter))) {
      return false;
    }

    removeClaimed(validators, queryValidators, reward);
    return true;
  }).filter(({
    validators
  }) => Object.keys(validators).length !== 0).map(reward => ({ ...reward,
    nominators: reward.nominating.filter(n => reward.validators[n.validatorId])
  }));
}

function _stakerRewardsEras(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.memo)(instanceId, (eras, withActive) => (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.combineLatest)([api.derive.staking._erasPoints(eras, withActive), api.derive.staking._erasPrefs(eras, withActive), api.derive.staking._erasRewards(eras, withActive)]));
}
function _stakerRewards(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.memo)(instanceId, (accountIds, eras, withActive) => (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.combineLatest)([api.derive.staking.queryMulti(accountIds, {
    withLedger: true
  }), api.derive.staking._stakerExposures(accountIds, eras, withActive), api.derive.staking._stakerRewardsEras(eras, withActive)]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_3__.switchMap)(([queries, exposures, erasResult]) => {
    const allRewards = queries.map(({
      stakingLedger,
      stashId
    }, index) => !stashId || !stakingLedger ? [] : parseRewards(api, stashId, erasResult, exposures[index]));

    if (withActive) {
      return (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.of)(allRewards);
    }

    const [allValidators, stashValidators] = allUniqValidators(allRewards);
    return api.derive.staking.queryMulti(allValidators, {
      withLedger: true
    }).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_5__.map)(queriedVals => queries.map(({
      stakingLedger
    }, index) => filterRewards(eras, stashValidators[index].map(validatorId => [validatorId, queriedVals.find(q => q.accountId.eq(validatorId))]), {
      rewards: allRewards[index],
      stakingLedger
    }))));
  })));
}
function stakerRewards(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.memo)(instanceId, (accountId, withActive = false) => api.derive.staking.erasHistoric(withActive).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_3__.switchMap)(eras => api.derive.staking._stakerRewards([accountId], eras, withActive)), (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.map)(([first]) => first)));
}
function stakerRewardsMultiEras(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.memo)(instanceId, (accountIds, eras) => accountIds.length && eras.length ? api.derive.staking._stakerRewards(accountIds, eras, false) : (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.of)([]));
}
function stakerRewardsMulti(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_1__.memo)(instanceId, (accountIds, withActive = false) => api.derive.staking.erasHistoric(withActive).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_3__.switchMap)(eras => api.derive.staking.stakerRewardsMultiEras(accountIds, eras))));
}

/***/ }),
/* 822 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "_stakerSlashes": () => (/* binding */ _stakerSlashes),
/* harmony export */   "stakerSlashes": () => (/* binding */ stakerSlashes)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(660);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


function _stakerSlashes(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (accountId, eras, withActive) => {
    const stakerId = api.registry.createType('AccountId', accountId).toString();
    return api.derive.staking._erasSlashes(eras, withActive).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_1__.map)(slashes => slashes.map(({
      era,
      nominators,
      validators
    }) => ({
      era,
      total: nominators[stakerId] || validators[stakerId] || api.registry.createType('Balance')
    }))));
  });
}
function stakerSlashes(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (accountId, withActive = false) => api.derive.staking.erasHistoric(withActive).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_2__.switchMap)(eras => api.derive.staking._stakerSlashes(accountId, eras, withActive))));
}

/***/ }),
/* 823 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "stashes": () => (/* binding */ stashes)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(720);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(660);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(603);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0



function onBondedEvent(api) {
  let current = Date.now();
  return api.query.system.events().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_0__.map)(events => {
    current = events.filter(({
      event,
      phase
    }) => {
      try {
        return phase.isApplyExtrinsic && event.section === 'staking' && event.method === 'Bonded';
      } catch {
        return false;
      }
    }) ? Date.now() : current;
    return current;
  }), (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.startWith)(current), (0,_util_index_js__WEBPACK_IMPORTED_MODULE_2__.drr)({
    skipTimeout: true
  }));
}
/**
 * @description Retrieve the list of all validator stashes
 */


function stashes(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.memo)(instanceId, () => onBondedEvent(api).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_4__.switchMap)(() => api.query.staking.validators.keys()), (0,rxjs__WEBPACK_IMPORTED_MODULE_0__.map)(keys => keys.map(({
    args: [validatorId]
  }) => validatorId).filter(a => a))));
}

/***/ }),
/* 824 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "nextElected": () => (/* binding */ nextElected),
/* harmony export */   "validators": () => (/* binding */ validators)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(660);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(662);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(654);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


function nextElected(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, () => api.query.staking.erasStakers ? api.derive.session.indexes().pipe( // only populate for next era in the last session, so track both here - entries are not
  // subscriptions, so we need a trigger - currentIndex acts as that trigger to refresh
  (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.switchMap)(({
    currentEra
  }) => api.query.staking.erasStakers.keys(currentEra)), (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.map)(keys => keys.map(({
    args: [, accountId]
  }) => accountId))) : api.query.staking.currentElected());
}
/**
 * @description Retrieve latest list of validators
 */

function validators(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, () => // Sadly the node-template is (for some obscure reason) not comprehensive, so while the derive works
  // in all actual real-world deployed chains, it does create some confusion for limited template chains
  (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.combineLatest)([api.query.session ? api.query.session.validators() : (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.of)([]), api.query.staking ? api.derive.staking.nextElected() : (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.of)([])]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_2__.map)(([validators, nextElected]) => ({
    nextElected: nextElected.length ? nextElected : validators,
    validators
  }))));
}

/***/ }),
/* 825 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "waitingInfo": () => (/* binding */ waitingInfo)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(662);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(660);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(599);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


const DEFAULT_FLAGS = {
  withController: true,
  withPrefs: true
};
function waitingInfo(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (flags = DEFAULT_FLAGS) => (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.combineLatest)([api.derive.staking.validators(), api.derive.staking.stashes()]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_2__.switchMap)(([{
    nextElected
  }, stashes]) => {
    const elected = nextElected.map(a => a.toString());
    const waiting = stashes.filter(v => !elected.includes(v.toString()));
    return api.derive.staking.queryMulti(waiting, flags).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_3__.map)(info => ({
      info,
      waiting
    })));
  })));
}

/***/ }),
/* 826 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "members": () => (/* reexport safe */ _members_js__WEBPACK_IMPORTED_MODULE_0__.members),
/* harmony export */   "prime": () => (/* reexport safe */ _prime_js__WEBPACK_IMPORTED_MODULE_1__.prime),
/* harmony export */   "hasProposals": () => (/* reexport safe */ _proposals_js__WEBPACK_IMPORTED_MODULE_2__.hasProposals),
/* harmony export */   "proposal": () => (/* reexport safe */ _proposals_js__WEBPACK_IMPORTED_MODULE_2__.proposal),
/* harmony export */   "proposalCount": () => (/* reexport safe */ _proposals_js__WEBPACK_IMPORTED_MODULE_2__.proposalCount),
/* harmony export */   "proposalHashes": () => (/* reexport safe */ _proposals_js__WEBPACK_IMPORTED_MODULE_2__.proposalHashes),
/* harmony export */   "proposals": () => (/* reexport safe */ _proposals_js__WEBPACK_IMPORTED_MODULE_2__.proposals)
/* harmony export */ });
/* harmony import */ var _members_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(827);
/* harmony import */ var _prime_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(828);
/* harmony import */ var _proposals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(829);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0




/***/ }),
/* 827 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "members": () => (/* binding */ members)
/* harmony export */ });
/* harmony import */ var _collective_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(747);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


function members(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (0,_collective_index_js__WEBPACK_IMPORTED_MODULE_1__.members)(instanceId, api, 'technicalCommittee'));
}

/***/ }),
/* 828 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "prime": () => (/* binding */ prime)
/* harmony export */ });
/* harmony import */ var _collective_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(750);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


function prime(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (0,_collective_index_js__WEBPACK_IMPORTED_MODULE_1__.prime)(instanceId, api, 'technicalCommittee'));
}

/***/ }),
/* 829 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "hasProposals": () => (/* binding */ hasProposals),
/* harmony export */   "proposal": () => (/* binding */ proposal),
/* harmony export */   "proposalCount": () => (/* binding */ proposalCount),
/* harmony export */   "proposalHashes": () => (/* binding */ proposalHashes),
/* harmony export */   "proposals": () => (/* binding */ proposals)
/* harmony export */ });
/* harmony import */ var _collective_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(752);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


function hasProposals(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (0,_collective_index_js__WEBPACK_IMPORTED_MODULE_1__.hasProposals)(instanceId, api, 'technicalCommittee'));
}
function proposal(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (0,_collective_index_js__WEBPACK_IMPORTED_MODULE_1__.proposal)(instanceId, api, 'technicalCommittee'));
}
function proposalCount(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (0,_collective_index_js__WEBPACK_IMPORTED_MODULE_1__.proposalCount)(instanceId, api, 'technicalCommittee'));
}
function proposalHashes(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (0,_collective_index_js__WEBPACK_IMPORTED_MODULE_1__.proposalHashes)(instanceId, api, 'technicalCommittee'));
}
function proposals(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, (0,_collective_index_js__WEBPACK_IMPORTED_MODULE_1__.proposals)(instanceId, api, 'technicalCommittee'));
}

/***/ }),
/* 830 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "proposals": () => (/* reexport safe */ _proposals_js__WEBPACK_IMPORTED_MODULE_0__.proposals)
/* harmony export */ });
/* harmony import */ var _proposals_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(831);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


/***/ }),
/* 831 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "proposals": () => (/* binding */ proposals)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(662);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(660);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0



function parseResult(api, {
  allIds,
  allProposals,
  approvalIds,
  councilProposals,
  proposalCount
}) {
  const approvals = [];
  const proposals = [];
  const councilTreasury = councilProposals.filter(({
    proposal
  }) => api.tx.treasury.approveProposal.is(proposal) || api.tx.treasury.rejectProposal.is(proposal));
  allIds.forEach((id, index) => {
    if (allProposals[index].isSome) {
      const council = councilTreasury.filter(({
        proposal
      }) => id.eq(proposal.args[0])).sort((a, b) => a.proposal.method.localeCompare(b.proposal.method));
      const isApproval = approvalIds.some(approvalId => approvalId.eq(id));
      const derived = {
        council,
        id,
        proposal: allProposals[index].unwrap()
      };

      if (isApproval) {
        approvals.push(derived);
      } else {
        proposals.push(derived);
      }
    }
  });
  return {
    approvals,
    proposalCount,
    proposals
  };
}

function retrieveProposals(api, proposalCount, approvalIds) {
  const proposalIds = [];
  const count = proposalCount.toNumber();

  for (let index = 0; index < count; index++) {
    if (!approvalIds.some(id => id.eqn(index))) {
      proposalIds.push(api.registry.createType('ProposalIndex', index));
    }
  }

  const allIds = [...proposalIds, ...approvalIds];
  return (0,rxjs__WEBPACK_IMPORTED_MODULE_0__.combineLatest)([api.query.treasury.proposals.multi(allIds), api.derive.council ? api.derive.council.proposals() : (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.of)([])]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_2__.map)(([allProposals, councilProposals]) => parseResult(api, {
    allIds,
    allProposals,
    approvalIds,
    councilProposals,
    proposalCount
  })));
}
/**
 * @description Retrieve all active and approved treasury proposals, along with their info
 */


function proposals(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_3__.memo)(instanceId, () => api.query.treasury ? (0,rxjs__WEBPACK_IMPORTED_MODULE_0__.combineLatest)([api.query.treasury.proposalCount(), api.query.treasury.approvals()]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_4__.switchMap)(([proposalCount, approvalIds]) => retrieveProposals(api, proposalCount, approvalIds))) : (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.of)({
    approvals: [],
    proposalCount: api.registry.createType('ProposalIndex'),
    proposals: []
  }));
}

/***/ }),
/* 832 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "events": () => (/* reexport safe */ _events_js__WEBPACK_IMPORTED_MODULE_0__.events),
/* harmony export */   "signingInfo": () => (/* reexport safe */ _signingInfo_js__WEBPACK_IMPORTED_MODULE_1__.signingInfo)
/* harmony export */ });
/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(833);
/* harmony import */ var _signingInfo_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(834);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0



/***/ }),
/* 833 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "events": () => (/* binding */ events)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(662);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(660);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(599);
/* harmony import */ var _util_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(624);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0


function events(instanceId, api) {
  return (0,_util_index_js__WEBPACK_IMPORTED_MODULE_0__.memo)(instanceId, blockHash => (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.combineLatest)([api.rpc.chain.getBlock(blockHash), api.queryAt(blockHash).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_2__.switchMap)(queryAt => queryAt.system.events()))]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_3__.map)(([block, events]) => ({
    block,
    events
  }))));
}

/***/ }),
/* 834 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "signingInfo": () => (/* binding */ signingInfo)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(662);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(660);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(654);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(82);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(124);
/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(835);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0




function latestNonce(api, address) {
  return api.derive.balances.account(address).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_0__.map)(({
    accountNonce
  }) => accountNonce));
}

function nextNonce(api, address) {
  var _api$rpc$system;

  return (_api$rpc$system = api.rpc.system) !== null && _api$rpc$system !== void 0 && _api$rpc$system.accountNextIndex ? api.rpc.system.accountNextIndex(address) : latestNonce(api, address);
}

function signingHeader(api) {
  return (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.combineLatest)([api.rpc.chain.getHeader().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_2__.switchMap)(header => // check for chains at genesis (until block 1 is produced, e.g. 6s), since
  // we do need to allow transactions at chain start (also dev/seal chains)
  header.parentHash.isEmpty ? (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)(header) // in the case of the current block, we use the parent to minimize the
  // impact of forks on the system, but not completely remove it
  : api.rpc.chain.getHeader(header.parentHash))), api.rpc.chain.getFinalizedHead().pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_2__.switchMap)(hash => api.rpc.chain.getHeader(hash)))]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_0__.map)(([current, finalized]) => // determine the hash to use, current when lag > max, else finalized
  current.number.unwrap().sub(finalized.number.unwrap()).gt(_constants_js__WEBPACK_IMPORTED_MODULE_4__.MAX_FINALITY_LAG) ? current : finalized));
}

function signingInfo(_instanceId, api) {
  // no memo, we want to do this fresh on each run
  return (address, nonce, era) => (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.combineLatest)([// retrieve nonce if none was specified
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(nonce) ? latestNonce(api, address) : nonce === -1 ? nextNonce(api, address) : (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)(api.registry.createType('Index', nonce)), // if no era (create) or era > 0 (mortal), do block retrieval
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(era) || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_6__.isNumber)(era) && era > 0 ? signingHeader(api) : (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)(null)]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_0__.map)(([nonce, header]) => {
    var _api$consts$system, _api$consts$system$bl, _api$consts$babe, _api$consts$timestamp;

    return {
      header,
      mortalLength: Math.min(((_api$consts$system = api.consts.system) === null || _api$consts$system === void 0 ? void 0 : (_api$consts$system$bl = _api$consts$system.blockHashCount) === null || _api$consts$system$bl === void 0 ? void 0 : _api$consts$system$bl.toNumber()) || _constants_js__WEBPACK_IMPORTED_MODULE_4__.FALLBACK_MAX_HASH_COUNT, _constants_js__WEBPACK_IMPORTED_MODULE_4__.MORTAL_PERIOD.div(((_api$consts$babe = api.consts.babe) === null || _api$consts$babe === void 0 ? void 0 : _api$consts$babe.expectedBlockTime) || ((_api$consts$timestamp = api.consts.timestamp) === null || _api$consts$timestamp === void 0 ? void 0 : _api$consts$timestamp.minimumPeriod.muln(2)) || _constants_js__WEBPACK_IMPORTED_MODULE_4__.FALLBACK_PERIOD).iadd(_constants_js__WEBPACK_IMPORTED_MODULE_4__.MAX_FINALITY_LAG).toNumber()),
      nonce
    };
  }));
}

/***/ }),
/* 835 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FALLBACK_MAX_HASH_COUNT": () => (/* binding */ FALLBACK_MAX_HASH_COUNT),
/* harmony export */   "FALLBACK_PERIOD": () => (/* binding */ FALLBACK_PERIOD),
/* harmony export */   "MAX_FINALITY_LAG": () => (/* binding */ MAX_FINALITY_LAG),
/* harmony export */   "MORTAL_PERIOD": () => (/* binding */ MORTAL_PERIOD)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(88);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0

const FALLBACK_MAX_HASH_COUNT = 250; // default here to 5 min eras, adjusted based on the actual blocktime

const FALLBACK_PERIOD = new _polkadot_util__WEBPACK_IMPORTED_MODULE_0__(6 * 1000);
const MAX_FINALITY_LAG = new _polkadot_util__WEBPACK_IMPORTED_MODULE_0__(5);
const MORTAL_PERIOD = new _polkadot_util__WEBPACK_IMPORTED_MODULE_0__(5 * 60 * 1000);

/***/ }),
/* 836 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "decorateDeriveSections": () => (/* binding */ decorateDeriveSections)
/* harmony export */ });
/* harmony import */ var _polkadot_api_derive__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(677);
// Copyright 2017-2021 @polkadot/api authors & contributors
// SPDX-License-Identifier: Apache-2.0


/**
 * This is a section decorator which keeps all type information.
 */
function decorateDeriveSections(decorateMethod, derives) {
  const getKeys = s => Object.keys(derives[s]);

  const creator = (s, m) => decorateMethod(derives[s][m]);

  const result = {};
  const names = Object.keys(derives);

  for (let i = 0; i < names.length; i++) {
    (0,_polkadot_api_derive__WEBPACK_IMPORTED_MODULE_0__.lazyDeriveSection)(result, names[i], getKeys, creator);
  }

  return result;
}

/***/ }),
/* 837 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "cryptoIsReady": () => (/* binding */ cryptoIsReady),
/* harmony export */   "cryptoWaitReady": () => (/* binding */ cryptoWaitReady)
/* harmony export */ });
/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(838);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

const cryptoIsReady = _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_0__.isReady;
function cryptoWaitReady() {
  return (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_0__.waitReady)().then(() => true).catch(error => {
    console.error('Unable to initialize @polkadot/util-crypto', error);
    return false;
  });
}

/***/ }),
/* 838 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),
/* harmony export */   "bip39Generate": () => (/* binding */ bip39Generate),
/* harmony export */   "bip39ToEntropy": () => (/* binding */ bip39ToEntropy),
/* harmony export */   "bip39ToMiniSecret": () => (/* binding */ bip39ToMiniSecret),
/* harmony export */   "bip39ToSeed": () => (/* binding */ bip39ToSeed),
/* harmony export */   "bip39Validate": () => (/* binding */ bip39Validate),
/* harmony export */   "ed25519KeypairFromSeed": () => (/* binding */ ed25519KeypairFromSeed),
/* harmony export */   "ed25519Sign": () => (/* binding */ ed25519Sign),
/* harmony export */   "ed25519Verify": () => (/* binding */ ed25519Verify),
/* harmony export */   "sr25519DeriveKeypairHard": () => (/* binding */ sr25519DeriveKeypairHard),
/* harmony export */   "sr25519DeriveKeypairSoft": () => (/* binding */ sr25519DeriveKeypairSoft),
/* harmony export */   "sr25519DerivePublicSoft": () => (/* binding */ sr25519DerivePublicSoft),
/* harmony export */   "sr25519KeypairFromSeed": () => (/* binding */ sr25519KeypairFromSeed),
/* harmony export */   "sr25519Sign": () => (/* binding */ sr25519Sign),
/* harmony export */   "sr25519Verify": () => (/* binding */ sr25519Verify),
/* harmony export */   "sr25519Agree": () => (/* binding */ sr25519Agree),
/* harmony export */   "vrfSign": () => (/* binding */ vrfSign),
/* harmony export */   "vrfVerify": () => (/* binding */ vrfVerify),
/* harmony export */   "blake2b": () => (/* binding */ blake2b),
/* harmony export */   "hmacSha256": () => (/* binding */ hmacSha256),
/* harmony export */   "hmacSha512": () => (/* binding */ hmacSha512),
/* harmony export */   "keccak256": () => (/* binding */ keccak256),
/* harmony export */   "keccak512": () => (/* binding */ keccak512),
/* harmony export */   "pbkdf2": () => (/* binding */ pbkdf2),
/* harmony export */   "scrypt": () => (/* binding */ scrypt),
/* harmony export */   "sha256": () => (/* binding */ sha256),
/* harmony export */   "sha512": () => (/* binding */ sha512),
/* harmony export */   "twox": () => (/* binding */ twox),
/* harmony export */   "isReady": () => (/* binding */ isReady),
/* harmony export */   "waitReady": () => (/* binding */ waitReady)
/* harmony export */ });
/* harmony import */ var _polkadot_wasm_crypto_asmjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(161);
/* harmony import */ var _polkadot_wasm_crypto_wasm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(156);
/* harmony import */ var _bridge_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(840);
/* harmony import */ var _imports_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(857);
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(839);
// Copyright 2019-2021 @polkadot/wasm-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0





const PTR_VEC = 8;
const wasmPromise = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.initWasm)(_polkadot_wasm_crypto_wasm__WEBPACK_IMPORTED_MODULE_2__.wasmBytes, _polkadot_wasm_crypto_asmjs__WEBPACK_IMPORTED_MODULE_3__.asmJsInit, _imports_js__WEBPACK_IMPORTED_MODULE_4__).catch(() => null);
const bip39Generate = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => words => {
  wasm.ext_bip39_generate(PTR_VEC, words);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultString)();
});
const bip39ToEntropy = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => phrase => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocString)(phrase);
  wasm.ext_bip39_to_entropy(PTR_VEC, ptr0, len0);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const bip39ToMiniSecret = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (phrase, password) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocString)(phrase);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocString)(password);
  wasm.ext_bip39_to_mini_secret(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const bip39ToSeed = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (phrase, password) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocString)(phrase);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocString)(password);
  wasm.ext_bip39_to_seed(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const bip39Validate = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => phrase => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocString)(phrase);
  const ret = wasm.ext_bip39_validate(ptr0, len0);
  return ret !== 0;
});
const ed25519KeypairFromSeed = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => seed => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(seed);
  wasm.ext_ed_from_seed(PTR_VEC, ptr0, len0);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const ed25519Sign = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (pubkey, seckey, message) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pubkey);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(seckey);
  const [ptr2, len2] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(message);
  wasm.ext_ed_sign(PTR_VEC, ptr0, len0, ptr1, len1, ptr2, len2);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const ed25519Verify = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (signature, message, pubkey) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(signature);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(message);
  const [ptr2, len2] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pubkey);
  const ret = wasm.ext_ed_verify(ptr0, len0, ptr1, len1, ptr2, len2);
  return ret !== 0;
});
const sr25519DeriveKeypairHard = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (pair, cc) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pair);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(cc);
  wasm.ext_sr_derive_keypair_hard(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const sr25519DeriveKeypairSoft = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (pair, cc) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pair);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(cc);
  wasm.ext_sr_derive_keypair_soft(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const sr25519DerivePublicSoft = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (pubkey, cc) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pubkey);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(cc);
  wasm.ext_sr_derive_public_soft(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const sr25519KeypairFromSeed = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => seed => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(seed);
  wasm.ext_sr_from_seed(PTR_VEC, ptr0, len0);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const sr25519Sign = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (pubkey, secret, message) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pubkey);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(secret);
  const [ptr2, len2] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(message);
  wasm.ext_sr_sign(PTR_VEC, ptr0, len0, ptr1, len1, ptr2, len2);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const sr25519Verify = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (signature, message, pubkey) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(signature);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(message);
  const [ptr2, len2] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pubkey);
  const ret = wasm.ext_sr_verify(ptr0, len0, ptr1, len1, ptr2, len2);
  return ret !== 0;
});
const sr25519Agree = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (pubkey, secret) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pubkey);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(secret);
  wasm.ext_sr_agree(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const vrfSign = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (secret, context, message, extra) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(secret);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(context);
  const [ptr2, len2] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(message);
  const [ptr3, len3] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(extra);
  wasm.ext_vrf_sign(PTR_VEC, ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const vrfVerify = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (pubkey, context, message, extra, outAndProof) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pubkey);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(context);
  const [ptr2, len2] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(message);
  const [ptr3, len3] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(extra);
  const [ptr4, len4] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(outAndProof);
  const ret = wasm.ext_vrf_verify(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4);
  return ret !== 0;
});
const blake2b = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (data, key, size) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(key);
  wasm.ext_blake2b(PTR_VEC, ptr0, len0, ptr1, len1, size);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const hmacSha256 = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (key, data) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(key);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  wasm.ext_hmac_sha256(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const hmacSha512 = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (key, data) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(key);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  wasm.ext_hmac_sha512(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const keccak256 = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => data => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  wasm.ext_keccak256(PTR_VEC, ptr0, len0);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const keccak512 = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => data => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  wasm.ext_keccak512(PTR_VEC, ptr0, len0);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const pbkdf2 = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (data, salt, rounds) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(salt);
  wasm.ext_pbkdf2(PTR_VEC, ptr0, len0, ptr1, len1, rounds);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const scrypt = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (password, salt, log2n, r, p) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(password);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(salt);
  wasm.ext_scrypt(PTR_VEC, ptr0, len0, ptr1, len1, log2n, r, p);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const sha256 = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => data => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  wasm.ext_sha256(PTR_VEC, ptr0, len0);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const sha512 = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => data => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  wasm.ext_sha512(PTR_VEC, ptr0, len0);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const twox = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (data, rounds) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  wasm.ext_twox(PTR_VEC, ptr0, len0, rounds);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
function isReady() {
  return !!(0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.getWasm)();
}
function waitReady() {
  return wasmPromise.then(() => isReady());
}

/***/ }),
/* 839 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/wasm-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/wasm-crypto',
  version: '4.4.1'
};

/***/ }),
/* 840 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "initWasm": () => (/* binding */ initWasm),
/* harmony export */   "withWasm": () => (/* binding */ withWasm),
/* harmony export */   "getWasm": () => (/* binding */ getWasm),
/* harmony export */   "getInt32": () => (/* binding */ getInt32),
/* harmony export */   "getUint8": () => (/* binding */ getUint8),
/* harmony export */   "getU8a": () => (/* binding */ getU8a),
/* harmony export */   "getString": () => (/* binding */ getString),
/* harmony export */   "allocU8a": () => (/* binding */ allocU8a),
/* harmony export */   "allocString": () => (/* binding */ allocString),
/* harmony export */   "resultU8a": () => (/* binding */ resultU8a),
/* harmony export */   "resultString": () => (/* binding */ resultString)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(841);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(845);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(851);
// Copyright 2019-2021 @polkadot/wasm-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/* eslint-disable @typescript-eslint/no-non-null-assertion */

let wasm = null;
let cachegetInt32 = null;
let cachegetUint8 = null;
async function initWasm(wasmBytes, asmFn, wbg) {
  try {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)(typeof WebAssembly !== 'undefined' && wasmBytes && wasmBytes.length, 'WebAssembly is not available in your environment');
    const source = await WebAssembly.instantiate(wasmBytes, {
      wbg
    });
    wasm = source.instance.exports;
  } catch (error) {
    // if we have a valid supplied asm.js, return that
    if (asmFn) {
      wasm = asmFn(wbg);
    } else {
      console.error('FATAL: Unable to initialize @polkadot/wasm-crypto');
      console.error(error);
      wasm = null;
    }
  }
} // FIXME We really would love to clean this up and have a sign like (wasm, ...params) => T
// Alas, TypeScript foo is not that great today, so we sadly have an extra closure here

function withWasm(fn) {
  return (...params) => {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)(wasm, 'The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces.');
    return fn(wasm)(...params);
  };
}
function getWasm() {
  return wasm;
}
function getInt32() {
  if (cachegetInt32 === null || cachegetInt32.buffer !== wasm.memory.buffer) {
    cachegetInt32 = new Int32Array(wasm.memory.buffer);
  }

  return cachegetInt32;
}
function getUint8() {
  if (cachegetUint8 === null || cachegetUint8.buffer !== wasm.memory.buffer) {
    cachegetUint8 = new Uint8Array(wasm.memory.buffer);
  }

  return cachegetUint8;
}
function getU8a(ptr, len) {
  return getUint8().subarray(ptr / 1, ptr / 1 + len);
}
function getString(ptr, len) {
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToString)(getU8a(ptr, len));
}
function allocU8a(arg) {
  const ptr = wasm.__wbindgen_malloc(arg.length * 1);

  getUint8().set(arg, ptr / 1);
  return [ptr, arg.length];
}
function allocString(arg) {
  return allocU8a((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.stringToU8a)(arg));
}
function resultU8a() {
  const r0 = getInt32()[8 / 4 + 0];
  const r1 = getInt32()[8 / 4 + 1];
  const ret = getU8a(r0, r1).slice();

  wasm.__wbindgen_free(r0, r1 * 1);

  return ret;
}
function resultString() {
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToString)(resultU8a());
}

/***/ }),
/* 841 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "assert": () => (/* binding */ assert),
/* harmony export */   "assertReturn": () => (/* binding */ assertReturn)
/* harmony export */ });
/* harmony import */ var _is_function_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(842);
/* harmony import */ var _is_null_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(844);
/* harmony import */ var _is_undefined_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(843);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0




/**
 * @name assert
 * @summary Checks for a valid test, if not Error is thrown.
 * @description
 * Checks that `test` is a truthy value. If value is falsy (`null`, `undefined`, `false`, ...), it throws an Error with the supplied `message`. When `test` passes, `true` is returned.
 * @example
 * <BR>
 *
 * ```javascript
 * const { assert } from '@polkadot/util';
 *
 * assert(true, 'True should be true'); // passes
 * assert(false, 'False should not be true'); // Error thrown
 * assert(false, () => 'message'); // Error with 'message'
 * ```
 */
function assert(condition, message) {
  if (!condition) {
    throw new Error((0,_is_function_js__WEBPACK_IMPORTED_MODULE_0__.isFunction)(message) ? message() : message);
  }
}
/**
 * @name assertReturn
 * @description Returns when the value is not undefined/null, otherwise throws assertion error
 */

function assertReturn(value, message) {
  assert(!(0,_is_undefined_js__WEBPACK_IMPORTED_MODULE_1__.isUndefined)(value) && !(0,_is_null_js__WEBPACK_IMPORTED_MODULE_2__.isNull)(value), message);
  return value;
}

/***/ }),
/* 842 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isFunction": () => (/* binding */ isFunction)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
// eslint-disable-next-line @typescript-eslint/ban-types

/**
 * @name isFunction
 * @summary Tests for a `function`.
 * @description
 * Checks to see if the input value is a JavaScript function.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isFunction } from '@polkadot/util';
 *
 * isFunction(() => false); // => true
 * ```
 */
function isFunction(value) {
  return typeof value === 'function';
}

/***/ }),
/* 843 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isUndefined": () => (/* binding */ isUndefined)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isUndefined
 * @summary Tests for a `undefined` values.
 * @description
 * Checks to see if the input value is `undefined`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isUndefined } from '@polkadot/util';
 *
 * console.log('isUndefined', isUndefined(void(0))); // => true
 * ```
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function isUndefined(value) {
  return typeof value === 'undefined';
}

/***/ }),
/* 844 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isNull": () => (/* binding */ isNull)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isNull
 * @summary Tests for a `null` values.
 * @description
 * Checks to see if the input value is `null`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isNull } from '@polkadot/util';
 *
 * console.log('isNull', isNull(null)); // => true
 * ```
 */
function isNull(value) {
  return value === null;
}

/***/ }),
/* 845 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "u8aToString": () => (/* binding */ u8aToString)
/* harmony export */ });
/* harmony import */ var _polkadot_x_textdecoder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(846);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

const decoder = new _polkadot_x_textdecoder__WEBPACK_IMPORTED_MODULE_0__.TextDecoder('utf-8');
/**
 * @name u8aToString
 * @summary Creates a utf-8 string from a Uint8Array object.
 * @description
 * `UInt8Array` input values return the actual decoded utf-8 string. `null` or `undefined` values returns an empty string.
 * @example
 * <BR>
 *
 * ```javascript
 * import { u8aToString } from '@polkadot/util';
 *
 * u8aToString(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0x6f])); // hello
 * ```
 */

function u8aToString(value) {
  return !(value !== null && value !== void 0 && value.length) ? '' : decoder.decode(value);
}

/***/ }),
/* 846 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),
/* harmony export */   "TextDecoder": () => (/* binding */ TextDecoder)
/* harmony export */ });
/* harmony import */ var _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(848);
/* harmony import */ var _fallback_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(850);
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(847);
// Copyright 2017-2021 @polkadot/x-textencoder authors & contributors
// SPDX-License-Identifier: Apache-2.0



const TextDecoder = typeof _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__.xglobal.TextDecoder === 'undefined' ? _fallback_js__WEBPACK_IMPORTED_MODULE_2__.TextDecoder : _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__.xglobal.TextDecoder;

/***/ }),
/* 847 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-textdecoder authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/x-textdecoder',
  version: '8.0.4'
};

/***/ }),
/* 848 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),
/* harmony export */   "xglobal": () => (/* binding */ xglobal)
/* harmony export */ });
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(849);
// Copyright 2017-2021 @polkadot/x-global authors & contributors
// SPDX-License-Identifier: Apache-2.0


function evaluateThis(fn) {
  return fn('return this');
}

const xglobal = typeof globalThis !== 'undefined' ? globalThis : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : evaluateThis(Function);

/***/ }),
/* 849 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-global authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/x-global',
  version: '8.0.4'
};

/***/ }),
/* 850 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TextDecoder": () => (/* binding */ TextDecoder)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-textencoder authors & contributors
// SPDX-License-Identifier: Apache-2.0
// This is very limited, only handling Ascii values
class TextDecoder {
  // eslint-disable-next-line @typescript-eslint/no-unused-vars,no-useless-constructor
  constructor(_) {// nothing
  }

  decode(value) {
    let result = '';

    for (let i = 0; i < value.length; i++) {
      result += String.fromCharCode(value[i]);
    }

    return result;
  }

}

/***/ }),
/* 851 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "stringToU8a": () => (/* binding */ stringToU8a)
/* harmony export */ });
/* harmony import */ var _polkadot_x_textencoder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(852);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

const encoder = new _polkadot_x_textencoder__WEBPACK_IMPORTED_MODULE_0__.TextEncoder();
/**
 * @name stringToU8a
 * @summary Creates a Uint8Array object from a utf-8 string.
 * @description
 * String input values return the actual encoded `UInt8Array`. `null` or `undefined` values returns an empty encoded array.
 * @example
 * <BR>
 *
 * ```javascript
 * import { stringToU8a } from '@polkadot/util';
 *
 * stringToU8a('hello'); // [0x68, 0x65, 0x6c, 0x6c, 0x6f]
 * ```
 */
// eslint-disable-next-line @typescript-eslint/ban-types

function stringToU8a(value) {
  return value ? encoder.encode(value.toString()) : new Uint8Array();
}

/***/ }),
/* 852 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),
/* harmony export */   "TextEncoder": () => (/* binding */ TextEncoder)
/* harmony export */ });
/* harmony import */ var _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(854);
/* harmony import */ var _fallback_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(856);
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(853);
// Copyright 2017-2021 @polkadot/x-textencoder authors & contributors
// SPDX-License-Identifier: Apache-2.0



const TextEncoder = typeof _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__.xglobal.TextEncoder === 'undefined' ? _fallback_js__WEBPACK_IMPORTED_MODULE_2__.TextEncoder : _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__.xglobal.TextEncoder;

/***/ }),
/* 853 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-textencoder authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/x-textencoder',
  version: '8.0.4'
};

/***/ }),
/* 854 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),
/* harmony export */   "xglobal": () => (/* binding */ xglobal)
/* harmony export */ });
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(855);
// Copyright 2017-2021 @polkadot/x-global authors & contributors
// SPDX-License-Identifier: Apache-2.0


function evaluateThis(fn) {
  return fn('return this');
}

const xglobal = typeof globalThis !== 'undefined' ? globalThis : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : evaluateThis(Function);

/***/ }),
/* 855 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-global authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/x-global',
  version: '8.0.4'
};

/***/ }),
/* 856 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TextEncoder": () => (/* binding */ TextEncoder)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-textencoder authors & contributors
// SPDX-License-Identifier: Apache-2.0
// This is very limited, only handling Ascii values
class TextEncoder {
  encode(value) {
    const u8a = new Uint8Array(value.length);

    for (let i = 0; i < value.length; i++) {
      u8a[i] = value.charCodeAt(i);
    }

    return u8a;
  }

}

/***/ }),
/* 857 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__wbindgen_is_undefined": () => (/* binding */ __wbindgen_is_undefined),
/* harmony export */   "__wbg_self_1b7a39e3a92c949c": () => (/* binding */ __wbg_self_1b7a39e3a92c949c),
/* harmony export */   "__wbg_require_604837428532a733": () => (/* binding */ __wbg_require_604837428532a733),
/* harmony export */   "__wbg_crypto_968f1772287e2df0": () => (/* binding */ __wbg_crypto_968f1772287e2df0),
/* harmony export */   "__wbg_getRandomValues_a3d34b4fee3c2869": () => (/* binding */ __wbg_getRandomValues_a3d34b4fee3c2869),
/* harmony export */   "__wbg_getRandomValues_f5e14ab7ac8e995d": () => (/* binding */ __wbg_getRandomValues_f5e14ab7ac8e995d),
/* harmony export */   "__wbg_randomFillSync_d5bd2d655fdf256a": () => (/* binding */ __wbg_randomFillSync_d5bd2d655fdf256a),
/* harmony export */   "__wbindgen_object_drop_ref": () => (/* binding */ __wbindgen_object_drop_ref),
/* harmony export */   "abort": () => (/* binding */ abort)
/* harmony export */ });
/* harmony import */ var _polkadot_x_randomvalues__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(858);
/* harmony import */ var _bridge_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(840);
// Copyright 2019-2021 @polkadot/wasm-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/* eslint-disable camelcase */


const DEFAULT_CRYPTO = {
  getRandomValues: _polkadot_x_randomvalues__WEBPACK_IMPORTED_MODULE_0__.getRandomValues
};
const DEFAULT_SELF = {
  crypto: DEFAULT_CRYPTO
};
const heap = new Array(32).fill(undefined).concat(undefined, null, true, false);
let heapNext = heap.length;

function getObject(idx) {
  return heap[idx];
}

function dropObject(idx) {
  if (idx < 36) {
    return;
  }

  heap[idx] = heapNext;
  heapNext = idx;
}

function takeObject(idx) {
  const ret = getObject(idx);
  dropObject(idx);
  return ret;
}

function addObject(obj) {
  if (heapNext === heap.length) {
    heap.push(heap.length + 1);
  }

  const idx = heapNext;
  heapNext = heap[idx];
  heap[idx] = obj;
  return idx;
}

function __wbindgen_is_undefined(idx) {
  return getObject(idx) === undefined;
}
function __wbg_self_1b7a39e3a92c949c() {
  return addObject(DEFAULT_SELF);
}
function __wbg_require_604837428532a733(ptr, len) {
  throw new Error(`Unable to require ${(0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.getString)(ptr, len)}`);
} // eslint-disable-next-line @typescript-eslint/no-unused-vars

function __wbg_crypto_968f1772287e2df0(_idx) {
  return addObject(DEFAULT_CRYPTO);
} // eslint-disable-next-line @typescript-eslint/no-unused-vars

function __wbg_getRandomValues_a3d34b4fee3c2869(_idx) {
  return addObject(DEFAULT_CRYPTO.getRandomValues);
} // eslint-disable-next-line @typescript-eslint/no-unused-vars

function __wbg_getRandomValues_f5e14ab7ac8e995d(_arg0, ptr, len) {
  DEFAULT_CRYPTO.getRandomValues((0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.getU8a)(ptr, len));
} // eslint-disable-next-line @typescript-eslint/no-unused-vars

function __wbg_randomFillSync_d5bd2d655fdf256a(_idx, _ptr, _len) {
  throw new Error('randomFillsync is not available'); // getObject(idx).randomFillSync(getU8a(ptr, len));
}
function __wbindgen_object_drop_ref(idx) {
  takeObject(idx);
}
function abort() {
  throw new Error('abort');
}

/***/ }),
/* 858 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),
/* harmony export */   "getRandomValues": () => (/* binding */ getRandomValues)
/* harmony export */ });
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(859);
// Copyright 2017-2021 @polkadot/x-randomvalues authors & contributors
// SPDX-License-Identifier: Apache-2.0

function getRandomValues(arr) {
  return crypto.getRandomValues(arr);
}

/***/ }),
/* 859 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-randomvalues authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/x-randomvalues',
  version: '8.0.4'
};

/***/ }),
/* 860 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "firstValueFrom": () => (/* binding */ firstValueFrom)
/* harmony export */ });
/* harmony import */ var _util_EmptyError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(650);
/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(64);


function firstValueFrom(source, config) {
    var hasConfig = typeof config === 'object';
    return new Promise(function (resolve, reject) {
        var subscriber = new _Subscriber__WEBPACK_IMPORTED_MODULE_0__.SafeSubscriber({
            next: function (value) {
                resolve(value);
                subscriber.unsubscribe();
            },
            error: reject,
            complete: function () {
                if (hasConfig) {
                    resolve(config.defaultValue);
                }
                else {
                    reject(new _util_EmptyError__WEBPACK_IMPORTED_MODULE_1__.EmptyError());
                }
            },
        });
        source.subscribe(subscriber);
    });
}
//# sourceMappingURL=firstValueFrom.js.map

/***/ }),
/* 861 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "detectedCapabilities": () => (/* binding */ detectedCapabilities)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(662);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(599);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(646);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(604);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(423);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(80);
// Copyright 2017-2021 @polkadot/api-derive authors & contributors
// SPDX-License-Identifier: Apache-2.0

 // the order and types needs to map with the all array setup below

const NumberMap = ['Zero', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine', 'Ten'];

function mapCapabilities({
  accountIdLength,
  refcount1Length,
  refcount2Length,
  refcount3Length
}, [leasePeriodsPerSlot, slotRangeCount], [stakingVersion], [keys, accountInfo]) {
  const types = {}; // AccountInfo

  if (accountInfo) {
    const length = accountInfo.length;

    if (length === refcount1Length) {
      types.AccountInfo = 'AccountInfoWithRefCount';
    } else if (length === refcount2Length) {
      types.AccountInfo = 'AccountInfoWithDualRefCount';
    } else if (length === refcount3Length) {
      types.AccountInfo = 'AccountInfoWithTripleRefCount';
    }
  } // ValidatorPrefs


  if (stakingVersion) {
    if (stakingVersion.index >= 4) {
      // v1 = index 0, V5 = index 4
      types.ValidatorPrefs = 'ValidatorPrefsWithBlocked';
    } else {
      types.ValidatorPrefs = 'ValidatorPrefsWithCommission';
    }
  } // Keys


  if (keys) {
    try {
      const [offset, numItems] = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.compactFromU8a)(keys);
      const tupleLength = (keys.length - offset) / numItems.toNumber();
      const numIds = tupleLength / accountIdLength;
      const numIdsRound = Math.floor(numIds);
      (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(numIds >= 2 && numIds <= 11, () => `Detected ${numIds} in Keys, should be >= 2 and <= 11`);

      if (numIdsRound !== numIds) {
        // Beefy?
        if ((numIdsRound - 1) * accountIdLength + 33 === tupleLength) {
          // eslint-disable-next-line @typescript-eslint/ban-ts-comment
          // @ts-ignore
          types.Keys = `SessionKeys${numIdsRound - 1}B`;
        } else {
          (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.assert)(false, () => `Expected integer number of keys, found ${numIds.toFixed(2)}`);
        }
      } else {
        // eslint-disable-next-line @typescript-eslint/ban-ts-comment
        // @ts-ignore
        types.Keys = `SessionKeys${numIds - 1}`;
      }
    } catch {// ignore
    }
  } // auctions


  if (leasePeriodsPerSlot && slotRangeCount) {
    const _enum = [];

    for (let i = 0; leasePeriodsPerSlot.gtn(i); i++) {
      for (let j = i; leasePeriodsPerSlot.gtn(j); j++) {
        _enum.push(`${NumberMap[i]}${NumberMap[j]}`);
      }
    }

    types.SlotRange = {
      _enum
    };
    types.WinningData = `[WinningDataEntry; ${slotRangeCount.toNumber()}]`;
  }

  return types;
}

function filterEntries(original) {
  const included = original.map(c => !!c);
  return {
    filtered: original.filter((_, index) => included[index]),
    included,
    original
  };
}

function extractResults(results, map) {
  let offset = -1;
  return map.included.map(isIncluded => isIncluded ? results[++offset] : null);
}
/**
 * @description Query the chain for the specific capabilities
 */


function detectedCapabilities(api, blockHash) {
  var _api$consts$auctions, _api$consts$auctions2, _api$query$staking, _api$query$session, _api$query$system, _api$query$system$acc;

  const emptyAccountId = api.registry.createType('AccountId');
  const consts = filterEntries([(_api$consts$auctions = api.consts.auctions) === null || _api$consts$auctions === void 0 ? void 0 : _api$consts$auctions.leasePeriodsPerSlot, (_api$consts$auctions2 = api.consts.auctions) === null || _api$consts$auctions2 === void 0 ? void 0 : _api$consts$auctions2.slotRangeCount]);
  const queries = filterEntries([(_api$query$staking = api.query.staking) === null || _api$query$staking === void 0 ? void 0 : _api$query$staking.storageVersion]);
  const raws = filterEntries([(_api$query$session = api.query.session) === null || _api$query$session === void 0 ? void 0 : _api$query$session.queuedKeys.key(), (_api$query$system = api.query.system) === null || _api$query$system === void 0 ? void 0 : (_api$query$system$acc = _api$query$system.account) === null || _api$query$system$acc === void 0 ? void 0 : _api$query$system$acc.key(emptyAccountId)]);
  return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.combineLatest)([consts.filtered.length ? blockHash // FIXME consts don't have .at as of yet...
  ? (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)([]) : (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)(consts.filtered) : (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)([]), queries.filtered.length ? blockHash ? (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.combineLatest)(queries.filtered.map(c => c.at(blockHash))) : api.queryMulti(queries.filtered) : (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)([]), raws.filtered.length ? blockHash ? (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.combineLatest)(raws.filtered.map(k => api.rpc.state.getStorage.raw(k, blockHash))) : (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.combineLatest)(raws.filtered.map(k => api.rpc.state.getStorage.raw(k))) : (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)([])]).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_4__.map)(([cResults, qResults, rResults]) => mapCapabilities({
    accountIdLength: emptyAccountId.encodedLength,
    refcount1Length: api.registry.createType('AccountInfoWithRefCount').encodedLength,
    refcount2Length: api.registry.createType('AccountInfoWithDualRefCount').encodedLength,
    refcount3Length: api.registry.createType('AccountInfoWithTripleRefCount').encodedLength
  }, extractResults(cResults, consts), extractResults(qResults, queries), extractResults(rResults.map(r => api.registry.createType('Raw', r)), raws))), (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.take)(1), (0,rxjs__WEBPACK_IMPORTED_MODULE_6__.catchError)(() => (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.of)({})));
}

/***/ }),
/* 862 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/api authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/api',
  version: '6.10.1'
};

/***/ }),
/* 863 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "promiseTracker": () => (/* binding */ promiseTracker),
/* harmony export */   "toPromiseMethod": () => (/* binding */ toPromiseMethod)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(647);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(604);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(605);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(81);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(80);
// Copyright 2017-2021 @polkadot/api authors & contributors
// SPDX-License-Identifier: Apache-2.0


// a Promise completion tracker, wrapping an isComplete variable that ensures the promise only resolves once
function promiseTracker(resolve, reject) {
  let isCompleted = false;
  return {
    reject: error => {
      if (!isCompleted) {
        isCompleted = true;
        reject(error);
      }

      return rxjs__WEBPACK_IMPORTED_MODULE_0__.EMPTY;
    },
    resolve: value => {
      if (!isCompleted) {
        isCompleted = true;
        resolve(value);
      }
    }
  };
} // extract the arguments and callback params from a value array possibly containing a callback

function extractArgs(args, needsCallback) {
  let callback;
  const actualArgs = args.slice(); // If the last arg is a function, we pop it, put it into callback.
  // actualArgs will then hold the actual arguments to be passed to `method`

  if (args.length && (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isFunction)(args[args.length - 1])) {
    callback = actualArgs.pop();
  } // When we need a subscription, ensure that a valid callback is actually passed


  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.assert)(!needsCallback || (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.isFunction)(callback), 'Expected a callback to be passed with subscriptions');
  return [actualArgs, callback];
} // Decorate a call for a single-shot result - retrieve and then immediate unsubscribe


function decorateCall(method, args) {
  return new Promise((resolve, reject) => {
    // single result tracker - either reject with Error or resolve with Codec result
    const tracker = promiseTracker(resolve, reject); // encoding errors reject immediately, any result unsubscribes and resolves

    const subscription = method(...args).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_3__.catchError)(error => tracker.reject(error))).subscribe(result => {
      tracker.resolve(result);
      setTimeout(() => subscription.unsubscribe(), 0);
    });
  });
} // Decorate a subscription where we have a result callback specified


function decorateSubscribe(method, args, resultCb) {
  return new Promise((resolve, reject) => {
    // either reject with error or resolve with unsubscribe callback
    const tracker = promiseTracker(resolve, reject); // errors reject immediately, the first result resolves with an unsubscribe promise, all results via callback

    const subscription = method(...args).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_3__.catchError)(error => tracker.reject(error)), (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.tap)(() => tracker.resolve(() => subscription.unsubscribe()))).subscribe(result => {
      // queue result (back of queue to clear current)
      setTimeout(() => resultCb(result), 0);
    });
  });
}
/**
 * @description Decorate method for ApiPromise, where the results are converted to the Promise equivalent
 */


function toPromiseMethod(method, options) {
  const needsCallback = !!(options && options.methodName && options.methodName.includes('subscribe'));
  return function (...args) {
    const [actualArgs, resultCb] = extractArgs(args, needsCallback);
    return resultCb ? decorateSubscribe(method, actualArgs, resultCb) : decorateCall((options === null || options === void 0 ? void 0 : options.overrideNoSub) || method, actualArgs);
  };
}

/***/ }),
/* 864 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Combinator": () => (/* binding */ Combinator)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77);
/* harmony import */ var _babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(81);


// Copyright 2017-2021 @polkadot/api authors & contributors
// SPDX-License-Identifier: Apache-2.0


var _allHasFired = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("allHasFired");

var _callback = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("callback");

var _fired = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("fired");

var _fns = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("fns");

var _isActive = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("isActive");

var _results = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("results");

var _subscriptions = /*#__PURE__*/(0,_babel_runtime_helpers_esm_classPrivateFieldLooseKey__WEBPACK_IMPORTED_MODULE_1__["default"])("subscriptions");

class Combinator {
  constructor(fns, callback) {
    Object.defineProperty(this, _allHasFired, {
      writable: true,
      value: false
    });
    Object.defineProperty(this, _callback, {
      writable: true,
      value: void 0
    });
    Object.defineProperty(this, _fired, {
      writable: true,
      value: []
    });
    Object.defineProperty(this, _fns, {
      writable: true,
      value: []
    });
    Object.defineProperty(this, _isActive, {
      writable: true,
      value: true
    });
    Object.defineProperty(this, _results, {
      writable: true,
      value: []
    });
    Object.defineProperty(this, _subscriptions, {
      writable: true,
      value: []
    });
    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _callback)[_callback] = callback; // eslint-disable-next-line @typescript-eslint/require-await

    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _subscriptions)[_subscriptions] = fns.map(async (input, index) => {
      const [fn, ...args] = Array.isArray(input) ? input : [input];

      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _fired)[_fired].push(false);

      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _fns)[_fns].push(fn); // Not quite 100% how to have a variable number at the front here
      // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/ban-types


      return fn(...args, this._createCallback(index));
    });
  }

  _allHasFired() {
    var _classPrivateFieldLoo;

    (_classPrivateFieldLoo = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _allHasFired))[_allHasFired] || (_classPrivateFieldLoo[_allHasFired] = (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _fired)[_fired].filter(hasFired => !hasFired).length === 0);
    return (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _allHasFired)[_allHasFired];
  }

  _createCallback(index) {
    return value => {
      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _fired)[_fired][index] = true;
      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _results)[_results][index] = value;

      this._triggerUpdate();
    };
  }

  _triggerUpdate() {
    if (!(0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _isActive)[_isActive] || !(0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isFunction)((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _callback)[_callback]) || !this._allHasFired()) {
      return;
    }

    try {
      // eslint-disable-next-line @typescript-eslint/no-floating-promises
      (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _callback)[_callback]((0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _results)[_results]);
    } catch (error) {// swallow, we don't want the handler to trip us up
    }
  }

  unsubscribe() {
    if (!(0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _isActive)[_isActive]) {
      return;
    }

    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _isActive)[_isActive] = false; // eslint-disable-next-line @typescript-eslint/no-misused-promises

    (0,_babel_runtime_helpers_esm_classPrivateFieldLooseBase__WEBPACK_IMPORTED_MODULE_0__["default"])(this, _subscriptions)[_subscriptions].forEach(async subscription => {
      try {
        const unsubscribe = await subscription;

        if ((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.isFunction)(unsubscribe)) {
          unsubscribe();
        }
      } catch (error) {// ignore
      }
    });
  }

}

/***/ }),
/* 865 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "mnemonicGenerate": () => (/* binding */ mnemonicGenerate)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(866);
/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(867);
/* harmony import */ var _bip39_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(887);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0



// mapping of words to the actual strength (as expected)
const STRENGTH_MAP = {
  12: 16 * 8,
  15: 20 * 8,
  18: 24 * 8,
  21: 28 * 8,
  24: 32 * 8
};
/**
 * @name mnemonicGenerate
 * @summary Creates a valid mnemonic string using using [BIP39](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki).
 * @example
 * <BR>
 *
 * ```javascript
 * import { mnemonicGenerate } from '@polkadot/util-crypto';
 *
 * const mnemonic = mnemonicGenerate(); // => string
 * ```
 */

function mnemonicGenerate(numWords = 12, onlyJs) {
  return !_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.hasBigInt || !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.isReady)() ? (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_1__.bip39Generate)(numWords) : (0,_bip39_js__WEBPACK_IMPORTED_MODULE_2__.generateMnemonic)(STRENGTH_MAP[numWords]);
}

/***/ }),
/* 866 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "hasBigInt": () => (/* binding */ hasBigInt),
/* harmony export */   "hasBuffer": () => (/* binding */ hasBuffer),
/* harmony export */   "hasDirname": () => (/* binding */ hasDirname),
/* harmony export */   "hasProcess": () => (/* binding */ hasProcess),
/* harmony export */   "hasWasm": () => (/* binding */ hasWasm)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
const hasBigInt = typeof BigInt !== 'undefined';
const hasBuffer = typeof Buffer !== 'undefined';
const hasDirname = typeof __dirname !== 'undefined';
const hasProcess = typeof process === 'object';
const hasWasm = typeof WebAssembly !== 'undefined';

/***/ }),
/* 867 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),
/* harmony export */   "bip39Generate": () => (/* binding */ bip39Generate),
/* harmony export */   "bip39ToEntropy": () => (/* binding */ bip39ToEntropy),
/* harmony export */   "bip39ToMiniSecret": () => (/* binding */ bip39ToMiniSecret),
/* harmony export */   "bip39ToSeed": () => (/* binding */ bip39ToSeed),
/* harmony export */   "bip39Validate": () => (/* binding */ bip39Validate),
/* harmony export */   "ed25519KeypairFromSeed": () => (/* binding */ ed25519KeypairFromSeed),
/* harmony export */   "ed25519Sign": () => (/* binding */ ed25519Sign),
/* harmony export */   "ed25519Verify": () => (/* binding */ ed25519Verify),
/* harmony export */   "sr25519DeriveKeypairHard": () => (/* binding */ sr25519DeriveKeypairHard),
/* harmony export */   "sr25519DeriveKeypairSoft": () => (/* binding */ sr25519DeriveKeypairSoft),
/* harmony export */   "sr25519DerivePublicSoft": () => (/* binding */ sr25519DerivePublicSoft),
/* harmony export */   "sr25519KeypairFromSeed": () => (/* binding */ sr25519KeypairFromSeed),
/* harmony export */   "sr25519Sign": () => (/* binding */ sr25519Sign),
/* harmony export */   "sr25519Verify": () => (/* binding */ sr25519Verify),
/* harmony export */   "sr25519Agree": () => (/* binding */ sr25519Agree),
/* harmony export */   "vrfSign": () => (/* binding */ vrfSign),
/* harmony export */   "vrfVerify": () => (/* binding */ vrfVerify),
/* harmony export */   "blake2b": () => (/* binding */ blake2b),
/* harmony export */   "hmacSha256": () => (/* binding */ hmacSha256),
/* harmony export */   "hmacSha512": () => (/* binding */ hmacSha512),
/* harmony export */   "keccak256": () => (/* binding */ keccak256),
/* harmony export */   "keccak512": () => (/* binding */ keccak512),
/* harmony export */   "pbkdf2": () => (/* binding */ pbkdf2),
/* harmony export */   "scrypt": () => (/* binding */ scrypt),
/* harmony export */   "sha256": () => (/* binding */ sha256),
/* harmony export */   "sha512": () => (/* binding */ sha512),
/* harmony export */   "twox": () => (/* binding */ twox),
/* harmony export */   "isReady": () => (/* binding */ isReady),
/* harmony export */   "waitReady": () => (/* binding */ waitReady)
/* harmony export */ });
/* harmony import */ var _polkadot_wasm_crypto_asmjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(161);
/* harmony import */ var _polkadot_wasm_crypto_wasm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(156);
/* harmony import */ var _bridge_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(869);
/* harmony import */ var _imports_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(884);
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(868);
// Copyright 2019-2021 @polkadot/wasm-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0





const PTR_VEC = 8;
const wasmPromise = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.initWasm)(_polkadot_wasm_crypto_wasm__WEBPACK_IMPORTED_MODULE_2__.wasmBytes, _polkadot_wasm_crypto_asmjs__WEBPACK_IMPORTED_MODULE_3__.asmJsInit, _imports_js__WEBPACK_IMPORTED_MODULE_4__).catch(() => null);
const bip39Generate = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => words => {
  wasm.ext_bip39_generate(PTR_VEC, words);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultString)();
});
const bip39ToEntropy = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => phrase => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocString)(phrase);
  wasm.ext_bip39_to_entropy(PTR_VEC, ptr0, len0);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const bip39ToMiniSecret = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (phrase, password) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocString)(phrase);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocString)(password);
  wasm.ext_bip39_to_mini_secret(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const bip39ToSeed = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (phrase, password) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocString)(phrase);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocString)(password);
  wasm.ext_bip39_to_seed(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const bip39Validate = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => phrase => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocString)(phrase);
  const ret = wasm.ext_bip39_validate(ptr0, len0);
  return ret !== 0;
});
const ed25519KeypairFromSeed = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => seed => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(seed);
  wasm.ext_ed_from_seed(PTR_VEC, ptr0, len0);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const ed25519Sign = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (pubkey, seckey, message) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pubkey);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(seckey);
  const [ptr2, len2] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(message);
  wasm.ext_ed_sign(PTR_VEC, ptr0, len0, ptr1, len1, ptr2, len2);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const ed25519Verify = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (signature, message, pubkey) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(signature);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(message);
  const [ptr2, len2] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pubkey);
  const ret = wasm.ext_ed_verify(ptr0, len0, ptr1, len1, ptr2, len2);
  return ret !== 0;
});
const sr25519DeriveKeypairHard = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (pair, cc) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pair);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(cc);
  wasm.ext_sr_derive_keypair_hard(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const sr25519DeriveKeypairSoft = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (pair, cc) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pair);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(cc);
  wasm.ext_sr_derive_keypair_soft(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const sr25519DerivePublicSoft = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (pubkey, cc) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pubkey);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(cc);
  wasm.ext_sr_derive_public_soft(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const sr25519KeypairFromSeed = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => seed => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(seed);
  wasm.ext_sr_from_seed(PTR_VEC, ptr0, len0);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const sr25519Sign = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (pubkey, secret, message) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pubkey);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(secret);
  const [ptr2, len2] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(message);
  wasm.ext_sr_sign(PTR_VEC, ptr0, len0, ptr1, len1, ptr2, len2);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const sr25519Verify = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (signature, message, pubkey) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(signature);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(message);
  const [ptr2, len2] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pubkey);
  const ret = wasm.ext_sr_verify(ptr0, len0, ptr1, len1, ptr2, len2);
  return ret !== 0;
});
const sr25519Agree = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (pubkey, secret) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pubkey);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(secret);
  wasm.ext_sr_agree(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const vrfSign = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (secret, context, message, extra) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(secret);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(context);
  const [ptr2, len2] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(message);
  const [ptr3, len3] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(extra);
  wasm.ext_vrf_sign(PTR_VEC, ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const vrfVerify = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (pubkey, context, message, extra, outAndProof) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(pubkey);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(context);
  const [ptr2, len2] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(message);
  const [ptr3, len3] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(extra);
  const [ptr4, len4] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(outAndProof);
  const ret = wasm.ext_vrf_verify(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4);
  return ret !== 0;
});
const blake2b = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (data, key, size) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(key);
  wasm.ext_blake2b(PTR_VEC, ptr0, len0, ptr1, len1, size);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const hmacSha256 = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (key, data) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(key);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  wasm.ext_hmac_sha256(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const hmacSha512 = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (key, data) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(key);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  wasm.ext_hmac_sha512(PTR_VEC, ptr0, len0, ptr1, len1);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const keccak256 = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => data => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  wasm.ext_keccak256(PTR_VEC, ptr0, len0);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const keccak512 = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => data => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  wasm.ext_keccak512(PTR_VEC, ptr0, len0);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const pbkdf2 = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (data, salt, rounds) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(salt);
  wasm.ext_pbkdf2(PTR_VEC, ptr0, len0, ptr1, len1, rounds);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const scrypt = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (password, salt, log2n, r, p) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(password);
  const [ptr1, len1] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(salt);
  wasm.ext_scrypt(PTR_VEC, ptr0, len0, ptr1, len1, log2n, r, p);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const sha256 = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => data => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  wasm.ext_sha256(PTR_VEC, ptr0, len0);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const sha512 = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => data => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  wasm.ext_sha512(PTR_VEC, ptr0, len0);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
const twox = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.withWasm)(wasm => (data, rounds) => {
  const [ptr0, len0] = (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.allocU8a)(data);
  wasm.ext_twox(PTR_VEC, ptr0, len0, rounds);
  return (0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.resultU8a)();
});
function isReady() {
  return !!(0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.getWasm)();
}
function waitReady() {
  return wasmPromise.then(() => isReady());
}

/***/ }),
/* 868 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/wasm-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/wasm-crypto',
  version: '4.4.1'
};

/***/ }),
/* 869 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "initWasm": () => (/* binding */ initWasm),
/* harmony export */   "withWasm": () => (/* binding */ withWasm),
/* harmony export */   "getWasm": () => (/* binding */ getWasm),
/* harmony export */   "getInt32": () => (/* binding */ getInt32),
/* harmony export */   "getUint8": () => (/* binding */ getUint8),
/* harmony export */   "getU8a": () => (/* binding */ getU8a),
/* harmony export */   "getString": () => (/* binding */ getString),
/* harmony export */   "allocU8a": () => (/* binding */ allocU8a),
/* harmony export */   "allocString": () => (/* binding */ allocString),
/* harmony export */   "resultU8a": () => (/* binding */ resultU8a),
/* harmony export */   "resultString": () => (/* binding */ resultString)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(870);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(874);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(880);
// Copyright 2019-2021 @polkadot/wasm-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/* eslint-disable @typescript-eslint/no-non-null-assertion */

let wasm = null;
let cachegetInt32 = null;
let cachegetUint8 = null;
async function initWasm(wasmBytes, asmFn, wbg) {
  try {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)(typeof WebAssembly !== 'undefined' && wasmBytes && wasmBytes.length, 'WebAssembly is not available in your environment');
    const source = await WebAssembly.instantiate(wasmBytes, {
      wbg
    });
    wasm = source.instance.exports;
  } catch (error) {
    // if we have a valid supplied asm.js, return that
    if (asmFn) {
      wasm = asmFn(wbg);
    } else {
      console.error('FATAL: Unable to initialize @polkadot/wasm-crypto');
      console.error(error);
      wasm = null;
    }
  }
} // FIXME We really would love to clean this up and have a sign like (wasm, ...params) => T
// Alas, TypeScript foo is not that great today, so we sadly have an extra closure here

function withWasm(fn) {
  return (...params) => {
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.assert)(wasm, 'The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces.');
    return fn(wasm)(...params);
  };
}
function getWasm() {
  return wasm;
}
function getInt32() {
  if (cachegetInt32 === null || cachegetInt32.buffer !== wasm.memory.buffer) {
    cachegetInt32 = new Int32Array(wasm.memory.buffer);
  }

  return cachegetInt32;
}
function getUint8() {
  if (cachegetUint8 === null || cachegetUint8.buffer !== wasm.memory.buffer) {
    cachegetUint8 = new Uint8Array(wasm.memory.buffer);
  }

  return cachegetUint8;
}
function getU8a(ptr, len) {
  return getUint8().subarray(ptr / 1, ptr / 1 + len);
}
function getString(ptr, len) {
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToString)(getU8a(ptr, len));
}
function allocU8a(arg) {
  const ptr = wasm.__wbindgen_malloc(arg.length * 1);

  getUint8().set(arg, ptr / 1);
  return [ptr, arg.length];
}
function allocString(arg) {
  return allocU8a((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.stringToU8a)(arg));
}
function resultU8a() {
  const r0 = getInt32()[8 / 4 + 0];
  const r1 = getInt32()[8 / 4 + 1];
  const ret = getU8a(r0, r1).slice();

  wasm.__wbindgen_free(r0, r1 * 1);

  return ret;
}
function resultString() {
  return (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToString)(resultU8a());
}

/***/ }),
/* 870 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "assert": () => (/* binding */ assert),
/* harmony export */   "assertReturn": () => (/* binding */ assertReturn)
/* harmony export */ });
/* harmony import */ var _is_function_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(871);
/* harmony import */ var _is_null_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(873);
/* harmony import */ var _is_undefined_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(872);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0




/**
 * @name assert
 * @summary Checks for a valid test, if not Error is thrown.
 * @description
 * Checks that `test` is a truthy value. If value is falsy (`null`, `undefined`, `false`, ...), it throws an Error with the supplied `message`. When `test` passes, `true` is returned.
 * @example
 * <BR>
 *
 * ```javascript
 * const { assert } from '@polkadot/util';
 *
 * assert(true, 'True should be true'); // passes
 * assert(false, 'False should not be true'); // Error thrown
 * assert(false, () => 'message'); // Error with 'message'
 * ```
 */
function assert(condition, message) {
  if (!condition) {
    throw new Error((0,_is_function_js__WEBPACK_IMPORTED_MODULE_0__.isFunction)(message) ? message() : message);
  }
}
/**
 * @name assertReturn
 * @description Returns when the value is not undefined/null, otherwise throws assertion error
 */

function assertReturn(value, message) {
  assert(!(0,_is_undefined_js__WEBPACK_IMPORTED_MODULE_1__.isUndefined)(value) && !(0,_is_null_js__WEBPACK_IMPORTED_MODULE_2__.isNull)(value), message);
  return value;
}

/***/ }),
/* 871 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isFunction": () => (/* binding */ isFunction)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
// eslint-disable-next-line @typescript-eslint/ban-types

/**
 * @name isFunction
 * @summary Tests for a `function`.
 * @description
 * Checks to see if the input value is a JavaScript function.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isFunction } from '@polkadot/util';
 *
 * isFunction(() => false); // => true
 * ```
 */
function isFunction(value) {
  return typeof value === 'function';
}

/***/ }),
/* 872 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isUndefined": () => (/* binding */ isUndefined)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isUndefined
 * @summary Tests for a `undefined` values.
 * @description
 * Checks to see if the input value is `undefined`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isUndefined } from '@polkadot/util';
 *
 * console.log('isUndefined', isUndefined(void(0))); // => true
 * ```
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function isUndefined(value) {
  return typeof value === 'undefined';
}

/***/ }),
/* 873 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isNull": () => (/* binding */ isNull)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isNull
 * @summary Tests for a `null` values.
 * @description
 * Checks to see if the input value is `null`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isNull } from '@polkadot/util';
 *
 * console.log('isNull', isNull(null)); // => true
 * ```
 */
function isNull(value) {
  return value === null;
}

/***/ }),
/* 874 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "u8aToString": () => (/* binding */ u8aToString)
/* harmony export */ });
/* harmony import */ var _polkadot_x_textdecoder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(875);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

const decoder = new _polkadot_x_textdecoder__WEBPACK_IMPORTED_MODULE_0__.TextDecoder('utf-8');
/**
 * @name u8aToString
 * @summary Creates a utf-8 string from a Uint8Array object.
 * @description
 * `UInt8Array` input values return the actual decoded utf-8 string. `null` or `undefined` values returns an empty string.
 * @example
 * <BR>
 *
 * ```javascript
 * import { u8aToString } from '@polkadot/util';
 *
 * u8aToString(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0x6f])); // hello
 * ```
 */

function u8aToString(value) {
  return !(value !== null && value !== void 0 && value.length) ? '' : decoder.decode(value);
}

/***/ }),
/* 875 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),
/* harmony export */   "TextDecoder": () => (/* binding */ TextDecoder)
/* harmony export */ });
/* harmony import */ var _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(877);
/* harmony import */ var _fallback_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(879);
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(876);
// Copyright 2017-2021 @polkadot/x-textencoder authors & contributors
// SPDX-License-Identifier: Apache-2.0



const TextDecoder = typeof _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__.xglobal.TextDecoder === 'undefined' ? _fallback_js__WEBPACK_IMPORTED_MODULE_2__.TextDecoder : _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__.xglobal.TextDecoder;

/***/ }),
/* 876 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-textdecoder authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/x-textdecoder',
  version: '8.0.4'
};

/***/ }),
/* 877 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),
/* harmony export */   "xglobal": () => (/* binding */ xglobal)
/* harmony export */ });
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(878);
// Copyright 2017-2021 @polkadot/x-global authors & contributors
// SPDX-License-Identifier: Apache-2.0


function evaluateThis(fn) {
  return fn('return this');
}

const xglobal = typeof globalThis !== 'undefined' ? globalThis : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : evaluateThis(Function);

/***/ }),
/* 878 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-global authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/x-global',
  version: '8.0.4'
};

/***/ }),
/* 879 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TextDecoder": () => (/* binding */ TextDecoder)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-textencoder authors & contributors
// SPDX-License-Identifier: Apache-2.0
// This is very limited, only handling Ascii values
class TextDecoder {
  // eslint-disable-next-line @typescript-eslint/no-unused-vars,no-useless-constructor
  constructor(_) {// nothing
  }

  decode(value) {
    let result = '';

    for (let i = 0; i < value.length; i++) {
      result += String.fromCharCode(value[i]);
    }

    return result;
  }

}

/***/ }),
/* 880 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "stringToU8a": () => (/* binding */ stringToU8a)
/* harmony export */ });
/* harmony import */ var _polkadot_x_textencoder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(881);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

const encoder = new _polkadot_x_textencoder__WEBPACK_IMPORTED_MODULE_0__.TextEncoder();
/**
 * @name stringToU8a
 * @summary Creates a Uint8Array object from a utf-8 string.
 * @description
 * String input values return the actual encoded `UInt8Array`. `null` or `undefined` values returns an empty encoded array.
 * @example
 * <BR>
 *
 * ```javascript
 * import { stringToU8a } from '@polkadot/util';
 *
 * stringToU8a('hello'); // [0x68, 0x65, 0x6c, 0x6c, 0x6f]
 * ```
 */
// eslint-disable-next-line @typescript-eslint/ban-types

function stringToU8a(value) {
  return value ? encoder.encode(value.toString()) : new Uint8Array();
}

/***/ }),
/* 881 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),
/* harmony export */   "TextEncoder": () => (/* binding */ TextEncoder)
/* harmony export */ });
/* harmony import */ var _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(877);
/* harmony import */ var _fallback_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(883);
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(882);
// Copyright 2017-2021 @polkadot/x-textencoder authors & contributors
// SPDX-License-Identifier: Apache-2.0



const TextEncoder = typeof _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__.xglobal.TextEncoder === 'undefined' ? _fallback_js__WEBPACK_IMPORTED_MODULE_2__.TextEncoder : _polkadot_x_global__WEBPACK_IMPORTED_MODULE_1__.xglobal.TextEncoder;

/***/ }),
/* 882 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-textencoder authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/x-textencoder',
  version: '8.0.4'
};

/***/ }),
/* 883 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TextEncoder": () => (/* binding */ TextEncoder)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-textencoder authors & contributors
// SPDX-License-Identifier: Apache-2.0
// This is very limited, only handling Ascii values
class TextEncoder {
  encode(value) {
    const u8a = new Uint8Array(value.length);

    for (let i = 0; i < value.length; i++) {
      u8a[i] = value.charCodeAt(i);
    }

    return u8a;
  }

}

/***/ }),
/* 884 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__wbindgen_is_undefined": () => (/* binding */ __wbindgen_is_undefined),
/* harmony export */   "__wbg_self_1b7a39e3a92c949c": () => (/* binding */ __wbg_self_1b7a39e3a92c949c),
/* harmony export */   "__wbg_require_604837428532a733": () => (/* binding */ __wbg_require_604837428532a733),
/* harmony export */   "__wbg_crypto_968f1772287e2df0": () => (/* binding */ __wbg_crypto_968f1772287e2df0),
/* harmony export */   "__wbg_getRandomValues_a3d34b4fee3c2869": () => (/* binding */ __wbg_getRandomValues_a3d34b4fee3c2869),
/* harmony export */   "__wbg_getRandomValues_f5e14ab7ac8e995d": () => (/* binding */ __wbg_getRandomValues_f5e14ab7ac8e995d),
/* harmony export */   "__wbg_randomFillSync_d5bd2d655fdf256a": () => (/* binding */ __wbg_randomFillSync_d5bd2d655fdf256a),
/* harmony export */   "__wbindgen_object_drop_ref": () => (/* binding */ __wbindgen_object_drop_ref),
/* harmony export */   "abort": () => (/* binding */ abort)
/* harmony export */ });
/* harmony import */ var _polkadot_x_randomvalues__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(885);
/* harmony import */ var _bridge_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(869);
// Copyright 2019-2021 @polkadot/wasm-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0

/* eslint-disable camelcase */


const DEFAULT_CRYPTO = {
  getRandomValues: _polkadot_x_randomvalues__WEBPACK_IMPORTED_MODULE_0__.getRandomValues
};
const DEFAULT_SELF = {
  crypto: DEFAULT_CRYPTO
};
const heap = new Array(32).fill(undefined).concat(undefined, null, true, false);
let heapNext = heap.length;

function getObject(idx) {
  return heap[idx];
}

function dropObject(idx) {
  if (idx < 36) {
    return;
  }

  heap[idx] = heapNext;
  heapNext = idx;
}

function takeObject(idx) {
  const ret = getObject(idx);
  dropObject(idx);
  return ret;
}

function addObject(obj) {
  if (heapNext === heap.length) {
    heap.push(heap.length + 1);
  }

  const idx = heapNext;
  heapNext = heap[idx];
  heap[idx] = obj;
  return idx;
}

function __wbindgen_is_undefined(idx) {
  return getObject(idx) === undefined;
}
function __wbg_self_1b7a39e3a92c949c() {
  return addObject(DEFAULT_SELF);
}
function __wbg_require_604837428532a733(ptr, len) {
  throw new Error(`Unable to require ${(0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.getString)(ptr, len)}`);
} // eslint-disable-next-line @typescript-eslint/no-unused-vars

function __wbg_crypto_968f1772287e2df0(_idx) {
  return addObject(DEFAULT_CRYPTO);
} // eslint-disable-next-line @typescript-eslint/no-unused-vars

function __wbg_getRandomValues_a3d34b4fee3c2869(_idx) {
  return addObject(DEFAULT_CRYPTO.getRandomValues);
} // eslint-disable-next-line @typescript-eslint/no-unused-vars

function __wbg_getRandomValues_f5e14ab7ac8e995d(_arg0, ptr, len) {
  DEFAULT_CRYPTO.getRandomValues((0,_bridge_js__WEBPACK_IMPORTED_MODULE_1__.getU8a)(ptr, len));
} // eslint-disable-next-line @typescript-eslint/no-unused-vars

function __wbg_randomFillSync_d5bd2d655fdf256a(_idx, _ptr, _len) {
  throw new Error('randomFillsync is not available'); // getObject(idx).randomFillSync(getU8a(ptr, len));
}
function __wbindgen_object_drop_ref(idx) {
  takeObject(idx);
}
function abort() {
  throw new Error('abort');
}

/***/ }),
/* 885 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* reexport safe */ _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__.packageInfo),
/* harmony export */   "getRandomValues": () => (/* binding */ getRandomValues)
/* harmony export */ });
/* harmony import */ var _packageInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(886);
// Copyright 2017-2021 @polkadot/x-randomvalues authors & contributors
// SPDX-License-Identifier: Apache-2.0

function getRandomValues(arr) {
  return crypto.getRandomValues(arr);
}

/***/ }),
/* 886 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packageInfo": () => (/* binding */ packageInfo)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/x-randomvalues authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Auto-generated by @polkadot/dev, do not edit
const packageInfo = {
  name: '@polkadot/x-randomvalues',
  version: '8.0.4'
};

/***/ }),
/* 887 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "mnemonicToSeedSync": () => (/* binding */ mnemonicToSeedSync),
/* harmony export */   "mnemonicToEntropy": () => (/* binding */ mnemonicToEntropy),
/* harmony export */   "entropyToMnemonic": () => (/* binding */ entropyToMnemonic),
/* harmony export */   "generateMnemonic": () => (/* binding */ generateMnemonic),
/* harmony export */   "validateMnemonic": () => (/* binding */ validateMnemonic)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(880);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(870);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(889);
/* harmony import */ var _pbkdf2_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(904);
/* harmony import */ var _random_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(905);
/* harmony import */ var _sha_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(888);
/* harmony import */ var _bip39_en_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(908);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Adapted from the bitcoinjs/bip39 source
// https://github.com/bitcoinjs/bip39/blob/1d063b6a6aee4145b34d701037cd3e67f5446ff9/ts_src/index.ts
// Copyright (c) 2014, Wei Lu <luwei.here@gmail.com> and Daniel Cousens <email@dcousens.com>
// ISC Licence
//
// Change made in this version -
//   - Adjust formatting (just eslint differences)
//   - Only English wordlist (this aligns with the wasm-crypto implementation)
//   - Use util-crypto randomAsU8a (instead of randombytes)
//   - Remove setting of wordlist passing of wordlist in functions
//   - Remove mnemonicToSeed (we only use the sync variant)





const INVALID_MNEMONIC = 'Invalid mnemonic';
const INVALID_ENTROPY = 'Invalid entropy';
const INVALID_CHECKSUM = 'Invalid mnemonic checksum';

function normalize(str) {
  return (str || '').normalize('NFKD');
}

function binaryToByte(bin) {
  return parseInt(bin, 2);
}

function bytesToBinary(bytes) {
  return bytes.map(x => x.toString(2).padStart(8, '0')).join('');
}

function deriveChecksumBits(entropyBuffer) {
  return bytesToBinary(Array.from((0,_sha_index_js__WEBPACK_IMPORTED_MODULE_0__.sha256AsU8a)(entropyBuffer))).slice(0, entropyBuffer.length * 8 / 32);
}

function mnemonicToSeedSync(mnemonic, password) {
  return (0,_pbkdf2_index_js__WEBPACK_IMPORTED_MODULE_1__.pbkdf2Encode)((0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.stringToU8a)(normalize(mnemonic)), (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.stringToU8a)(`mnemonic${normalize(password)}`)).password;
}
function mnemonicToEntropy(mnemonic) {
  var _entropyBits$match;

  const words = normalize(mnemonic).split(' ');
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.assert)(words.length % 3 === 0, INVALID_MNEMONIC); // convert word indices to 11 bit binary strings

  const bits = words.map(word => {
    const index = _bip39_en_js__WEBPACK_IMPORTED_MODULE_4__["default"].indexOf(word);
    (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.assert)(index !== -1, INVALID_MNEMONIC);
    return index.toString(2).padStart(11, '0');
  }).join(''); // split the binary string into ENT/CS

  const dividerIndex = Math.floor(bits.length / 33) * 32;
  const entropyBits = bits.slice(0, dividerIndex);
  const checksumBits = bits.slice(dividerIndex); // calculate the checksum and compare

  const entropyBytes = (_entropyBits$match = entropyBits.match(/(.{1,8})/g)) === null || _entropyBits$match === void 0 ? void 0 : _entropyBits$match.map(binaryToByte);
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.assert)(entropyBytes && entropyBytes.length % 4 === 0 && entropyBytes.length >= 16 && entropyBytes.length <= 32, INVALID_ENTROPY);
  const entropy = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_5__.u8aToU8a)(entropyBytes);
  const newChecksum = deriveChecksumBits(entropy);
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.assert)(newChecksum === checksumBits, INVALID_CHECKSUM);
  return entropy;
}
function entropyToMnemonic(entropy) {
  // 128 <= ENT <= 256
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.assert)(entropy.length % 4 === 0 && entropy.length >= 16 && entropy.length <= 32, INVALID_ENTROPY);
  const entropyBits = bytesToBinary(Array.from(entropy));
  const checksumBits = deriveChecksumBits(entropy); // we just set it prior, so this is a safe check
  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion

  return (entropyBits + checksumBits).match(/(.{1,11})/g).map(binary => _bip39_en_js__WEBPACK_IMPORTED_MODULE_4__["default"][binaryToByte(binary)]).join(' ');
}
function generateMnemonic(strength) {
  strength = strength || 128;
  (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_3__.assert)(strength % 32 === 0, INVALID_ENTROPY);
  return entropyToMnemonic((0,_random_index_js__WEBPACK_IMPORTED_MODULE_6__.randomAsU8a)(strength / 8));
}
function validateMnemonic(mnemonic) {
  try {
    mnemonicToEntropy(mnemonic);
  } catch (e) {
    return false;
  }

  return true;
}

/***/ }),
/* 888 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "shaAsU8a": () => (/* binding */ shaAsU8a),
/* harmony export */   "sha256AsU8a": () => (/* binding */ sha256AsU8a),
/* harmony export */   "sha512AsU8a": () => (/* binding */ sha512AsU8a)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(889);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(866);
/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(867);
/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(902);
/* harmony import */ var _noble_hashes_lib_sha256_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(897);
/* harmony import */ var _noble_hashes_lib_sha512_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(900);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0






/**
 * @name shaAsU8a
 * @summary Creates a sha Uint8Array from the input.
 */
function shaAsU8a(value, bitLength = 256, onlyJs) {
  const is256 = bitLength === 256;
  const u8a = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToU8a)(value);
  return !_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.hasBigInt || !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.isReady)() ? is256 ? (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.sha256)(u8a) : (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_2__.sha512)(u8a) : is256 ? (0,_noble_hashes_lib_sha256_js__WEBPACK_IMPORTED_MODULE_3__.sha256)(u8a) : (0,_noble_hashes_lib_sha512_js__WEBPACK_IMPORTED_MODULE_4__.sha512)(u8a);
}
/**
 * @name sha256AsU8a
 * @summary Creates a sha256 Uint8Array from the input.
 */

const sha256AsU8a = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_5__.createBitHasher)(256, shaAsU8a);
/**
 * @name sha512AsU8a
 * @summary Creates a sha512 Uint8Array from the input.
 */

const sha512AsU8a = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_5__.createBitHasher)(512, shaAsU8a);

/***/ }),
/* 889 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "u8aToU8a": () => (/* binding */ u8aToU8a)
/* harmony export */ });
/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(870);
/* harmony import */ var _hex_toU8a_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(891);
/* harmony import */ var _is_buffer_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(895);
/* harmony import */ var _is_hex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(890);
/* harmony import */ var _is_string_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(894);
/* harmony import */ var _is_u8a_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(896);
/* harmony import */ var _string_toU8a_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(880);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0







/**
 * @name u8aToU8a
 * @summary Creates a Uint8Array value from a Uint8Array, Buffer, string or hex input.
 * @description
 * `null` or `undefined` inputs returns a `[]` result, Uint8Array values returns the value, hex strings returns a Uint8Array representation.
 * @example
 * <BR>
 *
 * ```javascript
 * import { u8aToU8a } from '@polkadot/util';
 *
 * u8aToU8a(new Uint8Array([0x12, 0x34]); // => Uint8Array([0x12, 0x34])
 * u8aToU8a(0x1234); // => Uint8Array([0x12, 0x34])
 * ```
 */

function u8aToU8a(value) {
  if (!value) {
    return new Uint8Array();
  } else if ((0,_is_hex_js__WEBPACK_IMPORTED_MODULE_0__.isHex)(value)) {
    return (0,_hex_toU8a_js__WEBPACK_IMPORTED_MODULE_1__.hexToU8a)(value);
  } else if ((0,_is_string_js__WEBPACK_IMPORTED_MODULE_2__.isString)(value)) {
    return (0,_string_toU8a_js__WEBPACK_IMPORTED_MODULE_3__.stringToU8a)(value);
  } else if (Array.isArray(value) || (0,_is_buffer_js__WEBPACK_IMPORTED_MODULE_4__.isBuffer)(value)) {
    return new Uint8Array(value);
  }

  (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assert)((0,_is_u8a_js__WEBPACK_IMPORTED_MODULE_6__.isU8a)(value), () => `Unable to convert ${value.toString()} (typeof ${typeof value}) to a Uint8Array`);
  return value;
}

/***/ }),
/* 890 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "REGEX_HEX_PREFIXED": () => (/* binding */ REGEX_HEX_PREFIXED),
/* harmony export */   "REGEX_HEX_NOPREFIX": () => (/* binding */ REGEX_HEX_NOPREFIX),
/* harmony export */   "isHex": () => (/* binding */ isHex)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
const REGEX_HEX_PREFIXED = /^0x[\da-fA-F]+$/;
const REGEX_HEX_NOPREFIX = /^[\da-fA-F]+$/;
/**
 * @name isHex
 * @summary Tests for a hex string.
 * @description
 * Checks to see if the input value is a `0x` prefixed hex string. Optionally (`bitLength` !== -1) checks to see if the bitLength is correct.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isHex } from '@polkadot/util';
 *
 * isHex('0x1234'); // => true
 * isHex('0x1234', 8); // => false
 * ```
 */

function isHex(value, bitLength = -1, ignoreLength = false) {
  return typeof value === 'string' && (value === '0x' || REGEX_HEX_PREFIXED.test(value)) ? bitLength === -1 ? ignoreLength ? true : value.length % 2 === 0 : value.length === 2 + Math.ceil(bitLength / 4) : false;
}

/***/ }),
/* 891 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "hexToU8a": () => (/* binding */ hexToU8a)
/* harmony export */ });
/* harmony import */ var _alphabet_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(893);
/* harmony import */ var _stripPrefix_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(892);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0


/**
 * @name hexToU8a
 * @summary Creates a Uint8Array object from a hex string.
 * @description
 * `null` inputs returns an empty `Uint8Array` result. Hex input values return the actual bytes value converted to a Uint8Array. Anything that is not a hex string (including the `0x` prefix) throws an error.
 * @example
 * <BR>
 *
 * ```javascript
 * import { hexToU8a } from '@polkadot/util';
 *
 * hexToU8a('0x80001f'); // Uint8Array([0x80, 0x00, 0x1f])
 * hexToU8a('0x80001f', 32); // Uint8Array([0x00, 0x80, 0x00, 0x1f])
 * ```
 */

function hexToU8a(_value, bitLength = -1) {
  if (!_value) {
    return new Uint8Array();
  }

  const value = (0,_stripPrefix_js__WEBPACK_IMPORTED_MODULE_0__.hexStripPrefix)(_value).toLowerCase();
  const valLength = value.length / 2;
  const endLength = Math.ceil(bitLength === -1 ? valLength : bitLength / 8);
  const result = new Uint8Array(endLength);
  const offset = endLength > valLength ? endLength - valLength : 0;
  const dv = new DataView(result.buffer, offset);
  const mod = (endLength - offset) % 2;
  const length = endLength - offset - mod;

  for (let i = 0; i < length; i += 2) {
    dv.setUint16(i, _alphabet_js__WEBPACK_IMPORTED_MODULE_1__.HEX_TO_U16[value.substr(i * 2, 4)]);
  }

  if (mod) {
    dv.setUint8(length, _alphabet_js__WEBPACK_IMPORTED_MODULE_1__.HEX_TO_U8[value.substr(value.length - 2, 2)]);
  }

  return result;
}

/***/ }),
/* 892 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "hexStripPrefix": () => (/* binding */ hexStripPrefix)
/* harmony export */ });
/* harmony import */ var _is_hex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(890);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name hexStripPrefix
 * @summary Strips any leading `0x` prefix.
 * @description
 * Tests for the existence of a `0x` prefix, and returns the value without the prefix. Un-prefixed values are returned as-is.
 * @example
 * <BR>
 *
 * ```javascript
 * import { hexStripPrefix } from '@polkadot/util';
 *
 * console.log('stripped', hexStripPrefix('0x1234')); // => 1234
 * ```
 */

function hexStripPrefix(value) {
  if (!value || value === '0x') {
    return '';
  } else if (_is_hex_js__WEBPACK_IMPORTED_MODULE_0__.REGEX_HEX_PREFIXED.test(value)) {
    return value.substr(2);
  } else if (_is_hex_js__WEBPACK_IMPORTED_MODULE_0__.REGEX_HEX_NOPREFIX.test(value)) {
    return value;
  }

  throw new Error(`Expected hex value to convert, found '${value}'`);
}

/***/ }),
/* 893 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HEX_TO_U16": () => (/* binding */ HEX_TO_U16),
/* harmony export */   "HEX_TO_U8": () => (/* binding */ HEX_TO_U8),
/* harmony export */   "U16_TO_HEX": () => (/* binding */ U16_TO_HEX),
/* harmony export */   "U8_TO_HEX": () => (/* binding */ U8_TO_HEX)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0
const U8_TO_HEX = new Array(256);
const U16_TO_HEX = new Array(256 * 256);
const HEX_TO_U8 = {};
const HEX_TO_U16 = {};

for (let n = 0; n < 256; n++) {
  const hex = n.toString(16).padStart(2, '0');
  U8_TO_HEX[n] = hex;
  HEX_TO_U8[hex] = n;
}

for (let i = 0; i < 256; i++) {
  for (let j = 0; j < 256; j++) {
    const hex = U8_TO_HEX[i] + U8_TO_HEX[j];
    const n = i << 8 | j;
    U16_TO_HEX[n] = hex;
    HEX_TO_U16[hex] = n;
  }
}



/***/ }),
/* 894 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isString": () => (/* binding */ isString)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isString
 * @summary Tests for a string.
 * @description
 * Checks to see if the input value is a JavaScript string.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isString } from '@polkadot/util';
 *
 * console.log('isString', isString('test')); // => true
 * ```
 */
function isString(value) {
  return typeof value === 'string' || value instanceof String;
}

/***/ }),
/* 895 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isBuffer": () => (/* binding */ isBuffer)
/* harmony export */ });
/* harmony import */ var _has_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(866);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isBuffer
 * @summary Tests for a `Buffer` object instance.
 * @description
 * Checks to see if the input object is an instance of `Buffer`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isBuffer } from '@polkadot/util';
 *
 * console.log('isBuffer', isBuffer(Buffer.from([]))); // => true
 * ```
 */

function isBuffer(value) {
  return _has_js__WEBPACK_IMPORTED_MODULE_0__.hasBuffer && Buffer.isBuffer(value);
}

/***/ }),
/* 896 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isU8a": () => (/* binding */ isU8a)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name isU8a
 * @summary Tests for a `Uint8Array` object instance.
 * @description
 * Checks to see if the input object is an instance of `Uint8Array`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isUint8Array } from '@polkadot/util';
 *
 * console.log('isU8a', isU8a([])); // => false
 * ```
 */
function isU8a(value) {
  return value instanceof Uint8Array;
}

/***/ }),
/* 897 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "sha256": () => (/* binding */ sha256)
/* harmony export */ });
/* harmony import */ var _sha2_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(898);
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(899);
/*! noble-hashes - MIT License (c) 2021 Paul Miller (paulmillr.com) */
// https://github.com/paulmillr/noble-hashes/pull/13

 // Choice: a ? b : c

const Chi = (a, b, c) => a & b ^ ~a & c; // Majority function, true if any two inpust is true


const Maj = (a, b, c) => a & b ^ a & c ^ b & c; // Round constants:
// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)
// prettier-ignore


const SHA256_K = new Uint32Array([0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2]); // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):
// prettier-ignore

const IV = new Uint32Array([0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19]); // Temporary buffer, not used to store anything between runs
// Named this way because it matches specification.

const SHA256_W = new Uint32Array(64);

class SHA256 extends _sha2_js__WEBPACK_IMPORTED_MODULE_0__.SHA2 {
  // We cannot use array here since array allows indexing by variable
  // which means optimizer/compiler cannot use registers.
  constructor() {
    super(64, 32, 8, false);
    this.A = IV[0] | 0;
    this.B = IV[1] | 0;
    this.C = IV[2] | 0;
    this.D = IV[3] | 0;
    this.E = IV[4] | 0;
    this.F = IV[5] | 0;
    this.G = IV[6] | 0;
    this.H = IV[7] | 0;
  }

  get() {
    const {
      A,
      B,
      C,
      D,
      E,
      F,
      G,
      H
    } = this;
    return [A, B, C, D, E, F, G, H];
  } // prettier-ignore


  set(A, B, C, D, E, F, G, H) {
    this.A = A | 0;
    this.B = B | 0;
    this.C = C | 0;
    this.D = D | 0;
    this.E = E | 0;
    this.F = F | 0;
    this.G = G | 0;
    this.H = H | 0;
  }

  process(view, offset) {
    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array
    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);

    for (let i = 16; i < 64; i++) {
      const W15 = SHA256_W[i - 15];
      const W2 = SHA256_W[i - 2];
      const s0 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(W15, 7) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(W15, 18) ^ W15 >>> 3;
      const s1 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(W2, 17) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(W2, 19) ^ W2 >>> 10;
      SHA256_W[i] = s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16] | 0;
    } // Compression function main loop, 64 rounds


    let {
      A,
      B,
      C,
      D,
      E,
      F,
      G,
      H
    } = this;

    for (let i = 0; i < 64; i++) {
      const sigma1 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(E, 6) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(E, 11) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(E, 25);
      const T1 = H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i] | 0;
      const sigma0 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(A, 2) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(A, 13) ^ (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.rotr)(A, 22);
      const T2 = sigma0 + Maj(A, B, C) | 0;
      H = G;
      G = F;
      F = E;
      E = D + T1 | 0;
      D = C;
      C = B;
      B = A;
      A = T1 + T2 | 0;
    } // Add the compressed chunk to the current hash value


    A = A + this.A | 0;
    B = B + this.B | 0;
    C = C + this.C | 0;
    D = D + this.D | 0;
    E = E + this.E | 0;
    F = F + this.F | 0;
    G = G + this.G | 0;
    H = H + this.H | 0;
    this.set(A, B, C, D, E, F, G, H);
  }

  roundClean() {
    SHA256_W.fill(0);
  }

  destroy() {
    this.set(0, 0, 0, 0, 0, 0, 0, 0);
    this.buffer.fill(0);
  }

}

const sha256 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapConstructor)(() => new SHA256());

/***/ }),
/* 898 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SHA2": () => (/* binding */ SHA2)
/* harmony export */ });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(899);
/*! noble-hashes - MIT License (c) 2021 Paul Miller (paulmillr.com) */
// https://github.com/paulmillr/noble-hashes/pull/13


const _32n = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__._n)(32);

const _u32_max = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__._n)(0xffffffff); // Polyfill for Safari 14


function setBigUint64(view, byteOffset, value, isLE) {
  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);
  const wh = Number(value >> _32n & _u32_max);
  const wl = Number(value & _u32_max);
  const [h, l] = isLE ? [4, 0] : [0, 4];
  view.setUint32(byteOffset + h, wh, isLE);
  view.setUint32(byteOffset + l, wl, isLE);
} // Base SHA2 class (RFC 6234)


class SHA2 extends _utils_js__WEBPACK_IMPORTED_MODULE_0__.Hash {
  constructor(blockLen, outputLen, padOffset, isLE) {
    super();
    this.blockLen = blockLen;
    this.outputLen = outputLen;
    this.padOffset = padOffset;
    this.isLE = isLE;
    this.buffer = void 0;
    this.view = void 0;
    this.finished = false;
    this.length = 0;
    this.pos = 0;
    this.destroyed = false;
    this.buffer = new Uint8Array(blockLen);
    this.view = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createView)(this.buffer);
  }

  update(data) {
    if (this.destroyed) throw new Error('instance is destroyed');
    const {
      view,
      buffer,
      blockLen,
      finished
    } = this;
    if (finished) throw new Error('digest() was already called');
    data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.toBytes)(data);
    const len = data.length;

    for (let pos = 0; pos < len;) {
      const take = Math.min(blockLen - this.pos, len - pos); // Fast path: we have at least one block in input, cast it to view and process

      if (take === blockLen) {
        const dataView = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createView)(data);

        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);

        continue;
      }

      buffer.set(data.subarray(pos, pos + take), this.pos);
      this.pos += take;
      pos += take;

      if (this.pos === blockLen) {
        this.process(view, 0);
        this.pos = 0;
      }
    }

    this.length += data.length;
    this.roundClean();
    return this;
  }

  digestInto(out) {
    if (this.destroyed) throw new Error('instance is destroyed');
    if (!(out instanceof Uint8Array) || out.length < this.outputLen) throw new Error('_Sha2: Invalid output buffer');
    if (this.finished) throw new Error('digest() was already called');
    this.finished = true; // Padding
    // We can avoid allocation of buffer for padding completely if it
    // was previously not allocated here. But it won't change performance.

    const {
      buffer,
      view,
      blockLen,
      isLE
    } = this;
    let {
      pos
    } = this; // append the bit '1' to the message

    buffer[pos++] = 0b10000000;
    this.buffer.subarray(pos).fill(0); // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again

    if (this.padOffset > blockLen - pos) {
      this.process(view, 0);
      pos = 0;
    } // Pad until full block byte with zeros


    for (let i = pos; i < blockLen; i++) buffer[i] = 0; // NOTE: sha512 requires length to be 128bit integer, but length in JS will overflow before that
    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.
    // So we just write lowest 64bit of that value.


    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);
    this.process(view, 0);
    const oview = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createView)(out);
    this.get().forEach((v, i) => oview.setUint32(4 * i, v, isLE));
  }

  digest() {
    const {
      buffer,
      outputLen
    } = this;
    this.digestInto(buffer);
    const res = buffer.slice(0, outputLen);
    this.destroy();
    return res;
  }

  _cloneInto(to) {
    to || (to = new this.constructor());
    to.set(...this.get());
    const {
      blockLen,
      buffer,
      length,
      finished,
      destroyed,
      pos
    } = this;
    to.length = length;
    to.pos = pos;
    to.finished = finished;
    to.destroyed = destroyed;
    if (length % blockLen) to.buffer.set(buffer);
    return to;
  }

}

/***/ }),
/* 899 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "_n": () => (/* binding */ _n),
/* harmony export */   "u8": () => (/* binding */ u8),
/* harmony export */   "u32": () => (/* binding */ u32),
/* harmony export */   "createView": () => (/* binding */ createView),
/* harmony export */   "rotr": () => (/* binding */ rotr),
/* harmony export */   "isLE": () => (/* binding */ isLE),
/* harmony export */   "bytesToHex": () => (/* binding */ bytesToHex),
/* harmony export */   "nextTick": () => (/* binding */ nextTick),
/* harmony export */   "asyncLoop": () => (/* binding */ asyncLoop),
/* harmony export */   "toBytes": () => (/* binding */ toBytes),
/* harmony export */   "assertNumber": () => (/* binding */ assertNumber),
/* harmony export */   "assertBool": () => (/* binding */ assertBool),
/* harmony export */   "assertHash": () => (/* binding */ assertHash),
/* harmony export */   "Hash": () => (/* binding */ Hash),
/* harmony export */   "checkOpts": () => (/* binding */ checkOpts),
/* harmony export */   "wrapConstructor": () => (/* binding */ wrapConstructor),
/* harmony export */   "wrapConstructorWithOpts": () => (/* binding */ wrapConstructorWithOpts),
/* harmony export */   "crypto": () => (/* binding */ crypto),
/* harmony export */   "randomBytes": () => (/* binding */ randomBytes)
/* harmony export */ });
/*! noble-hashes - MIT License (c) 2021 Paul Miller (paulmillr.com) */
// https://github.com/paulmillr/noble-hashes/pull/13
// prettier-ignore
// helper to protect against older bundlers
const _n = typeof BigInt !== 'undefined' ? BigInt : () => Number.NaN; // Cast array to different type

const u8 = arr => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);
const u32 = arr => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4)); // Cast array to view

const createView = arr => new DataView(arr.buffer, arr.byteOffset, arr.byteLength); // The rotate right (circular right shift) operation for uint32

const rotr = (word, shift) => word << 32 - shift | word >>> shift;
const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44; // There is almost no big endian hardware, but js typed arrays uses platform specific endianess.
// So, just to be sure not to corrupt anything.

if (!isLE) throw new Error('Non little-endian hardware is not supported');
const hexes = Array.from({
  length: 256
}, (v, i) => i.toString(16).padStart(2, '0'));
function bytesToHex(uint8a) {
  // pre-caching chars could speed this up 6x.
  let hex = '';

  for (let i = 0; i < uint8a.length; i++) {
    hex += hexes[uint8a[i]];
  }

  return hex;
} // Currently avoid insertion of polyfills with packers (browserify/webpack/etc)
// But setTimeout is pretty slow, maybe worth to investigate howto do minimal polyfill here

const nextTick = (() => {
  const nodeRequire = typeof module !== 'undefined' && typeof module.require === 'function' && module.require.bind(module);

  try {
    if (nodeRequire) {
      const {
        setImmediate
      } = nodeRequire('timers');
      return () => new Promise(resolve => setImmediate(resolve));
    }
  } catch (e) {}

  return () => new Promise(resolve => setTimeout(resolve, 0));
})(); // Returns control to thread each 'tick' ms to avoid blocking

async function asyncLoop(iters, tick, cb) {
  let ts = Date.now();

  for (let i = 0; i < iters; i++) {
    cb(i); // Date.now() is not monotonic, so in case if clock goes backwards we return return control too

    const diff = Date.now() - ts;
    if (diff >= 0 && diff < tick) continue;
    await nextTick();
    ts += diff;
  }
}
function toBytes(data) {
  if (typeof data === 'string') data = new TextEncoder().encode(data);
  if (!(data instanceof Uint8Array)) throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);
  return data;
}
function assertNumber(n) {
  if (!Number.isSafeInteger(n)) throw new Error(`Wrong integer: ${n}`);
}
function assertBool(b) {
  if (typeof b !== 'boolean') {
    throw new Error(`Expected boolean, not ${b}`);
  }
}
function assertHash(hash) {
  if (typeof hash !== 'function' || typeof hash.init !== 'function') throw new Error('Hash should be wrapped by utils.wrapConstructor');
  assertNumber(hash.outputLen);
  assertNumber(hash.blockLen);
} // For runtime check if class implements interface

class Hash {
  constructor() {
    this.blockLen = void 0;
    this.outputLen = void 0;
  }

  // Safe version that clones internal state
  clone() {
    return this._cloneInto();
  }

}

// Check if object doens't have custom constructor (like Uint8Array/Array)
const isPlainObject = obj => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;

function checkOpts(def, _opts) {
  if (_opts !== undefined && (typeof _opts !== 'object' || !isPlainObject(_opts))) throw new TypeError('Options should be object or undefined');
  const opts = Object.assign(def, _opts);
  return opts;
}
function wrapConstructor(hashConstructor) {
  const hashC = message => hashConstructor().update(toBytes(message)).digest();

  const tmp = hashConstructor();
  hashC.outputLen = tmp.outputLen;
  hashC.blockLen = tmp.blockLen;

  hashC.create = () => hashConstructor();

  hashC.init = hashC.create;
  return hashC;
}
function wrapConstructorWithOpts(hashCons) {
  const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();

  const tmp = hashCons({});
  hashC.outputLen = tmp.outputLen;
  hashC.blockLen = tmp.blockLen;

  hashC.create = opts => hashCons(opts);

  hashC.init = hashC.create;
  return hashC;
}
const crypto = (() => {
  const webCrypto = typeof self === 'object' && 'crypto' in self ? self.crypto : undefined;
  const nodeRequire = typeof module !== 'undefined' && typeof require === 'function';
  return {
    node: nodeRequire && !webCrypto ? require('crypto') : undefined,
    web: webCrypto
  };
})();
function randomBytes(bytesLength = 32) {
  if (crypto.web) {
    return crypto.web.getRandomValues(new Uint8Array(bytesLength));
  } else if (crypto.node) {
    return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);
  } else {
    throw new Error("The environment doesn't have randomBytes function");
  }
}

/***/ }),
/* 900 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SHA512": () => (/* binding */ SHA512),
/* harmony export */   "sha512": () => (/* binding */ sha512),
/* harmony export */   "sha512_256": () => (/* binding */ sha512_256),
/* harmony export */   "sha384": () => (/* binding */ sha384)
/* harmony export */ });
/* harmony import */ var _sha2_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(898);
/* harmony import */ var _u64_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(901);
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(899);
/*! noble-hashes - MIT License (c) 2021 Paul Miller (paulmillr.com) */
// https://github.com/paulmillr/noble-hashes/pull/13


 // Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):
// prettier-ignore

const [SHA512_Kh, SHA512_Kl] = _u64_js__WEBPACK_IMPORTED_MODULE_0__.split([(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x428a2f98d728ae22'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x7137449123ef65cd'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xb5c0fbcfec4d3b2f'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xe9b5dba58189dbbc'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x3956c25bf348b538'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x59f111f1b605d019'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x923f82a4af194f9b'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xab1c5ed5da6d8118'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xd807aa98a3030242'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x12835b0145706fbe'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x243185be4ee4b28c'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x550c7dc3d5ffb4e2'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x72be5d74f27b896f'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x80deb1fe3b1696b1'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x9bdc06a725c71235'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xc19bf174cf692694'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xe49b69c19ef14ad2'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xefbe4786384f25e3'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x0fc19dc68b8cd5b5'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x240ca1cc77ac9c65'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x2de92c6f592b0275'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x4a7484aa6ea6e483'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x5cb0a9dcbd41fbd4'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x76f988da831153b5'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x983e5152ee66dfab'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xa831c66d2db43210'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xb00327c898fb213f'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xbf597fc7beef0ee4'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xc6e00bf33da88fc2'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xd5a79147930aa725'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x06ca6351e003826f'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x142929670a0e6e70'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x27b70a8546d22ffc'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x2e1b21385c26c926'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x4d2c6dfc5ac42aed'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x53380d139d95b3df'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x650a73548baf63de'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x766a0abb3c77b2a8'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x81c2c92e47edaee6'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x92722c851482353b'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xa2bfe8a14cf10364'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xa81a664bbc423001'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xc24b8b70d0f89791'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xc76c51a30654be30'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xd192e819d6ef5218'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xd69906245565a910'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xf40e35855771202a'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x106aa07032bbd1b8'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x19a4c116b8d2d0c8'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x1e376c085141ab53'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x2748774cdf8eeb99'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x34b0bcb5e19b48a8'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x391c0cb3c5c95a63'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x4ed8aa4ae3418acb'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x5b9cca4f7763e373'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x682e6ff3d6b2b8a3'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x748f82ee5defb2fc'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x78a5636f43172f60'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x84c87814a1f0ab72'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x8cc702081a6439ec'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x90befffa23631e28'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xa4506cebde82bde9'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xbef9a3f7b2c67915'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xc67178f2e372532b'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xca273eceea26619c'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xd186b8c721c0c207'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xeada7dd6cde0eb1e'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0xf57d4f7fee6ed178'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x06f067aa72176fba'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x0a637dc5a2c898a6'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x113f9804bef90dae'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x1b710b35131c471b'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x28db77f523047d84'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x32caab7b40c72493'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x3c9ebe0a15c9bebc'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x431d67c49c100d4c'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x4cc5d4becb3e42b6'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x597f299cfc657e2a'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x5fcb6fab3ad6faec'), (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__._n)('0x6c44198c4a475817')]); // Temporary buffer, not used to store anything between runs

const SHA512_W_H = new Uint32Array(80);
const SHA512_W_L = new Uint32Array(80);
class SHA512 extends _sha2_js__WEBPACK_IMPORTED_MODULE_2__.SHA2 {
  // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.
  // Also looks cleaner and easier to verify with spec.
  // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):
  // h -- high 32 bits, l -- low 32 bits
  constructor() {
    super(128, 64, 16, false);
    this.Ah = 0x6a09e667 | 0;
    this.Al = 0xf3bcc908 | 0;
    this.Bh = 0xbb67ae85 | 0;
    this.Bl = 0x84caa73b | 0;
    this.Ch = 0x3c6ef372 | 0;
    this.Cl = 0xfe94f82b | 0;
    this.Dh = 0xa54ff53a | 0;
    this.Dl = 0x5f1d36f1 | 0;
    this.Eh = 0x510e527f | 0;
    this.El = 0xade682d1 | 0;
    this.Fh = 0x9b05688c | 0;
    this.Fl = 0x2b3e6c1f | 0;
    this.Gh = 0x1f83d9ab | 0;
    this.Gl = 0xfb41bd6b | 0;
    this.Hh = 0x5be0cd19 | 0;
    this.Hl = 0x137e2179 | 0;
  } // prettier-ignore


  get() {
    const {
      Ah,
      Al,
      Bh,
      Bl,
      Ch,
      Cl,
      Dh,
      Dl,
      Eh,
      El,
      Fh,
      Fl,
      Gh,
      Gl,
      Hh,
      Hl
    } = this;
    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];
  } // prettier-ignore


  set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {
    this.Ah = Ah | 0;
    this.Al = Al | 0;
    this.Bh = Bh | 0;
    this.Bl = Bl | 0;
    this.Ch = Ch | 0;
    this.Cl = Cl | 0;
    this.Dh = Dh | 0;
    this.Dl = Dl | 0;
    this.Eh = Eh | 0;
    this.El = El | 0;
    this.Fh = Fh | 0;
    this.Fl = Fl | 0;
    this.Gh = Gh | 0;
    this.Gl = Gl | 0;
    this.Hh = Hh | 0;
    this.Hl = Hl | 0;
  }

  process(view, offset) {
    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array
    for (let i = 0; i < 16; i++, offset += 4) {
      SHA512_W_H[i] = view.getUint32(offset);
      SHA512_W_L[i] = view.getUint32(offset += 4);
    }

    for (let i = 16; i < 80; i++) {
      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)
      const W15h = SHA512_W_H[i - 15] | 0;
      const W15l = SHA512_W_L[i - 15] | 0;
      const s0h = _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrSH(W15h, W15l, 1) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrSH(W15h, W15l, 8) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__.shrSH(W15h, W15l, 7);
      const s0l = _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrSL(W15h, W15l, 1) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrSL(W15h, W15l, 8) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__.shrSL(W15h, W15l, 7); // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)

      const W2h = SHA512_W_H[i - 2] | 0;
      const W2l = SHA512_W_L[i - 2] | 0;
      const s1h = _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrSH(W2h, W2l, 19) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrBH(W2h, W2l, 61) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__.shrSH(W2h, W2l, 6);
      const s1l = _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrSL(W2h, W2l, 19) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrBL(W2h, W2l, 61) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__.shrSL(W2h, W2l, 6); // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];

      const SUMl = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);
      const SUMh = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);
      SHA512_W_H[i] = SUMh | 0;
      SHA512_W_L[i] = SUMl | 0;
    }

    let {
      Ah,
      Al,
      Bh,
      Bl,
      Ch,
      Cl,
      Dh,
      Dl,
      Eh,
      El,
      Fh,
      Fl,
      Gh,
      Gl,
      Hh,
      Hl
    } = this; // Compression function main loop, 80 rounds

    for (let i = 0; i < 80; i++) {
      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)
      const sigma1h = _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrSH(Eh, El, 14) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrSH(Eh, El, 18) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrBH(Eh, El, 41);
      const sigma1l = _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrSL(Eh, El, 14) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrSL(Eh, El, 18) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrBL(Eh, El, 41); //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;

      const CHIh = Eh & Fh ^ ~Eh & Gh;
      const CHIl = El & Fl ^ ~El & Gl; // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]
      // prettier-ignore

      const T1ll = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);
      const T1h = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);
      const T1l = T1ll | 0; // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)

      const sigma0h = _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrSH(Ah, Al, 28) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrBH(Ah, Al, 34) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrBH(Ah, Al, 39);
      const sigma0l = _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrSL(Ah, Al, 28) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrBL(Ah, Al, 34) ^ _u64_js__WEBPACK_IMPORTED_MODULE_0__.rotrBL(Ah, Al, 39);
      const MAJh = Ah & Bh ^ Ah & Ch ^ Bh & Ch;
      const MAJl = Al & Bl ^ Al & Cl ^ Bl & Cl;
      Hh = Gh | 0;
      Hl = Gl | 0;
      Gh = Fh | 0;
      Gl = Fl | 0;
      Fh = Eh | 0;
      Fl = El | 0;
      ({
        h: Eh,
        l: El
      } = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));
      Dh = Ch | 0;
      Dl = Cl | 0;
      Ch = Bh | 0;
      Cl = Bl | 0;
      Bh = Ah | 0;
      Bl = Al | 0;
      const All = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add3L(T1l, sigma0l, MAJl);
      Ah = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add3H(All, T1h, sigma0h, MAJh);
      Al = All | 0;
    } // Add the compressed chunk to the current hash value


    ({
      h: Ah,
      l: Al
    } = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));
    ({
      h: Bh,
      l: Bl
    } = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));
    ({
      h: Ch,
      l: Cl
    } = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));
    ({
      h: Dh,
      l: Dl
    } = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));
    ({
      h: Eh,
      l: El
    } = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));
    ({
      h: Fh,
      l: Fl
    } = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));
    ({
      h: Gh,
      l: Gl
    } = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));
    ({
      h: Hh,
      l: Hl
    } = _u64_js__WEBPACK_IMPORTED_MODULE_0__.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));
    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);
  }

  roundClean() {
    SHA512_W_H.fill(0);
    SHA512_W_L.fill(0);
  }

  destroy() {
    this.buffer.fill(0);
    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  }

}

class SHA512_256 extends SHA512 {
  // h -- high 32 bits, l -- low 32 bits
  constructor() {
    super();
    this.Ah = 0x22312194 | 0;
    this.Al = 0xfc2bf72c | 0;
    this.Bh = 0x9f555fa3 | 0;
    this.Bl = 0xc84c64c2 | 0;
    this.Ch = 0x2393b86b | 0;
    this.Cl = 0x6f53b151 | 0;
    this.Dh = 0x96387719 | 0;
    this.Dl = 0x5940eabd | 0;
    this.Eh = 0x96283ee2 | 0;
    this.El = 0xa88effe3 | 0;
    this.Fh = 0xbe5e1e25 | 0;
    this.Fl = 0x53863992 | 0;
    this.Gh = 0x2b0199fc | 0;
    this.Gl = 0x2c85b8aa | 0;
    this.Hh = 0x0eb72ddc | 0;
    this.Hl = 0x81c52ca2 | 0;
    this.outputLen = 32;
  }

}

class SHA384 extends SHA512 {
  // h -- high 32 bits, l -- low 32 bits
  constructor() {
    super();
    this.Ah = 0xcbbb9d5d | 0;
    this.Al = 0xc1059ed8 | 0;
    this.Bh = 0x629a292a | 0;
    this.Bl = 0x367cd507 | 0;
    this.Ch = 0x9159015a | 0;
    this.Cl = 0x3070dd17 | 0;
    this.Dh = 0x152fecd8 | 0;
    this.Dl = 0xf70e5939 | 0;
    this.Eh = 0x67332667 | 0;
    this.El = 0xffc00b31 | 0;
    this.Fh = 0x8eb44a87 | 0;
    this.Fl = 0x68581511 | 0;
    this.Gh = 0xdb0c2e0d | 0;
    this.Gl = 0x64f98fa7 | 0;
    this.Hh = 0x47b5481d | 0;
    this.Hl = 0xbefa4fa4 | 0;
    this.outputLen = 48;
  }

}

const sha512 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapConstructor)(() => new SHA512());
const sha512_256 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapConstructor)(() => new SHA512_256());
const sha384 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapConstructor)(() => new SHA384());

/***/ }),
/* 901 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fromBig": () => (/* binding */ fromBig),
/* harmony export */   "split": () => (/* binding */ split),
/* harmony export */   "toBig": () => (/* binding */ toBig),
/* harmony export */   "shrSH": () => (/* binding */ shrSH),
/* harmony export */   "shrSL": () => (/* binding */ shrSL),
/* harmony export */   "rotrSH": () => (/* binding */ rotrSH),
/* harmony export */   "rotrSL": () => (/* binding */ rotrSL),
/* harmony export */   "rotrBH": () => (/* binding */ rotrBH),
/* harmony export */   "rotrBL": () => (/* binding */ rotrBL),
/* harmony export */   "rotr32H": () => (/* binding */ rotr32H),
/* harmony export */   "rotr32L": () => (/* binding */ rotr32L),
/* harmony export */   "rotlSH": () => (/* binding */ rotlSH),
/* harmony export */   "rotlSL": () => (/* binding */ rotlSL),
/* harmony export */   "rotlBH": () => (/* binding */ rotlBH),
/* harmony export */   "rotlBL": () => (/* binding */ rotlBL),
/* harmony export */   "add": () => (/* binding */ add),
/* harmony export */   "add3L": () => (/* binding */ add3L),
/* harmony export */   "add3H": () => (/* binding */ add3H),
/* harmony export */   "add4L": () => (/* binding */ add4L),
/* harmony export */   "add4H": () => (/* binding */ add4H),
/* harmony export */   "add5L": () => (/* binding */ add5L),
/* harmony export */   "add5H": () => (/* binding */ add5H)
/* harmony export */ });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(899);
/*! noble-hashes - MIT License (c) 2021 Paul Miller (paulmillr.com) */
// https://github.com/paulmillr/noble-hashes/pull/13


const U32_MASK64 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__._n)(2 ** 32 - 1);

const _32n = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__._n)(32);

function fromBig(n, le = false) {
  if (le) return {
    h: Number(n & U32_MASK64),
    l: Number(n >> _32n & U32_MASK64)
  };
  return {
    h: Number(n >> _32n & U32_MASK64) | 0,
    l: Number(n & U32_MASK64) | 0
  };
}
function split(lst, le = false) {
  let [Ah, Al] = [new Uint32Array(lst.length), new Uint32Array(lst.length)];

  for (let i = 0; i < lst.length; i++) {
    const {
      h,
      l
    } = fromBig(lst[i], le);
    [Ah[i], Al[i]] = [h, l];
  }

  return [Ah, Al];
}
const toBig = (h, l) => BigInt(h >>> 0) << _32n | BigInt(l >>> 0); // for Shift in [0, 32)

const shrSH = (h, l, s) => h >>> s;
const shrSL = (h, l, s) => h << 32 - s | l >>> s; // Right rotate for Shift in [1, 32)

const rotrSH = (h, l, s) => h >>> s | l << 32 - s;
const rotrSL = (h, l, s) => h << 32 - s | l >>> s; // Right rotate for Shift in (32, 64), NOTE: 32 is special case.

const rotrBH = (h, l, s) => h << 64 - s | l >>> s - 32;
const rotrBL = (h, l, s) => h >>> s - 32 | l << 64 - s; // Right rotate for shift===32 (just swaps l&h)

const rotr32H = (h, l) => l;
const rotr32L = (h, l) => h; // Left rotate for Shift in [1, 32)

const rotlSH = (h, l, s) => h << s | l >>> 32 - s;
const rotlSL = (h, l, s) => l << s | h >>> 32 - s; // Left rotate for Shift in (32, 64), NOTE: 32 is special case.

const rotlBH = (h, l, s) => l << s - 32 | h >>> 64 - s;
const rotlBL = (h, l, s) => h << s - 32 | l >>> 64 - s; // JS uses 32-bit signed integers for bitwise operations which means we cannot
// simple take carry out of low bit sum by shift, we need to use division.

function add(Ah, Al, Bh, Bl) {
  const l = (Al >>> 0) + (Bl >>> 0);
  return {
    h: Ah + Bh + (l / 2 ** 32 | 0) | 0,
    l: l | 0
  };
} // Addition with more than 2 elements

const add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);
const add3H = (low, Ah, Bh, Ch) => Ah + Bh + Ch + (low / 2 ** 32 | 0) | 0;
const add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);
const add4H = (low, Ah, Bh, Ch, Dh) => Ah + Bh + Ch + Dh + (low / 2 ** 32 | 0) | 0;
const add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);
const add5H = (low, Ah, Bh, Ch, Dh, Eh) => Ah + Bh + Ch + Dh + Eh + (low / 2 ** 32 | 0) | 0;

/***/ }),
/* 902 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createAsHex": () => (/* binding */ createAsHex),
/* harmony export */   "createBitHasher": () => (/* binding */ createBitHasher)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(903);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
 // eslint-disable-next-line @typescript-eslint/no-explicit-any

function createAsHex(fn) {
  return (...args) => (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_0__.u8aToHex)(fn(...args));
}
function createBitHasher(bitLength, fn) {
  return (data, onlyJs) => fn(data, bitLength, onlyJs);
}

/***/ }),
/* 903 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "u8aToHex": () => (/* binding */ u8aToHex)
/* harmony export */ });
/* harmony import */ var _hex_alphabet_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(893);
// Copyright 2017-2021 @polkadot/util authors & contributors
// SPDX-License-Identifier: Apache-2.0

/** @internal */

function hex(value) {
  const mod = value.length % 2;
  const length = value.length - mod;
  const dv = new DataView(value.buffer, value.byteOffset);
  let result = '';

  for (let i = 0; i < length; i += 2) {
    result += _hex_alphabet_js__WEBPACK_IMPORTED_MODULE_0__.U16_TO_HEX[dv.getUint16(i)];
  }

  if (mod) {
    result += _hex_alphabet_js__WEBPACK_IMPORTED_MODULE_0__.U8_TO_HEX[dv.getUint8(length)];
  }

  return result;
}
/**
 * @name u8aToHex
 * @summary Creates a hex string from a Uint8Array object.
 * @description
 * `UInt8Array` input values return the actual hex string. `null` or `undefined` values returns an `0x` string.
 * @example
 * <BR>
 *
 * ```javascript
 * import { u8aToHex } from '@polkadot/util';
 *
 * u8aToHex(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0xf])); // 0x68656c0f
 * ```
 */


function u8aToHex(value, bitLength = -1, isPrefixed = true) {
  const length = Math.ceil(bitLength / 8);
  return `${isPrefixed ? '0x' : ''}${!value || !value.length ? '' : length > 0 && value.length > length ? `${hex(value.subarray(0, length / 2))}…${hex(value.subarray(value.length - length / 2))}` : hex(value)}`;
}

/***/ }),
/* 904 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "pbkdf2Encode": () => (/* binding */ pbkdf2Encode)
/* harmony export */ });
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(889);
/* harmony import */ var _polkadot_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(866);
/* harmony import */ var _polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(867);
/* harmony import */ var _noble_hashes_lib_pbkdf2_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(906);
/* harmony import */ var _noble_hashes_lib_sha512_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(900);
/* harmony import */ var _random_asU8a_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(905);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0





function pbkdf2Encode(passphrase, salt = (0,_random_asU8a_js__WEBPACK_IMPORTED_MODULE_0__.randomAsU8a)(), rounds = 2048, onlyJs) {
  const u8aPass = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToU8a)(passphrase);
  const u8aSalt = (0,_polkadot_util__WEBPACK_IMPORTED_MODULE_1__.u8aToU8a)(salt);
  return {
    password: !_polkadot_util__WEBPACK_IMPORTED_MODULE_2__.hasBigInt || !onlyJs && (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_3__.isReady)() ? (0,_polkadot_wasm_crypto__WEBPACK_IMPORTED_MODULE_3__.pbkdf2)(u8aPass, u8aSalt, rounds) : (0,_noble_hashes_lib_pbkdf2_js__WEBPACK_IMPORTED_MODULE_4__.pbkdf2)(_noble_hashes_lib_sha512_js__WEBPACK_IMPORTED_MODULE_5__.sha512, u8aPass, u8aSalt, {
      c: rounds,
      dkLen: 64
    }),
    rounds,
    salt
  };
}

/***/ }),
/* 905 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "randomAsU8a": () => (/* binding */ randomAsU8a),
/* harmony export */   "randomAsHex": () => (/* binding */ randomAsHex)
/* harmony export */ });
/* harmony import */ var _polkadot_x_randomvalues__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(885);
/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(902);
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0


/**
 * @name randomAsU8a
 * @summary Creates a Uint8Array filled with random bytes.
 * @description
 * Returns a `Uint8Array` with the specified (optional) length filled with random bytes.
 * @example
 * <BR>
 *
 * ```javascript
 * import { randomAsU8a } from '@polkadot/util-crypto';
 *
 * randomAsU8a(); // => Uint8Array([...])
 * ```
 */

function randomAsU8a(length = 32) {
  return (0,_polkadot_x_randomvalues__WEBPACK_IMPORTED_MODULE_0__.getRandomValues)(new Uint8Array(length));
}
/**
 * @name randomAsHex
 * @description Creates a hex string filled with random bytes.
 */

const randomAsHex = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.createAsHex)(randomAsU8a);

/***/ }),
/* 906 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "pbkdf2": () => (/* binding */ pbkdf2),
/* harmony export */   "pbkdf2Async": () => (/* binding */ pbkdf2Async)
/* harmony export */ });
/* harmony import */ var _hmac_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(907);
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(899);
/*! noble-hashes - MIT License (c) 2021 Paul Miller (paulmillr.com) */
// https://github.com/paulmillr/noble-hashes/pull/13
 // prettier-ignore

 // PBKDF (RFC 2898)

// Common prologue and epilogue for sync/async functions
function pbkdf2Init(hash, _password, _salt, _opts) {
  (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertHash)(hash);
  const opts = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.checkOpts)({
    dkLen: 32,
    asyncTick: 10
  }, _opts);
  const {
    c,
    dkLen,
    asyncTick
  } = opts;
  (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertNumber)(c);
  (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertNumber)(dkLen);
  (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertNumber)(asyncTick);
  if (c < 1) throw new Error('PBKDF2: iterations (c) should be >= 1');
  const password = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.toBytes)(_password);
  const salt = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.toBytes)(_salt); // DK = PBKDF2(PRF, Password, Salt, c, dkLen);

  const DK = new Uint8Array(dkLen); // U1 = PRF(Password, Salt + INT_32_BE(i))

  const PRF = _hmac_js__WEBPACK_IMPORTED_MODULE_1__.hmac.init(hash, password);

  const PRFSalt = PRF._cloneInto().update(salt);

  return {
    c,
    dkLen,
    asyncTick,
    DK,
    PRF,
    PRFSalt
  };
}

function pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {
  PRF.destroy();
  PRFSalt.destroy();
  if (prfW) prfW.destroy();
  u.fill(0);
  return DK;
}

function pbkdf2(hash, password, salt, _opts) {
  const {
    c,
    dkLen,
    DK,
    PRF,
    PRFSalt
  } = pbkdf2Init(hash, password, salt, _opts);
  let prfW; // Working copy

  const arr = new Uint8Array(4);
  const view = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createView)(arr);
  const u = new Uint8Array(PRF.outputLen); // DK = T1 + T2 + ⋯ + Tdklen/hlen

  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {
    // Ti = F(Password, Salt, c, i)
    const Ti = DK.subarray(pos, pos + PRF.outputLen);
    view.setInt32(0, ti, false); // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc
    // U1 = PRF(Password, Salt + INT_32_BE(i))

    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);

    Ti.set(u.subarray(0, Ti.length));

    for (let ui = 1; ui < c; ui++) {
      // Uc = PRF(Password, Uc−1)
      PRF._cloneInto(prfW).update(u).digestInto(u);

      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];
    }
  }

  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);
}
async function pbkdf2Async(hash, password, salt, _opts) {
  const {
    c,
    dkLen,
    asyncTick,
    DK,
    PRF,
    PRFSalt
  } = pbkdf2Init(hash, password, salt, _opts);
  let prfW; // Working copy

  const arr = new Uint8Array(4);
  const view = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.createView)(arr);
  const u = new Uint8Array(PRF.outputLen); // DK = T1 + T2 + ⋯ + Tdklen/hlen

  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {
    // Ti = F(Password, Salt, c, i)
    const Ti = DK.subarray(pos, pos + PRF.outputLen);
    view.setInt32(0, ti, false); // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc
    // U1 = PRF(Password, Salt + INT_32_BE(i))

    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);

    Ti.set(u.subarray(0, Ti.length));
    await (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.asyncLoop)(c - 1, asyncTick, i => {
      // Uc = PRF(Password, Uc−1)
      PRF._cloneInto(prfW).update(u).digestInto(u);

      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];
    });
  }

  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);
}

/***/ }),
/* 907 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "hmac": () => (/* binding */ hmac)
/* harmony export */ });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(899);
/*! noble-hashes - MIT License (c) 2021 Paul Miller (paulmillr.com) */
// https://github.com/paulmillr/noble-hashes/pull/13
 // HMAC (RFC 2104)

class HMAC extends _utils_js__WEBPACK_IMPORTED_MODULE_0__.Hash {
  constructor(hash, _key) {
    super();
    this.oHash = void 0;
    this.iHash = void 0;
    this.blockLen = void 0;
    this.outputLen = void 0;
    this.finished = false;
    this.destroyed = false;
    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertHash)(hash);
    const key = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.toBytes)(_key);
    this.iHash = hash.create();
    if (!(this.iHash instanceof _utils_js__WEBPACK_IMPORTED_MODULE_0__.Hash)) throw new TypeError('Expected instance of class which extends utils.Hash');
    const blockLen = this.blockLen = this.iHash.blockLen;
    this.outputLen = this.iHash.outputLen;
    const pad = new Uint8Array(blockLen); // blockLen can be bigger than outputLen

    pad.set(key.length > this.iHash.blockLen ? hash.create().update(key).digest() : key);

    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;

    this.iHash.update(pad); // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone

    this.oHash = hash.create(); // Undo internal XOR && apply outer XOR

    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;

    this.oHash.update(pad);
    pad.fill(0);
  }

  update(buf) {
    if (this.destroyed) throw new Error('instance is destroyed');
    this.iHash.update(buf);
    return this;
  }

  digestInto(out) {
    if (this.destroyed) throw new Error('instance is destroyed');
    if (!(out instanceof Uint8Array) || out.length !== this.outputLen) throw new Error('HMAC: Invalid output buffer');
    if (this.finished) throw new Error('digest() was already called');
    this.finished = true;
    this.iHash.digestInto(out);
    this.oHash.update(out);
    this.oHash.digestInto(out);
    this.destroy();
  }

  digest() {
    const out = new Uint8Array(this.oHash.outputLen);
    this.digestInto(out);
    return out;
  }

  _cloneInto(to) {
    // Create new instance without calling constructor since key already in state and we don't know it.
    to || (to = Object.create(Object.getPrototypeOf(this), {}));
    const {
      oHash,
      iHash,
      finished,
      destroyed,
      blockLen,
      outputLen
    } = this;
    to = to;
    to.finished = finished;
    to.destroyed = destroyed;
    to.blockLen = blockLen;
    to.outputLen = outputLen;
    to.oHash = oHash._cloneInto(to.oHash);
    to.iHash = iHash._cloneInto(to.iHash);
    return to;
  }

  destroy() {
    this.destroyed = true;
    this.oHash.destroy();
    this.iHash.destroy();
  }

}

const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();

hmac.create = (hash, key) => new HMAC(hash, key);

hmac.init = hmac.create;

/***/ }),
/* 908 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Copyright 2017-2021 @polkadot/util-crypto authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Adapted from the bitcoinjs/bip39 source
// https://github.com/bitcoinjs/bip39/blob/1d063b6a6aee4145b34d701037cd3e67f5446ff9/ts_src/
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (`abandon
ability
able
about
above
absent
absorb
abstract
absurd
abuse
access
accident
account
accuse
achieve
acid
acoustic
acquire
across
act
action
actor
actress
actual
adapt
add
addict
address
adjust
admit
adult
advance
advice
aerobic
affair
afford
afraid
again
age
agent
agree
ahead
aim
air
airport
aisle
alarm
album
alcohol
alert
alien
all
alley
allow
almost
alone
alpha
already
also
alter
always
amateur
amazing
among
amount
amused
analyst
anchor
ancient
anger
angle
angry
animal
ankle
announce
annual
another
answer
antenna
antique
anxiety
any
apart
apology
appear
apple
approve
april
arch
arctic
area
arena
argue
arm
armed
armor
army
around
arrange
arrest
arrive
arrow
art
artefact
artist
artwork
ask
aspect
assault
asset
assist
assume
asthma
athlete
atom
attack
attend
attitude
attract
auction
audit
august
aunt
author
auto
autumn
average
avocado
avoid
awake
aware
away
awesome
awful
awkward
axis
baby
bachelor
bacon
badge
bag
balance
balcony
ball
bamboo
banana
banner
bar
barely
bargain
barrel
base
basic
basket
battle
beach
bean
beauty
because
become
beef
before
begin
behave
behind
believe
below
belt
bench
benefit
best
betray
better
between
beyond
bicycle
bid
bike
bind
biology
bird
birth
bitter
black
blade
blame
blanket
blast
bleak
bless
blind
blood
blossom
blouse
blue
blur
blush
board
boat
body
boil
bomb
bone
bonus
book
boost
border
boring
borrow
boss
bottom
bounce
box
boy
bracket
brain
brand
brass
brave
bread
breeze
brick
bridge
brief
bright
bring
brisk
broccoli
broken
bronze
broom
brother
brown
brush
bubble
buddy
budget
buffalo
build
bulb
bulk
bullet
bundle
bunker
burden
burger
burst
bus
business
busy
butter
buyer
buzz
cabbage
cabin
cable
cactus
cage
cake
call
calm
camera
camp
can
canal
cancel
candy
cannon
canoe
canvas
canyon
capable
capital
captain
car
carbon
card
cargo
carpet
carry
cart
case
cash
casino
castle
casual
cat
catalog
catch
category
cattle
caught
cause
caution
cave
ceiling
celery
cement
census
century
cereal
certain
chair
chalk
champion
change
chaos
chapter
charge
chase
chat
cheap
check
cheese
chef
cherry
chest
chicken
chief
child
chimney
choice
choose
chronic
chuckle
chunk
churn
cigar
cinnamon
circle
citizen
city
civil
claim
clap
clarify
claw
clay
clean
clerk
clever
click
client
cliff
climb
clinic
clip
clock
clog
close
cloth
cloud
clown
club
clump
cluster
clutch
coach
coast
coconut
code
coffee
coil
coin
collect
color
column
combine
come
comfort
comic
common
company
concert
conduct
confirm
congress
connect
consider
control
convince
cook
cool
copper
copy
coral
core
corn
correct
cost
cotton
couch
country
couple
course
cousin
cover
coyote
crack
cradle
craft
cram
crane
crash
crater
crawl
crazy
cream
credit
creek
crew
cricket
crime
crisp
critic
crop
cross
crouch
crowd
crucial
cruel
cruise
crumble
crunch
crush
cry
crystal
cube
culture
cup
cupboard
curious
current
curtain
curve
cushion
custom
cute
cycle
dad
damage
damp
dance
danger
daring
dash
daughter
dawn
day
deal
debate
debris
decade
december
decide
decline
decorate
decrease
deer
defense
define
defy
degree
delay
deliver
demand
demise
denial
dentist
deny
depart
depend
deposit
depth
deputy
derive
describe
desert
design
desk
despair
destroy
detail
detect
develop
device
devote
diagram
dial
diamond
diary
dice
diesel
diet
differ
digital
dignity
dilemma
dinner
dinosaur
direct
dirt
disagree
discover
disease
dish
dismiss
disorder
display
distance
divert
divide
divorce
dizzy
doctor
document
dog
doll
dolphin
domain
donate
donkey
donor
door
dose
double
dove
draft
dragon
drama
drastic
draw
dream
dress
drift
drill
drink
drip
drive
drop
drum
dry
duck
dumb
dune
during
dust
dutch
duty
dwarf
dynamic
eager
eagle
early
earn
earth
easily
east
easy
echo
ecology
economy
edge
edit
educate
effort
egg
eight
either
elbow
elder
electric
elegant
element
elephant
elevator
elite
else
embark
embody
embrace
emerge
emotion
employ
empower
empty
enable
enact
end
endless
endorse
enemy
energy
enforce
engage
engine
enhance
enjoy
enlist
enough
enrich
enroll
ensure
enter
entire
entry
envelope
episode
equal
equip
era
erase
erode
erosion
error
erupt
escape
essay
essence
estate
eternal
ethics
evidence
evil
evoke
evolve
exact
example
excess
exchange
excite
exclude
excuse
execute
exercise
exhaust
exhibit
exile
exist
exit
exotic
expand
expect
expire
explain
expose
express
extend
extra
eye
eyebrow
fabric
face
faculty
fade
faint
faith
fall
false
fame
family
famous
fan
fancy
fantasy
farm
fashion
fat
fatal
father
fatigue
fault
favorite
feature
february
federal
fee
feed
feel
female
fence
festival
fetch
fever
few
fiber
fiction
field
figure
file
film
filter
final
find
fine
finger
finish
fire
firm
first
fiscal
fish
fit
fitness
fix
flag
flame
flash
flat
flavor
flee
flight
flip
float
flock
floor
flower
fluid
flush
fly
foam
focus
fog
foil
fold
follow
food
foot
force
forest
forget
fork
fortune
forum
forward
fossil
foster
found
fox
fragile
frame
frequent
fresh
friend
fringe
frog
front
frost
frown
frozen
fruit
fuel
fun
funny
furnace
fury
future
gadget
gain
galaxy
gallery
game
gap
garage
garbage
garden
garlic
garment
gas
gasp
gate
gather
gauge
gaze
general
genius
genre
gentle
genuine
gesture
ghost
giant
gift
giggle
ginger
giraffe
girl
give
glad
glance
glare
glass
glide
glimpse
globe
gloom
glory
glove
glow
glue
goat
goddess
gold
good
goose
gorilla
gospel
gossip
govern
gown
grab
grace
grain
grant
grape
grass
gravity
great
green
grid
grief
grit
grocery
group
grow
grunt
guard
guess
guide
guilt
guitar
gun
gym
habit
hair
half
hammer
hamster
hand
happy
harbor
hard
harsh
harvest
hat
have
hawk
hazard
head
health
heart
heavy
hedgehog
height
hello
helmet
help
hen
hero
hidden
high
hill
hint
hip
hire
history
hobby
hockey
hold
hole
holiday
hollow
home
honey
hood
hope
horn
horror
horse
hospital
host
hotel
hour
hover
hub
huge
human
humble
humor
hundred
hungry
hunt
hurdle
hurry
hurt
husband
hybrid
ice
icon
idea
identify
idle
ignore
ill
illegal
illness
image
imitate
immense
immune
impact
impose
improve
impulse
inch
include
income
increase
index
indicate
indoor
industry
infant
inflict
inform
inhale
inherit
initial
inject
injury
inmate
inner
innocent
input
inquiry
insane
insect
inside
inspire
install
intact
interest
into
invest
invite
involve
iron
island
isolate
issue
item
ivory
jacket
jaguar
jar
jazz
jealous
jeans
jelly
jewel
job
join
joke
journey
joy
judge
juice
jump
jungle
junior
junk
just
kangaroo
keen
keep
ketchup
key
kick
kid
kidney
kind
kingdom
kiss
kit
kitchen
kite
kitten
kiwi
knee
knife
knock
know
lab
label
labor
ladder
lady
lake
lamp
language
laptop
large
later
latin
laugh
laundry
lava
law
lawn
lawsuit
layer
lazy
leader
leaf
learn
leave
lecture
left
leg
legal
legend
leisure
lemon
lend
length
lens
leopard
lesson
letter
level
liar
liberty
library
license
life
lift
light
like
limb
limit
link
lion
liquid
list
little
live
lizard
load
loan
lobster
local
lock
logic
lonely
long
loop
lottery
loud
lounge
love
loyal
lucky
luggage
lumber
lunar
lunch
luxury
lyrics
machine
mad
magic
magnet
maid
mail
main
major
make
mammal
man
manage
mandate
mango
mansion
manual
maple
marble
march
margin
marine
market
marriage
mask
mass
master
match
material
math
matrix
matter
maximum
maze
meadow
mean
measure
meat
mechanic
medal
media
melody
melt
member
memory
mention
menu
mercy
merge
merit
merry
mesh
message
metal
method
middle
midnight
milk
million
mimic
mind
minimum
minor
minute
miracle
mirror
misery
miss
mistake
mix
mixed
mixture
mobile
model
modify
mom
moment
monitor
monkey
monster
month
moon
moral
more
morning
mosquito
mother
motion
motor
mountain
mouse
move
movie
much
muffin
mule
multiply
muscle
museum
mushroom
music
must
mutual
myself
mystery
myth
naive
name
napkin
narrow
nasty
nation
nature
near
neck
need
negative
neglect
neither
nephew
nerve
nest
net
network
neutral
never
news
next
nice
night
noble
noise
nominee
noodle
normal
north
nose
notable
note
nothing
notice
novel
now
nuclear
number
nurse
nut
oak
obey
object
oblige
obscure
observe
obtain
obvious
occur
ocean
october
odor
off
offer
office
often
oil
okay
old
olive
olympic
omit
once
one
onion
online
only
open
opera
opinion
oppose
option
orange
orbit
orchard
order
ordinary
organ
orient
original
orphan
ostrich
other
outdoor
outer
output
outside
oval
oven
over
own
owner
oxygen
oyster
ozone
pact
paddle
page
pair
palace
palm
panda
panel
panic
panther
paper
parade
parent
park
parrot
party
pass
patch
path
patient
patrol
pattern
pause
pave
payment
peace
peanut
pear
peasant
pelican
pen
penalty
pencil
people
pepper
perfect
permit
person
pet
phone
photo
phrase
physical
piano
picnic
picture
piece
pig
pigeon
pill
pilot
pink
pioneer
pipe
pistol
pitch
pizza
place
planet
plastic
plate
play
please
pledge
pluck
plug
plunge
poem
poet
point
polar
pole
police
pond
pony
pool
popular
portion
position
possible
post
potato
pottery
poverty
powder
power
practice
praise
predict
prefer
prepare
present
pretty
prevent
price
pride
primary
print
priority
prison
private
prize
problem
process
produce
profit
program
project
promote
proof
property
prosper
protect
proud
provide
public
pudding
pull
pulp
pulse
pumpkin
punch
pupil
puppy
purchase
purity
purpose
purse
push
put
puzzle
pyramid
quality
quantum
quarter
question
quick
quit
quiz
quote
rabbit
raccoon
race
rack
radar
radio
rail
rain
raise
rally
ramp
ranch
random
range
rapid
rare
rate
rather
raven
raw
razor
ready
real
reason
rebel
rebuild
recall
receive
recipe
record
recycle
reduce
reflect
reform
refuse
region
regret
regular
reject
relax
release
relief
rely
remain
remember
remind
remove
render
renew
rent
reopen
repair
repeat
replace
report
require
rescue
resemble
resist
resource
response
result
retire
retreat
return
reunion
reveal
review
reward
rhythm
rib
ribbon
rice
rich
ride
ridge
rifle
right
rigid
ring
riot
ripple
risk
ritual
rival
river
road
roast
robot
robust
rocket
romance
roof
rookie
room
rose
rotate
rough
round
route
royal
rubber
rude
rug
rule
run
runway
rural
sad
saddle
sadness
safe
sail
salad
salmon
salon
salt
salute
same
sample
sand
satisfy
satoshi
sauce
sausage
save
say
scale
scan
scare
scatter
scene
scheme
school
science
scissors
scorpion
scout
scrap
screen
script
scrub
sea
search
season
seat
second
secret
section
security
seed
seek
segment
select
sell
seminar
senior
sense
sentence
series
service
session
settle
setup
seven
shadow
shaft
shallow
share
shed
shell
sheriff
shield
shift
shine
ship
shiver
shock
shoe
shoot
shop
short
shoulder
shove
shrimp
shrug
shuffle
shy
sibling
sick
side
siege
sight
sign
silent
silk
silly
silver
similar
simple
since
sing
siren
sister
situate
six
size
skate
sketch
ski
skill
skin
skirt
skull
slab
slam
sleep
slender
slice
slide
slight
slim
slogan
slot
slow
slush
small
smart
smile
smoke
smooth
snack
snake
snap
sniff
snow
soap
soccer
social
sock
soda
soft
solar
soldier
solid
solution
solve
someone
song
soon
sorry
sort
soul
sound
soup
source
south
space
spare
spatial
spawn
speak
special
speed
spell
spend
sphere
spice
spider
spike
spin
spirit
split
spoil
sponsor
spoon
sport
spot
spray
spread
spring
spy
square
squeeze
squirrel
stable
stadium
staff
stage
stairs
stamp
stand
start
state
stay
steak
steel
stem
step
stereo
stick
still
sting
stock
stomach
stone
stool
story
stove
strategy
street
strike
strong
struggle
student
stuff
stumble
style
subject
submit
subway
success
such
sudden
suffer
sugar
suggest
suit
summer
sun
sunny
sunset
super
supply
supreme
sure
surface
surge
surprise
surround
survey
suspect
sustain
swallow
swamp
swap
swarm
swear
sweet
swift
swim
swing
switch
sword
symbol
symptom
syrup
system
table
tackle
tag
tail
talent
talk
tank
tape
target
task
taste
tattoo
taxi
teach
team
tell
ten
tenant
tennis
tent
term
test
text
thank
that
theme
then
theory
there
they
thing
this
thought
three
thrive
throw
thumb
thunder
ticket
tide
tiger
tilt
timber
time
tiny
tip
tired
tissue
title
toast
tobacco
today
toddler
toe
together
toilet
token
tomato
tomorrow
tone
tongue
tonight
tool
tooth
top
topic
topple
torch
tornado
tortoise
toss
total
tourist
toward
tower
town
toy
track
trade
traffic
tragic
train
transfer
trap
trash
travel
tray
treat
tree
trend
trial
tribe
trick
trigger
trim
trip
trophy
trouble
truck
true
truly
trumpet
trust
truth
try
tube
tuition
tumble
tuna
tunnel
turkey
turn
turtle
twelve
twenty
twice
twin
twist
two
type
typical
ugly
umbrella
unable
unaware
uncle
uncover
under
undo
unfair
unfold
unhappy
uniform
unique
unit
universe
unknown
unlock
until
unusual
unveil
update
upgrade
uphold
upon
upper
upset
urban
urge
usage
use
used
useful
useless
usual
utility
vacant
vacuum
vague
valid
valley
valve
van
vanish
vapor
various
vast
vault
vehicle
velvet
vendor
venture
venue
verb
verify
version
very
vessel
veteran
viable
vibrant
vicious
victory
video
view
village
vintage
violin
virtual
virus
visa
visit
visual
vital
vivid
vocal
voice
void
volcano
volume
vote
voyage
wage
wagon
wait
walk
wall
walnut
want
warfare
warm
warrior
wash
wasp
waste
water
wave
way
wealth
weapon
wear
weasel
weather
web
wedding
weekend
weird
welcome
west
wet
whale
what
wheat
wheel
when
where
whip
whisper
wide
width
wife
wild
will
win
window
wine
wing
wink
winner
winter
wire
wisdom
wise
wish
witness
wolf
woman
wonder
wood
wool
word
work
world
worry
worth
wrap
wreck
wrestle
wrist
write
wrong
yard
year
yellow
you
young
youth
zebra
zero
zone
zoo`.split('\n'));

/***/ }),
/* 909 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(14);
/* harmony import */ var _NormalizeStyle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(910);
/* harmony import */ var _ResetStyle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(911);



const global = styled_components__WEBPACK_IMPORTED_MODULE_2__.css `
  ${_ResetStyle__WEBPACK_IMPORTED_MODULE_1__.reset}
  ${_NormalizeStyle__WEBPACK_IMPORTED_MODULE_0__.normalize}
  :root {
    --c-white: #ffffff;
    --c-dark-blue: #132c53;
    --c-red: rgba(239, 68, 68);
    --c-green: #29dbb0;
    --c-gray: #edeff2;
    --c-dark-gray: #f2f4f8;
    --c-transparent: transparent;
    --c-dark-orange: #dc5919;
    --c-orange: #ff671d;
    --c-light-orange: rgba(255, 103, 29, 0.2);
    --c-lightest-orange: rgba(255, 103, 29, 0.05);
    --s-3: 0.1875rem;
    --s-4: 0.25rem;
    --s-5: 0.3125rem;
    --s-6: 0.375rem;
    --s-8: 0.5rem;
    --s-10: 0.625rem;
    --s-12: 0.75rem;
    --s-14: 0.875rem;
    --s-16: 1rem;
    --s-168: 1.05rem;
    --s-1875: 1.171875rem;
    --s-19: 1.1875rem;
    --s-20: 1.25rem;
    --s-23: 1.4375rem;
    --s-24: 1.5rem;
    --s-26: 1.625rem;
    --s-29: 1, 8125rem;
    --s-32: 2rem;
    --s-35: 2.1875rem;
    --s-36: 2.25rem;
    --s-38: 2.375rem;
    --s-48: 3rem;
    --s-64: 4rem;
    --s-80: 5rem;
  }

  html {
    background-color: var(--c-dark-blue);
    color: var(--c-white);

    min-width: 400px;
    min-height: 460px;

    font-size: 14px; // TODO: Remove this
  }

  html,
  body {
    font-family: Roboto, -apple-system, BlinkMacSystemFont, Segoe UI, Oxygen,
      Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;
  }
`;
const Global = styled_components__WEBPACK_IMPORTED_MODULE_2__.createGlobalStyle `${global}`;
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Global);


/***/ }),
/* 910 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "normalize": () => (/* binding */ normalize),
/* harmony export */   "Normalize": () => (/* binding */ Normalize)
/* harmony export */ });
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(14);

const normalize = styled_components__WEBPACK_IMPORTED_MODULE_0__.css `
  /*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */

  /* Document
   ========================================================================== */

  /**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */

  html {
    line-height: 1.15; /* 1 */
    -webkit-text-size-adjust: 100%; /* 2 */
  }

  /* Sections
   ========================================================================== */

  /**
 * Remove the margin in all browsers.
 */

  body {
    margin: 0;
  }

  /**
 * Render the 'main' element consistently in IE.
 */

  main {
    display: block;
  }

  /**
 * Correct the font size and margin on 'h1' elements within 'section' and
 * 'article' contexts in Chrome, Firefox, and Safari.
 */

  h1 {
    font-size: 2em;
    margin: 0.67em 0;
  }

  /* Grouping content
   ========================================================================== */

  /**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */

  hr {
    box-sizing: content-box; /* 1 */
    height: 0; /* 1 */
    overflow: visible; /* 2 */
  }

  /**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd 'em' font sizing in all browsers.
 */

  pre {
    font-family: monospace, monospace; /* 1 */
    font-size: 1em; /* 2 */
  }

  /* Text-level semantics
   ========================================================================== */

  /**
 * Remove the gray background on active links in IE 10.
 */

  a {
    background-color: transparent;
  }

  /**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */

  abbr[title] {
    border-bottom: none; /* 1 */
    text-decoration: underline; /* 2 */
    text-decoration: underline dotted; /* 2 */
  }

  /**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */

  b,
  strong {
    font-weight: bolder;
  }

  /**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd 'em' font sizing in all browsers.
 */

  code,
  kbd,
  samp {
    font-family: monospace, monospace; /* 1 */
    font-size: 1em; /* 2 */
  }

  /**
 * Add the correct font size in all browsers.
 */

  small {
    font-size: 80%;
  }

  /**
 * Prevent 'sub' and 'sup' elements from affecting the line height in
 * all browsers.
 */

  sub,
  sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }

  sub {
    bottom: -0.25em;
  }

  sup {
    top: -0.5em;
  }

  /* Embedded content
   ========================================================================== */

  /**
 * Remove the border on images inside links in IE 10.
 */

  img {
    border-style: none;
  }

  /* Forms
   ========================================================================== */

  /**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */

  button,
  input,
  optgroup,
  select,
  textarea {
    font-family: inherit; /* 1 */
    font-size: 100%; /* 1 */
    line-height: 1.15; /* 1 */
    margin: 0; /* 2 */
  }

  /**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */

  button,
  input {
    /* 1 */
    overflow: visible;
  }

  /**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */

  button,
  select {
    /* 1 */
    text-transform: none;
  }

  /**
 * Correct the inability to style clickable types in iOS and Safari.
 */

  button,
  [type="button"],
  [type="reset"],
  [type="submit"] {
    -webkit-appearance: button;
  }

  /**
 * Remove the inner border and padding in Firefox.
 */

  button::-moz-focus-inner,
  [type="button"]::-moz-focus-inner,
  [type="reset"]::-moz-focus-inner,
  [type="submit"]::-moz-focus-inner {
    border-style: none;
    padding: 0;
  }

  /**
 * Restore the focus styles unset by the previous rule.
 */

  button:-moz-focusring,
  [type="button"]:-moz-focusring,
  [type="reset"]:-moz-focusring,
  [type="submit"]:-moz-focusring {
    outline: 1px dotted ButtonText;
  }

  /**
 * Correct the padding in Firefox.
 */

  fieldset {
    padding: 0.35em 0.75em 0.625em;
  }

  /**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from 'fieldset' elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    'fieldset' elements in all browsers.
 */

  legend {
    box-sizing: border-box; /* 1 */
    color: inherit; /* 2 */
    display: table; /* 1 */
    max-width: 100%; /* 1 */
    padding: 0; /* 3 */
    white-space: normal; /* 1 */
  }

  /**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */

  progress {
    vertical-align: baseline;
  }

  /**
 * Remove the default vertical scrollbar in IE 10+.
 */

  textarea {
    overflow: auto;
  }

  /**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */

  [type="checkbox"],
  [type="radio"] {
    box-sizing: border-box; /* 1 */
    padding: 0; /* 2 */
  }

  /**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */

  [type="number"]::-webkit-inner-spin-button,
  [type="number"]::-webkit-outer-spin-button {
    height: auto;
  }

  /**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */

  [type="search"] {
    -webkit-appearance: textfield; /* 1 */
    outline-offset: -2px; /* 2 */
  }

  /**
 * Remove the inner padding in Chrome and Safari on macOS.
 */

  [type="search"]::-webkit-search-decoration {
    -webkit-appearance: none;
  }

  /**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to 'inherit' in Safari.
 */

  ::-webkit-file-upload-button {
    -webkit-appearance: button; /* 1 */
    font: inherit; /* 2 */
  }

  /* Interactive
   ========================================================================== */

  /*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */

  details {
    display: block;
  }

  /*
 * Add the correct display in all browsers.
 */

  summary {
    display: list-item;
  }

  /* Misc
   ========================================================================== */

  /**
 * Add the correct display in IE 10+.
 */

  template {
    display: none;
  }

  /**
 * Add the correct display in IE 10.
 */

  [hidden] {
    display: none;
  }
`;
const Normalize = styled_components__WEBPACK_IMPORTED_MODULE_0__.createGlobalStyle `${normalize}`;


/***/ }),
/* 911 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "reset": () => (/* binding */ reset),
/* harmony export */   "Reset": () => (/* binding */ Reset)
/* harmony export */ });
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(14);

const reset = styled_components__WEBPACK_IMPORTED_MODULE_0__.css `
  /*
    http://meyerweb.com/eric/tools/css/reset/
    v2.0 | 20110126
    License: none (public domain)
  */

  html,
  body,
  div,
  span,
  applet,
  object,
  iframe,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  p,
  blockquote,
  pre,
  a,
  abbr,
  acronym,
  address,
  big,
  cite,
  code,
  del,
  dfn,
  em,
  img,
  ins,
  kbd,
  q,
  s,
  samp,
  small,
  strike,
  strong,
  sub,
  sup,
  tt,
  var,
  b,
  u,
  i,
  center,
  dl,
  dt,
  dd,
  ol,
  ul,
  li,
  fieldset,
  form,
  label,
  legend,
  table,
  caption,
  tbody,
  tfoot,
  thead,
  tr,
  th,
  td,
  article,
  aside,
  canvas,
  details,
  embed,
  figure,
  figcaption,
  footer,
  header,
  hgroup,
  menu,
  nav,
  output,
  ruby,
  section,
  summary,
  time,
  mark,
  audio,
  video {
    margin: 0;
    padding: 0;
    border: 0;
    font-size: 100%;
    font: inherit;
    vertical-align: baseline;
  }
  /* HTML5 display-role reset for older browsers */
  article,
  aside,
  details,
  figcaption,
  figure,
  footer,
  header,
  hgroup,
  menu,
  nav,
  section {
    display: block;
  }
  body {
    line-height: 1;
  }
  ol,
  ul {
    list-style: none;
  }
  blockquote,
  q {
    quotes: none;
  }
  blockquote:before,
  blockquote:after,
  q:before,
  q:after {
    content: "";
    content: none;
  }
  table {
    border-collapse: collapse;
    border-spacing: 0;
  }

  /* HTML5 display-role reset for older browsers */

  article,
  aside,
  details,
  figcaption,
  figure,
  footer,
  header,
  hgroup,
  menu,
  nav,
  section {
    display: block;
  }

  ol,
  ul {
    list-style: none;
  }

  blockquote,
  q {
    quotes: none;
  }

  blockquote::before,
  blockquote::after,
  q::before,
  q::after {
    content: "";
    content: none;
  }

  table {
    border-collapse: collapse;
    border-spacing: 0;
  }

  button {
    border-style: none;
    cursor: pointer;

    &::-moz-focus-inner {
      border: none;
    }
  }
`;
const Reset = styled_components__WEBPACK_IMPORTED_MODULE_0__.createGlobalStyle `${reset}`;


/***/ }),
/* 912 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'
  ) {
    return;
  }
  if (process.env.NODE_ENV !== 'production') {
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
  }
  try {
    // Verify that the code above has been dead code eliminated (DCE'd).
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    // DevTools shouldn't crash React, no matter what.
    // We should still report in case we break this code.
    console.error(err);
  }
}

if (process.env.NODE_ENV === 'production') {
  // DCE check should happen before ReactDOM bundle executes so that
  // DevTools can report bad minification during injection.
  checkDCE();
  module.exports = __webpack_require__(913);
} else {
  module.exports = __webpack_require__(917);
}


/***/ }),
/* 913 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** @license React v17.0.2
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/
var aa=__webpack_require__(8),m=__webpack_require__(7),r=__webpack_require__(914);function y(a){for(var b="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=1;c<arguments.length;c++)b+="&args[]="+encodeURIComponent(arguments[c]);return"Minified React error #"+a+"; visit "+b+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!aa)throw Error(y(227));var ba=new Set,ca={};function da(a,b){ea(a,b);ea(a+"Capture",b)}
function ea(a,b){ca[a]=b;for(a=0;a<b.length;a++)ba.add(b[a])}
var fa=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),ha=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,ia=Object.prototype.hasOwnProperty,
ja={},ka={};function la(a){if(ia.call(ka,a))return!0;if(ia.call(ja,a))return!1;if(ha.test(a))return ka[a]=!0;ja[a]=!0;return!1}function ma(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case "function":case "symbol":return!0;case "boolean":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return"data-"!==a&&"aria-"!==a;default:return!1}}
function na(a,b,c,d){if(null===b||"undefined"===typeof b||ma(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function B(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var D={};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){D[a]=new B(a,0,!1,a,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var b=a[0];D[b]=new B(b,1,!1,a[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(a){D[a]=new B(a,2,!1,a.toLowerCase(),null,!1,!1)});
["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(a){D[a]=new B(a,2,!1,a,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){D[a]=new B(a,3,!1,a.toLowerCase(),null,!1,!1)});
["checked","multiple","muted","selected"].forEach(function(a){D[a]=new B(a,3,!0,a,null,!1,!1)});["capture","download"].forEach(function(a){D[a]=new B(a,4,!1,a,null,!1,!1)});["cols","rows","size","span"].forEach(function(a){D[a]=new B(a,6,!1,a,null,!1,!1)});["rowSpan","start"].forEach(function(a){D[a]=new B(a,5,!1,a.toLowerCase(),null,!1,!1)});var oa=/[\-:]([a-z])/g;function pa(a){return a[1].toUpperCase()}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var b=a.replace(oa,
pa);D[b]=new B(b,1,!1,a,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!1,!1)});
D.xlinkHref=new B("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!0,!0)});
function qa(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||"o"!==b[0]&&"O"!==b[0]||"n"!==b[1]&&"N"!==b[1]?!1:!0;f||(na(b,c,e,d)&&(c=null),d||null===e?la(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,""+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:"":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?"":""+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}
var ra=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,sa=60103,ta=60106,ua=60107,wa=60108,xa=60114,ya=60109,za=60110,Aa=60112,Ba=60113,Ca=60120,Da=60115,Ea=60116,Fa=60121,Ga=60128,Ha=60129,Ia=60130,Ja=60131;
if("function"===typeof Symbol&&Symbol.for){var E=Symbol.for;sa=E("react.element");ta=E("react.portal");ua=E("react.fragment");wa=E("react.strict_mode");xa=E("react.profiler");ya=E("react.provider");za=E("react.context");Aa=E("react.forward_ref");Ba=E("react.suspense");Ca=E("react.suspense_list");Da=E("react.memo");Ea=E("react.lazy");Fa=E("react.block");E("react.scope");Ga=E("react.opaque.id");Ha=E("react.debug_trace_mode");Ia=E("react.offscreen");Ja=E("react.legacy_hidden")}
var Ka="function"===typeof Symbol&&Symbol.iterator;function La(a){if(null===a||"object"!==typeof a)return null;a=Ka&&a[Ka]||a["@@iterator"];return"function"===typeof a?a:null}var Ma;function Na(a){if(void 0===Ma)try{throw Error();}catch(c){var b=c.stack.trim().match(/\n( *(at )?)/);Ma=b&&b[1]||""}return"\n"+Ma+a}var Oa=!1;
function Pa(a,b){if(!a||Oa)return"";Oa=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,"props",{set:function(){throw Error();}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(k){var d=k}Reflect.construct(a,[],b)}else{try{b.call()}catch(k){d=k}a.call(b.prototype)}else{try{throw Error();}catch(k){d=k}a()}}catch(k){if(k&&d&&"string"===typeof k.stack){for(var e=k.stack.split("\n"),
f=d.stack.split("\n"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h])return"\n"+e[g].replace(" at new "," at ");while(1<=g&&0<=h)}break}}}finally{Oa=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:"")?Na(a):""}
function Qa(a){switch(a.tag){case 5:return Na(a.type);case 16:return Na("Lazy");case 13:return Na("Suspense");case 19:return Na("SuspenseList");case 0:case 2:case 15:return a=Pa(a.type,!1),a;case 11:return a=Pa(a.type.render,!1),a;case 22:return a=Pa(a.type._render,!1),a;case 1:return a=Pa(a.type,!0),a;default:return""}}
function Ra(a){if(null==a)return null;if("function"===typeof a)return a.displayName||a.name||null;if("string"===typeof a)return a;switch(a){case ua:return"Fragment";case ta:return"Portal";case xa:return"Profiler";case wa:return"StrictMode";case Ba:return"Suspense";case Ca:return"SuspenseList"}if("object"===typeof a)switch(a.$$typeof){case za:return(a.displayName||"Context")+".Consumer";case ya:return(a._context.displayName||"Context")+".Provider";case Aa:var b=a.render;b=b.displayName||b.name||"";
return a.displayName||(""!==b?"ForwardRef("+b+")":"ForwardRef");case Da:return Ra(a.type);case Fa:return Ra(a._render);case Ea:b=a._payload;a=a._init;try{return Ra(a(b))}catch(c){}}return null}function Sa(a){switch(typeof a){case "boolean":case "number":case "object":case "string":case "undefined":return a;default:return""}}function Ta(a){var b=a.type;return(a=a.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===b||"radio"===b)}
function Ua(a){var b=Ta(a)?"checked":"value",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=""+a[b];if(!a.hasOwnProperty(b)&&"undefined"!==typeof c&&"function"===typeof c.get&&"function"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=""+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=""+a},stopTracking:function(){a._valueTracker=
null;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d="";a&&(d=Ta(a)?a.checked?"true":"false":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||("undefined"!==typeof document?document:void 0);if("undefined"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}
function Ya(a,b){var c=b.checked;return m({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?"":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:"checkbox"===b.type||"radio"===b.type?null!=b.checked:null!=b.value}}function $a(a,b){b=b.checked;null!=b&&qa(a,"checked",b,!1)}
function ab(a,b){$a(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if("number"===d){if(0===c&&""===a.value||a.value!=c)a.value=""+c}else a.value!==""+c&&(a.value=""+c);else if("submit"===d||"reset"===d){a.removeAttribute("value");return}b.hasOwnProperty("value")?bb(a,b.type,c):b.hasOwnProperty("defaultValue")&&bb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}
function cb(a,b,c){if(b.hasOwnProperty("value")||b.hasOwnProperty("defaultValue")){var d=b.type;if(!("submit"!==d&&"reset"!==d||void 0!==b.value&&null!==b.value))return;b=""+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;""!==c&&(a.name="");a.defaultChecked=!!a._wrapperState.initialChecked;""!==c&&(a.name=c)}
function bb(a,b,c){if("number"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=""+a._wrapperState.initialValue:a.defaultValue!==""+c&&(a.defaultValue=""+c)}function db(a){var b="";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function eb(a,b){a=m({children:void 0},b);if(b=db(b.children))a.children=b;return a}
function fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b["$"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty("$"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=""+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}
function gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(y(91));return m({},b,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(y(92));if(Array.isArray(c)){if(!(1>=c.length))throw Error(y(93));c=c[0]}b=c}null==b&&(b="");c=b}a._wrapperState={initialValue:Sa(c)}}
function ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=""+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=""+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&""!==b&&null!==b&&(a.value=b)}var kb={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};
function lb(a){switch(a){case "svg":return"http://www.w3.org/2000/svg";case "math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function mb(a,b){return null==a||"http://www.w3.org/1999/xhtml"===a?lb(b):"http://www.w3.org/2000/svg"===a&&"foreignObject"===b?"http://www.w3.org/1999/xhtml":a}
var nb,ob=function(a){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==kb.svg||"innerHTML"in a)a.innerHTML=b;else{nb=nb||document.createElement("div");nb.innerHTML="<svg>"+b.valueOf().toString()+"</svg>";for(b=nb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});
function pb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}
var qb={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,
floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},rb=["Webkit","ms","Moz","O"];Object.keys(qb).forEach(function(a){rb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);qb[b]=qb[a]})});function sb(a,b,c){return null==b||"boolean"===typeof b||""===b?"":c||"number"!==typeof b||0===b||qb.hasOwnProperty(a)&&qb[a]?(""+b).trim():b+"px"}
function tb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf("--"),e=sb(c,b[c],d);"float"===c&&(c="cssFloat");d?a.setProperty(c,e):a[c]=e}}var ub=m({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});
function vb(a,b){if(b){if(ub[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(y(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(y(60));if(!("object"===typeof b.dangerouslySetInnerHTML&&"__html"in b.dangerouslySetInnerHTML))throw Error(y(61));}if(null!=b.style&&"object"!==typeof b.style)throw Error(y(62));}}
function wb(a,b){if(-1===a.indexOf("-"))return"string"===typeof b.is;switch(a){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":return!1;default:return!0}}function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;
function Bb(a){if(a=Cb(a)){if("function"!==typeof yb)throw Error(y(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(a,b,c,d,e){return a(b,c,d,e)}function Ib(){}var Jb=Gb,Kb=!1,Lb=!1;function Mb(){if(null!==zb||null!==Ab)Ib(),Fb()}
function Nb(a,b,c){if(Lb)return a(b,c);Lb=!0;try{return Jb(a,b,c)}finally{Lb=!1,Mb()}}
function Ob(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case "onClick":case "onClickCapture":case "onDoubleClick":case "onDoubleClickCapture":case "onMouseDown":case "onMouseDownCapture":case "onMouseMove":case "onMouseMoveCapture":case "onMouseUp":case "onMouseUpCapture":case "onMouseEnter":(d=!d.disabled)||(a=a.type,d=!("button"===a||"input"===a||"select"===a||"textarea"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&"function"!==
typeof c)throw Error(y(231,b,typeof c));return c}var Pb=!1;if(fa)try{var Qb={};Object.defineProperty(Qb,"passive",{get:function(){Pb=!0}});window.addEventListener("test",Qb,Qb);window.removeEventListener("test",Qb,Qb)}catch(a){Pb=!1}function Rb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(n){this.onError(n)}}var Sb=!1,Tb=null,Ub=!1,Vb=null,Wb={onError:function(a){Sb=!0;Tb=a}};function Xb(a,b,c,d,e,f,g,h,k){Sb=!1;Tb=null;Rb.apply(Wb,arguments)}
function Yb(a,b,c,d,e,f,g,h,k){Xb.apply(this,arguments);if(Sb){if(Sb){var l=Tb;Sb=!1;Tb=null}else throw Error(y(198));Ub||(Ub=!0,Vb=l)}}function Zb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function $b(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function ac(a){if(Zb(a)!==a)throw Error(y(188));}
function bc(a){var b=a.alternate;if(!b){b=Zb(a);if(null===b)throw Error(y(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return ac(e),a;if(f===d)return ac(e),b;f=f.sibling}throw Error(y(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===
c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(y(189));}}if(c.alternate!==d)throw Error(y(190));}if(3!==c.tag)throw Error(y(188));return c.stateNode.current===c?a:b}function cc(a){a=bc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}
function dc(a,b){for(var c=a.alternate;null!==b;){if(b===a||b===c)return!0;b=b.return}return!1}var ec,fc,gc,hc,ic=!1,jc=[],kc=null,lc=null,mc=null,nc=new Map,oc=new Map,pc=[],qc="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
function rc(a,b,c,d,e){return{blockedOn:a,domEventName:b,eventSystemFlags:c|16,nativeEvent:e,targetContainers:[d]}}function sc(a,b){switch(a){case "focusin":case "focusout":kc=null;break;case "dragenter":case "dragleave":lc=null;break;case "mouseover":case "mouseout":mc=null;break;case "pointerover":case "pointerout":nc.delete(b.pointerId);break;case "gotpointercapture":case "lostpointercapture":oc.delete(b.pointerId)}}
function tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a=rc(b,c,d,e,f),null!==b&&(b=Cb(b),null!==b&&fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}
function uc(a,b,c,d,e){switch(b){case "focusin":return kc=tc(kc,a,b,c,d,e),!0;case "dragenter":return lc=tc(lc,a,b,c,d,e),!0;case "mouseover":return mc=tc(mc,a,b,c,d,e),!0;case "pointerover":var f=e.pointerId;nc.set(f,tc(nc.get(f)||null,a,b,c,d,e));return!0;case "gotpointercapture":return f=e.pointerId,oc.set(f,tc(oc.get(f)||null,a,b,c,d,e)),!0}return!1}
function vc(a){var b=wc(a.target);if(null!==b){var c=Zb(b);if(null!==c)if(b=c.tag,13===b){if(b=$b(c),null!==b){a.blockedOn=b;hc(a.lanePriority,function(){r.unstable_runWithPriority(a.priority,function(){gc(c)})});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}
function xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c)return b=Cb(c),null!==b&&fc(b),a.blockedOn=c,!1;b.shift()}return!0}function zc(a,b,c){xc(a)&&c.delete(b)}
function Ac(){for(ic=!1;0<jc.length;){var a=jc[0];if(null!==a.blockedOn){a=Cb(a.blockedOn);null!==a&&ec(a);break}for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c){a.blockedOn=c;break}b.shift()}null===a.blockedOn&&jc.shift()}null!==kc&&xc(kc)&&(kc=null);null!==lc&&xc(lc)&&(lc=null);null!==mc&&xc(mc)&&(mc=null);nc.forEach(zc);oc.forEach(zc)}
function Bc(a,b){a.blockedOn===b&&(a.blockedOn=null,ic||(ic=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Ac)))}
function Cc(a){function b(b){return Bc(b,a)}if(0<jc.length){Bc(jc[0],a);for(var c=1;c<jc.length;c++){var d=jc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==kc&&Bc(kc,a);null!==lc&&Bc(lc,a);null!==mc&&Bc(mc,a);nc.forEach(b);oc.forEach(b);for(c=0;c<pc.length;c++)d=pc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<pc.length&&(c=pc[0],null===c.blockedOn);)vc(c),null===c.blockedOn&&pc.shift()}
function Dc(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c["Webkit"+a]="webkit"+b;c["Moz"+a]="moz"+b;return c}var Ec={animationend:Dc("Animation","AnimationEnd"),animationiteration:Dc("Animation","AnimationIteration"),animationstart:Dc("Animation","AnimationStart"),transitionend:Dc("Transition","TransitionEnd")},Fc={},Gc={};
fa&&(Gc=document.createElement("div").style,"AnimationEvent"in window||(delete Ec.animationend.animation,delete Ec.animationiteration.animation,delete Ec.animationstart.animation),"TransitionEvent"in window||delete Ec.transitionend.transition);function Hc(a){if(Fc[a])return Fc[a];if(!Ec[a])return a;var b=Ec[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Gc)return Fc[a]=b[c];return a}
var Ic=Hc("animationend"),Jc=Hc("animationiteration"),Kc=Hc("animationstart"),Lc=Hc("transitionend"),Mc=new Map,Nc=new Map,Oc=["abort","abort",Ic,"animationEnd",Jc,"animationIteration",Kc,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart",
"lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Lc,"transitionEnd","waiting","waiting"];function Pc(a,b){for(var c=0;c<a.length;c+=2){var d=a[c],e=a[c+1];e="on"+(e[0].toUpperCase()+e.slice(1));Nc.set(d,b);Mc.set(d,e);da(e,[d])}}var Qc=r.unstable_now;Qc();var F=8;
function Rc(a){if(0!==(1&a))return F=15,1;if(0!==(2&a))return F=14,2;if(0!==(4&a))return F=13,4;var b=24&a;if(0!==b)return F=12,b;if(0!==(a&32))return F=11,32;b=192&a;if(0!==b)return F=10,b;if(0!==(a&256))return F=9,256;b=3584&a;if(0!==b)return F=8,b;if(0!==(a&4096))return F=7,4096;b=4186112&a;if(0!==b)return F=6,b;b=62914560&a;if(0!==b)return F=5,b;if(a&67108864)return F=4,67108864;if(0!==(a&134217728))return F=3,134217728;b=805306368&a;if(0!==b)return F=2,b;if(0!==(1073741824&a))return F=1,1073741824;
F=8;return a}function Sc(a){switch(a){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}function Tc(a){switch(a){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(y(358,a));}}
function Uc(a,b){var c=a.pendingLanes;if(0===c)return F=0;var d=0,e=0,f=a.expiredLanes,g=a.suspendedLanes,h=a.pingedLanes;if(0!==f)d=f,e=F=15;else if(f=c&134217727,0!==f){var k=f&~g;0!==k?(d=Rc(k),e=F):(h&=f,0!==h&&(d=Rc(h),e=F))}else f=c&~g,0!==f?(d=Rc(f),e=F):0!==h&&(d=Rc(h),e=F);if(0===d)return 0;d=31-Vc(d);d=c&((0>d?0:1<<d)<<1)-1;if(0!==b&&b!==d&&0===(b&g)){Rc(b);if(e<=F)return b;F=e}b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-Vc(b),e=1<<c,d|=a[c],b&=~e;return d}
function Wc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function Xc(a,b){switch(a){case 15:return 1;case 14:return 2;case 12:return a=Yc(24&~b),0===a?Xc(10,b):a;case 10:return a=Yc(192&~b),0===a?Xc(8,b):a;case 8:return a=Yc(3584&~b),0===a&&(a=Yc(4186112&~b),0===a&&(a=512)),a;case 2:return b=Yc(805306368&~b),0===b&&(b=268435456),b}throw Error(y(358,a));}function Yc(a){return a&-a}function Zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}
function $c(a,b,c){a.pendingLanes|=b;var d=b-1;a.suspendedLanes&=d;a.pingedLanes&=d;a=a.eventTimes;b=31-Vc(b);a[b]=c}var Vc=Math.clz32?Math.clz32:ad,bd=Math.log,cd=Math.LN2;function ad(a){return 0===a?32:31-(bd(a)/cd|0)|0}var dd=r.unstable_UserBlockingPriority,ed=r.unstable_runWithPriority,fd=!0;function gd(a,b,c,d){Kb||Ib();var e=hd,f=Kb;Kb=!0;try{Hb(e,a,b,c,d)}finally{(Kb=f)||Mb()}}function id(a,b,c,d){ed(dd,hd.bind(null,a,b,c,d))}
function hd(a,b,c,d){if(fd){var e;if((e=0===(b&4))&&0<jc.length&&-1<qc.indexOf(a))a=rc(null,a,b,c,d),jc.push(a);else{var f=yc(a,b,c,d);if(null===f)e&&sc(a,d);else{if(e){if(-1<qc.indexOf(a)){a=rc(f,a,b,c,d);jc.push(a);return}if(uc(f,a,b,c,d))return;sc(a,d)}jd(a,b,d,null,c)}}}}
function yc(a,b,c,d){var e=xb(d);e=wc(e);if(null!==e){var f=Zb(e);if(null===f)e=null;else{var g=f.tag;if(13===g){e=$b(f);if(null!==e)return e;e=null}else if(3===g){if(f.stateNode.hydrate)return 3===f.tag?f.stateNode.containerInfo:null;e=null}else f!==e&&(e=null)}}jd(a,b,d,e,c);return null}var kd=null,ld=null,md=null;
function nd(){if(md)return md;var a,b=ld,c=b.length,d,e="value"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}function od(a){var b=a.keyCode;"charCode"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}
function rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}m(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():"unknown"!==typeof a.returnValue&&
(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():"unknown"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}
var sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=m({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=m({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if("movementX"in
a)return a.movementX;a!==yd&&(yd&&"mousemove"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return"movementY"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=m({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=m({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=m({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=m({},sd,{clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=m({},sd,{data:0}),Ld=rd(Kd),Md={Esc:"Escape",
Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Nd={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",
119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Od={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}
var Qd=m({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if("Unidentified"!==b)return b}return"keypress"===a.type?(a=od(a),13===a?"Enter":String.fromCharCode(a)):"keydown"===a.type||"keyup"===a.type?Nd[a.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return"keypress"===a.type?od(a):0},keyCode:function(a){return"keydown"===a.type||"keyup"===a.type?a.keyCode:0},which:function(a){return"keypress"===
a.type?od(a):"keydown"===a.type||"keyup"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=m({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=m({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=m({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=m({},Ad,{deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in a?-a.wheelDeltaX:0},
deltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=fa&&"CompositionEvent"in window,be=null;fa&&"documentMode"in document&&(be=document.documentMode);var ce=fa&&"TextEvent"in window&&!be,de=fa&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;
function ge(a,b){switch(a){case "keyup":return-1!==$d.indexOf(b.keyCode);case "keydown":return 229!==b.keyCode;case "keypress":case "mousedown":case "focusout":return!0;default:return!1}}function he(a){a=a.detail;return"object"===typeof a&&"data"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case "compositionend":return he(b);case "keypress":if(32!==b.which)return null;fe=!0;return ee;case "textInput":return a=b.data,a===ee&&fe?null:a;default:return null}}
function ke(a,b){if(ie)return"compositionend"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case "paste":return null;case "keypress":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case "compositionend":return de&&"ko"!==b.locale?null:b.data;default:return null}}
var le={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return"input"===b?!!le[a.type]:"textarea"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,"onChange");0<b.length&&(c=new td("onChange","change",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}
function ve(a,b){if("change"===a)return b}var we=!1;if(fa){var xe;if(fa){var ye="oninput"in document;if(!ye){var ze=document.createElement("div");ze.setAttribute("oninput","return;");ye="function"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent("onpropertychange",Be),qe=pe=null)}function Be(a){if("value"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));a=re;if(Kb)a(b);else{Kb=!0;try{Gb(a,b)}finally{Kb=!1,Mb()}}}}
function Ce(a,b,c){"focusin"===a?(Ae(),pe=b,qe=c,pe.attachEvent("onpropertychange",Be)):"focusout"===a&&Ae()}function De(a){if("selectionchange"===a||"keyup"===a||"keydown"===a)return te(qe)}function Ee(a,b){if("click"===a)return te(b)}function Fe(a,b){if("input"===a||"change"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He="function"===typeof Object.is?Object.is:Ge,Ie=Object.prototype.hasOwnProperty;
function Je(a,b){if(He(a,b))return!0;if("object"!==typeof a||null===a||"object"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!Ie.call(b,c[d])||!He(a[c[d]],b[c[d]]))return!1;return!0}function Ke(a){for(;a&&a.firstChild;)a=a.firstChild;return a}
function Le(a,b){var c=Ke(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Ke(c)}}function Me(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Me(a,b.parentNode):"contains"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}
function Ne(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c="string"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Oe(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&("input"===b&&("text"===a.type||"search"===a.type||"tel"===a.type||"url"===a.type||"password"===a.type)||"textarea"===b||"true"===a.contentEditable)}
var Pe=fa&&"documentMode"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;
function Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,"selectionStart"in d&&Oe(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Je(Se,d)||(Se=d,d=oe(Re,"onSelect"),0<d.length&&(b=new td("onSelect","select",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}
Pc("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),
0);Pc("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1);Pc(Oc,2);for(var Ve="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),We=0;We<Ve.length;We++)Nc.set(Ve[We],0);ea("onMouseEnter",["mouseout","mouseover"]);
ea("onMouseLeave",["mouseout","mouseover"]);ea("onPointerEnter",["pointerout","pointerover"]);ea("onPointerLeave",["pointerout","pointerover"]);da("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));da("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));da("onBeforeInput",["compositionend","keypress","textInput","paste"]);da("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));
da("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));da("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Xe="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ye=new Set("cancel close invalid load scroll toggle".split(" ").concat(Xe));
function Ze(a,b,c){var d=a.type||"unknown-event";a.currentTarget=c;Yb(d,b,void 0,a);a.currentTarget=null}
function se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}}}if(Ub)throw a=Vb,Ub=!1,Vb=null,a;}
function G(a,b){var c=$e(b),d=a+"__bubble";c.has(d)||(af(b,a,2,!1),c.add(d))}var bf="_reactListening"+Math.random().toString(36).slice(2);function cf(a){a[bf]||(a[bf]=!0,ba.forEach(function(b){Ye.has(b)||df(b,!1,a,null);df(b,!0,a,null)}))}
function df(a,b,c,d){var e=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,f=c;"selectionchange"===a&&9!==c.nodeType&&(f=c.ownerDocument);if(null!==d&&!b&&Ye.has(a)){if("scroll"!==a)return;e|=2;f=d}var g=$e(f),h=a+"__"+(b?"capture":"bubble");g.has(h)||(b&&(e|=4),af(f,a,e,b),g.add(h))}
function af(a,b,c,d){var e=Nc.get(b);switch(void 0===e?2:e){case 0:e=gd;break;case 1:e=id;break;default:e=hd}c=e.bind(null,b,c,a);e=void 0;!Pb||"touchstart"!==b&&"touchmove"!==b&&"wheel"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}
function jd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Nb(function(){var d=f,e=xb(c),g=[];
a:{var h=Mc.get(a);if(void 0!==h){var k=td,x=a;switch(a){case "keypress":if(0===od(c))break a;case "keydown":case "keyup":k=Rd;break;case "focusin":x="focus";k=Fd;break;case "focusout":x="blur";k=Fd;break;case "beforeblur":case "afterblur":k=Fd;break;case "click":if(2===c.button)break a;case "auxclick":case "dblclick":case "mousedown":case "mousemove":case "mouseup":case "mouseout":case "mouseover":case "contextmenu":k=Bd;break;case "drag":case "dragend":case "dragenter":case "dragexit":case "dragleave":case "dragover":case "dragstart":case "drop":k=
Dd;break;case "touchcancel":case "touchend":case "touchmove":case "touchstart":k=Vd;break;case Ic:case Jc:case Kc:k=Hd;break;case Lc:k=Xd;break;case "scroll":k=vd;break;case "wheel":k=Zd;break;case "copy":case "cut":case "paste":k=Jd;break;case "gotpointercapture":case "lostpointercapture":case "pointercancel":case "pointerdown":case "pointermove":case "pointerout":case "pointerover":case "pointerup":k=Td}var w=0!==(b&4),z=!w&&"scroll"===a,u=w?null!==h?h+"Capture":null:h;w=[];for(var t=d,q;null!==
t;){q=t;var v=q.stateNode;5===q.tag&&null!==v&&(q=v,null!==u&&(v=Ob(t,u),null!=v&&w.push(ef(t,v,q))));if(z)break;t=t.return}0<w.length&&(h=new k(h,x,null,c,e),g.push({event:h,listeners:w}))}}if(0===(b&7)){a:{h="mouseover"===a||"pointerover"===a;k="mouseout"===a||"pointerout"===a;if(h&&0===(b&16)&&(x=c.relatedTarget||c.fromElement)&&(wc(x)||x[ff]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(x=c.relatedTarget||c.toElement,k=d,x=x?wc(x):null,null!==
x&&(z=Zb(x),x!==z||5!==x.tag&&6!==x.tag))x=null}else k=null,x=d;if(k!==x){w=Bd;v="onMouseLeave";u="onMouseEnter";t="mouse";if("pointerout"===a||"pointerover"===a)w=Td,v="onPointerLeave",u="onPointerEnter",t="pointer";z=null==k?h:ue(k);q=null==x?h:ue(x);h=new w(v,t+"leave",k,c,e);h.target=z;h.relatedTarget=q;v=null;wc(e)===d&&(w=new w(u,t+"enter",x,c,e),w.target=q,w.relatedTarget=z,v=w);z=v;if(k&&x)b:{w=k;u=x;t=0;for(q=w;q;q=gf(q))t++;q=0;for(v=u;v;v=gf(v))q++;for(;0<t-q;)w=gf(w),t--;for(;0<q-t;)u=
gf(u),q--;for(;t--;){if(w===u||null!==u&&w===u.alternate)break b;w=gf(w);u=gf(u)}w=null}else w=null;null!==k&&hf(g,h,k,w,!1);null!==x&&null!==z&&hf(g,z,x,w,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if("select"===k||"input"===k&&"file"===h.type)var J=ve;else if(me(h))if(we)J=Fe;else{J=De;var K=Ce}else(k=h.nodeName)&&"input"===k.toLowerCase()&&("checkbox"===h.type||"radio"===h.type)&&(J=Ee);if(J&&(J=J(a,d))){ne(g,J,c,e);break a}K&&K(a,h,d);"focusout"===a&&(K=h._wrapperState)&&
K.controlled&&"number"===h.type&&bb(h,"number",h.value)}K=d?ue(d):window;switch(a){case "focusin":if(me(K)||"true"===K.contentEditable)Qe=K,Re=d,Se=null;break;case "focusout":Se=Re=Qe=null;break;case "mousedown":Te=!0;break;case "contextmenu":case "mouseup":case "dragend":Te=!1;Ue(g,c,e);break;case "selectionchange":if(Pe)break;case "keydown":case "keyup":Ue(g,c,e)}var Q;if(ae)b:{switch(a){case "compositionstart":var L="onCompositionStart";break b;case "compositionend":L="onCompositionEnd";break b;
case "compositionupdate":L="onCompositionUpdate";break b}L=void 0}else ie?ge(a,c)&&(L="onCompositionEnd"):"keydown"===a&&229===c.keyCode&&(L="onCompositionStart");L&&(de&&"ko"!==c.locale&&(ie||"onCompositionStart"!==L?"onCompositionEnd"===L&&ie&&(Q=nd()):(kd=e,ld="value"in kd?kd.value:kd.textContent,ie=!0)),K=oe(d,L),0<K.length&&(L=new Ld(L,a,null,c,e),g.push({event:L,listeners:K}),Q?L.data=Q:(Q=he(c),null!==Q&&(L.data=Q))));if(Q=ce?je(a,c):ke(a,c))d=oe(d,"onBeforeInput"),0<d.length&&(e=new Ld("onBeforeInput",
"beforeinput",null,c,e),g.push({event:e,listeners:d}),e.data=Q)}se(g,b)})}function ef(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+"Capture",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Ob(a,c),null!=f&&d.unshift(ef(a,f,e)),f=Ob(a,b),null!=f&&d.push(ef(a,f,e)));a=a.return}return d}function gf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}
function hf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Ob(c,f),null!=k&&g.unshift(ef(c,k,h))):e||(k=Ob(c,f),null!=k&&g.push(ef(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}function jf(){}var kf=null,lf=null;function mf(a,b){switch(a){case "button":case "input":case "select":case "textarea":return!!b.autoFocus}return!1}
function nf(a,b){return"textarea"===a||"option"===a||"noscript"===a||"string"===typeof b.children||"number"===typeof b.children||"object"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var of="function"===typeof setTimeout?setTimeout:void 0,pf="function"===typeof clearTimeout?clearTimeout:void 0;function qf(a){1===a.nodeType?a.textContent="":9===a.nodeType&&(a=a.body,null!=a&&(a.textContent=""))}
function rf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}function sf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if("$"===c||"$!"===c||"$?"===c){if(0===b)return a;b--}else"/$"===c&&b++}a=a.previousSibling}return null}var tf=0;function uf(a){return{$$typeof:Ga,toString:a,valueOf:a}}var vf=Math.random().toString(36).slice(2),wf="__reactFiber$"+vf,xf="__reactProps$"+vf,ff="__reactContainer$"+vf,yf="__reactEvents$"+vf;
function wc(a){var b=a[wf];if(b)return b;for(var c=a.parentNode;c;){if(b=c[ff]||c[wf]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=sf(a);null!==a;){if(c=a[wf])return c;a=sf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[wf]||a[ff];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(y(33));}function Db(a){return a[xf]||null}
function $e(a){var b=a[yf];void 0===b&&(b=a[yf]=new Set);return b}var zf=[],Af=-1;function Bf(a){return{current:a}}function H(a){0>Af||(a.current=zf[Af],zf[Af]=null,Af--)}function I(a,b){Af++;zf[Af]=a.current;a.current=b}var Cf={},M=Bf(Cf),N=Bf(!1),Df=Cf;
function Ef(a,b){var c=a.type.contextTypes;if(!c)return Cf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function Ff(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Gf(){H(N);H(M)}function Hf(a,b,c){if(M.current!==Cf)throw Error(y(168));I(M,b);I(N,c)}
function If(a,b,c){var d=a.stateNode;a=b.childContextTypes;if("function"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(y(108,Ra(b)||"Unknown",e));return m({},c,d)}function Jf(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Cf;Df=M.current;I(M,a);I(N,N.current);return!0}function Kf(a,b,c){var d=a.stateNode;if(!d)throw Error(y(169));c?(a=If(a,b,Df),d.__reactInternalMemoizedMergedChildContext=a,H(N),H(M),I(M,a)):H(N);I(N,c)}
var Lf=null,Mf=null,Nf=r.unstable_runWithPriority,Of=r.unstable_scheduleCallback,Pf=r.unstable_cancelCallback,Qf=r.unstable_shouldYield,Rf=r.unstable_requestPaint,Sf=r.unstable_now,Tf=r.unstable_getCurrentPriorityLevel,Uf=r.unstable_ImmediatePriority,Vf=r.unstable_UserBlockingPriority,Wf=r.unstable_NormalPriority,Xf=r.unstable_LowPriority,Yf=r.unstable_IdlePriority,Zf={},$f=void 0!==Rf?Rf:function(){},ag=null,bg=null,cg=!1,dg=Sf(),O=1E4>dg?Sf:function(){return Sf()-dg};
function eg(){switch(Tf()){case Uf:return 99;case Vf:return 98;case Wf:return 97;case Xf:return 96;case Yf:return 95;default:throw Error(y(332));}}function fg(a){switch(a){case 99:return Uf;case 98:return Vf;case 97:return Wf;case 96:return Xf;case 95:return Yf;default:throw Error(y(332));}}function gg(a,b){a=fg(a);return Nf(a,b)}function hg(a,b,c){a=fg(a);return Of(a,b,c)}function ig(){if(null!==bg){var a=bg;bg=null;Pf(a)}jg()}
function jg(){if(!cg&&null!==ag){cg=!0;var a=0;try{var b=ag;gg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});ag=null}catch(c){throw null!==ag&&(ag=ag.slice(a+1)),Of(Uf,ig),c;}finally{cg=!1}}}var kg=ra.ReactCurrentBatchConfig;function lg(a,b){if(a&&a.defaultProps){b=m({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var mg=Bf(null),ng=null,og=null,pg=null;function qg(){pg=og=ng=null}
function rg(a){var b=mg.current;H(mg);a.type._context._currentValue=b}function sg(a,b){for(;null!==a;){var c=a.alternate;if((a.childLanes&b)===b)if(null===c||(c.childLanes&b)===b)break;else c.childLanes|=b;else a.childLanes|=b,null!==c&&(c.childLanes|=b);a=a.return}}function tg(a,b){ng=a;pg=og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(ug=!0),a.firstContext=null)}
function vg(a,b){if(pg!==a&&!1!==b&&0!==b){if("number"!==typeof b||1073741823===b)pg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===og){if(null===ng)throw Error(y(308));og=b;ng.dependencies={lanes:0,firstContext:b,responders:null}}else og=og.next=b}return a._currentValue}var wg=!1;function xg(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}
function yg(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function zg(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}function Ag(a,b){a=a.updateQueue;if(null!==a){a=a.shared;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}}
function Bg(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=
b;c.lastBaseUpdate=b}
function Cg(a,b,c,d){var e=a.updateQueue;wg=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var n=a.alternate;if(null!==n){n=n.updateQueue;var A=n.lastBaseUpdate;A!==g&&(null===A?n.firstBaseUpdate=l:A.next=l,n.lastBaseUpdate=k)}}if(null!==f){A=e.baseState;g=0;n=l=k=null;do{h=f.lane;var p=f.eventTime;if((d&h)===h){null!==n&&(n=n.next={eventTime:p,lane:0,tag:f.tag,payload:f.payload,callback:f.callback,
next:null});a:{var C=a,x=f;h=b;p=c;switch(x.tag){case 1:C=x.payload;if("function"===typeof C){A=C.call(p,A,h);break a}A=C;break a;case 3:C.flags=C.flags&-4097|64;case 0:C=x.payload;h="function"===typeof C?C.call(p,A,h):C;if(null===h||void 0===h)break a;A=m({},A,h);break a;case 2:wg=!0}}null!==f.callback&&(a.flags|=32,h=e.effects,null===h?e.effects=[f]:h.push(f))}else p={eventTime:p,lane:h,tag:f.tag,payload:f.payload,callback:f.callback,next:null},null===n?(l=n=p,k=A):n=n.next=p,g|=h;f=f.next;if(null===
f)if(h=e.shared.pending,null===h)break;else f=h.next,h.next=null,e.lastBaseUpdate=h,e.shared.pending=null}while(1);null===n&&(k=A);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=n;Dg|=g;a.lanes=g;a.memoizedState=A}}function Eg(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if("function"!==typeof e)throw Error(y(191,e));e.call(d)}}}var Fg=(new aa.Component).refs;
function Gg(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:m({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}
var Kg={isMounted:function(a){return(a=a._reactInternals)?Zb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=Hg(),d=Ig(a),e=zg(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=
b);Ag(a,e);Jg(a,d,c)}};function Lg(a,b,c,d,e,f,g){a=a.stateNode;return"function"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Je(c,d)||!Je(e,f):!0}
function Mg(a,b,c){var d=!1,e=Cf;var f=b.contextType;"object"===typeof f&&null!==f?f=vg(f):(e=Ff(b)?Df:M.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Ef(a,e):Cf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Kg;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}
function Ng(a,b,c,d){a=b.state;"function"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);"function"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Kg.enqueueReplaceState(b,b.state,null)}
function Og(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Fg;xg(a);var f=b.contextType;"object"===typeof f&&null!==f?e.context=vg(f):(f=Ff(b)?Df:M.current,e.context=Ef(a,f));Cg(a,c,e,d);e.state=a.memoizedState;f=b.getDerivedStateFromProps;"function"===typeof f&&(Gg(a,b,f,c),e.state=a.memoizedState);"function"===typeof b.getDerivedStateFromProps||"function"===typeof e.getSnapshotBeforeUpdate||"function"!==typeof e.UNSAFE_componentWillMount&&"function"!==typeof e.componentWillMount||
(b=e.state,"function"===typeof e.componentWillMount&&e.componentWillMount(),"function"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Kg.enqueueReplaceState(e,e.state,null),Cg(a,c,e,d),e.state=a.memoizedState);"function"===typeof e.componentDidMount&&(a.flags|=4)}var Pg=Array.isArray;
function Qg(a,b,c){a=c.ref;if(null!==a&&"function"!==typeof a&&"object"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(y(309));var d=c.stateNode}if(!d)throw Error(y(147,a));var e=""+a;if(null!==b&&null!==b.ref&&"function"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Fg&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if("string"!==typeof a)throw Error(y(284));if(!c._owner)throw Error(y(290,a));}return a}
function Rg(a,b){if("textarea"!==a.type)throw Error(y(31,"[object Object]"===Object.prototype.toString.call(b)?"object with keys {"+Object.keys(b).join(", ")+"}":b));}
function Sg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.flags=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Tg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags=2,
c):d;b.flags=2;return c}function g(b){a&&null===b.alternate&&(b.flags=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Ug(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props),d.ref=Qg(a,b,c),d.return=a,d;d=Vg(c.type,c.key,c.props,null,a.mode,d);d.ref=Qg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=
Wg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function n(a,b,c,d,f){if(null===b||7!==b.tag)return b=Xg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function A(a,b,c){if("string"===typeof b||"number"===typeof b)return b=Ug(""+b,a.mode,c),b.return=a,b;if("object"===typeof b&&null!==b){switch(b.$$typeof){case sa:return c=Vg(b.type,b.key,b.props,null,a.mode,c),c.ref=Qg(a,null,b),c.return=a,c;case ta:return b=Wg(b,a.mode,c),b.return=a,b}if(Pg(b)||La(b))return b=Xg(b,
a.mode,c,null),b.return=a,b;Rg(a,b)}return null}function p(a,b,c,d){var e=null!==b?b.key:null;if("string"===typeof c||"number"===typeof c)return null!==e?null:h(a,b,""+c,d);if("object"===typeof c&&null!==c){switch(c.$$typeof){case sa:return c.key===e?c.type===ua?n(a,b,c.props.children,d,e):k(a,b,c,d):null;case ta:return c.key===e?l(a,b,c,d):null}if(Pg(c)||La(c))return null!==e?null:n(a,b,c,d,null);Rg(a,c)}return null}function C(a,b,c,d,e){if("string"===typeof d||"number"===typeof d)return a=a.get(c)||
null,h(b,a,""+d,e);if("object"===typeof d&&null!==d){switch(d.$$typeof){case sa:return a=a.get(null===d.key?c:d.key)||null,d.type===ua?n(b,a,d.props.children,e,d.key):k(b,a,d,e);case ta:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Pg(d)||La(d))return a=a.get(c)||null,n(b,a,d,e,null);Rg(b,d)}return null}function x(e,g,h,k){for(var l=null,t=null,u=g,z=g=0,q=null;null!==u&&z<h.length;z++){u.index>z?(q=u,u=null):q=u.sibling;var n=p(e,u,h[z],k);if(null===n){null===u&&(u=q);break}a&&u&&null===
n.alternate&&b(e,u);g=f(n,g,z);null===t?l=n:t.sibling=n;t=n;u=q}if(z===h.length)return c(e,u),l;if(null===u){for(;z<h.length;z++)u=A(e,h[z],k),null!==u&&(g=f(u,g,z),null===t?l=u:t.sibling=u,t=u);return l}for(u=d(e,u);z<h.length;z++)q=C(u,e,z,h[z],k),null!==q&&(a&&null!==q.alternate&&u.delete(null===q.key?z:q.key),g=f(q,g,z),null===t?l=q:t.sibling=q,t=q);a&&u.forEach(function(a){return b(e,a)});return l}function w(e,g,h,k){var l=La(h);if("function"!==typeof l)throw Error(y(150));h=l.call(h);if(null==
h)throw Error(y(151));for(var t=l=null,u=g,z=g=0,q=null,n=h.next();null!==u&&!n.done;z++,n=h.next()){u.index>z?(q=u,u=null):q=u.sibling;var w=p(e,u,n.value,k);if(null===w){null===u&&(u=q);break}a&&u&&null===w.alternate&&b(e,u);g=f(w,g,z);null===t?l=w:t.sibling=w;t=w;u=q}if(n.done)return c(e,u),l;if(null===u){for(;!n.done;z++,n=h.next())n=A(e,n.value,k),null!==n&&(g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);return l}for(u=d(e,u);!n.done;z++,n=h.next())n=C(u,e,z,n.value,k),null!==n&&(a&&null!==n.alternate&&
u.delete(null===n.key?z:n.key),g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);a&&u.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k="object"===typeof f&&null!==f&&f.type===ua&&null===f.key;k&&(f=f.props.children);var l="object"===typeof f&&null!==f;if(l)switch(f.$$typeof){case sa:a:{l=f.key;for(k=d;null!==k;){if(k.key===l){switch(k.tag){case 7:if(f.type===ua){c(a,k.sibling);d=e(k,f.props.children);d.return=a;a=d;break a}break;default:if(k.elementType===f.type){c(a,k.sibling);
d=e(k,f.props);d.ref=Qg(a,k,f);d.return=a;a=d;break a}}c(a,k);break}else b(a,k);k=k.sibling}f.type===ua?(d=Xg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Vg(f.type,f.key,f.props,null,a.mode,h),h.ref=Qg(a,d,f),h.return=a,a=h)}return g(a);case ta:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=
Wg(f,a.mode,h);d.return=a;a=d}return g(a)}if("string"===typeof f||"number"===typeof f)return f=""+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=Ug(f,a.mode,h),d.return=a,a=d),g(a);if(Pg(f))return x(a,d,f,h);if(La(f))return w(a,d,f,h);l&&Rg(a,f);if("undefined"===typeof f&&!k)switch(a.tag){case 1:case 22:case 0:case 11:case 15:throw Error(y(152,Ra(a.type)||"Component"));}return c(a,d)}}var Yg=Sg(!0),Zg=Sg(!1),$g={},ah=Bf($g),bh=Bf($g),ch=Bf($g);
function dh(a){if(a===$g)throw Error(y(174));return a}function eh(a,b){I(ch,b);I(bh,a);I(ah,$g);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:mb(null,"");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=mb(b,a)}H(ah);I(ah,b)}function fh(){H(ah);H(bh);H(ch)}function gh(a){dh(ch.current);var b=dh(ah.current);var c=mb(b,a.type);b!==c&&(I(bh,a),I(ah,c))}function hh(a){bh.current===a&&(H(ah),H(bh))}var P=Bf(0);
function ih(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||"$?"===c.data||"$!"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var jh=null,kh=null,lh=!1;
function mh(a,b){var c=nh(5,null,null,0);c.elementType="DELETED";c.type="DELETED";c.stateNode=b;c.return=a;c.flags=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function oh(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=""===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}
function ph(a){if(lh){var b=kh;if(b){var c=b;if(!oh(a,b)){b=rf(c.nextSibling);if(!b||!oh(a,b)){a.flags=a.flags&-1025|2;lh=!1;jh=a;return}mh(jh,c)}jh=a;kh=rf(b.firstChild)}else a.flags=a.flags&-1025|2,lh=!1,jh=a}}function qh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;jh=a}
function rh(a){if(a!==jh)return!1;if(!lh)return qh(a),lh=!0,!1;var b=a.type;if(5!==a.tag||"head"!==b&&"body"!==b&&!nf(b,a.memoizedProps))for(b=kh;b;)mh(a,b),b=rf(b.nextSibling);qh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(y(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if("/$"===c){if(0===b){kh=rf(a.nextSibling);break a}b--}else"$"!==c&&"$!"!==c&&"$?"!==c||b++}a=a.nextSibling}kh=null}}else kh=jh?rf(a.stateNode.nextSibling):null;return!0}
function sh(){kh=jh=null;lh=!1}var th=[];function uh(){for(var a=0;a<th.length;a++)th[a]._workInProgressVersionPrimary=null;th.length=0}var vh=ra.ReactCurrentDispatcher,wh=ra.ReactCurrentBatchConfig,xh=0,R=null,S=null,T=null,yh=!1,zh=!1;function Ah(){throw Error(y(321));}function Bh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}
function Ch(a,b,c,d,e,f){xh=f;R=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;vh.current=null===a||null===a.memoizedState?Dh:Eh;a=c(d,e);if(zh){f=0;do{zh=!1;if(!(25>f))throw Error(y(301));f+=1;T=S=null;b.updateQueue=null;vh.current=Fh;a=c(d,e)}while(zh)}vh.current=Gh;b=null!==S&&null!==S.next;xh=0;T=S=R=null;yh=!1;if(b)throw Error(y(300));return a}function Hh(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===T?R.memoizedState=T=a:T=T.next=a;return T}
function Ih(){if(null===S){var a=R.alternate;a=null!==a?a.memoizedState:null}else a=S.next;var b=null===T?R.memoizedState:T.next;if(null!==b)T=b,S=a;else{if(null===a)throw Error(y(310));S=a;a={memoizedState:S.memoizedState,baseState:S.baseState,baseQueue:S.baseQueue,queue:S.queue,next:null};null===T?R.memoizedState=T=a:T=T.next=a}return T}function Jh(a,b){return"function"===typeof b?b(a):b}
function Kh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=S,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){e=e.next;d=d.baseState;var h=g=f=null,k=e;do{var l=k.lane;if((xh&l)===l)null!==h&&(h=h.next={lane:0,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null}),d=k.eagerReducer===a?k.eagerState:a(d,k.action);else{var n={lane:l,action:k.action,eagerReducer:k.eagerReducer,
eagerState:k.eagerState,next:null};null===h?(g=h=n,f=d):h=h.next=n;R.lanes|=l;Dg|=l}k=k.next}while(null!==k&&k!==e);null===h?f=d:h.next=g;He(d,b.memoizedState)||(ug=!0);b.memoizedState=d;b.baseState=f;b.baseQueue=h;c.lastRenderedState=d}return[b.memoizedState,c.dispatch]}
function Lh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}
function Mh(a,b,c){var d=b._getVersion;d=d(b._source);var e=b._workInProgressVersionPrimary;if(null!==e)a=e===d;else if(a=a.mutableReadLanes,a=(xh&a)===a)b._workInProgressVersionPrimary=d,th.push(b);if(a)return c(b._source);th.push(b);throw Error(y(350));}
function Nh(a,b,c,d){var e=U;if(null===e)throw Error(y(349));var f=b._getVersion,g=f(b._source),h=vh.current,k=h.useState(function(){return Mh(e,b,c)}),l=k[1],n=k[0];k=T;var A=a.memoizedState,p=A.refs,C=p.getSnapshot,x=A.source;A=A.subscribe;var w=R;a.memoizedState={refs:p,source:b,subscribe:d};h.useEffect(function(){p.getSnapshot=c;p.setSnapshot=l;var a=f(b._source);if(!He(g,a)){a=c(b._source);He(n,a)||(l(a),a=Ig(w),e.mutableReadLanes|=a&e.pendingLanes);a=e.mutableReadLanes;e.entangledLanes|=a;for(var d=
e.entanglements,h=a;0<h;){var k=31-Vc(h),v=1<<k;d[k]|=a;h&=~v}}},[c,b,d]);h.useEffect(function(){return d(b._source,function(){var a=p.getSnapshot,c=p.setSnapshot;try{c(a(b._source));var d=Ig(w);e.mutableReadLanes|=d&e.pendingLanes}catch(q){c(function(){throw q;})}})},[b,d]);He(C,c)&&He(x,b)&&He(A,d)||(a={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:n},a.dispatch=l=Oh.bind(null,R,a),k.queue=a,k.baseQueue=null,n=Mh(e,b,c),k.memoizedState=k.baseState=n);return n}
function Ph(a,b,c){var d=Ih();return Nh(d,a,b,c)}function Qh(a){var b=Hh();"function"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:a};a=a.dispatch=Oh.bind(null,R,a);return[b.memoizedState,a]}
function Rh(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=R.updateQueue;null===b?(b={lastEffect:null},R.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function Sh(a){var b=Hh();a={current:a};return b.memoizedState=a}function Th(){return Ih().memoizedState}function Uh(a,b,c,d){var e=Hh();R.flags|=a;e.memoizedState=Rh(1|b,c,void 0,void 0===d?null:d)}
function Vh(a,b,c,d){var e=Ih();d=void 0===d?null:d;var f=void 0;if(null!==S){var g=S.memoizedState;f=g.destroy;if(null!==d&&Bh(d,g.deps)){Rh(b,c,f,d);return}}R.flags|=a;e.memoizedState=Rh(1|b,c,f,d)}function Wh(a,b){return Uh(516,4,a,b)}function Xh(a,b){return Vh(516,4,a,b)}function Yh(a,b){return Vh(4,2,a,b)}function Zh(a,b){if("function"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}
function $h(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Vh(4,2,Zh.bind(null,b,a),c)}function ai(){}function bi(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}function ci(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}
function di(a,b){var c=eg();gg(98>c?98:c,function(){a(!0)});gg(97<c?97:c,function(){var c=wh.transition;wh.transition=1;try{a(!1),b()}finally{wh.transition=c}})}
function Oh(a,b,c){var d=Hg(),e=Ig(a),f={lane:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.pending;null===g?f.next=f:(f.next=g.next,g.next=f);b.pending=f;g=a.alternate;if(a===R||null!==g&&g===R)zh=yh=!0;else{if(0===a.lanes&&(null===g||0===g.lanes)&&(g=b.lastRenderedReducer,null!==g))try{var h=b.lastRenderedState,k=g(h,c);f.eagerReducer=g;f.eagerState=k;if(He(k,h))return}catch(l){}finally{}Jg(a,e,d)}}
var Gh={readContext:vg,useCallback:Ah,useContext:Ah,useEffect:Ah,useImperativeHandle:Ah,useLayoutEffect:Ah,useMemo:Ah,useReducer:Ah,useRef:Ah,useState:Ah,useDebugValue:Ah,useDeferredValue:Ah,useTransition:Ah,useMutableSource:Ah,useOpaqueIdentifier:Ah,unstable_isNewReconciler:!1},Dh={readContext:vg,useCallback:function(a,b){Hh().memoizedState=[a,void 0===b?null:b];return a},useContext:vg,useEffect:Wh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Uh(4,2,Zh.bind(null,
b,a),c)},useLayoutEffect:function(a,b){return Uh(4,2,a,b)},useMemo:function(a,b){var c=Hh();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Hh();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=Oh.bind(null,R,a);return[d.memoizedState,a]},useRef:Sh,useState:Qh,useDebugValue:ai,useDeferredValue:function(a){var b=Qh(a),c=b[0],d=b[1];Wh(function(){var b=wh.transition;
wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Qh(!1),b=a[0];a=di.bind(null,a[1]);Sh(a);return[a,b]},useMutableSource:function(a,b,c){var d=Hh();d.memoizedState={refs:{getSnapshot:b,setSnapshot:null},source:a,subscribe:c};return Nh(d,a,b,c)},useOpaqueIdentifier:function(){if(lh){var a=!1,b=uf(function(){a||(a=!0,c("r:"+(tf++).toString(36)));throw Error(y(355));}),c=Qh(b)[1];0===(R.mode&2)&&(R.flags|=516,Rh(5,function(){c("r:"+(tf++).toString(36))},
void 0,null));return b}b="r:"+(tf++).toString(36);Qh(b);return b},unstable_isNewReconciler:!1},Eh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Kh,useRef:Th,useState:function(){return Kh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Kh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Kh(Jh)[0];return[Th().current,
a]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Kh(Jh)[0]},unstable_isNewReconciler:!1},Fh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Lh,useRef:Th,useState:function(){return Lh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Lh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Lh(Jh)[0];return[Th().current,
a]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Lh(Jh)[0]},unstable_isNewReconciler:!1},ei=ra.ReactCurrentOwner,ug=!1;function fi(a,b,c,d){b.child=null===a?Zg(b,null,c,d):Yg(b,a.child,c,d)}function gi(a,b,c,d,e){c=c.render;var f=b.ref;tg(b,e);d=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,d,e);return b.child}
function ii(a,b,c,d,e,f){if(null===a){var g=c.type;if("function"===typeof g&&!ji(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ki(a,b,g,d,e,f);a=Vg(c.type,null,d,b,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(0===(e&f)&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:Je,c(e,d)&&a.ref===b.ref))return hi(a,b,f);b.flags|=1;a=Tg(g,d);a.ref=b.ref;a.return=b;return b.child=a}
function ki(a,b,c,d,e,f){if(null!==a&&Je(a.memoizedProps,d)&&a.ref===b.ref)if(ug=!1,0!==(f&e))0!==(a.flags&16384)&&(ug=!0);else return b.lanes=a.lanes,hi(a,b,f);return li(a,b,c,d,f)}
function mi(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if("hidden"===d.mode||"unstable-defer-without-hiding"===d.mode)if(0===(b.mode&4))b.memoizedState={baseLanes:0},ni(b,c);else if(0!==(c&1073741824))b.memoizedState={baseLanes:0},ni(b,null!==f?f.baseLanes:c);else return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a},ni(b,a),null;else null!==f?(d=f.baseLanes|c,b.memoizedState=null):d=c,ni(b,d);fi(a,b,e,c);return b.child}
function oi(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=128}function li(a,b,c,d,e){var f=Ff(c)?Df:M.current;f=Ef(b,f);tg(b,e);c=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,c,e);return b.child}
function pi(a,b,c,d,e){if(Ff(c)){var f=!0;Jf(b)}else f=!1;tg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),Mg(b,c,d),Og(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;"object"===typeof l&&null!==l?l=vg(l):(l=Ff(c)?Df:M.current,l=Ef(b,l));var n=c.getDerivedStateFromProps,A="function"===typeof n||"function"===typeof g.getSnapshotBeforeUpdate;A||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&
"function"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Ng(b,g,d,l);wg=!1;var p=b.memoizedState;g.state=p;Cg(b,d,g,e);k=b.memoizedState;h!==d||p!==k||N.current||wg?("function"===typeof n&&(Gg(b,c,n,d),k=b.memoizedState),(h=wg||Lg(b,c,h,d,p,k,l))?(A||"function"!==typeof g.UNSAFE_componentWillMount&&"function"!==typeof g.componentWillMount||("function"===typeof g.componentWillMount&&g.componentWillMount(),"function"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),"function"===
typeof g.componentDidMount&&(b.flags|=4)):("function"===typeof g.componentDidMount&&(b.flags|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):("function"===typeof g.componentDidMount&&(b.flags|=4),d=!1)}else{g=b.stateNode;yg(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:lg(b.type,h);g.props=l;A=b.pendingProps;p=g.context;k=c.contextType;"object"===typeof k&&null!==k?k=vg(k):(k=Ff(c)?Df:M.current,k=Ef(b,k));var C=c.getDerivedStateFromProps;(n="function"===typeof C||
"function"===typeof g.getSnapshotBeforeUpdate)||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&"function"!==typeof g.componentWillReceiveProps||(h!==A||p!==k)&&Ng(b,g,d,k);wg=!1;p=b.memoizedState;g.state=p;Cg(b,d,g,e);var x=b.memoizedState;h!==A||p!==x||N.current||wg?("function"===typeof C&&(Gg(b,c,C,d),x=b.memoizedState),(l=wg||Lg(b,c,l,d,p,x,k))?(n||"function"!==typeof g.UNSAFE_componentWillUpdate&&"function"!==typeof g.componentWillUpdate||("function"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,
x,k),"function"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,x,k)),"function"===typeof g.componentDidUpdate&&(b.flags|=4),"function"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=256)):("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),b.memoizedProps=d,b.memoizedState=x),g.props=d,g.state=x,g.context=k,d=l):("function"!==typeof g.componentDidUpdate||
h===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),d=!1)}return qi(a,b,c,d,f,e)}
function qi(a,b,c,d,e,f){oi(a,b);var g=0!==(b.flags&64);if(!d&&!g)return e&&Kf(b,c,!1),hi(a,b,f);d=b.stateNode;ei.current=b;var h=g&&"function"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Yg(b,a.child,null,f),b.child=Yg(b,null,h,f)):fi(a,b,h,f);b.memoizedState=d.state;e&&Kf(b,c,!0);return b.child}function ri(a){var b=a.stateNode;b.pendingContext?Hf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Hf(a,b.context,!1);eh(a,b.containerInfo)}
var si={dehydrated:null,retryLane:0};
function ti(a,b,c){var d=b.pendingProps,e=P.current,f=!1,g;(g=0!==(b.flags&64))||(g=null!==a&&null===a.memoizedState?!1:0!==(e&2));g?(f=!0,b.flags&=-65):null!==a&&null===a.memoizedState||void 0===d.fallback||!0===d.unstable_avoidThisFallback||(e|=1);I(P,e&1);if(null===a){void 0!==d.fallback&&ph(b);a=d.children;e=d.fallback;if(f)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},b.memoizedState=si,a;if("number"===typeof d.unstable_expectedLoadTime)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},
b.memoizedState=si,b.lanes=33554432,a;c=vi({mode:"visible",children:a},b.mode,c,null);c.return=b;return b.child=c}if(null!==a.memoizedState){if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:
{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}function ui(a,b,c,d){var e=a.mode,f=a.child;b={mode:"hidden",children:b};0===(e&2)&&null!==f?(f.childLanes=0,f.pendingProps=b):f=vi(b,e,0,null);c=Xg(c,e,d,null);f.return=a;c.return=a;f.sibling=c;a.child=f;return c}
function xi(a,b,c,d){var e=a.child;a=e.sibling;c=Tg(e,{mode:"visible",children:c});0===(b.mode&2)&&(c.lanes=d);c.return=b;c.sibling=null;null!==a&&(a.nextEffect=null,a.flags=8,b.firstEffect=b.lastEffect=a);return b.child=c}
function wi(a,b,c,d,e){var f=b.mode,g=a.child;a=g.sibling;var h={mode:"hidden",children:c};0===(f&2)&&b.child!==g?(c=b.child,c.childLanes=0,c.pendingProps=h,g=c.lastEffect,null!==g?(b.firstEffect=c.firstEffect,b.lastEffect=g,g.nextEffect=null):b.firstEffect=b.lastEffect=null):c=Tg(g,h);null!==a?d=Tg(a,d):(d=Xg(d,f,e,null),d.flags|=2);d.return=b;c.return=b;c.sibling=d;b.child=c;return d}function yi(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);sg(a.return,b)}
function zi(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.renderingStartTime=0,g.last=d,g.tail=c,g.tailMode=e,g.lastEffect=f)}
function Ai(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;fi(a,b,d.children,c);d=P.current;if(0!==(d&2))d=d&1|2,b.flags|=64;else{if(null!==a&&0!==(a.flags&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&yi(a,c);else if(19===a.tag)yi(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(P,d);if(0===(b.mode&2))b.memoizedState=
null;else switch(e){case "forwards":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===ih(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);zi(b,!1,e,c,f,b.lastEffect);break;case "backwards":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===ih(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}zi(b,!0,c,null,f,b.lastEffect);break;case "together":zi(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}
function hi(a,b,c){null!==a&&(b.dependencies=a.dependencies);Dg|=b.lanes;if(0!==(c&b.childLanes)){if(null!==a&&b.child!==a.child)throw Error(y(153));if(null!==b.child){a=b.child;c=Tg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Tg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}return null}var Bi,Ci,Di,Ei;
Bi=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Ci=function(){};
Di=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;dh(ah.current);var f=null;switch(c){case "input":e=Ya(a,e);d=Ya(a,d);f=[];break;case "option":e=eb(a,e);d=eb(a,d);f=[];break;case "select":e=m({},e,{value:void 0});d=m({},d,{value:void 0});f=[];break;case "textarea":e=gb(a,e);d=gb(a,d);f=[];break;default:"function"!==typeof e.onClick&&"function"===typeof d.onClick&&(a.onclick=jf)}vb(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if("style"===
l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&(c||(c={}),c[g]="")}else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(ca.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if("style"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]="");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||
(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,c)),c=k;else"dangerouslySetInnerHTML"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):"children"===l?"string"!==typeof k&&"number"!==typeof k||(f=f||[]).push(l,""+k):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(ca.hasOwnProperty(l)?(null!=k&&"onScroll"===l&&G("scroll",a),f||h===k||(f=[])):"object"===typeof k&&null!==k&&k.$$typeof===Ga?k.toString():(f=f||[]).push(l,k))}c&&(f=f||[]).push("style",
c);var l=f;if(b.updateQueue=l)b.flags|=4}};Ei=function(a,b,c,d){c!==d&&(b.flags|=4)};function Fi(a,b){if(!lh)switch(a.tailMode){case "hidden":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case "collapsed":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}
function Gi(a,b,c){var d=b.pendingProps;switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return Ff(b.type)&&Gf(),null;case 3:fh();H(N);H(M);uh();d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)rh(b)?b.flags|=4:d.hydrate||(b.flags|=256);Ci(b);return null;case 5:hh(b);var e=dh(ch.current);c=b.type;if(null!==a&&null!=b.stateNode)Di(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=128);else{if(!d){if(null===
b.stateNode)throw Error(y(166));return null}a=dh(ah.current);if(rh(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[wf]=b;d[xf]=f;switch(c){case "dialog":G("cancel",d);G("close",d);break;case "iframe":case "object":case "embed":G("load",d);break;case "video":case "audio":for(a=0;a<Xe.length;a++)G(Xe[a],d);break;case "source":G("error",d);break;case "img":case "image":case "link":G("error",d);G("load",d);break;case "details":G("toggle",d);break;case "input":Za(d,f);G("invalid",d);break;case "select":d._wrapperState=
{wasMultiple:!!f.multiple};G("invalid",d);break;case "textarea":hb(d,f),G("invalid",d)}vb(c,f);a=null;for(var g in f)f.hasOwnProperty(g)&&(e=f[g],"children"===g?"string"===typeof e?d.textContent!==e&&(a=["children",e]):"number"===typeof e&&d.textContent!==""+e&&(a=["children",""+e]):ca.hasOwnProperty(g)&&null!=e&&"onScroll"===g&&G("scroll",d));switch(c){case "input":Va(d);cb(d,f,!0);break;case "textarea":Va(d);jb(d);break;case "select":case "option":break;default:"function"===typeof f.onClick&&(d.onclick=
jf)}d=a;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;a===kb.html&&(a=lb(c));a===kb.html?"script"===c?(a=g.createElement("div"),a.innerHTML="<script>\x3c/script>",a=a.removeChild(a.firstChild)):"string"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),"select"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[wf]=b;a[xf]=d;Bi(a,b,!1,!1);b.stateNode=a;g=wb(c,d);switch(c){case "dialog":G("cancel",a);G("close",a);
e=d;break;case "iframe":case "object":case "embed":G("load",a);e=d;break;case "video":case "audio":for(e=0;e<Xe.length;e++)G(Xe[e],a);e=d;break;case "source":G("error",a);e=d;break;case "img":case "image":case "link":G("error",a);G("load",a);e=d;break;case "details":G("toggle",a);e=d;break;case "input":Za(a,d);e=Ya(a,d);G("invalid",a);break;case "option":e=eb(a,d);break;case "select":a._wrapperState={wasMultiple:!!d.multiple};e=m({},d,{value:void 0});G("invalid",a);break;case "textarea":hb(a,d);e=
gb(a,d);G("invalid",a);break;default:e=d}vb(c,e);var h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];"style"===f?tb(a,k):"dangerouslySetInnerHTML"===f?(k=k?k.__html:void 0,null!=k&&ob(a,k)):"children"===f?"string"===typeof k?("textarea"!==c||""!==k)&&pb(a,k):"number"===typeof k&&pb(a,""+k):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(ca.hasOwnProperty(f)?null!=k&&"onScroll"===f&&G("scroll",a):null!=k&&qa(a,f,k,g))}switch(c){case "input":Va(a);cb(a,d,!1);
break;case "textarea":Va(a);jb(a);break;case "option":null!=d.value&&a.setAttribute("value",""+Sa(d.value));break;case "select":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,!0);break;default:"function"===typeof e.onClick&&(a.onclick=jf)}mf(c,d)&&(b.flags|=4)}null!==b.ref&&(b.flags|=128)}return null;case 6:if(a&&null!=b.stateNode)Ei(a,b,a.memoizedProps,d);else{if("string"!==typeof d&&null===b.stateNode)throw Error(y(166));
c=dh(ch.current);dh(ah.current);rh(b)?(d=b.stateNode,c=b.memoizedProps,d[wf]=b,d.nodeValue!==c&&(b.flags|=4)):(d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[wf]=b,b.stateNode=d)}return null;case 13:H(P);d=b.memoizedState;if(0!==(b.flags&64))return b.lanes=c,b;d=null!==d;c=!1;null===a?void 0!==b.memoizedProps.fallback&&rh(b):c=null!==a.memoizedState;if(d&&!c&&0!==(b.mode&2))if(null===a&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(P.current&1))0===V&&(V=3);else{if(0===V||3===V)V=
4;null===U||0===(Dg&134217727)&&0===(Hi&134217727)||Ii(U,W)}if(d||c)b.flags|=4;return null;case 4:return fh(),Ci(b),null===a&&cf(b.stateNode.containerInfo),null;case 10:return rg(b),null;case 17:return Ff(b.type)&&Gf(),null;case 19:H(P);d=b.memoizedState;if(null===d)return null;f=0!==(b.flags&64);g=d.rendering;if(null===g)if(f)Fi(d,!1);else{if(0!==V||null!==a&&0!==(a.flags&64))for(a=b.child;null!==a;){g=ih(a);if(null!==g){b.flags|=64;Fi(d,!1);f=g.updateQueue;null!==f&&(b.updateQueue=f,b.flags|=4);
null===d.lastEffect&&(b.firstEffect=null);b.lastEffect=d.lastEffect;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=2,f.nextEffect=null,f.firstEffect=null,f.lastEffect=null,g=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,
f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;I(P,P.current&1|2);return b.child}a=a.sibling}null!==d.tail&&O()>Ji&&(b.flags|=64,f=!0,Fi(d,!1),b.lanes=33554432)}else{if(!f)if(a=ih(g),null!==a){if(b.flags|=64,f=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Fi(d,!0),null===d.tail&&"hidden"===d.tailMode&&!g.alternate&&!lh)return b=b.lastEffect=d.lastEffect,null!==b&&(b.nextEffect=null),null}else 2*O()-d.renderingStartTime>Ji&&1073741824!==c&&(b.flags|=
64,f=!0,Fi(d,!1),b.lanes=33554432);d.isBackwards?(g.sibling=b.child,b.child=g):(c=d.last,null!==c?c.sibling=g:b.child=g,d.last=g)}return null!==d.tail?(c=d.tail,d.rendering=c,d.tail=c.sibling,d.lastEffect=b.lastEffect,d.renderingStartTime=O(),c.sibling=null,b=P.current,I(P,f?b&1|2:b&1),c):null;case 23:case 24:return Ki(),null!==a&&null!==a.memoizedState!==(null!==b.memoizedState)&&"unstable-defer-without-hiding"!==d.mode&&(b.flags|=4),null}throw Error(y(156,b.tag));}
function Li(a){switch(a.tag){case 1:Ff(a.type)&&Gf();var b=a.flags;return b&4096?(a.flags=b&-4097|64,a):null;case 3:fh();H(N);H(M);uh();b=a.flags;if(0!==(b&64))throw Error(y(285));a.flags=b&-4097|64;return a;case 5:return hh(a),null;case 13:return H(P),b=a.flags,b&4096?(a.flags=b&-4097|64,a):null;case 19:return H(P),null;case 4:return fh(),null;case 10:return rg(a),null;case 23:case 24:return Ki(),null;default:return null}}
function Mi(a,b){try{var c="",d=b;do c+=Qa(d),d=d.return;while(d);var e=c}catch(f){e="\nError generating stack: "+f.message+"\n"+f.stack}return{value:a,source:b,stack:e}}function Ni(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Oi="function"===typeof WeakMap?WeakMap:Map;function Pi(a,b,c){c=zg(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Qi||(Qi=!0,Ri=d);Ni(a,b)};return c}
function Si(a,b,c){c=zg(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if("function"===typeof d){var e=b.value;c.payload=function(){Ni(a,b);return d(e)}}var f=a.stateNode;null!==f&&"function"===typeof f.componentDidCatch&&(c.callback=function(){"function"!==typeof d&&(null===Ti?Ti=new Set([this]):Ti.add(this),Ni(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:""})});return c}var Ui="function"===typeof WeakSet?WeakSet:Set;
function Vi(a){var b=a.ref;if(null!==b)if("function"===typeof b)try{b(null)}catch(c){Wi(a,c)}else b.current=null}function Xi(a,b){switch(b.tag){case 0:case 11:case 15:case 22:return;case 1:if(b.flags&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:lg(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}return;case 3:b.flags&256&&qf(b.stateNode.containerInfo);return;case 5:case 6:case 4:case 17:return}throw Error(y(163));}
function Yi(a,b,c){switch(c.tag){case 0:case 11:case 15:case 22:b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{if(3===(a.tag&3)){var d=a.create;a.destroy=d()}a=a.next}while(a!==b)}b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{var e=a;d=e.next;e=e.tag;0!==(e&4)&&0!==(e&1)&&(Zi(c,a),$i(c,a));a=d}while(a!==b)}return;case 1:a=c.stateNode;c.flags&4&&(null===b?a.componentDidMount():(d=c.elementType===c.type?b.memoizedProps:lg(c.type,b.memoizedProps),a.componentDidUpdate(d,
b.memoizedState,a.__reactInternalSnapshotBeforeUpdate)));b=c.updateQueue;null!==b&&Eg(c,b,a);return;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=c.child.stateNode;break;case 1:a=c.child.stateNode}Eg(c,b,a)}return;case 5:a=c.stateNode;null===b&&c.flags&4&&mf(c.type,c.memoizedProps)&&a.focus();return;case 6:return;case 4:return;case 12:return;case 13:null===c.memoizedState&&(c=c.alternate,null!==c&&(c=c.memoizedState,null!==c&&(c=c.dehydrated,null!==c&&Cc(c))));
return;case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(y(163));}
function aj(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d=d.style,"function"===typeof d.setProperty?d.setProperty("display","none","important"):d.display="none";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty("display")?e.display:null;d.style.display=sb("display",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?"":c.memoizedProps;else if((23!==c.tag&&24!==c.tag||null===c.memoizedState||c===a)&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===
a)break;for(;null===c.sibling;){if(null===c.return||c.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}
function bj(a,b){if(Mf&&"function"===typeof Mf.onCommitFiberUnmount)try{Mf.onCommitFiberUnmount(Lf,b)}catch(f){}switch(b.tag){case 0:case 11:case 14:case 15:case 22:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var c=a=a.next;do{var d=c,e=d.destroy;d=d.tag;if(void 0!==e)if(0!==(d&4))Zi(b,c);else{d=b;try{e()}catch(f){Wi(d,f)}}c=c.next}while(c!==a)}break;case 1:Vi(b);a=b.stateNode;if("function"===typeof a.componentWillUnmount)try{a.props=b.memoizedProps,a.state=b.memoizedState,a.componentWillUnmount()}catch(f){Wi(b,
f)}break;case 5:Vi(b);break;case 4:cj(a,b)}}function dj(a){a.alternate=null;a.child=null;a.dependencies=null;a.firstEffect=null;a.lastEffect=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.return=null;a.updateQueue=null}function ej(a){return 5===a.tag||3===a.tag||4===a.tag}
function fj(a){a:{for(var b=a.return;null!==b;){if(ej(b))break a;b=b.return}throw Error(y(160));}var c=b;b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(y(161));}c.flags&16&&(pb(b,""),c.flags&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||ej(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.flags&2)continue b;if(null===
c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.flags&2)){c=c.stateNode;break a}}d?gj(a,c,b):hj(a,c,b)}
function gj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=jf));else if(4!==d&&(a=a.child,null!==a))for(gj(a,b,c),a=a.sibling;null!==a;)gj(a,b,c),a=a.sibling}
function hj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(hj(a,b,c),a=a.sibling;null!==a;)hj(a,b,c),a=a.sibling}
function cj(a,b){for(var c=b,d=!1,e,f;;){if(!d){d=c.return;a:for(;;){if(null===d)throw Error(y(160));e=d.stateNode;switch(d.tag){case 5:f=!1;break a;case 3:e=e.containerInfo;f=!0;break a;case 4:e=e.containerInfo;f=!0;break a}d=d.return}d=!0}if(5===c.tag||6===c.tag){a:for(var g=a,h=c,k=h;;)if(bj(g,k),null!==k.child&&4!==k.tag)k.child.return=k,k=k.child;else{if(k===h)break a;for(;null===k.sibling;){if(null===k.return||k.return===h)break a;k=k.return}k.sibling.return=k.return;k=k.sibling}f?(g=e,h=c.stateNode,
8===g.nodeType?g.parentNode.removeChild(h):g.removeChild(h)):e.removeChild(c.stateNode)}else if(4===c.tag){if(null!==c.child){e=c.stateNode.containerInfo;f=!0;c.child.return=c;c=c.child;continue}}else if(bj(a,c),null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return;4===c.tag&&(d=!1)}c.sibling.return=c.return;c=c.sibling}}
function ij(a,b){switch(b.tag){case 0:case 11:case 14:case 15:case 22:var c=b.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do 3===(d.tag&3)&&(a=d.destroy,d.destroy=void 0,void 0!==a&&a()),d=d.next;while(d!==c)}return;case 1:return;case 5:c=b.stateNode;if(null!=c){d=b.memoizedProps;var e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[xf]=d;"input"===a&&"radio"===d.type&&null!=d.name&&$a(c,d);wb(a,e);b=wb(a,d);for(e=0;e<f.length;e+=
2){var g=f[e],h=f[e+1];"style"===g?tb(c,h):"dangerouslySetInnerHTML"===g?ob(c,h):"children"===g?pb(c,h):qa(c,g,h,b)}switch(a){case "input":ab(c,d);break;case "textarea":ib(c,d);break;case "select":a=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,f=d.value,null!=f?fb(c,!!d.multiple,f,!1):a!==!!d.multiple&&(null!=d.defaultValue?fb(c,!!d.multiple,d.defaultValue,!0):fb(c,!!d.multiple,d.multiple?[]:"",!1))}}}return;case 6:if(null===b.stateNode)throw Error(y(162));b.stateNode.nodeValue=
b.memoizedProps;return;case 3:c=b.stateNode;c.hydrate&&(c.hydrate=!1,Cc(c.containerInfo));return;case 12:return;case 13:null!==b.memoizedState&&(jj=O(),aj(b.child,!0));kj(b);return;case 19:kj(b);return;case 17:return;case 23:case 24:aj(b,null!==b.memoizedState);return}throw Error(y(163));}function kj(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Ui);b.forEach(function(b){var d=lj.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}
function mj(a,b){return null!==a&&(a=a.memoizedState,null===a||null!==a.dehydrated)?(b=b.memoizedState,null!==b&&null===b.dehydrated):!1}var nj=Math.ceil,oj=ra.ReactCurrentDispatcher,pj=ra.ReactCurrentOwner,X=0,U=null,Y=null,W=0,qj=0,rj=Bf(0),V=0,sj=null,tj=0,Dg=0,Hi=0,uj=0,vj=null,jj=0,Ji=Infinity;function wj(){Ji=O()+500}var Z=null,Qi=!1,Ri=null,Ti=null,xj=!1,yj=null,zj=90,Aj=[],Bj=[],Cj=null,Dj=0,Ej=null,Fj=-1,Gj=0,Hj=0,Ij=null,Jj=!1;function Hg(){return 0!==(X&48)?O():-1!==Fj?Fj:Fj=O()}
function Ig(a){a=a.mode;if(0===(a&2))return 1;if(0===(a&4))return 99===eg()?1:2;0===Gj&&(Gj=tj);if(0!==kg.transition){0!==Hj&&(Hj=null!==vj?vj.pendingLanes:0);a=Gj;var b=4186112&~Hj;b&=-b;0===b&&(a=4186112&~a,b=a&-a,0===b&&(b=8192));return b}a=eg();0!==(X&4)&&98===a?a=Xc(12,Gj):(a=Sc(a),a=Xc(a,Gj));return a}
function Jg(a,b,c){if(50<Dj)throw Dj=0,Ej=null,Error(y(185));a=Kj(a,b);if(null===a)return null;$c(a,b,c);a===U&&(Hi|=b,4===V&&Ii(a,W));var d=eg();1===b?0!==(X&8)&&0===(X&48)?Lj(a):(Mj(a,c),0===X&&(wj(),ig())):(0===(X&4)||98!==d&&99!==d||(null===Cj?Cj=new Set([a]):Cj.add(a)),Mj(a,c));vj=a}function Kj(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}
function Mj(a,b){for(var c=a.callbackNode,d=a.suspendedLanes,e=a.pingedLanes,f=a.expirationTimes,g=a.pendingLanes;0<g;){var h=31-Vc(g),k=1<<h,l=f[h];if(-1===l){if(0===(k&d)||0!==(k&e)){l=b;Rc(k);var n=F;f[h]=10<=n?l+250:6<=n?l+5E3:-1}}else l<=b&&(a.expiredLanes|=k);g&=~k}d=Uc(a,a===U?W:0);b=F;if(0===d)null!==c&&(c!==Zf&&Pf(c),a.callbackNode=null,a.callbackPriority=0);else{if(null!==c){if(a.callbackPriority===b)return;c!==Zf&&Pf(c)}15===b?(c=Lj.bind(null,a),null===ag?(ag=[c],bg=Of(Uf,jg)):ag.push(c),
c=Zf):14===b?c=hg(99,Lj.bind(null,a)):(c=Tc(b),c=hg(c,Nj.bind(null,a)));a.callbackPriority=b;a.callbackNode=c}}
function Nj(a){Fj=-1;Hj=Gj=0;if(0!==(X&48))throw Error(y(327));var b=a.callbackNode;if(Oj()&&a.callbackNode!==b)return null;var c=Uc(a,a===U?W:0);if(0===c)return null;var d=c;var e=X;X|=16;var f=Pj();if(U!==a||W!==d)wj(),Qj(a,d);do try{Rj();break}catch(h){Sj(a,h)}while(1);qg();oj.current=f;X=e;null!==Y?d=0:(U=null,W=0,d=V);if(0!==(tj&Hi))Qj(a,0);else if(0!==d){2===d&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),c=Wc(a),0!==c&&(d=Tj(a,c)));if(1===d)throw b=sj,Qj(a,0),Ii(a,c),Mj(a,O()),b;a.finishedWork=
a.current.alternate;a.finishedLanes=c;switch(d){case 0:case 1:throw Error(y(345));case 2:Uj(a);break;case 3:Ii(a,c);if((c&62914560)===c&&(d=jj+500-O(),10<d)){if(0!==Uc(a,0))break;e=a.suspendedLanes;if((e&c)!==c){Hg();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=of(Uj.bind(null,a),d);break}Uj(a);break;case 4:Ii(a,c);if((c&4186112)===c)break;d=a.eventTimes;for(e=-1;0<c;){var g=31-Vc(c);f=1<<g;g=d[g];g>e&&(e=g);c&=~f}c=e;c=O()-c;c=(120>c?120:480>c?480:1080>c?1080:1920>c?1920:3E3>c?3E3:4320>
c?4320:1960*nj(c/1960))-c;if(10<c){a.timeoutHandle=of(Uj.bind(null,a),c);break}Uj(a);break;case 5:Uj(a);break;default:throw Error(y(329));}}Mj(a,O());return a.callbackNode===b?Nj.bind(null,a):null}function Ii(a,b){b&=~uj;b&=~Hi;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-Vc(b),d=1<<c;a[c]=-1;b&=~d}}
function Lj(a){if(0!==(X&48))throw Error(y(327));Oj();if(a===U&&0!==(a.expiredLanes&W)){var b=W;var c=Tj(a,b);0!==(tj&Hi)&&(b=Uc(a,b),c=Tj(a,b))}else b=Uc(a,0),c=Tj(a,b);0!==a.tag&&2===c&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),b=Wc(a),0!==b&&(c=Tj(a,b)));if(1===c)throw c=sj,Qj(a,0),Ii(a,b),Mj(a,O()),c;a.finishedWork=a.current.alternate;a.finishedLanes=b;Uj(a);Mj(a,O());return null}
function Vj(){if(null!==Cj){var a=Cj;Cj=null;a.forEach(function(a){a.expiredLanes|=24&a.pendingLanes;Mj(a,O())})}ig()}function Wj(a,b){var c=X;X|=1;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function Xj(a,b){var c=X;X&=-2;X|=8;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function ni(a,b){I(rj,qj);qj|=b;tj|=b}function Ki(){qj=rj.current;H(rj)}
function Qj(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,pf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&Gf();break;case 3:fh();H(N);H(M);uh();break;case 5:hh(d);break;case 4:fh();break;case 13:H(P);break;case 19:H(P);break;case 10:rg(d);break;case 23:case 24:Ki()}c=c.return}U=a;Y=Tg(a.current,null);W=qj=tj=b;V=0;sj=null;uj=Hi=Dg=0}
function Sj(a,b){do{var c=Y;try{qg();vh.current=Gh;if(yh){for(var d=R.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}yh=!1}xh=0;T=S=R=null;zh=!1;pj.current=null;if(null===c||null===c.return){V=1;sj=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=W;h.flags|=2048;h.firstEffect=h.lastEffect=null;if(null!==k&&"object"===typeof k&&"function"===typeof k.then){var l=k;if(0===(h.mode&2)){var n=h.alternate;n?(h.updateQueue=n.updateQueue,h.memoizedState=n.memoizedState,h.lanes=n.lanes):
(h.updateQueue=null,h.memoizedState=null)}var A=0!==(P.current&1),p=g;do{var C;if(C=13===p.tag){var x=p.memoizedState;if(null!==x)C=null!==x.dehydrated?!0:!1;else{var w=p.memoizedProps;C=void 0===w.fallback?!1:!0!==w.unstable_avoidThisFallback?!0:A?!1:!0}}if(C){var z=p.updateQueue;if(null===z){var u=new Set;u.add(l);p.updateQueue=u}else z.add(l);if(0===(p.mode&2)){p.flags|=64;h.flags|=16384;h.flags&=-2981;if(1===h.tag)if(null===h.alternate)h.tag=17;else{var t=zg(-1,1);t.tag=2;Ag(h,t)}h.lanes|=1;break a}k=
void 0;h=b;var q=f.pingCache;null===q?(q=f.pingCache=new Oi,k=new Set,q.set(l,k)):(k=q.get(l),void 0===k&&(k=new Set,q.set(l,k)));if(!k.has(h)){k.add(h);var v=Yj.bind(null,f,l,h);l.then(v,v)}p.flags|=4096;p.lanes=b;break a}p=p.return}while(null!==p);k=Error((Ra(h.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==V&&(V=2);k=Mi(k,h);p=
g;do{switch(p.tag){case 3:f=k;p.flags|=4096;b&=-b;p.lanes|=b;var J=Pi(p,f,b);Bg(p,J);break a;case 1:f=k;var K=p.type,Q=p.stateNode;if(0===(p.flags&64)&&("function"===typeof K.getDerivedStateFromError||null!==Q&&"function"===typeof Q.componentDidCatch&&(null===Ti||!Ti.has(Q)))){p.flags|=4096;b&=-b;p.lanes|=b;var L=Si(p,f,b);Bg(p,L);break a}}p=p.return}while(null!==p)}Zj(c)}catch(va){b=va;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}
function Pj(){var a=oj.current;oj.current=Gh;return null===a?Gh:a}function Tj(a,b){var c=X;X|=16;var d=Pj();U===a&&W===b||Qj(a,b);do try{ak();break}catch(e){Sj(a,e)}while(1);qg();X=c;oj.current=d;if(null!==Y)throw Error(y(261));U=null;W=0;return V}function ak(){for(;null!==Y;)bk(Y)}function Rj(){for(;null!==Y&&!Qf();)bk(Y)}function bk(a){var b=ck(a.alternate,a,qj);a.memoizedProps=a.pendingProps;null===b?Zj(a):Y=b;pj.current=null}
function Zj(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&2048)){c=Gi(c,b,qj);if(null!==c){Y=c;return}c=b;if(24!==c.tag&&23!==c.tag||null===c.memoizedState||0!==(qj&1073741824)||0===(c.mode&4)){for(var d=0,e=c.child;null!==e;)d|=e.lanes|e.childLanes,e=e.sibling;c.childLanes=d}null!==a&&0===(a.flags&2048)&&(null===a.firstEffect&&(a.firstEffect=b.firstEffect),null!==b.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=b.firstEffect),a.lastEffect=b.lastEffect),1<b.flags&&(null!==
a.lastEffect?a.lastEffect.nextEffect=b:a.firstEffect=b,a.lastEffect=b))}else{c=Li(b);if(null!==c){c.flags&=2047;Y=c;return}null!==a&&(a.firstEffect=a.lastEffect=null,a.flags|=2048)}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===V&&(V=5)}function Uj(a){var b=eg();gg(99,dk.bind(null,a,b));return null}
function dk(a,b){do Oj();while(null!==yj);if(0!==(X&48))throw Error(y(327));var c=a.finishedWork;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(y(177));a.callbackNode=null;var d=c.lanes|c.childLanes,e=d,f=a.pendingLanes&~e;a.pendingLanes=e;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=e;a.mutableReadLanes&=e;a.entangledLanes&=e;e=a.entanglements;for(var g=a.eventTimes,h=a.expirationTimes;0<f;){var k=31-Vc(f),l=1<<k;e[k]=0;g[k]=-1;h[k]=-1;f&=~l}null!==
Cj&&0===(d&24)&&Cj.has(a)&&Cj.delete(a);a===U&&(Y=U=null,W=0);1<c.flags?null!==c.lastEffect?(c.lastEffect.nextEffect=c,d=c.firstEffect):d=c:d=c.firstEffect;if(null!==d){e=X;X|=32;pj.current=null;kf=fd;g=Ne();if(Oe(g)){if("selectionStart"in g)h={start:g.selectionStart,end:g.selectionEnd};else a:if(h=(h=g.ownerDocument)&&h.defaultView||window,(l=h.getSelection&&h.getSelection())&&0!==l.rangeCount){h=l.anchorNode;f=l.anchorOffset;k=l.focusNode;l=l.focusOffset;try{h.nodeType,k.nodeType}catch(va){h=null;
break a}var n=0,A=-1,p=-1,C=0,x=0,w=g,z=null;b:for(;;){for(var u;;){w!==h||0!==f&&3!==w.nodeType||(A=n+f);w!==k||0!==l&&3!==w.nodeType||(p=n+l);3===w.nodeType&&(n+=w.nodeValue.length);if(null===(u=w.firstChild))break;z=w;w=u}for(;;){if(w===g)break b;z===h&&++C===f&&(A=n);z===k&&++x===l&&(p=n);if(null!==(u=w.nextSibling))break;w=z;z=w.parentNode}w=u}h=-1===A||-1===p?null:{start:A,end:p}}else h=null;h=h||{start:0,end:0}}else h=null;lf={focusedElem:g,selectionRange:h};fd=!1;Ij=null;Jj=!1;Z=d;do try{ek()}catch(va){if(null===
Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Ij=null;Z=d;do try{for(g=a;null!==Z;){var t=Z.flags;t&16&&pb(Z.stateNode,"");if(t&128){var q=Z.alternate;if(null!==q){var v=q.ref;null!==v&&("function"===typeof v?v(null):v.current=null)}}switch(t&1038){case 2:fj(Z);Z.flags&=-3;break;case 6:fj(Z);Z.flags&=-3;ij(Z.alternate,Z);break;case 1024:Z.flags&=-1025;break;case 1028:Z.flags&=-1025;ij(Z.alternate,Z);break;case 4:ij(Z.alternate,Z);break;case 8:h=Z;cj(g,h);var J=h.alternate;dj(h);null!==
J&&dj(J)}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);v=lf;q=Ne();t=v.focusedElem;g=v.selectionRange;if(q!==t&&t&&t.ownerDocument&&Me(t.ownerDocument.documentElement,t)){null!==g&&Oe(t)&&(q=g.start,v=g.end,void 0===v&&(v=q),"selectionStart"in t?(t.selectionStart=q,t.selectionEnd=Math.min(v,t.value.length)):(v=(q=t.ownerDocument||document)&&q.defaultView||window,v.getSelection&&(v=v.getSelection(),h=t.textContent.length,J=Math.min(g.start,h),g=void 0===
g.end?J:Math.min(g.end,h),!v.extend&&J>g&&(h=g,g=J,J=h),h=Le(t,J),f=Le(t,g),h&&f&&(1!==v.rangeCount||v.anchorNode!==h.node||v.anchorOffset!==h.offset||v.focusNode!==f.node||v.focusOffset!==f.offset)&&(q=q.createRange(),q.setStart(h.node,h.offset),v.removeAllRanges(),J>g?(v.addRange(q),v.extend(f.node,f.offset)):(q.setEnd(f.node,f.offset),v.addRange(q))))));q=[];for(v=t;v=v.parentNode;)1===v.nodeType&&q.push({element:v,left:v.scrollLeft,top:v.scrollTop});"function"===typeof t.focus&&t.focus();for(t=
0;t<q.length;t++)v=q[t],v.element.scrollLeft=v.left,v.element.scrollTop=v.top}fd=!!kf;lf=kf=null;a.current=c;Z=d;do try{for(t=a;null!==Z;){var K=Z.flags;K&36&&Yi(t,Z.alternate,Z);if(K&128){q=void 0;var Q=Z.ref;if(null!==Q){var L=Z.stateNode;switch(Z.tag){case 5:q=L;break;default:q=L}"function"===typeof Q?Q(q):Q.current=q}}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Z=null;$f();X=e}else a.current=c;if(xj)xj=!1,yj=a,zj=b;else for(Z=d;null!==Z;)b=
Z.nextEffect,Z.nextEffect=null,Z.flags&8&&(K=Z,K.sibling=null,K.stateNode=null),Z=b;d=a.pendingLanes;0===d&&(Ti=null);1===d?a===Ej?Dj++:(Dj=0,Ej=a):Dj=0;c=c.stateNode;if(Mf&&"function"===typeof Mf.onCommitFiberRoot)try{Mf.onCommitFiberRoot(Lf,c,void 0,64===(c.current.flags&64))}catch(va){}Mj(a,O());if(Qi)throw Qi=!1,a=Ri,Ri=null,a;if(0!==(X&8))return null;ig();return null}
function ek(){for(;null!==Z;){var a=Z.alternate;Jj||null===Ij||(0!==(Z.flags&8)?dc(Z,Ij)&&(Jj=!0):13===Z.tag&&mj(a,Z)&&dc(Z,Ij)&&(Jj=!0));var b=Z.flags;0!==(b&256)&&Xi(a,Z);0===(b&512)||xj||(xj=!0,hg(97,function(){Oj();return null}));Z=Z.nextEffect}}function Oj(){if(90!==zj){var a=97<zj?97:zj;zj=90;return gg(a,fk)}return!1}function $i(a,b){Aj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}function Zi(a,b){Bj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}
function fk(){if(null===yj)return!1;var a=yj;yj=null;if(0!==(X&48))throw Error(y(331));var b=X;X|=32;var c=Bj;Bj=[];for(var d=0;d<c.length;d+=2){var e=c[d],f=c[d+1],g=e.destroy;e.destroy=void 0;if("function"===typeof g)try{g()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}c=Aj;Aj=[];for(d=0;d<c.length;d+=2){e=c[d];f=c[d+1];try{var h=e.create;e.destroy=h()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}for(h=a.current.firstEffect;null!==h;)a=h.nextEffect,h.nextEffect=null,h.flags&8&&(h.sibling=
null,h.stateNode=null),h=a;X=b;ig();return!0}function gk(a,b,c){b=Mi(c,b);b=Pi(a,b,1);Ag(a,b);b=Hg();a=Kj(a,1);null!==a&&($c(a,1,b),Mj(a,b))}
function Wi(a,b){if(3===a.tag)gk(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){gk(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if("function"===typeof c.type.getDerivedStateFromError||"function"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d))){a=Mi(b,a);var e=Si(c,a,1);Ag(c,e);e=Hg();c=Kj(c,1);if(null!==c)$c(c,1,e),Mj(c,e);else if("function"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d)))try{d.componentDidCatch(b,a)}catch(f){}break}}c=c.return}}
function Yj(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=Hg();a.pingedLanes|=a.suspendedLanes&c;U===a&&(W&c)===c&&(4===V||3===V&&(W&62914560)===W&&500>O()-jj?Qj(a,0):uj|=c);Mj(a,b)}function lj(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=a.mode,0===(b&2)?b=1:0===(b&4)?b=99===eg()?1:2:(0===Gj&&(Gj=tj),b=Yc(62914560&~Gj),0===b&&(b=4194304)));c=Hg();a=Kj(a,b);null!==a&&($c(a,b,c),Mj(a,c))}var ck;
ck=function(a,b,c){var d=b.lanes;if(null!==a)if(a.memoizedProps!==b.pendingProps||N.current)ug=!0;else if(0!==(c&d))ug=0!==(a.flags&16384)?!0:!1;else{ug=!1;switch(b.tag){case 3:ri(b);sh();break;case 5:gh(b);break;case 1:Ff(b.type)&&Jf(b);break;case 4:eh(b,b.stateNode.containerInfo);break;case 10:d=b.memoizedProps.value;var e=b.type._context;I(mg,e._currentValue);e._currentValue=d;break;case 13:if(null!==b.memoizedState){if(0!==(c&b.child.childLanes))return ti(a,b,c);I(P,P.current&1);b=hi(a,b,c);return null!==
b?b.sibling:null}I(P,P.current&1);break;case 19:d=0!==(c&b.childLanes);if(0!==(a.flags&64)){if(d)return Ai(a,b,c);b.flags|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);I(P,P.current);if(d)break;else return null;case 23:case 24:return b.lanes=0,mi(a,b,c)}return hi(a,b,c)}else ug=!1;b.lanes=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);a=b.pendingProps;e=Ef(b,M.current);tg(b,c);e=Ch(null,b,d,a,e,c);b.flags|=1;if("object"===
typeof e&&null!==e&&"function"===typeof e.render&&void 0===e.$$typeof){b.tag=1;b.memoizedState=null;b.updateQueue=null;if(Ff(d)){var f=!0;Jf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;xg(b);var g=d.getDerivedStateFromProps;"function"===typeof g&&Gg(b,d,g,a);e.updater=Kg;b.stateNode=e;e._reactInternals=b;Og(b,d,a,c);b=qi(null,b,d,!0,f,c)}else b.tag=0,fi(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;a:{null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);
a=b.pendingProps;f=e._init;e=f(e._payload);b.type=e;f=b.tag=hk(e);a=lg(e,a);switch(f){case 0:b=li(null,b,e,a,c);break a;case 1:b=pi(null,b,e,a,c);break a;case 11:b=gi(null,b,e,a,c);break a;case 14:b=ii(null,b,e,lg(e.type,a),d,c);break a}throw Error(y(306,e,""));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),li(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),pi(a,b,d,e,c);case 3:ri(b);d=b.updateQueue;if(null===a||null===d)throw Error(y(282));
d=b.pendingProps;e=b.memoizedState;e=null!==e?e.element:null;yg(a,b);Cg(b,d,null,c);d=b.memoizedState.element;if(d===e)sh(),b=hi(a,b,c);else{e=b.stateNode;if(f=e.hydrate)kh=rf(b.stateNode.containerInfo.firstChild),jh=b,f=lh=!0;if(f){a=e.mutableSourceEagerHydrationData;if(null!=a)for(e=0;e<a.length;e+=2)f=a[e],f._workInProgressVersionPrimary=a[e+1],th.push(f);c=Zg(b,null,d,c);for(b.child=c;c;)c.flags=c.flags&-3|1024,c=c.sibling}else fi(a,b,d,c),sh();b=b.child}return b;case 5:return gh(b),null===a&&
ph(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,nf(d,e)?g=null:null!==f&&nf(d,f)&&(b.flags|=16),oi(a,b),fi(a,b,g,c),b.child;case 6:return null===a&&ph(b),null;case 13:return ti(a,b,c);case 4:return eh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Yg(b,null,d,c):fi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),gi(a,b,d,e,c);case 7:return fi(a,b,b.pendingProps,c),b.child;case 8:return fi(a,b,b.pendingProps.children,
c),b.child;case 12:return fi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;var h=b.type._context;I(mg,h._currentValue);h._currentValue=f;if(null!==g)if(h=g.value,f=He(h,f)?0:("function"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0,0===f){if(g.children===e.children&&!N.current){b=hi(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==k){g=h.child;for(var l=
k.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=zg(-1,c&-c),l.tag=2,Ag(h,l));h.lanes|=c;l=h.alternate;null!==l&&(l.lanes|=c);sg(h.return,c);k.lanes|=c;break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}fi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,tg(b,c),e=vg(e,
f.unstable_observedBits),d=d(e),b.flags|=1,fi(a,b,d,c),b.child;case 14:return e=b.type,f=lg(e,b.pendingProps),f=lg(e.type,f),ii(a,b,e,f,d,c);case 15:return ki(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),b.tag=1,Ff(d)?(a=!0,Jf(b)):a=!1,tg(b,c),Mg(b,d,e),Og(b,d,e,c),qi(null,b,d,!0,a,c);case 19:return Ai(a,b,c);case 23:return mi(a,b,c);case 24:return mi(a,b,c)}throw Error(y(156,b.tag));
};function ik(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.flags=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childLanes=this.lanes=0;this.alternate=null}function nh(a,b,c,d){return new ik(a,b,c,d)}function ji(a){a=a.prototype;return!(!a||!a.isReactComponent)}
function hk(a){if("function"===typeof a)return ji(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Aa)return 11;if(a===Da)return 14}return 2}
function Tg(a,b){var c=a.alternate;null===c?(c=nh(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};
c.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}
function Vg(a,b,c,d,e,f){var g=2;d=a;if("function"===typeof a)ji(a)&&(g=1);else if("string"===typeof a)g=5;else a:switch(a){case ua:return Xg(c.children,e,f,b);case Ha:g=8;e|=16;break;case wa:g=8;e|=1;break;case xa:return a=nh(12,c,b,e|8),a.elementType=xa,a.type=xa,a.lanes=f,a;case Ba:return a=nh(13,c,b,e),a.type=Ba,a.elementType=Ba,a.lanes=f,a;case Ca:return a=nh(19,c,b,e),a.elementType=Ca,a.lanes=f,a;case Ia:return vi(c,e,f,b);case Ja:return a=nh(24,c,b,e),a.elementType=Ja,a.lanes=f,a;default:if("object"===
typeof a&&null!==a)switch(a.$$typeof){case ya:g=10;break a;case za:g=9;break a;case Aa:g=11;break a;case Da:g=14;break a;case Ea:g=16;d=null;break a;case Fa:g=22;break a}throw Error(y(130,null==a?a:typeof a,""));}b=nh(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Xg(a,b,c,d){a=nh(7,a,d,b);a.lanes=c;return a}function vi(a,b,c,d){a=nh(23,a,d,b);a.elementType=Ia;a.lanes=c;return a}function Ug(a,b,c){a=nh(6,a,null,b);a.lanes=c;return a}
function Wg(a,b,c){b=nh(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}
function jk(a,b,c){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=0;this.eventTimes=Zc(0);this.expirationTimes=Zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=Zc(0);this.mutableSourceEagerHydrationData=null}
function kk(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:ta,key:null==d?null:""+d,children:a,containerInfo:b,implementation:c}}
function lk(a,b,c,d){var e=b.current,f=Hg(),g=Ig(e);a:if(c){c=c._reactInternals;b:{if(Zb(c)!==c||1!==c.tag)throw Error(y(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(Ff(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(y(171));}if(1===c.tag){var k=c.type;if(Ff(k)){c=If(c,k,h);break a}}c=h}else c=Cf;null===b.context?b.context=c:b.pendingContext=c;b=zg(f,g);b.payload={element:a};d=void 0===d?null:d;null!==
d&&(b.callback=d);Ag(e,b);Jg(e,g,f);return g}function mk(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function nk(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function ok(a,b){nk(a,b);(a=a.alternate)&&nk(a,b)}function pk(){return null}
function qk(a,b,c){var d=null!=c&&null!=c.hydrationOptions&&c.hydrationOptions.mutableSources||null;c=new jk(a,b,null!=c&&!0===c.hydrate);b=nh(3,null,null,2===b?7:1===b?3:0);c.current=b;b.stateNode=c;xg(b);a[ff]=c.current;cf(8===a.nodeType?a.parentNode:a);if(d)for(a=0;a<d.length;a++){b=d[a];var e=b._getVersion;e=e(b._source);null==c.mutableSourceEagerHydrationData?c.mutableSourceEagerHydrationData=[b,e]:c.mutableSourceEagerHydrationData.push(b,e)}this._internalRoot=c}
qk.prototype.render=function(a){lk(a,this._internalRoot,null,null)};qk.prototype.unmount=function(){var a=this._internalRoot,b=a.containerInfo;lk(null,a,null,function(){b[ff]=null})};function rk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||" react-mount-point-unstable "!==a.nodeValue))}
function sk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute("data-reactroot")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new qk(a,0,b?{hydrate:!0}:void 0)}
function tk(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if("function"===typeof e){var h=e;e=function(){var a=mk(g);h.call(a)}}lk(b,g,a,e)}else{f=c._reactRootContainer=sk(c,d);g=f._internalRoot;if("function"===typeof e){var k=e;e=function(){var a=mk(g);k.call(a)}}Xj(function(){lk(b,g,a,e)})}return mk(g)}ec=function(a){if(13===a.tag){var b=Hg();Jg(a,4,b);ok(a,4)}};fc=function(a){if(13===a.tag){var b=Hg();Jg(a,67108864,b);ok(a,67108864)}};
gc=function(a){if(13===a.tag){var b=Hg(),c=Ig(a);Jg(a,c,b);ok(a,c)}};hc=function(a,b){return b()};
yb=function(a,b,c){switch(b){case "input":ab(a,c);b=c.name;if("radio"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll("input[name="+JSON.stringify(""+b)+'][type="radio"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(y(90));Wa(d);ab(d,e)}}}break;case "textarea":ib(a,c);break;case "select":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Wj;
Hb=function(a,b,c,d,e){var f=X;X|=4;try{return gg(98,a.bind(null,b,c,d,e))}finally{X=f,0===X&&(wj(),ig())}};Ib=function(){0===(X&49)&&(Vj(),Oj())};Jb=function(a,b){var c=X;X|=2;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}};function uk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!rk(b))throw Error(y(200));return kk(a,b,null,c)}var vk={Events:[Cb,ue,Db,Eb,Fb,Oj,{current:!1}]},wk={findFiberByHostInstance:wc,bundleType:0,version:"17.0.2",rendererPackageName:"react-dom"};
var xk={bundleType:wk.bundleType,version:wk.version,rendererPackageName:wk.rendererPackageName,rendererConfig:wk.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ra.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=cc(a);return null===a?null:a.stateNode},findFiberByHostInstance:wk.findFiberByHostInstance||
pk,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var yk=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!yk.isDisabled&&yk.supportsFiber)try{Lf=yk.inject(xk),Mf=yk}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=vk;exports.createPortal=uk;
exports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if("function"===typeof a.render)throw Error(y(188));throw Error(y(268,Object.keys(a)));}a=cc(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a,b){var c=X;if(0!==(c&48))return a(b);X|=1;try{if(a)return gg(99,a.bind(null,b))}finally{X=c,ig()}};exports.hydrate=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!0,c)};
exports.render=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!rk(a))throw Error(y(40));return a._reactRootContainer?(Xj(function(){tk(null,null,a,!1,function(){a._reactRootContainer=null;a[ff]=null})}),!0):!1};exports.unstable_batchedUpdates=Wj;exports.unstable_createPortal=function(a,b){return uk(a,b,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)};
exports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!rk(c))throw Error(y(200));if(null==a||void 0===a._reactInternals)throw Error(y(38));return tk(a,b,c,!1,d)};exports.version="17.0.2";


/***/ }),
/* 914 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (process.env.NODE_ENV === 'production') {
  module.exports = __webpack_require__(915);
} else {
  module.exports = __webpack_require__(916);
}


/***/ }),
/* 915 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** @license React v0.20.2
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var f,g,h,k;if("object"===typeof performance&&"function"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}
if("undefined"===typeof window||"function"!==typeof MessageChannel){var t=null,u=null,w=function(){if(null!==t)try{var a=exports.unstable_now();t(!0,a);t=null}catch(b){throw setTimeout(w,0),b;}};f=function(a){null!==t?setTimeout(f,0,a):(t=a,setTimeout(w,0))};g=function(a,b){u=setTimeout(a,b)};h=function(){clearTimeout(u)};exports.unstable_shouldYield=function(){return!1};k=exports.unstable_forceFrameRate=function(){}}else{var x=window.setTimeout,y=window.clearTimeout;if("undefined"!==typeof console){var z=
window.cancelAnimationFrame;"function"!==typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");"function"!==typeof z&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var A=!1,B=null,C=-1,D=5,E=0;exports.unstable_shouldYield=function(){return exports.unstable_now()>=
E};k=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):D=0<a?Math.floor(1E3/a):5};var F=new MessageChannel,G=F.port2;F.port1.onmessage=function(){if(null!==B){var a=exports.unstable_now();E=a+D;try{B(!0,a)?G.postMessage(null):(A=!1,B=null)}catch(b){throw G.postMessage(null),b;}}else A=!1};f=function(a){B=a;A||(A=!0,G.postMessage(null))};g=function(a,b){C=
x(function(){a(exports.unstable_now())},b)};h=function(){y(C);C=-1}}function H(a,b){var c=a.length;a.push(b);a:for(;;){var d=c-1>>>1,e=a[d];if(void 0!==e&&0<I(e,b))a[d]=b,a[c]=e,c=d;else break a}}function J(a){a=a[0];return void 0===a?null:a}
function K(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>I(n,c))void 0!==r&&0>I(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>I(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function I(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var L=[],M=[],N=1,O=null,P=3,Q=!1,R=!1,S=!1;
function T(a){for(var b=J(M);null!==b;){if(null===b.callback)K(M);else if(b.startTime<=a)K(M),b.sortIndex=b.expirationTime,H(L,b);else break;b=J(M)}}function U(a){S=!1;T(a);if(!R)if(null!==J(L))R=!0,f(V);else{var b=J(M);null!==b&&g(U,b.startTime-a)}}
function V(a,b){R=!1;S&&(S=!1,h());Q=!0;var c=P;try{T(b);for(O=J(L);null!==O&&(!(O.expirationTime>b)||a&&!exports.unstable_shouldYield());){var d=O.callback;if("function"===typeof d){O.callback=null;P=O.priorityLevel;var e=d(O.expirationTime<=b);b=exports.unstable_now();"function"===typeof e?O.callback=e:O===J(L)&&K(L);T(b)}else K(L);O=J(L)}if(null!==O)var m=!0;else{var n=J(M);null!==n&&g(U,n.startTime-b);m=!1}return m}finally{O=null,P=c,Q=!1}}var W=k;exports.unstable_IdlePriority=5;
exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){R||Q||(R=!0,f(V))};exports.unstable_getCurrentPriorityLevel=function(){return P};exports.unstable_getFirstCallbackNode=function(){return J(L)};
exports.unstable_next=function(a){switch(P){case 1:case 2:case 3:var b=3;break;default:b=P}var c=P;P=b;try{return a()}finally{P=c}};exports.unstable_pauseExecution=function(){};exports.unstable_requestPaint=W;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=P;P=a;try{return b()}finally{P=c}};
exports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();"object"===typeof c&&null!==c?(c=c.delay,c="number"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:N++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,H(M,a),null===J(L)&&a===J(M)&&(S?h():S=!0,g(U,c-d))):(a.sortIndex=e,H(L,a),R||Q||(R=!0,f(V)));return a};
exports.unstable_wrapCallback=function(a){var b=P;return function(){var c=P;P=b;try{return a.apply(this,arguments)}finally{P=c}}};


/***/ }),
/* 916 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** @license React v0.20.2
 * scheduler.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



if (process.env.NODE_ENV !== "production") {
  (function() {
'use strict';

var enableSchedulerDebugging = false;
var enableProfiling = false;

var requestHostCallback;
var requestHostTimeout;
var cancelHostTimeout;
var requestPaint;
var hasPerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';

if (hasPerformanceNow) {
  var localPerformance = performance;

  exports.unstable_now = function () {
    return localPerformance.now();
  };
} else {
  var localDate = Date;
  var initialTime = localDate.now();

  exports.unstable_now = function () {
    return localDate.now() - initialTime;
  };
}

if ( // If Scheduler runs in a non-DOM environment, it falls back to a naive
// implementation using setTimeout.
typeof window === 'undefined' || // Check if MessageChannel is supported, too.
typeof MessageChannel !== 'function') {
  // If this accidentally gets imported in a non-browser environment, e.g. JavaScriptCore,
  // fallback to a naive implementation.
  var _callback = null;
  var _timeoutID = null;

  var _flushCallback = function () {
    if (_callback !== null) {
      try {
        var currentTime = exports.unstable_now();
        var hasRemainingTime = true;

        _callback(hasRemainingTime, currentTime);

        _callback = null;
      } catch (e) {
        setTimeout(_flushCallback, 0);
        throw e;
      }
    }
  };

  requestHostCallback = function (cb) {
    if (_callback !== null) {
      // Protect against re-entrancy.
      setTimeout(requestHostCallback, 0, cb);
    } else {
      _callback = cb;
      setTimeout(_flushCallback, 0);
    }
  };

  requestHostTimeout = function (cb, ms) {
    _timeoutID = setTimeout(cb, ms);
  };

  cancelHostTimeout = function () {
    clearTimeout(_timeoutID);
  };

  exports.unstable_shouldYield = function () {
    return false;
  };

  requestPaint = exports.unstable_forceFrameRate = function () {};
} else {
  // Capture local references to native APIs, in case a polyfill overrides them.
  var _setTimeout = window.setTimeout;
  var _clearTimeout = window.clearTimeout;

  if (typeof console !== 'undefined') {
    // TODO: Scheduler no longer requires these methods to be polyfilled. But
    // maybe we want to continue warning if they don't exist, to preserve the
    // option to rely on it in the future?
    var requestAnimationFrame = window.requestAnimationFrame;
    var cancelAnimationFrame = window.cancelAnimationFrame;

    if (typeof requestAnimationFrame !== 'function') {
      // Using console['error'] to evade Babel and ESLint
      console['error']("This browser doesn't support requestAnimationFrame. " + 'Make sure that you load a ' + 'polyfill in older browsers. https://reactjs.org/link/react-polyfills');
    }

    if (typeof cancelAnimationFrame !== 'function') {
      // Using console['error'] to evade Babel and ESLint
      console['error']("This browser doesn't support cancelAnimationFrame. " + 'Make sure that you load a ' + 'polyfill in older browsers. https://reactjs.org/link/react-polyfills');
    }
  }

  var isMessageLoopRunning = false;
  var scheduledHostCallback = null;
  var taskTimeoutID = -1; // Scheduler periodically yields in case there is other work on the main
  // thread, like user events. By default, it yields multiple times per frame.
  // It does not attempt to align with frame boundaries, since most tasks don't
  // need to be frame aligned; for those that do, use requestAnimationFrame.

  var yieldInterval = 5;
  var deadline = 0; // TODO: Make this configurable

  {
    // `isInputPending` is not available. Since we have no way of knowing if
    // there's pending input, always yield at the end of the frame.
    exports.unstable_shouldYield = function () {
      return exports.unstable_now() >= deadline;
    }; // Since we yield every frame regardless, `requestPaint` has no effect.


    requestPaint = function () {};
  }

  exports.unstable_forceFrameRate = function (fps) {
    if (fps < 0 || fps > 125) {
      // Using console['error'] to evade Babel and ESLint
      console['error']('forceFrameRate takes a positive int between 0 and 125, ' + 'forcing frame rates higher than 125 fps is not supported');
      return;
    }

    if (fps > 0) {
      yieldInterval = Math.floor(1000 / fps);
    } else {
      // reset the framerate
      yieldInterval = 5;
    }
  };

  var performWorkUntilDeadline = function () {
    if (scheduledHostCallback !== null) {
      var currentTime = exports.unstable_now(); // Yield after `yieldInterval` ms, regardless of where we are in the vsync
      // cycle. This means there's always time remaining at the beginning of
      // the message event.

      deadline = currentTime + yieldInterval;
      var hasTimeRemaining = true;

      try {
        var hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);

        if (!hasMoreWork) {
          isMessageLoopRunning = false;
          scheduledHostCallback = null;
        } else {
          // If there's more work, schedule the next message event at the end
          // of the preceding one.
          port.postMessage(null);
        }
      } catch (error) {
        // If a scheduler task throws, exit the current browser task so the
        // error can be observed.
        port.postMessage(null);
        throw error;
      }
    } else {
      isMessageLoopRunning = false;
    } // Yielding to the browser will give it a chance to paint, so we can
  };

  var channel = new MessageChannel();
  var port = channel.port2;
  channel.port1.onmessage = performWorkUntilDeadline;

  requestHostCallback = function (callback) {
    scheduledHostCallback = callback;

    if (!isMessageLoopRunning) {
      isMessageLoopRunning = true;
      port.postMessage(null);
    }
  };

  requestHostTimeout = function (callback, ms) {
    taskTimeoutID = _setTimeout(function () {
      callback(exports.unstable_now());
    }, ms);
  };

  cancelHostTimeout = function () {
    _clearTimeout(taskTimeoutID);

    taskTimeoutID = -1;
  };
}

function push(heap, node) {
  var index = heap.length;
  heap.push(node);
  siftUp(heap, node, index);
}
function peek(heap) {
  var first = heap[0];
  return first === undefined ? null : first;
}
function pop(heap) {
  var first = heap[0];

  if (first !== undefined) {
    var last = heap.pop();

    if (last !== first) {
      heap[0] = last;
      siftDown(heap, last, 0);
    }

    return first;
  } else {
    return null;
  }
}

function siftUp(heap, node, i) {
  var index = i;

  while (true) {
    var parentIndex = index - 1 >>> 1;
    var parent = heap[parentIndex];

    if (parent !== undefined && compare(parent, node) > 0) {
      // The parent is larger. Swap positions.
      heap[parentIndex] = node;
      heap[index] = parent;
      index = parentIndex;
    } else {
      // The parent is smaller. Exit.
      return;
    }
  }
}

function siftDown(heap, node, i) {
  var index = i;
  var length = heap.length;

  while (index < length) {
    var leftIndex = (index + 1) * 2 - 1;
    var left = heap[leftIndex];
    var rightIndex = leftIndex + 1;
    var right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.

    if (left !== undefined && compare(left, node) < 0) {
      if (right !== undefined && compare(right, left) < 0) {
        heap[index] = right;
        heap[rightIndex] = node;
        index = rightIndex;
      } else {
        heap[index] = left;
        heap[leftIndex] = node;
        index = leftIndex;
      }
    } else if (right !== undefined && compare(right, node) < 0) {
      heap[index] = right;
      heap[rightIndex] = node;
      index = rightIndex;
    } else {
      // Neither child is smaller. Exit.
      return;
    }
  }
}

function compare(a, b) {
  // Compare sort index first, then task id.
  var diff = a.sortIndex - b.sortIndex;
  return diff !== 0 ? diff : a.id - b.id;
}

// TODO: Use symbols?
var ImmediatePriority = 1;
var UserBlockingPriority = 2;
var NormalPriority = 3;
var LowPriority = 4;
var IdlePriority = 5;

function markTaskErrored(task, ms) {
}

/* eslint-disable no-var */
// Math.pow(2, 30) - 1
// 0b111111111111111111111111111111

var maxSigned31BitInt = 1073741823; // Times out immediately

var IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out

var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
var NORMAL_PRIORITY_TIMEOUT = 5000;
var LOW_PRIORITY_TIMEOUT = 10000; // Never times out

var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt; // Tasks are stored on a min heap

var taskQueue = [];
var timerQueue = []; // Incrementing id counter. Used to maintain insertion order.

var taskIdCounter = 1; // Pausing the scheduler is useful for debugging.
var currentTask = null;
var currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrancy.

var isPerformingWork = false;
var isHostCallbackScheduled = false;
var isHostTimeoutScheduled = false;

function advanceTimers(currentTime) {
  // Check for tasks that are no longer delayed and add them to the queue.
  var timer = peek(timerQueue);

  while (timer !== null) {
    if (timer.callback === null) {
      // Timer was cancelled.
      pop(timerQueue);
    } else if (timer.startTime <= currentTime) {
      // Timer fired. Transfer to the task queue.
      pop(timerQueue);
      timer.sortIndex = timer.expirationTime;
      push(taskQueue, timer);
    } else {
      // Remaining timers are pending.
      return;
    }

    timer = peek(timerQueue);
  }
}

function handleTimeout(currentTime) {
  isHostTimeoutScheduled = false;
  advanceTimers(currentTime);

  if (!isHostCallbackScheduled) {
    if (peek(taskQueue) !== null) {
      isHostCallbackScheduled = true;
      requestHostCallback(flushWork);
    } else {
      var firstTimer = peek(timerQueue);

      if (firstTimer !== null) {
        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
      }
    }
  }
}

function flushWork(hasTimeRemaining, initialTime) {


  isHostCallbackScheduled = false;

  if (isHostTimeoutScheduled) {
    // We scheduled a timeout but it's no longer needed. Cancel it.
    isHostTimeoutScheduled = false;
    cancelHostTimeout();
  }

  isPerformingWork = true;
  var previousPriorityLevel = currentPriorityLevel;

  try {
    if (enableProfiling) {
      try {
        return workLoop(hasTimeRemaining, initialTime);
      } catch (error) {
        if (currentTask !== null) {
          var currentTime = exports.unstable_now();
          markTaskErrored(currentTask, currentTime);
          currentTask.isQueued = false;
        }

        throw error;
      }
    } else {
      // No catch in prod code path.
      return workLoop(hasTimeRemaining, initialTime);
    }
  } finally {
    currentTask = null;
    currentPriorityLevel = previousPriorityLevel;
    isPerformingWork = false;
  }
}

function workLoop(hasTimeRemaining, initialTime) {
  var currentTime = initialTime;
  advanceTimers(currentTime);
  currentTask = peek(taskQueue);

  while (currentTask !== null && !(enableSchedulerDebugging )) {
    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || exports.unstable_shouldYield())) {
      // This currentTask hasn't expired, and we've reached the deadline.
      break;
    }

    var callback = currentTask.callback;

    if (typeof callback === 'function') {
      currentTask.callback = null;
      currentPriorityLevel = currentTask.priorityLevel;
      var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;

      var continuationCallback = callback(didUserCallbackTimeout);
      currentTime = exports.unstable_now();

      if (typeof continuationCallback === 'function') {
        currentTask.callback = continuationCallback;
      } else {

        if (currentTask === peek(taskQueue)) {
          pop(taskQueue);
        }
      }

      advanceTimers(currentTime);
    } else {
      pop(taskQueue);
    }

    currentTask = peek(taskQueue);
  } // Return whether there's additional work


  if (currentTask !== null) {
    return true;
  } else {
    var firstTimer = peek(timerQueue);

    if (firstTimer !== null) {
      requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
    }

    return false;
  }
}

function unstable_runWithPriority(priorityLevel, eventHandler) {
  switch (priorityLevel) {
    case ImmediatePriority:
    case UserBlockingPriority:
    case NormalPriority:
    case LowPriority:
    case IdlePriority:
      break;

    default:
      priorityLevel = NormalPriority;
  }

  var previousPriorityLevel = currentPriorityLevel;
  currentPriorityLevel = priorityLevel;

  try {
    return eventHandler();
  } finally {
    currentPriorityLevel = previousPriorityLevel;
  }
}

function unstable_next(eventHandler) {
  var priorityLevel;

  switch (currentPriorityLevel) {
    case ImmediatePriority:
    case UserBlockingPriority:
    case NormalPriority:
      // Shift down to normal priority
      priorityLevel = NormalPriority;
      break;

    default:
      // Anything lower than normal priority should remain at the current level.
      priorityLevel = currentPriorityLevel;
      break;
  }

  var previousPriorityLevel = currentPriorityLevel;
  currentPriorityLevel = priorityLevel;

  try {
    return eventHandler();
  } finally {
    currentPriorityLevel = previousPriorityLevel;
  }
}

function unstable_wrapCallback(callback) {
  var parentPriorityLevel = currentPriorityLevel;
  return function () {
    // This is a fork of runWithPriority, inlined for performance.
    var previousPriorityLevel = currentPriorityLevel;
    currentPriorityLevel = parentPriorityLevel;

    try {
      return callback.apply(this, arguments);
    } finally {
      currentPriorityLevel = previousPriorityLevel;
    }
  };
}

function unstable_scheduleCallback(priorityLevel, callback, options) {
  var currentTime = exports.unstable_now();
  var startTime;

  if (typeof options === 'object' && options !== null) {
    var delay = options.delay;

    if (typeof delay === 'number' && delay > 0) {
      startTime = currentTime + delay;
    } else {
      startTime = currentTime;
    }
  } else {
    startTime = currentTime;
  }

  var timeout;

  switch (priorityLevel) {
    case ImmediatePriority:
      timeout = IMMEDIATE_PRIORITY_TIMEOUT;
      break;

    case UserBlockingPriority:
      timeout = USER_BLOCKING_PRIORITY_TIMEOUT;
      break;

    case IdlePriority:
      timeout = IDLE_PRIORITY_TIMEOUT;
      break;

    case LowPriority:
      timeout = LOW_PRIORITY_TIMEOUT;
      break;

    case NormalPriority:
    default:
      timeout = NORMAL_PRIORITY_TIMEOUT;
      break;
  }

  var expirationTime = startTime + timeout;
  var newTask = {
    id: taskIdCounter++,
    callback: callback,
    priorityLevel: priorityLevel,
    startTime: startTime,
    expirationTime: expirationTime,
    sortIndex: -1
  };

  if (startTime > currentTime) {
    // This is a delayed task.
    newTask.sortIndex = startTime;
    push(timerQueue, newTask);

    if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
      // All tasks are delayed, and this is the task with the earliest delay.
      if (isHostTimeoutScheduled) {
        // Cancel an existing timeout.
        cancelHostTimeout();
      } else {
        isHostTimeoutScheduled = true;
      } // Schedule a timeout.


      requestHostTimeout(handleTimeout, startTime - currentTime);
    }
  } else {
    newTask.sortIndex = expirationTime;
    push(taskQueue, newTask);
    // wait until the next time we yield.


    if (!isHostCallbackScheduled && !isPerformingWork) {
      isHostCallbackScheduled = true;
      requestHostCallback(flushWork);
    }
  }

  return newTask;
}

function unstable_pauseExecution() {
}

function unstable_continueExecution() {

  if (!isHostCallbackScheduled && !isPerformingWork) {
    isHostCallbackScheduled = true;
    requestHostCallback(flushWork);
  }
}

function unstable_getFirstCallbackNode() {
  return peek(taskQueue);
}

function unstable_cancelCallback(task) {
  // remove from the queue because you can't remove arbitrary nodes from an
  // array based heap, only the first one.)


  task.callback = null;
}

function unstable_getCurrentPriorityLevel() {
  return currentPriorityLevel;
}

var unstable_requestPaint = requestPaint;
var unstable_Profiling =  null;

exports.unstable_IdlePriority = IdlePriority;
exports.unstable_ImmediatePriority = ImmediatePriority;
exports.unstable_LowPriority = LowPriority;
exports.unstable_NormalPriority = NormalPriority;
exports.unstable_Profiling = unstable_Profiling;
exports.unstable_UserBlockingPriority = UserBlockingPriority;
exports.unstable_cancelCallback = unstable_cancelCallback;
exports.unstable_continueExecution = unstable_continueExecution;
exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
exports.unstable_next = unstable_next;
exports.unstable_pauseExecution = unstable_pauseExecution;
exports.unstable_requestPaint = unstable_requestPaint;
exports.unstable_runWithPriority = unstable_runWithPriority;
exports.unstable_scheduleCallback = unstable_scheduleCallback;
exports.unstable_wrapCallback = unstable_wrapCallback;
  })();
}


/***/ }),
/* 917 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** @license React v17.0.2
 * react-dom.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



if (process.env.NODE_ENV !== "production") {
  (function() {
'use strict';

var React = __webpack_require__(8);
var _assign = __webpack_require__(7);
var Scheduler = __webpack_require__(914);
var tracing = __webpack_require__(918);

var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

// by calls to these methods by a Babel plugin.
//
// In PROD (or in packages without access to React internals),
// they are left as they are instead.

function warn(format) {
  {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    printWarning('warn', format, args);
  }
}
function error(format) {
  {
    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      args[_key2 - 1] = arguments[_key2];
    }

    printWarning('error', format, args);
  }
}

function printWarning(level, format, args) {
  // When changing this logic, you might want to also
  // update consoleWithStackDev.www.js as well.
  {
    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    var stack = ReactDebugCurrentFrame.getStackAddendum();

    if (stack !== '') {
      format += '%s';
      args = args.concat([stack]);
    }

    var argsWithFormat = args.map(function (item) {
      return '' + item;
    }); // Careful: RN currently depends on this prefix

    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
    // breaks IE9: https://github.com/facebook/react/issues/13610
    // eslint-disable-next-line react-internal/no-production-logging

    Function.prototype.apply.call(console[level], console, argsWithFormat);
  }
}

if (!React) {
  {
    throw Error( "ReactDOM was loaded before React. Make sure you load the React package before loading ReactDOM." );
  }
}

var FunctionComponent = 0;
var ClassComponent = 1;
var IndeterminateComponent = 2; // Before we know whether it is function or class

var HostRoot = 3; // Root of a host tree. Could be nested inside another node.

var HostPortal = 4; // A subtree. Could be an entry point to a different renderer.

var HostComponent = 5;
var HostText = 6;
var Fragment = 7;
var Mode = 8;
var ContextConsumer = 9;
var ContextProvider = 10;
var ForwardRef = 11;
var Profiler = 12;
var SuspenseComponent = 13;
var MemoComponent = 14;
var SimpleMemoComponent = 15;
var LazyComponent = 16;
var IncompleteClassComponent = 17;
var DehydratedFragment = 18;
var SuspenseListComponent = 19;
var FundamentalComponent = 20;
var ScopeComponent = 21;
var Block = 22;
var OffscreenComponent = 23;
var LegacyHiddenComponent = 24;

// Filter certain DOM attributes (e.g. src, href) if their values are empty strings.

var enableProfilerTimer = true; // Record durations for commit and passive effects phases.

var enableFundamentalAPI = false; // Experimental Scope support.
var enableNewReconciler = false; // Errors that are thrown while unmounting (or after in the case of passive effects)
var warnAboutStringRefs = false;

var allNativeEvents = new Set();
/**
 * Mapping from registration name to event name
 */


var registrationNameDependencies = {};
/**
 * Mapping from lowercase registration names to the properly cased version,
 * used to warn in the case of missing event handlers. Available
 * only in true.
 * @type {Object}
 */

var possibleRegistrationNames =  {} ; // Trust the developer to only use possibleRegistrationNames in true

function registerTwoPhaseEvent(registrationName, dependencies) {
  registerDirectEvent(registrationName, dependencies);
  registerDirectEvent(registrationName + 'Capture', dependencies);
}
function registerDirectEvent(registrationName, dependencies) {
  {
    if (registrationNameDependencies[registrationName]) {
      error('EventRegistry: More than one plugin attempted to publish the same ' + 'registration name, `%s`.', registrationName);
    }
  }

  registrationNameDependencies[registrationName] = dependencies;

  {
    var lowerCasedName = registrationName.toLowerCase();
    possibleRegistrationNames[lowerCasedName] = registrationName;

    if (registrationName === 'onDoubleClick') {
      possibleRegistrationNames.ondblclick = registrationName;
    }
  }

  for (var i = 0; i < dependencies.length; i++) {
    allNativeEvents.add(dependencies[i]);
  }
}

var canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');

// A reserved attribute.
// It is handled by React separately and shouldn't be written to the DOM.
var RESERVED = 0; // A simple string attribute.
// Attributes that aren't in the filter are presumed to have this type.

var STRING = 1; // A string attribute that accepts booleans in React. In HTML, these are called
// "enumerated" attributes with "true" and "false" as possible values.
// When true, it should be set to a "true" string.
// When false, it should be set to a "false" string.

var BOOLEANISH_STRING = 2; // A real boolean attribute.
// When true, it should be present (set either to an empty string or its name).
// When false, it should be omitted.

var BOOLEAN = 3; // An attribute that can be used as a flag as well as with a value.
// When true, it should be present (set either to an empty string or its name).
// When false, it should be omitted.
// For any other value, should be present with that value.

var OVERLOADED_BOOLEAN = 4; // An attribute that must be numeric or parse as a numeric.
// When falsy, it should be removed.

var NUMERIC = 5; // An attribute that must be positive numeric or parse as a positive numeric.
// When falsy, it should be removed.

var POSITIVE_NUMERIC = 6;

/* eslint-disable max-len */
var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
/* eslint-enable max-len */

var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
var ROOT_ATTRIBUTE_NAME = 'data-reactroot';
var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');
var hasOwnProperty = Object.prototype.hasOwnProperty;
var illegalAttributeNameCache = {};
var validatedAttributeNameCache = {};
function isAttributeNameSafe(attributeName) {
  if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {
    return true;
  }

  if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {
    return false;
  }

  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
    validatedAttributeNameCache[attributeName] = true;
    return true;
  }

  illegalAttributeNameCache[attributeName] = true;

  {
    error('Invalid attribute name: `%s`', attributeName);
  }

  return false;
}
function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
  if (propertyInfo !== null) {
    return propertyInfo.type === RESERVED;
  }

  if (isCustomComponentTag) {
    return false;
  }

  if (name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) {
    return true;
  }

  return false;
}
function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
  if (propertyInfo !== null && propertyInfo.type === RESERVED) {
    return false;
  }

  switch (typeof value) {
    case 'function': // $FlowIssue symbol is perfectly valid here

    case 'symbol':
      // eslint-disable-line
      return true;

    case 'boolean':
      {
        if (isCustomComponentTag) {
          return false;
        }

        if (propertyInfo !== null) {
          return !propertyInfo.acceptsBooleans;
        } else {
          var prefix = name.toLowerCase().slice(0, 5);
          return prefix !== 'data-' && prefix !== 'aria-';
        }
      }

    default:
      return false;
  }
}
function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
  if (value === null || typeof value === 'undefined') {
    return true;
  }

  if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) {
    return true;
  }

  if (isCustomComponentTag) {
    return false;
  }

  if (propertyInfo !== null) {

    switch (propertyInfo.type) {
      case BOOLEAN:
        return !value;

      case OVERLOADED_BOOLEAN:
        return value === false;

      case NUMERIC:
        return isNaN(value);

      case POSITIVE_NUMERIC:
        return isNaN(value) || value < 1;
    }
  }

  return false;
}
function getPropertyInfo(name) {
  return properties.hasOwnProperty(name) ? properties[name] : null;
}

function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL, removeEmptyString) {
  this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
  this.attributeName = attributeName;
  this.attributeNamespace = attributeNamespace;
  this.mustUseProperty = mustUseProperty;
  this.propertyName = name;
  this.type = type;
  this.sanitizeURL = sanitizeURL;
  this.removeEmptyString = removeEmptyString;
} // When adding attributes to this list, be sure to also add them to
// the `possibleStandardNames` module to ensure casing and incorrect
// name warnings.


var properties = {}; // These props are reserved by React. They shouldn't be written to the DOM.

var reservedProps = ['children', 'dangerouslySetInnerHTML', // TODO: This prevents the assignment of defaultValue to regular
// elements (not just inputs). Now that ReactDOMInput assigns to the
// defaultValue property -- do we need this?
'defaultValue', 'defaultChecked', 'innerHTML', 'suppressContentEditableWarning', 'suppressHydrationWarning', 'style'];
reservedProps.forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, RESERVED, false, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // A few React string attributes have a different name.
// This is a mapping from React prop names to the attribute names.

[['acceptCharset', 'accept-charset'], ['className', 'class'], ['htmlFor', 'for'], ['httpEquiv', 'http-equiv']].forEach(function (_ref) {
  var name = _ref[0],
      attributeName = _ref[1];
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are "enumerated" HTML attributes that accept "true" and "false".
// In React, we let users pass `true` and `false` even though technically
// these aren't boolean attributes (they are coerced to strings).

['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are "enumerated" SVG attributes that accept "true" and "false".
// In React, we let users pass `true` and `false` even though technically
// these aren't boolean attributes (they are coerced to strings).
// Since these are SVG attributes, their attribute names are case-sensitive.

['autoReverse', 'externalResourcesRequired', 'focusable', 'preserveAlpha'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are HTML boolean attributes.

['allowFullScreen', 'async', // Note: there is a special case that prevents it from being written to the DOM
// on the client side because the browsers are inconsistent. Instead we call focus().
'autoFocus', 'autoPlay', 'controls', 'default', 'defer', 'disabled', 'disablePictureInPicture', 'disableRemotePlayback', 'formNoValidate', 'hidden', 'loop', 'noModule', 'noValidate', 'open', 'playsInline', 'readOnly', 'required', 'reversed', 'scoped', 'seamless', // Microdata
'itemScope'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are the few React props that we set as DOM properties
// rather than attributes. These are all booleans.

['checked', // Note: `option.selected` is not updated if `select.multiple` is
// disabled with `removeAttribute`. We have special logic for handling this.
'multiple', 'muted', 'selected' // NOTE: if you add a camelCased prop to this list,
// you'll need to set attributeName to name.toLowerCase()
// instead in the assignment below.
].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are HTML attributes that are "overloaded booleans": they behave like
// booleans, but can also accept a string value.

['capture', 'download' // NOTE: if you add a camelCased prop to this list,
// you'll need to set attributeName to name.toLowerCase()
// instead in the assignment below.
].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are HTML attributes that must be positive numbers.

['cols', 'rows', 'size', 'span' // NOTE: if you add a camelCased prop to this list,
// you'll need to set attributeName to name.toLowerCase()
// instead in the assignment below.
].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are HTML attributes that must be numbers.

['rowSpan', 'start'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, NUMERIC, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
});
var CAMELIZE = /[\-\:]([a-z])/g;

var capitalize = function (token) {
  return token[1].toUpperCase();
}; // This is a list of all SVG attributes that need special casing, namespacing,
// or boolean value assignment. Regular attributes that just accept strings
// and have the same names are omitted, just like in the HTML attribute filter.
// Some of these attributes can be hard to find. This list was created by
// scraping the MDN documentation.


['accent-height', 'alignment-baseline', 'arabic-form', 'baseline-shift', 'cap-height', 'clip-path', 'clip-rule', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'dominant-baseline', 'enable-background', 'fill-opacity', 'fill-rule', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-name', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'horiz-adv-x', 'horiz-origin-x', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'overline-position', 'overline-thickness', 'paint-order', 'panose-1', 'pointer-events', 'rendering-intent', 'shape-rendering', 'stop-color', 'stop-opacity', 'strikethrough-position', 'strikethrough-thickness', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'text-anchor', 'text-decoration', 'text-rendering', 'underline-position', 'underline-thickness', 'unicode-bidi', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'vector-effect', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'word-spacing', 'writing-mode', 'xmlns:xlink', 'x-height' // NOTE: if you add a camelCased prop to this list,
// you'll need to set attributeName to name.toLowerCase()
// instead in the assignment below.
].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // String SVG attributes with the xlink namespace.

['xlink:actuate', 'xlink:arcrole', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type' // NOTE: if you add a camelCased prop to this list,
// you'll need to set attributeName to name.toLowerCase()
// instead in the assignment below.
].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, 'http://www.w3.org/1999/xlink', false, // sanitizeURL
  false);
}); // String SVG attributes with the xml namespace.

['xml:base', 'xml:lang', 'xml:space' // NOTE: if you add a camelCased prop to this list,
// you'll need to set attributeName to name.toLowerCase()
// instead in the assignment below.
].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, 'http://www.w3.org/XML/1998/namespace', false, // sanitizeURL
  false);
}); // These attribute exists both in HTML and SVG.
// The attribute name is case-sensitive in SVG so we can't just use
// the React name like we do for attributes that exist only in HTML.

['tabIndex', 'crossOrigin'].forEach(function (attributeName) {
  properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty
  attributeName.toLowerCase(), // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These attributes accept URLs. These must not allow javascript: URLS.
// These will also need to accept Trusted Types object in the future.

var xlinkHref = 'xlinkHref';
properties[xlinkHref] = new PropertyInfoRecord('xlinkHref', STRING, false, // mustUseProperty
'xlink:href', 'http://www.w3.org/1999/xlink', true, // sanitizeURL
false);
['src', 'href', 'action', 'formAction'].forEach(function (attributeName) {
  properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty
  attributeName.toLowerCase(), // attributeName
  null, // attributeNamespace
  true, // sanitizeURL
  true);
});

// and any newline or tab are filtered out as if they're not part of the URL.
// https://url.spec.whatwg.org/#url-parsing
// Tab or newline are defined as \r\n\t:
// https://infra.spec.whatwg.org/#ascii-tab-or-newline
// A C0 control is a code point in the range \u0000 NULL to \u001F
// INFORMATION SEPARATOR ONE, inclusive:
// https://infra.spec.whatwg.org/#c0-control-or-space

/* eslint-disable max-len */

var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;
var didWarn = false;

function sanitizeURL(url) {
  {
    if (!didWarn && isJavaScriptProtocol.test(url)) {
      didWarn = true;

      error('A future version of React will block javascript: URLs as a security precaution. ' + 'Use event handlers instead if you can. If you need to generate unsafe HTML try ' + 'using dangerouslySetInnerHTML instead. React was passed %s.', JSON.stringify(url));
    }
  }
}

/**
 * Get the value for a property on a node. Only used in DEV for SSR validation.
 * The "expected" argument is used as a hint of what the expected value is.
 * Some properties have multiple equivalent values.
 */
function getValueForProperty(node, name, expected, propertyInfo) {
  {
    if (propertyInfo.mustUseProperty) {
      var propertyName = propertyInfo.propertyName;
      return node[propertyName];
    } else {
      if ( propertyInfo.sanitizeURL) {
        // If we haven't fully disabled javascript: URLs, and if
        // the hydration is successful of a javascript: URL, we
        // still want to warn on the client.
        sanitizeURL('' + expected);
      }

      var attributeName = propertyInfo.attributeName;
      var stringValue = null;

      if (propertyInfo.type === OVERLOADED_BOOLEAN) {
        if (node.hasAttribute(attributeName)) {
          var value = node.getAttribute(attributeName);

          if (value === '') {
            return true;
          }

          if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
            return value;
          }

          if (value === '' + expected) {
            return expected;
          }

          return value;
        }
      } else if (node.hasAttribute(attributeName)) {
        if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
          // We had an attribute but shouldn't have had one, so read it
          // for the error message.
          return node.getAttribute(attributeName);
        }

        if (propertyInfo.type === BOOLEAN) {
          // If this was a boolean, it doesn't matter what the value is
          // the fact that we have it is the same as the expected.
          return expected;
        } // Even if this property uses a namespace we use getAttribute
        // because we assume its namespaced name is the same as our config.
        // To use getAttributeNS we need the local name which we don't have
        // in our config atm.


        stringValue = node.getAttribute(attributeName);
      }

      if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
        return stringValue === null ? expected : stringValue;
      } else if (stringValue === '' + expected) {
        return expected;
      } else {
        return stringValue;
      }
    }
  }
}
/**
 * Get the value for a attribute on a node. Only used in DEV for SSR validation.
 * The third argument is used as a hint of what the expected value is. Some
 * attributes have multiple equivalent values.
 */

function getValueForAttribute(node, name, expected) {
  {
    if (!isAttributeNameSafe(name)) {
      return;
    } // If the object is an opaque reference ID, it's expected that
    // the next prop is different than the server value, so just return
    // expected


    if (isOpaqueHydratingObject(expected)) {
      return expected;
    }

    if (!node.hasAttribute(name)) {
      return expected === undefined ? undefined : null;
    }

    var value = node.getAttribute(name);

    if (value === '' + expected) {
      return expected;
    }

    return value;
  }
}
/**
 * Sets the value for a property on a node.
 *
 * @param {DOMElement} node
 * @param {string} name
 * @param {*} value
 */

function setValueForProperty(node, name, value, isCustomComponentTag) {
  var propertyInfo = getPropertyInfo(name);

  if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) {
    return;
  }

  if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) {
    value = null;
  } // If the prop isn't in the special list, treat it as a simple attribute.


  if (isCustomComponentTag || propertyInfo === null) {
    if (isAttributeNameSafe(name)) {
      var _attributeName = name;

      if (value === null) {
        node.removeAttribute(_attributeName);
      } else {
        node.setAttribute(_attributeName,  '' + value);
      }
    }

    return;
  }

  var mustUseProperty = propertyInfo.mustUseProperty;

  if (mustUseProperty) {
    var propertyName = propertyInfo.propertyName;

    if (value === null) {
      var type = propertyInfo.type;
      node[propertyName] = type === BOOLEAN ? false : '';
    } else {
      // Contrary to `setAttribute`, object properties are properly
      // `toString`ed by IE8/9.
      node[propertyName] = value;
    }

    return;
  } // The rest are treated as attributes with special cases.


  var attributeName = propertyInfo.attributeName,
      attributeNamespace = propertyInfo.attributeNamespace;

  if (value === null) {
    node.removeAttribute(attributeName);
  } else {
    var _type = propertyInfo.type;
    var attributeValue;

    if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) {
      // If attribute type is boolean, we know for sure it won't be an execution sink
      // and we won't require Trusted Type here.
      attributeValue = '';
    } else {
      // `setAttribute` with objects becomes only `[object]` in IE8/9,
      // ('' + value) makes it output the correct toString()-value.
      {
        attributeValue = '' + value;
      }

      if (propertyInfo.sanitizeURL) {
        sanitizeURL(attributeValue.toString());
      }
    }

    if (attributeNamespace) {
      node.setAttributeNS(attributeNamespace, attributeName, attributeValue);
    } else {
      node.setAttribute(attributeName, attributeValue);
    }
  }
}

// ATTENTION
// When adding new symbols to this file,
// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var REACT_ELEMENT_TYPE = 0xeac7;
var REACT_PORTAL_TYPE = 0xeaca;
var REACT_FRAGMENT_TYPE = 0xeacb;
var REACT_STRICT_MODE_TYPE = 0xeacc;
var REACT_PROFILER_TYPE = 0xead2;
var REACT_PROVIDER_TYPE = 0xeacd;
var REACT_CONTEXT_TYPE = 0xeace;
var REACT_FORWARD_REF_TYPE = 0xead0;
var REACT_SUSPENSE_TYPE = 0xead1;
var REACT_SUSPENSE_LIST_TYPE = 0xead8;
var REACT_MEMO_TYPE = 0xead3;
var REACT_LAZY_TYPE = 0xead4;
var REACT_BLOCK_TYPE = 0xead9;
var REACT_SERVER_BLOCK_TYPE = 0xeada;
var REACT_FUNDAMENTAL_TYPE = 0xead5;
var REACT_SCOPE_TYPE = 0xead7;
var REACT_OPAQUE_ID_TYPE = 0xeae0;
var REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;
var REACT_OFFSCREEN_TYPE = 0xeae2;
var REACT_LEGACY_HIDDEN_TYPE = 0xeae3;

if (typeof Symbol === 'function' && Symbol.for) {
  var symbolFor = Symbol.for;
  REACT_ELEMENT_TYPE = symbolFor('react.element');
  REACT_PORTAL_TYPE = symbolFor('react.portal');
  REACT_FRAGMENT_TYPE = symbolFor('react.fragment');
  REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');
  REACT_PROFILER_TYPE = symbolFor('react.profiler');
  REACT_PROVIDER_TYPE = symbolFor('react.provider');
  REACT_CONTEXT_TYPE = symbolFor('react.context');
  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');
  REACT_SUSPENSE_TYPE = symbolFor('react.suspense');
  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');
  REACT_MEMO_TYPE = symbolFor('react.memo');
  REACT_LAZY_TYPE = symbolFor('react.lazy');
  REACT_BLOCK_TYPE = symbolFor('react.block');
  REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');
  REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');
  REACT_SCOPE_TYPE = symbolFor('react.scope');
  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');
  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');
  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');
  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');
}

var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';
function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable !== 'object') {
    return null;
  }

  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];

  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }

  return null;
}

// Helpers to patch console.logs to avoid logging during side-effect free
// replaying on render function. This currently only patches the object
// lazily which won't cover if the log function was extracted eagerly.
// We could also eagerly patch the method.
var disabledDepth = 0;
var prevLog;
var prevInfo;
var prevWarn;
var prevError;
var prevGroup;
var prevGroupCollapsed;
var prevGroupEnd;

function disabledLog() {}

disabledLog.__reactDisabledLog = true;
function disableLogs() {
  {
    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      prevLog = console.log;
      prevInfo = console.info;
      prevWarn = console.warn;
      prevError = console.error;
      prevGroup = console.group;
      prevGroupCollapsed = console.groupCollapsed;
      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099

      var props = {
        configurable: true,
        enumerable: true,
        value: disabledLog,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        info: props,
        log: props,
        warn: props,
        error: props,
        group: props,
        groupCollapsed: props,
        groupEnd: props
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    disabledDepth++;
  }
}
function reenableLogs() {
  {
    disabledDepth--;

    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      var props = {
        configurable: true,
        enumerable: true,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        log: _assign({}, props, {
          value: prevLog
        }),
        info: _assign({}, props, {
          value: prevInfo
        }),
        warn: _assign({}, props, {
          value: prevWarn
        }),
        error: _assign({}, props, {
          value: prevError
        }),
        group: _assign({}, props, {
          value: prevGroup
        }),
        groupCollapsed: _assign({}, props, {
          value: prevGroupCollapsed
        }),
        groupEnd: _assign({}, props, {
          value: prevGroupEnd
        })
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    if (disabledDepth < 0) {
      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');
    }
  }
}

var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
var prefix;
function describeBuiltInComponentFrame(name, source, ownerFn) {
  {
    if (prefix === undefined) {
      // Extract the VM specific prefix used by each line.
      try {
        throw Error();
      } catch (x) {
        var match = x.stack.trim().match(/\n( *(at )?)/);
        prefix = match && match[1] || '';
      }
    } // We use the prefix to ensure our stacks line up with native stack frames.


    return '\n' + prefix + name;
  }
}
var reentry = false;
var componentFrameCache;

{
  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
  componentFrameCache = new PossiblyWeakMap();
}

function describeNativeComponentFrame(fn, construct) {
  // If something asked for a stack inside a fake render, it should get ignored.
  if (!fn || reentry) {
    return '';
  }

  {
    var frame = componentFrameCache.get(fn);

    if (frame !== undefined) {
      return frame;
    }
  }

  var control;
  reentry = true;
  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.

  Error.prepareStackTrace = undefined;
  var previousDispatcher;

  {
    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function
    // for warnings.

    ReactCurrentDispatcher.current = null;
    disableLogs();
  }

  try {
    // This should throw.
    if (construct) {
      // Something should be setting the props in the constructor.
      var Fake = function () {
        throw Error();
      }; // $FlowFixMe


      Object.defineProperty(Fake.prototype, 'props', {
        set: function () {
          // We use a throwing setter instead of frozen or non-writable props
          // because that won't throw in a non-strict mode function.
          throw Error();
        }
      });

      if (typeof Reflect === 'object' && Reflect.construct) {
        // We construct a different control for this case to include any extra
        // frames added by the construct call.
        try {
          Reflect.construct(Fake, []);
        } catch (x) {
          control = x;
        }

        Reflect.construct(fn, [], Fake);
      } else {
        try {
          Fake.call();
        } catch (x) {
          control = x;
        }

        fn.call(Fake.prototype);
      }
    } else {
      try {
        throw Error();
      } catch (x) {
        control = x;
      }

      fn();
    }
  } catch (sample) {
    // This is inlined manually because closure doesn't do it for us.
    if (sample && control && typeof sample.stack === 'string') {
      // This extracts the first frame from the sample that isn't also in the control.
      // Skipping one frame that we assume is the frame that calls the two.
      var sampleLines = sample.stack.split('\n');
      var controlLines = control.stack.split('\n');
      var s = sampleLines.length - 1;
      var c = controlLines.length - 1;

      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
        // We expect at least one stack frame to be shared.
        // Typically this will be the root most one. However, stack frames may be
        // cut off due to maximum stack limits. In this case, one maybe cut off
        // earlier than the other. We assume that the sample is longer or the same
        // and there for cut off earlier. So we should find the root most frame in
        // the sample somewhere in the control.
        c--;
      }

      for (; s >= 1 && c >= 0; s--, c--) {
        // Next we find the first one that isn't the same which should be the
        // frame that called our sample function and the control.
        if (sampleLines[s] !== controlLines[c]) {
          // In V8, the first line is describing the message but other VMs don't.
          // If we're about to return the first line, and the control is also on the same
          // line, that's a pretty good indicator that our sample threw at same line as
          // the control. I.e. before we entered the sample frame. So we ignore this result.
          // This can happen if you passed a class to function component, or non-function.
          if (s !== 1 || c !== 1) {
            do {
              s--;
              c--; // We may still have similar intermediate frames from the construct call.
              // The next one that isn't the same should be our match though.

              if (c < 0 || sampleLines[s] !== controlLines[c]) {
                // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                var _frame = '\n' + sampleLines[s].replace(' at new ', ' at ');

                {
                  if (typeof fn === 'function') {
                    componentFrameCache.set(fn, _frame);
                  }
                } // Return the line we found.


                return _frame;
              }
            } while (s >= 1 && c >= 0);
          }

          break;
        }
      }
    }
  } finally {
    reentry = false;

    {
      ReactCurrentDispatcher.current = previousDispatcher;
      reenableLogs();
    }

    Error.prepareStackTrace = previousPrepareStackTrace;
  } // Fallback to just using the name if we couldn't make it throw.


  var name = fn ? fn.displayName || fn.name : '';
  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';

  {
    if (typeof fn === 'function') {
      componentFrameCache.set(fn, syntheticFrame);
    }
  }

  return syntheticFrame;
}

function describeClassComponentFrame(ctor, source, ownerFn) {
  {
    return describeNativeComponentFrame(ctor, true);
  }
}
function describeFunctionComponentFrame(fn, source, ownerFn) {
  {
    return describeNativeComponentFrame(fn, false);
  }
}

function shouldConstruct(Component) {
  var prototype = Component.prototype;
  return !!(prototype && prototype.isReactComponent);
}

function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {

  if (type == null) {
    return '';
  }

  if (typeof type === 'function') {
    {
      return describeNativeComponentFrame(type, shouldConstruct(type));
    }
  }

  if (typeof type === 'string') {
    return describeBuiltInComponentFrame(type);
  }

  switch (type) {
    case REACT_SUSPENSE_TYPE:
      return describeBuiltInComponentFrame('Suspense');

    case REACT_SUSPENSE_LIST_TYPE:
      return describeBuiltInComponentFrame('SuspenseList');
  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_FORWARD_REF_TYPE:
        return describeFunctionComponentFrame(type.render);

      case REACT_MEMO_TYPE:
        // Memo may contain any component type so we recursively resolve it.
        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);

      case REACT_BLOCK_TYPE:
        return describeFunctionComponentFrame(type._render);

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            // Lazy may contain any component type so we recursively resolve it.
            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
          } catch (x) {}
        }
    }
  }

  return '';
}

function describeFiber(fiber) {
  var owner =  fiber._debugOwner ? fiber._debugOwner.type : null ;
  var source =  fiber._debugSource ;

  switch (fiber.tag) {
    case HostComponent:
      return describeBuiltInComponentFrame(fiber.type);

    case LazyComponent:
      return describeBuiltInComponentFrame('Lazy');

    case SuspenseComponent:
      return describeBuiltInComponentFrame('Suspense');

    case SuspenseListComponent:
      return describeBuiltInComponentFrame('SuspenseList');

    case FunctionComponent:
    case IndeterminateComponent:
    case SimpleMemoComponent:
      return describeFunctionComponentFrame(fiber.type);

    case ForwardRef:
      return describeFunctionComponentFrame(fiber.type.render);

    case Block:
      return describeFunctionComponentFrame(fiber.type._render);

    case ClassComponent:
      return describeClassComponentFrame(fiber.type);

    default:
      return '';
  }
}

function getStackByFiberInDevAndProd(workInProgress) {
  try {
    var info = '';
    var node = workInProgress;

    do {
      info += describeFiber(node);
      node = node.return;
    } while (node);

    return info;
  } catch (x) {
    return '\nError generating stack: ' + x.message + '\n' + x.stack;
  }
}

function getWrappedName(outerType, innerType, wrapperName) {
  var functionName = innerType.displayName || innerType.name || '';
  return outerType.displayName || (functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName);
}

function getContextName(type) {
  return type.displayName || 'Context';
}

function getComponentName(type) {
  if (type == null) {
    // Host root, text node or just invalid type.
    return null;
  }

  {
    if (typeof type.tag === 'number') {
      error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');
    }
  }

  if (typeof type === 'function') {
    return type.displayName || type.name || null;
  }

  if (typeof type === 'string') {
    return type;
  }

  switch (type) {
    case REACT_FRAGMENT_TYPE:
      return 'Fragment';

    case REACT_PORTAL_TYPE:
      return 'Portal';

    case REACT_PROFILER_TYPE:
      return 'Profiler';

    case REACT_STRICT_MODE_TYPE:
      return 'StrictMode';

    case REACT_SUSPENSE_TYPE:
      return 'Suspense';

    case REACT_SUSPENSE_LIST_TYPE:
      return 'SuspenseList';
  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        var context = type;
        return getContextName(context) + '.Consumer';

      case REACT_PROVIDER_TYPE:
        var provider = type;
        return getContextName(provider._context) + '.Provider';

      case REACT_FORWARD_REF_TYPE:
        return getWrappedName(type, type.render, 'ForwardRef');

      case REACT_MEMO_TYPE:
        return getComponentName(type.type);

      case REACT_BLOCK_TYPE:
        return getComponentName(type._render);

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            return getComponentName(init(payload));
          } catch (x) {
            return null;
          }
        }
    }
  }

  return null;
}

var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
var current = null;
var isRendering = false;
function getCurrentFiberOwnerNameInDevOrNull() {
  {
    if (current === null) {
      return null;
    }

    var owner = current._debugOwner;

    if (owner !== null && typeof owner !== 'undefined') {
      return getComponentName(owner.type);
    }
  }

  return null;
}

function getCurrentFiberStackInDev() {
  {
    if (current === null) {
      return '';
    } // Safe because if current fiber exists, we are reconciling,
    // and it is guaranteed to be the work-in-progress version.


    return getStackByFiberInDevAndProd(current);
  }
}

function resetCurrentFiber() {
  {
    ReactDebugCurrentFrame.getCurrentStack = null;
    current = null;
    isRendering = false;
  }
}
function setCurrentFiber(fiber) {
  {
    ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackInDev;
    current = fiber;
    isRendering = false;
  }
}
function setIsRendering(rendering) {
  {
    isRendering = rendering;
  }
}
function getIsRendering() {
  {
    return isRendering;
  }
}

// Flow does not allow string concatenation of most non-string types. To work
// around this limitation, we use an opaque type that can only be obtained by
// passing the value through getToStringValue first.
function toString(value) {
  return '' + value;
}
function getToStringValue(value) {
  switch (typeof value) {
    case 'boolean':
    case 'number':
    case 'object':
    case 'string':
    case 'undefined':
      return value;

    default:
      // function, symbol are assigned as empty strings
      return '';
  }
}

var hasReadOnlyValue = {
  button: true,
  checkbox: true,
  image: true,
  hidden: true,
  radio: true,
  reset: true,
  submit: true
};
function checkControlledValueProps(tagName, props) {
  {
    if (!(hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null)) {
      error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
    }

    if (!(props.onChange || props.readOnly || props.disabled || props.checked == null)) {
      error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
    }
  }
}

function isCheckable(elem) {
  var type = elem.type;
  var nodeName = elem.nodeName;
  return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
}

function getTracker(node) {
  return node._valueTracker;
}

function detachTracker(node) {
  node._valueTracker = null;
}

function getValueFromNode(node) {
  var value = '';

  if (!node) {
    return value;
  }

  if (isCheckable(node)) {
    value = node.checked ? 'true' : 'false';
  } else {
    value = node.value;
  }

  return value;
}

function trackValueOnNode(node) {
  var valueField = isCheckable(node) ? 'checked' : 'value';
  var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);
  var currentValue = '' + node[valueField]; // if someone has already defined a value or Safari, then bail
  // and don't track value will cause over reporting of changes,
  // but it's better then a hard failure
  // (needed for certain tests that spyOn input values and Safari)

  if (node.hasOwnProperty(valueField) || typeof descriptor === 'undefined' || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {
    return;
  }

  var get = descriptor.get,
      set = descriptor.set;
  Object.defineProperty(node, valueField, {
    configurable: true,
    get: function () {
      return get.call(this);
    },
    set: function (value) {
      currentValue = '' + value;
      set.call(this, value);
    }
  }); // We could've passed this the first time
  // but it triggers a bug in IE11 and Edge 14/15.
  // Calling defineProperty() again should be equivalent.
  // https://github.com/facebook/react/issues/11768

  Object.defineProperty(node, valueField, {
    enumerable: descriptor.enumerable
  });
  var tracker = {
    getValue: function () {
      return currentValue;
    },
    setValue: function (value) {
      currentValue = '' + value;
    },
    stopTracking: function () {
      detachTracker(node);
      delete node[valueField];
    }
  };
  return tracker;
}

function track(node) {
  if (getTracker(node)) {
    return;
  } // TODO: Once it's just Fiber we can move this to node._wrapperState


  node._valueTracker = trackValueOnNode(node);
}
function updateValueIfChanged(node) {
  if (!node) {
    return false;
  }

  var tracker = getTracker(node); // if there is no tracker at this point it's unlikely
  // that trying again will succeed

  if (!tracker) {
    return true;
  }

  var lastValue = tracker.getValue();
  var nextValue = getValueFromNode(node);

  if (nextValue !== lastValue) {
    tracker.setValue(nextValue);
    return true;
  }

  return false;
}

function getActiveElement(doc) {
  doc = doc || (typeof document !== 'undefined' ? document : undefined);

  if (typeof doc === 'undefined') {
    return null;
  }

  try {
    return doc.activeElement || doc.body;
  } catch (e) {
    return doc.body;
  }
}

var didWarnValueDefaultValue = false;
var didWarnCheckedDefaultChecked = false;
var didWarnControlledToUncontrolled = false;
var didWarnUncontrolledToControlled = false;

function isControlled(props) {
  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
  return usesChecked ? props.checked != null : props.value != null;
}
/**
 * Implements an <input> host component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */


function getHostProps(element, props) {
  var node = element;
  var checked = props.checked;

  var hostProps = _assign({}, props, {
    defaultChecked: undefined,
    defaultValue: undefined,
    value: undefined,
    checked: checked != null ? checked : node._wrapperState.initialChecked
  });

  return hostProps;
}
function initWrapperState(element, props) {
  {
    checkControlledValueProps('input', props);

    if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
      error('%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);

      didWarnCheckedDefaultChecked = true;
    }

    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
      error('%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);

      didWarnValueDefaultValue = true;
    }
  }

  var node = element;
  var defaultValue = props.defaultValue == null ? '' : props.defaultValue;
  node._wrapperState = {
    initialChecked: props.checked != null ? props.checked : props.defaultChecked,
    initialValue: getToStringValue(props.value != null ? props.value : defaultValue),
    controlled: isControlled(props)
  };
}
function updateChecked(element, props) {
  var node = element;
  var checked = props.checked;

  if (checked != null) {
    setValueForProperty(node, 'checked', checked, false);
  }
}
function updateWrapper(element, props) {
  var node = element;

  {
    var controlled = isControlled(props);

    if (!node._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
      error('A component is changing an uncontrolled input to be controlled. ' + 'This is likely caused by the value changing from undefined to ' + 'a defined value, which should not happen. ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components');

      didWarnUncontrolledToControlled = true;
    }

    if (node._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
      error('A component is changing a controlled input to be uncontrolled. ' + 'This is likely caused by the value changing from a defined to ' + 'undefined, which should not happen. ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components');

      didWarnControlledToUncontrolled = true;
    }
  }

  updateChecked(element, props);
  var value = getToStringValue(props.value);
  var type = props.type;

  if (value != null) {
    if (type === 'number') {
      if (value === 0 && node.value === '' || // We explicitly want to coerce to number here if possible.
      // eslint-disable-next-line
      node.value != value) {
        node.value = toString(value);
      }
    } else if (node.value !== toString(value)) {
      node.value = toString(value);
    }
  } else if (type === 'submit' || type === 'reset') {
    // Submit/reset inputs need the attribute removed completely to avoid
    // blank-text buttons.
    node.removeAttribute('value');
    return;
  }

  {
    // When syncing the value attribute, the value comes from a cascade of
    // properties:
    //  1. The value React property
    //  2. The defaultValue React property
    //  3. Otherwise there should be no change
    if (props.hasOwnProperty('value')) {
      setDefaultValue(node, props.type, value);
    } else if (props.hasOwnProperty('defaultValue')) {
      setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
    }
  }

  {
    // When syncing the checked attribute, it only changes when it needs
    // to be removed, such as transitioning from a checkbox into a text input
    if (props.checked == null && props.defaultChecked != null) {
      node.defaultChecked = !!props.defaultChecked;
    }
  }
}
function postMountWrapper(element, props, isHydrating) {
  var node = element; // Do not assign value if it is already set. This prevents user text input
  // from being lost during SSR hydration.

  if (props.hasOwnProperty('value') || props.hasOwnProperty('defaultValue')) {
    var type = props.type;
    var isButton = type === 'submit' || type === 'reset'; // Avoid setting value attribute on submit/reset inputs as it overrides the
    // default value provided by the browser. See: #12872

    if (isButton && (props.value === undefined || props.value === null)) {
      return;
    }

    var initialValue = toString(node._wrapperState.initialValue); // Do not assign value if it is already set. This prevents user text input
    // from being lost during SSR hydration.

    if (!isHydrating) {
      {
        // When syncing the value attribute, the value property should use
        // the wrapperState._initialValue property. This uses:
        //
        //   1. The value React property when present
        //   2. The defaultValue React property when present
        //   3. An empty string
        if (initialValue !== node.value) {
          node.value = initialValue;
        }
      }
    }

    {
      // Otherwise, the value attribute is synchronized to the property,
      // so we assign defaultValue to the same thing as the value property
      // assignment step above.
      node.defaultValue = initialValue;
    }
  } // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
  // this is needed to work around a chrome bug where setting defaultChecked
  // will sometimes influence the value of checked (even after detachment).
  // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
  // We need to temporarily unset name to avoid disrupting radio button groups.


  var name = node.name;

  if (name !== '') {
    node.name = '';
  }

  {
    // When syncing the checked attribute, both the checked property and
    // attribute are assigned at the same time using defaultChecked. This uses:
    //
    //   1. The checked React property when present
    //   2. The defaultChecked React property when present
    //   3. Otherwise, false
    node.defaultChecked = !node.defaultChecked;
    node.defaultChecked = !!node._wrapperState.initialChecked;
  }

  if (name !== '') {
    node.name = name;
  }
}
function restoreControlledState(element, props) {
  var node = element;
  updateWrapper(node, props);
  updateNamedCousins(node, props);
}

function updateNamedCousins(rootNode, props) {
  var name = props.name;

  if (props.type === 'radio' && name != null) {
    var queryRoot = rootNode;

    while (queryRoot.parentNode) {
      queryRoot = queryRoot.parentNode;
    } // If `rootNode.form` was non-null, then we could try `form.elements`,
    // but that sometimes behaves strangely in IE8. We could also try using
    // `form.getElementsByName`, but that will only return direct children
    // and won't include inputs that use the HTML5 `form=` attribute. Since
    // the input might not even be in a form. It might not even be in the
    // document. Let's just use the local `querySelectorAll` to ensure we don't
    // miss anything.


    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

    for (var i = 0; i < group.length; i++) {
      var otherNode = group[i];

      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
        continue;
      } // This will throw if radio buttons rendered by different copies of React
      // and the same name are rendered into the same form (same as #1939).
      // That's probably okay; we don't support it just as we don't support
      // mixing React radio buttons with non-React ones.


      var otherProps = getFiberCurrentPropsFromNode(otherNode);

      if (!otherProps) {
        {
          throw Error( "ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported." );
        }
      } // We need update the tracked value on the named cousin since the value
      // was changed but the input saw no event or value set


      updateValueIfChanged(otherNode); // If this is a controlled radio button group, forcing the input that
      // was previously checked to update will cause it to be come re-checked
      // as appropriate.

      updateWrapper(otherNode, otherProps);
    }
  }
} // In Chrome, assigning defaultValue to certain input types triggers input validation.
// For number inputs, the display value loses trailing decimal points. For email inputs,
// Chrome raises "The specified value <x> is not a valid email address".
//
// Here we check to see if the defaultValue has actually changed, avoiding these problems
// when the user is inputting text
//
// https://github.com/facebook/react/issues/7253


function setDefaultValue(node, type, value) {
  if ( // Focused number inputs synchronize on blur. See ChangeEventPlugin.js
  type !== 'number' || getActiveElement(node.ownerDocument) !== node) {
    if (value == null) {
      node.defaultValue = toString(node._wrapperState.initialValue);
    } else if (node.defaultValue !== toString(value)) {
      node.defaultValue = toString(value);
    }
  }
}

var didWarnSelectedSetOnOption = false;
var didWarnInvalidChild = false;

function flattenChildren(children) {
  var content = ''; // Flatten children. We'll warn if they are invalid
  // during validateProps() which runs for hydration too.
  // Note that this would throw on non-element objects.
  // Elements are stringified (which is normally irrelevant
  // but matters for <fbt>).

  React.Children.forEach(children, function (child) {
    if (child == null) {
      return;
    }

    content += child; // Note: we don't warn about invalid children here.
    // Instead, this is done separately below so that
    // it happens during the hydration code path too.
  });
  return content;
}
/**
 * Implements an <option> host component that warns when `selected` is set.
 */


function validateProps(element, props) {
  {
    // This mirrors the code path above, but runs for hydration too.
    // Warn about invalid children here so that client and hydration are consistent.
    // TODO: this seems like it could cause a DEV-only throw for hydration
    // if children contains a non-element object. We should try to avoid that.
    if (typeof props.children === 'object' && props.children !== null) {
      React.Children.forEach(props.children, function (child) {
        if (child == null) {
          return;
        }

        if (typeof child === 'string' || typeof child === 'number') {
          return;
        }

        if (typeof child.type !== 'string') {
          return;
        }

        if (!didWarnInvalidChild) {
          didWarnInvalidChild = true;

          error('Only strings and numbers are supported as <option> children.');
        }
      });
    } // TODO: Remove support for `selected` in <option>.


    if (props.selected != null && !didWarnSelectedSetOnOption) {
      error('Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.');

      didWarnSelectedSetOnOption = true;
    }
  }
}
function postMountWrapper$1(element, props) {
  // value="" should make a value attribute (#6219)
  if (props.value != null) {
    element.setAttribute('value', toString(getToStringValue(props.value)));
  }
}
function getHostProps$1(element, props) {
  var hostProps = _assign({
    children: undefined
  }, props);

  var content = flattenChildren(props.children);

  if (content) {
    hostProps.children = content;
  }

  return hostProps;
}

var didWarnValueDefaultValue$1;

{
  didWarnValueDefaultValue$1 = false;
}

function getDeclarationErrorAddendum() {
  var ownerName = getCurrentFiberOwnerNameInDevOrNull();

  if (ownerName) {
    return '\n\nCheck the render method of `' + ownerName + '`.';
  }

  return '';
}

var valuePropNames = ['value', 'defaultValue'];
/**
 * Validation function for `value` and `defaultValue`.
 */

function checkSelectPropTypes(props) {
  {
    checkControlledValueProps('select', props);

    for (var i = 0; i < valuePropNames.length; i++) {
      var propName = valuePropNames[i];

      if (props[propName] == null) {
        continue;
      }

      var isArray = Array.isArray(props[propName]);

      if (props.multiple && !isArray) {
        error('The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum());
      } else if (!props.multiple && isArray) {
        error('The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum());
      }
    }
  }
}

function updateOptions(node, multiple, propValue, setDefaultSelected) {
  var options = node.options;

  if (multiple) {
    var selectedValues = propValue;
    var selectedValue = {};

    for (var i = 0; i < selectedValues.length; i++) {
      // Prefix to avoid chaos with special keys.
      selectedValue['$' + selectedValues[i]] = true;
    }

    for (var _i = 0; _i < options.length; _i++) {
      var selected = selectedValue.hasOwnProperty('$' + options[_i].value);

      if (options[_i].selected !== selected) {
        options[_i].selected = selected;
      }

      if (selected && setDefaultSelected) {
        options[_i].defaultSelected = true;
      }
    }
  } else {
    // Do not set `select.value` as exact behavior isn't consistent across all
    // browsers for all cases.
    var _selectedValue = toString(getToStringValue(propValue));

    var defaultSelected = null;

    for (var _i2 = 0; _i2 < options.length; _i2++) {
      if (options[_i2].value === _selectedValue) {
        options[_i2].selected = true;

        if (setDefaultSelected) {
          options[_i2].defaultSelected = true;
        }

        return;
      }

      if (defaultSelected === null && !options[_i2].disabled) {
        defaultSelected = options[_i2];
      }
    }

    if (defaultSelected !== null) {
      defaultSelected.selected = true;
    }
  }
}
/**
 * Implements a <select> host component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */


function getHostProps$2(element, props) {
  return _assign({}, props, {
    value: undefined
  });
}
function initWrapperState$1(element, props) {
  var node = element;

  {
    checkSelectPropTypes(props);
  }

  node._wrapperState = {
    wasMultiple: !!props.multiple
  };

  {
    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue$1) {
      error('Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components');

      didWarnValueDefaultValue$1 = true;
    }
  }
}
function postMountWrapper$2(element, props) {
  var node = element;
  node.multiple = !!props.multiple;
  var value = props.value;

  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  } else if (props.defaultValue != null) {
    updateOptions(node, !!props.multiple, props.defaultValue, true);
  }
}
function postUpdateWrapper(element, props) {
  var node = element;
  var wasMultiple = node._wrapperState.wasMultiple;
  node._wrapperState.wasMultiple = !!props.multiple;
  var value = props.value;

  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  } else if (wasMultiple !== !!props.multiple) {
    // For simplicity, reapply `defaultValue` if `multiple` is toggled.
    if (props.defaultValue != null) {
      updateOptions(node, !!props.multiple, props.defaultValue, true);
    } else {
      // Revert the select back to its default unselected state.
      updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);
    }
  }
}
function restoreControlledState$1(element, props) {
  var node = element;
  var value = props.value;

  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  }
}

var didWarnValDefaultVal = false;

/**
 * Implements a <textarea> host component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */
function getHostProps$3(element, props) {
  var node = element;

  if (!(props.dangerouslySetInnerHTML == null)) {
    {
      throw Error( "`dangerouslySetInnerHTML` does not make sense on <textarea>." );
    }
  } // Always set children to the same thing. In IE9, the selection range will
  // get reset if `textContent` is mutated.  We could add a check in setTextContent
  // to only set the value if/when the value differs from the node value (which would
  // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this
  // solution. The value can be a boolean or object so that's why it's forced
  // to be a string.


  var hostProps = _assign({}, props, {
    value: undefined,
    defaultValue: undefined,
    children: toString(node._wrapperState.initialValue)
  });

  return hostProps;
}
function initWrapperState$2(element, props) {
  var node = element;

  {
    checkControlledValueProps('textarea', props);

    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
      error('%s contains a textarea with both value and defaultValue props. ' + 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component');

      didWarnValDefaultVal = true;
    }
  }

  var initialValue = props.value; // Only bother fetching default value if we're going to use it

  if (initialValue == null) {
    var children = props.children,
        defaultValue = props.defaultValue;

    if (children != null) {
      {
        error('Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.');
      }

      {
        if (!(defaultValue == null)) {
          {
            throw Error( "If you supply `defaultValue` on a <textarea>, do not pass children." );
          }
        }

        if (Array.isArray(children)) {
          if (!(children.length <= 1)) {
            {
              throw Error( "<textarea> can only have at most one child." );
            }
          }

          children = children[0];
        }

        defaultValue = children;
      }
    }

    if (defaultValue == null) {
      defaultValue = '';
    }

    initialValue = defaultValue;
  }

  node._wrapperState = {
    initialValue: getToStringValue(initialValue)
  };
}
function updateWrapper$1(element, props) {
  var node = element;
  var value = getToStringValue(props.value);
  var defaultValue = getToStringValue(props.defaultValue);

  if (value != null) {
    // Cast `value` to a string to ensure the value is set correctly. While
    // browsers typically do this as necessary, jsdom doesn't.
    var newValue = toString(value); // To avoid side effects (such as losing text selection), only set value if changed

    if (newValue !== node.value) {
      node.value = newValue;
    }

    if (props.defaultValue == null && node.defaultValue !== newValue) {
      node.defaultValue = newValue;
    }
  }

  if (defaultValue != null) {
    node.defaultValue = toString(defaultValue);
  }
}
function postMountWrapper$3(element, props) {
  var node = element; // This is in postMount because we need access to the DOM node, which is not
  // available until after the component has mounted.

  var textContent = node.textContent; // Only set node.value if textContent is equal to the expected
  // initial value. In IE10/IE11 there is a bug where the placeholder attribute
  // will populate textContent as well.
  // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/

  if (textContent === node._wrapperState.initialValue) {
    if (textContent !== '' && textContent !== null) {
      node.value = textContent;
    }
  }
}
function restoreControlledState$2(element, props) {
  // DOM component is still mounted; update
  updateWrapper$1(element, props);
}

var HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';
var MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';
var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';
var Namespaces = {
  html: HTML_NAMESPACE,
  mathml: MATH_NAMESPACE,
  svg: SVG_NAMESPACE
}; // Assumes there is no parent namespace.

function getIntrinsicNamespace(type) {
  switch (type) {
    case 'svg':
      return SVG_NAMESPACE;

    case 'math':
      return MATH_NAMESPACE;

    default:
      return HTML_NAMESPACE;
  }
}
function getChildNamespace(parentNamespace, type) {
  if (parentNamespace == null || parentNamespace === HTML_NAMESPACE) {
    // No (or default) parent namespace: potential entry point.
    return getIntrinsicNamespace(type);
  }

  if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {
    // We're leaving SVG.
    return HTML_NAMESPACE;
  } // By default, pass namespace below.


  return parentNamespace;
}

/* globals MSApp */

/**
 * Create a function which has 'unsafe' privileges (required by windows8 apps)
 */
var createMicrosoftUnsafeLocalFunction = function (func) {
  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
    return function (arg0, arg1, arg2, arg3) {
      MSApp.execUnsafeLocalFunction(function () {
        return func(arg0, arg1, arg2, arg3);
      });
    };
  } else {
    return func;
  }
};

var reusableSVGContainer;
/**
 * Set the innerHTML property of a node
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */

var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
  if (node.namespaceURI === Namespaces.svg) {

    if (!('innerHTML' in node)) {
      // IE does not have innerHTML for SVG nodes, so instead we inject the
      // new markup in a temp node and then move the child nodes across into
      // the target node
      reusableSVGContainer = reusableSVGContainer || document.createElement('div');
      reusableSVGContainer.innerHTML = '<svg>' + html.valueOf().toString() + '</svg>';
      var svgNode = reusableSVGContainer.firstChild;

      while (node.firstChild) {
        node.removeChild(node.firstChild);
      }

      while (svgNode.firstChild) {
        node.appendChild(svgNode.firstChild);
      }

      return;
    }
  }

  node.innerHTML = html;
});

/**
 * HTML nodeType values that represent the type of the node
 */
var ELEMENT_NODE = 1;
var TEXT_NODE = 3;
var COMMENT_NODE = 8;
var DOCUMENT_NODE = 9;
var DOCUMENT_FRAGMENT_NODE = 11;

/**
 * Set the textContent property of a node. For text updates, it's faster
 * to set the `nodeValue` of the Text node directly instead of using
 * `.textContent` which will remove the existing node and create a new one.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */

var setTextContent = function (node, text) {
  if (text) {
    var firstChild = node.firstChild;

    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
      firstChild.nodeValue = text;
      return;
    }
  }

  node.textContent = text;
};

// List derived from Gecko source code:
// https://github.com/mozilla/gecko-dev/blob/4e638efc71/layout/style/test/property_database.js
var shorthandToLonghand = {
  animation: ['animationDelay', 'animationDirection', 'animationDuration', 'animationFillMode', 'animationIterationCount', 'animationName', 'animationPlayState', 'animationTimingFunction'],
  background: ['backgroundAttachment', 'backgroundClip', 'backgroundColor', 'backgroundImage', 'backgroundOrigin', 'backgroundPositionX', 'backgroundPositionY', 'backgroundRepeat', 'backgroundSize'],
  backgroundPosition: ['backgroundPositionX', 'backgroundPositionY'],
  border: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth', 'borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth', 'borderLeftColor', 'borderLeftStyle', 'borderLeftWidth', 'borderRightColor', 'borderRightStyle', 'borderRightWidth', 'borderTopColor', 'borderTopStyle', 'borderTopWidth'],
  borderBlockEnd: ['borderBlockEndColor', 'borderBlockEndStyle', 'borderBlockEndWidth'],
  borderBlockStart: ['borderBlockStartColor', 'borderBlockStartStyle', 'borderBlockStartWidth'],
  borderBottom: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth'],
  borderColor: ['borderBottomColor', 'borderLeftColor', 'borderRightColor', 'borderTopColor'],
  borderImage: ['borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth'],
  borderInlineEnd: ['borderInlineEndColor', 'borderInlineEndStyle', 'borderInlineEndWidth'],
  borderInlineStart: ['borderInlineStartColor', 'borderInlineStartStyle', 'borderInlineStartWidth'],
  borderLeft: ['borderLeftColor', 'borderLeftStyle', 'borderLeftWidth'],
  borderRadius: ['borderBottomLeftRadius', 'borderBottomRightRadius', 'borderTopLeftRadius', 'borderTopRightRadius'],
  borderRight: ['borderRightColor', 'borderRightStyle', 'borderRightWidth'],
  borderStyle: ['borderBottomStyle', 'borderLeftStyle', 'borderRightStyle', 'borderTopStyle'],
  borderTop: ['borderTopColor', 'borderTopStyle', 'borderTopWidth'],
  borderWidth: ['borderBottomWidth', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth'],
  columnRule: ['columnRuleColor', 'columnRuleStyle', 'columnRuleWidth'],
  columns: ['columnCount', 'columnWidth'],
  flex: ['flexBasis', 'flexGrow', 'flexShrink'],
  flexFlow: ['flexDirection', 'flexWrap'],
  font: ['fontFamily', 'fontFeatureSettings', 'fontKerning', 'fontLanguageOverride', 'fontSize', 'fontSizeAdjust', 'fontStretch', 'fontStyle', 'fontVariant', 'fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition', 'fontWeight', 'lineHeight'],
  fontVariant: ['fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition'],
  gap: ['columnGap', 'rowGap'],
  grid: ['gridAutoColumns', 'gridAutoFlow', 'gridAutoRows', 'gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],
  gridArea: ['gridColumnEnd', 'gridColumnStart', 'gridRowEnd', 'gridRowStart'],
  gridColumn: ['gridColumnEnd', 'gridColumnStart'],
  gridColumnGap: ['columnGap'],
  gridGap: ['columnGap', 'rowGap'],
  gridRow: ['gridRowEnd', 'gridRowStart'],
  gridRowGap: ['rowGap'],
  gridTemplate: ['gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],
  listStyle: ['listStyleImage', 'listStylePosition', 'listStyleType'],
  margin: ['marginBottom', 'marginLeft', 'marginRight', 'marginTop'],
  marker: ['markerEnd', 'markerMid', 'markerStart'],
  mask: ['maskClip', 'maskComposite', 'maskImage', 'maskMode', 'maskOrigin', 'maskPositionX', 'maskPositionY', 'maskRepeat', 'maskSize'],
  maskPosition: ['maskPositionX', 'maskPositionY'],
  outline: ['outlineColor', 'outlineStyle', 'outlineWidth'],
  overflow: ['overflowX', 'overflowY'],
  padding: ['paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop'],
  placeContent: ['alignContent', 'justifyContent'],
  placeItems: ['alignItems', 'justifyItems'],
  placeSelf: ['alignSelf', 'justifySelf'],
  textDecoration: ['textDecorationColor', 'textDecorationLine', 'textDecorationStyle'],
  textEmphasis: ['textEmphasisColor', 'textEmphasisStyle'],
  transition: ['transitionDelay', 'transitionDuration', 'transitionProperty', 'transitionTimingFunction'],
  wordWrap: ['overflowWrap']
};

/**
 * CSS properties which accept numbers but are not in units of "px".
 */
var isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridArea: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,
  // SVG-related properties
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};
/**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */

function prefixKey(prefix, key) {
  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
}
/**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */


var prefixes = ['Webkit', 'ms', 'Moz', 'O']; // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
// infinite loop, because it iterates over the newly added props too.

Object.keys(isUnitlessNumber).forEach(function (prop) {
  prefixes.forEach(function (prefix) {
    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
  });
});

/**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @return {string} Normalized style value with dimensions applied.
 */

function dangerousStyleValue(name, value, isCustomProperty) {
  // Note that we've removed escapeTextForBrowser() calls here since the
  // whole string will be escaped when the attribute is injected into
  // the markup. If you provide unsafe user data here they can inject
  // arbitrary CSS which may be problematic (I couldn't repro this):
  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
  // This is not an XSS hole but instead a potential CSS injection issue
  // which has lead to a greater discussion about how we're going to
  // trust URLs moving forward. See #2115901
  var isEmpty = value == null || typeof value === 'boolean' || value === '';

  if (isEmpty) {
    return '';
  }

  if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {
    return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers
  }

  return ('' + value).trim();
}

var uppercasePattern = /([A-Z])/g;
var msPattern = /^ms-/;
/**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 */

function hyphenateStyleName(name) {
  return name.replace(uppercasePattern, '-$1').toLowerCase().replace(msPattern, '-ms-');
}

var warnValidStyle = function () {};

{
  // 'msTransform' is correct, but the other prefixes should be capitalized
  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
  var msPattern$1 = /^-ms-/;
  var hyphenPattern = /-(.)/g; // style values shouldn't contain a semicolon

  var badStyleValueWithSemicolonPattern = /;\s*$/;
  var warnedStyleNames = {};
  var warnedStyleValues = {};
  var warnedForNaNValue = false;
  var warnedForInfinityValue = false;

  var camelize = function (string) {
    return string.replace(hyphenPattern, function (_, character) {
      return character.toUpperCase();
    });
  };

  var warnHyphenatedStyleName = function (name) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;

    error('Unsupported style property %s. Did you mean %s?', name, // As Andi Smith suggests
    // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
    // is converted to lowercase `ms`.
    camelize(name.replace(msPattern$1, 'ms-')));
  };

  var warnBadVendoredStyleName = function (name) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;

    error('Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1));
  };

  var warnStyleValueWithSemicolon = function (name, value) {
    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
      return;
    }

    warnedStyleValues[value] = true;

    error("Style property values shouldn't contain a semicolon. " + 'Try "%s: %s" instead.', name, value.replace(badStyleValueWithSemicolonPattern, ''));
  };

  var warnStyleValueIsNaN = function (name, value) {
    if (warnedForNaNValue) {
      return;
    }

    warnedForNaNValue = true;

    error('`NaN` is an invalid value for the `%s` css style property.', name);
  };

  var warnStyleValueIsInfinity = function (name, value) {
    if (warnedForInfinityValue) {
      return;
    }

    warnedForInfinityValue = true;

    error('`Infinity` is an invalid value for the `%s` css style property.', name);
  };

  warnValidStyle = function (name, value) {
    if (name.indexOf('-') > -1) {
      warnHyphenatedStyleName(name);
    } else if (badVendoredStyleNamePattern.test(name)) {
      warnBadVendoredStyleName(name);
    } else if (badStyleValueWithSemicolonPattern.test(value)) {
      warnStyleValueWithSemicolon(name, value);
    }

    if (typeof value === 'number') {
      if (isNaN(value)) {
        warnStyleValueIsNaN(name, value);
      } else if (!isFinite(value)) {
        warnStyleValueIsInfinity(name, value);
      }
    }
  };
}

var warnValidStyle$1 = warnValidStyle;

/**
 * Operations for dealing with CSS properties.
 */

/**
 * This creates a string that is expected to be equivalent to the style
 * attribute generated by server-side rendering. It by-passes warnings and
 * security checks so it's not safe to use this value for anything other than
 * comparison. It is only used in DEV for SSR validation.
 */

function createDangerousStringForStyles(styles) {
  {
    var serialized = '';
    var delimiter = '';

    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }

      var styleValue = styles[styleName];

      if (styleValue != null) {
        var isCustomProperty = styleName.indexOf('--') === 0;
        serialized += delimiter + (isCustomProperty ? styleName : hyphenateStyleName(styleName)) + ':';
        serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);
        delimiter = ';';
      }
    }

    return serialized || null;
  }
}
/**
 * Sets the value for multiple styles on a node.  If a value is specified as
 * '' (empty string), the corresponding style property will be unset.
 *
 * @param {DOMElement} node
 * @param {object} styles
 */

function setValueForStyles(node, styles) {
  var style = node.style;

  for (var styleName in styles) {
    if (!styles.hasOwnProperty(styleName)) {
      continue;
    }

    var isCustomProperty = styleName.indexOf('--') === 0;

    {
      if (!isCustomProperty) {
        warnValidStyle$1(styleName, styles[styleName]);
      }
    }

    var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);

    if (styleName === 'float') {
      styleName = 'cssFloat';
    }

    if (isCustomProperty) {
      style.setProperty(styleName, styleValue);
    } else {
      style[styleName] = styleValue;
    }
  }
}

function isValueEmpty(value) {
  return value == null || typeof value === 'boolean' || value === '';
}
/**
 * Given {color: 'red', overflow: 'hidden'} returns {
 *   color: 'color',
 *   overflowX: 'overflow',
 *   overflowY: 'overflow',
 * }. This can be read as "the overflowY property was set by the overflow
 * shorthand". That is, the values are the property that each was derived from.
 */


function expandShorthandMap(styles) {
  var expanded = {};

  for (var key in styles) {
    var longhands = shorthandToLonghand[key] || [key];

    for (var i = 0; i < longhands.length; i++) {
      expanded[longhands[i]] = key;
    }
  }

  return expanded;
}
/**
 * When mixing shorthand and longhand property names, we warn during updates if
 * we expect an incorrect result to occur. In particular, we warn for:
 *
 * Updating a shorthand property (longhand gets overwritten):
 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'baz', fontVariant: 'bar'}
 *   becomes .style.font = 'baz'
 * Removing a shorthand property (longhand gets lost too):
 *   {font: 'foo', fontVariant: 'bar'} -> {fontVariant: 'bar'}
 *   becomes .style.font = ''
 * Removing a longhand property (should revert to shorthand; doesn't):
 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'foo'}
 *   becomes .style.fontVariant = ''
 */


function validateShorthandPropertyCollisionInDev(styleUpdates, nextStyles) {
  {
    if (!nextStyles) {
      return;
    }

    var expandedUpdates = expandShorthandMap(styleUpdates);
    var expandedStyles = expandShorthandMap(nextStyles);
    var warnedAbout = {};

    for (var key in expandedUpdates) {
      var originalKey = expandedUpdates[key];
      var correctOriginalKey = expandedStyles[key];

      if (correctOriginalKey && originalKey !== correctOriginalKey) {
        var warningKey = originalKey + ',' + correctOriginalKey;

        if (warnedAbout[warningKey]) {
          continue;
        }

        warnedAbout[warningKey] = true;

        error('%s a style property during rerender (%s) when a ' + 'conflicting property is set (%s) can lead to styling bugs. To ' + "avoid this, don't mix shorthand and non-shorthand properties " + 'for the same value; instead, replace the shorthand with ' + 'separate values.', isValueEmpty(styleUpdates[originalKey]) ? 'Removing' : 'Updating', originalKey, correctOriginalKey);
      }
    }
  }
}

// For HTML, certain tags should omit their close tag. We keep a list for
// those special-case tags.
var omittedCloseTags = {
  area: true,
  base: true,
  br: true,
  col: true,
  embed: true,
  hr: true,
  img: true,
  input: true,
  keygen: true,
  link: true,
  meta: true,
  param: true,
  source: true,
  track: true,
  wbr: true // NOTE: menuitem's close tag should be omitted, but that causes problems.

};

// `omittedCloseTags` except that `menuitem` should still have its closing tag.

var voidElementTags = _assign({
  menuitem: true
}, omittedCloseTags);

var HTML = '__html';

function assertValidProps(tag, props) {
  if (!props) {
    return;
  } // Note the use of `==` which checks for null or undefined.


  if (voidElementTags[tag]) {
    if (!(props.children == null && props.dangerouslySetInnerHTML == null)) {
      {
        throw Error( tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`." );
      }
    }
  }

  if (props.dangerouslySetInnerHTML != null) {
    if (!(props.children == null)) {
      {
        throw Error( "Can only set one of `children` or `props.dangerouslySetInnerHTML`." );
      }
    }

    if (!(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML)) {
      {
        throw Error( "`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information." );
      }
    }
  }

  {
    if (!props.suppressContentEditableWarning && props.contentEditable && props.children != null) {
      error('A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.');
    }
  }

  if (!(props.style == null || typeof props.style === 'object')) {
    {
      throw Error( "The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX." );
    }
  }
}

function isCustomComponent(tagName, props) {
  if (tagName.indexOf('-') === -1) {
    return typeof props.is === 'string';
  }

  switch (tagName) {
    // These are reserved SVG and MathML elements.
    // We don't mind this list too much because we expect it to never grow.
    // The alternative is to track the namespace in a few places which is convoluted.
    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
    case 'annotation-xml':
    case 'color-profile':
    case 'font-face':
    case 'font-face-src':
    case 'font-face-uri':
    case 'font-face-format':
    case 'font-face-name':
    case 'missing-glyph':
      return false;

    default:
      return true;
  }
}

// When adding attributes to the HTML or SVG allowed attribute list, be sure to
// also add them to this module to ensure casing and incorrect name
// warnings.
var possibleStandardNames = {
  // HTML
  accept: 'accept',
  acceptcharset: 'acceptCharset',
  'accept-charset': 'acceptCharset',
  accesskey: 'accessKey',
  action: 'action',
  allowfullscreen: 'allowFullScreen',
  alt: 'alt',
  as: 'as',
  async: 'async',
  autocapitalize: 'autoCapitalize',
  autocomplete: 'autoComplete',
  autocorrect: 'autoCorrect',
  autofocus: 'autoFocus',
  autoplay: 'autoPlay',
  autosave: 'autoSave',
  capture: 'capture',
  cellpadding: 'cellPadding',
  cellspacing: 'cellSpacing',
  challenge: 'challenge',
  charset: 'charSet',
  checked: 'checked',
  children: 'children',
  cite: 'cite',
  class: 'className',
  classid: 'classID',
  classname: 'className',
  cols: 'cols',
  colspan: 'colSpan',
  content: 'content',
  contenteditable: 'contentEditable',
  contextmenu: 'contextMenu',
  controls: 'controls',
  controlslist: 'controlsList',
  coords: 'coords',
  crossorigin: 'crossOrigin',
  dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
  data: 'data',
  datetime: 'dateTime',
  default: 'default',
  defaultchecked: 'defaultChecked',
  defaultvalue: 'defaultValue',
  defer: 'defer',
  dir: 'dir',
  disabled: 'disabled',
  disablepictureinpicture: 'disablePictureInPicture',
  disableremoteplayback: 'disableRemotePlayback',
  download: 'download',
  draggable: 'draggable',
  enctype: 'encType',
  enterkeyhint: 'enterKeyHint',
  for: 'htmlFor',
  form: 'form',
  formmethod: 'formMethod',
  formaction: 'formAction',
  formenctype: 'formEncType',
  formnovalidate: 'formNoValidate',
  formtarget: 'formTarget',
  frameborder: 'frameBorder',
  headers: 'headers',
  height: 'height',
  hidden: 'hidden',
  high: 'high',
  href: 'href',
  hreflang: 'hrefLang',
  htmlfor: 'htmlFor',
  httpequiv: 'httpEquiv',
  'http-equiv': 'httpEquiv',
  icon: 'icon',
  id: 'id',
  innerhtml: 'innerHTML',
  inputmode: 'inputMode',
  integrity: 'integrity',
  is: 'is',
  itemid: 'itemID',
  itemprop: 'itemProp',
  itemref: 'itemRef',
  itemscope: 'itemScope',
  itemtype: 'itemType',
  keyparams: 'keyParams',
  keytype: 'keyType',
  kind: 'kind',
  label: 'label',
  lang: 'lang',
  list: 'list',
  loop: 'loop',
  low: 'low',
  manifest: 'manifest',
  marginwidth: 'marginWidth',
  marginheight: 'marginHeight',
  max: 'max',
  maxlength: 'maxLength',
  media: 'media',
  mediagroup: 'mediaGroup',
  method: 'method',
  min: 'min',
  minlength: 'minLength',
  multiple: 'multiple',
  muted: 'muted',
  name: 'name',
  nomodule: 'noModule',
  nonce: 'nonce',
  novalidate: 'noValidate',
  open: 'open',
  optimum: 'optimum',
  pattern: 'pattern',
  placeholder: 'placeholder',
  playsinline: 'playsInline',
  poster: 'poster',
  preload: 'preload',
  profile: 'profile',
  radiogroup: 'radioGroup',
  readonly: 'readOnly',
  referrerpolicy: 'referrerPolicy',
  rel: 'rel',
  required: 'required',
  reversed: 'reversed',
  role: 'role',
  rows: 'rows',
  rowspan: 'rowSpan',
  sandbox: 'sandbox',
  scope: 'scope',
  scoped: 'scoped',
  scrolling: 'scrolling',
  seamless: 'seamless',
  selected: 'selected',
  shape: 'shape',
  size: 'size',
  sizes: 'sizes',
  span: 'span',
  spellcheck: 'spellCheck',
  src: 'src',
  srcdoc: 'srcDoc',
  srclang: 'srcLang',
  srcset: 'srcSet',
  start: 'start',
  step: 'step',
  style: 'style',
  summary: 'summary',
  tabindex: 'tabIndex',
  target: 'target',
  title: 'title',
  type: 'type',
  usemap: 'useMap',
  value: 'value',
  width: 'width',
  wmode: 'wmode',
  wrap: 'wrap',
  // SVG
  about: 'about',
  accentheight: 'accentHeight',
  'accent-height': 'accentHeight',
  accumulate: 'accumulate',
  additive: 'additive',
  alignmentbaseline: 'alignmentBaseline',
  'alignment-baseline': 'alignmentBaseline',
  allowreorder: 'allowReorder',
  alphabetic: 'alphabetic',
  amplitude: 'amplitude',
  arabicform: 'arabicForm',
  'arabic-form': 'arabicForm',
  ascent: 'ascent',
  attributename: 'attributeName',
  attributetype: 'attributeType',
  autoreverse: 'autoReverse',
  azimuth: 'azimuth',
  basefrequency: 'baseFrequency',
  baselineshift: 'baselineShift',
  'baseline-shift': 'baselineShift',
  baseprofile: 'baseProfile',
  bbox: 'bbox',
  begin: 'begin',
  bias: 'bias',
  by: 'by',
  calcmode: 'calcMode',
  capheight: 'capHeight',
  'cap-height': 'capHeight',
  clip: 'clip',
  clippath: 'clipPath',
  'clip-path': 'clipPath',
  clippathunits: 'clipPathUnits',
  cliprule: 'clipRule',
  'clip-rule': 'clipRule',
  color: 'color',
  colorinterpolation: 'colorInterpolation',
  'color-interpolation': 'colorInterpolation',
  colorinterpolationfilters: 'colorInterpolationFilters',
  'color-interpolation-filters': 'colorInterpolationFilters',
  colorprofile: 'colorProfile',
  'color-profile': 'colorProfile',
  colorrendering: 'colorRendering',
  'color-rendering': 'colorRendering',
  contentscripttype: 'contentScriptType',
  contentstyletype: 'contentStyleType',
  cursor: 'cursor',
  cx: 'cx',
  cy: 'cy',
  d: 'd',
  datatype: 'datatype',
  decelerate: 'decelerate',
  descent: 'descent',
  diffuseconstant: 'diffuseConstant',
  direction: 'direction',
  display: 'display',
  divisor: 'divisor',
  dominantbaseline: 'dominantBaseline',
  'dominant-baseline': 'dominantBaseline',
  dur: 'dur',
  dx: 'dx',
  dy: 'dy',
  edgemode: 'edgeMode',
  elevation: 'elevation',
  enablebackground: 'enableBackground',
  'enable-background': 'enableBackground',
  end: 'end',
  exponent: 'exponent',
  externalresourcesrequired: 'externalResourcesRequired',
  fill: 'fill',
  fillopacity: 'fillOpacity',
  'fill-opacity': 'fillOpacity',
  fillrule: 'fillRule',
  'fill-rule': 'fillRule',
  filter: 'filter',
  filterres: 'filterRes',
  filterunits: 'filterUnits',
  floodopacity: 'floodOpacity',
  'flood-opacity': 'floodOpacity',
  floodcolor: 'floodColor',
  'flood-color': 'floodColor',
  focusable: 'focusable',
  fontfamily: 'fontFamily',
  'font-family': 'fontFamily',
  fontsize: 'fontSize',
  'font-size': 'fontSize',
  fontsizeadjust: 'fontSizeAdjust',
  'font-size-adjust': 'fontSizeAdjust',
  fontstretch: 'fontStretch',
  'font-stretch': 'fontStretch',
  fontstyle: 'fontStyle',
  'font-style': 'fontStyle',
  fontvariant: 'fontVariant',
  'font-variant': 'fontVariant',
  fontweight: 'fontWeight',
  'font-weight': 'fontWeight',
  format: 'format',
  from: 'from',
  fx: 'fx',
  fy: 'fy',
  g1: 'g1',
  g2: 'g2',
  glyphname: 'glyphName',
  'glyph-name': 'glyphName',
  glyphorientationhorizontal: 'glyphOrientationHorizontal',
  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
  glyphorientationvertical: 'glyphOrientationVertical',
  'glyph-orientation-vertical': 'glyphOrientationVertical',
  glyphref: 'glyphRef',
  gradienttransform: 'gradientTransform',
  gradientunits: 'gradientUnits',
  hanging: 'hanging',
  horizadvx: 'horizAdvX',
  'horiz-adv-x': 'horizAdvX',
  horizoriginx: 'horizOriginX',
  'horiz-origin-x': 'horizOriginX',
  ideographic: 'ideographic',
  imagerendering: 'imageRendering',
  'image-rendering': 'imageRendering',
  in2: 'in2',
  in: 'in',
  inlist: 'inlist',
  intercept: 'intercept',
  k1: 'k1',
  k2: 'k2',
  k3: 'k3',
  k4: 'k4',
  k: 'k',
  kernelmatrix: 'kernelMatrix',
  kernelunitlength: 'kernelUnitLength',
  kerning: 'kerning',
  keypoints: 'keyPoints',
  keysplines: 'keySplines',
  keytimes: 'keyTimes',
  lengthadjust: 'lengthAdjust',
  letterspacing: 'letterSpacing',
  'letter-spacing': 'letterSpacing',
  lightingcolor: 'lightingColor',
  'lighting-color': 'lightingColor',
  limitingconeangle: 'limitingConeAngle',
  local: 'local',
  markerend: 'markerEnd',
  'marker-end': 'markerEnd',
  markerheight: 'markerHeight',
  markermid: 'markerMid',
  'marker-mid': 'markerMid',
  markerstart: 'markerStart',
  'marker-start': 'markerStart',
  markerunits: 'markerUnits',
  markerwidth: 'markerWidth',
  mask: 'mask',
  maskcontentunits: 'maskContentUnits',
  maskunits: 'maskUnits',
  mathematical: 'mathematical',
  mode: 'mode',
  numoctaves: 'numOctaves',
  offset: 'offset',
  opacity: 'opacity',
  operator: 'operator',
  order: 'order',
  orient: 'orient',
  orientation: 'orientation',
  origin: 'origin',
  overflow: 'overflow',
  overlineposition: 'overlinePosition',
  'overline-position': 'overlinePosition',
  overlinethickness: 'overlineThickness',
  'overline-thickness': 'overlineThickness',
  paintorder: 'paintOrder',
  'paint-order': 'paintOrder',
  panose1: 'panose1',
  'panose-1': 'panose1',
  pathlength: 'pathLength',
  patterncontentunits: 'patternContentUnits',
  patterntransform: 'patternTransform',
  patternunits: 'patternUnits',
  pointerevents: 'pointerEvents',
  'pointer-events': 'pointerEvents',
  points: 'points',
  pointsatx: 'pointsAtX',
  pointsaty: 'pointsAtY',
  pointsatz: 'pointsAtZ',
  prefix: 'prefix',
  preservealpha: 'preserveAlpha',
  preserveaspectratio: 'preserveAspectRatio',
  primitiveunits: 'primitiveUnits',
  property: 'property',
  r: 'r',
  radius: 'radius',
  refx: 'refX',
  refy: 'refY',
  renderingintent: 'renderingIntent',
  'rendering-intent': 'renderingIntent',
  repeatcount: 'repeatCount',
  repeatdur: 'repeatDur',
  requiredextensions: 'requiredExtensions',
  requiredfeatures: 'requiredFeatures',
  resource: 'resource',
  restart: 'restart',
  result: 'result',
  results: 'results',
  rotate: 'rotate',
  rx: 'rx',
  ry: 'ry',
  scale: 'scale',
  security: 'security',
  seed: 'seed',
  shaperendering: 'shapeRendering',
  'shape-rendering': 'shapeRendering',
  slope: 'slope',
  spacing: 'spacing',
  specularconstant: 'specularConstant',
  specularexponent: 'specularExponent',
  speed: 'speed',
  spreadmethod: 'spreadMethod',
  startoffset: 'startOffset',
  stddeviation: 'stdDeviation',
  stemh: 'stemh',
  stemv: 'stemv',
  stitchtiles: 'stitchTiles',
  stopcolor: 'stopColor',
  'stop-color': 'stopColor',
  stopopacity: 'stopOpacity',
  'stop-opacity': 'stopOpacity',
  strikethroughposition: 'strikethroughPosition',
  'strikethrough-position': 'strikethroughPosition',
  strikethroughthickness: 'strikethroughThickness',
  'strikethrough-thickness': 'strikethroughThickness',
  string: 'string',
  stroke: 'stroke',
  strokedasharray: 'strokeDasharray',
  'stroke-dasharray': 'strokeDasharray',
  strokedashoffset: 'strokeDashoffset',
  'stroke-dashoffset': 'strokeDashoffset',
  strokelinecap: 'strokeLinecap',
  'stroke-linecap': 'strokeLinecap',
  strokelinejoin: 'strokeLinejoin',
  'stroke-linejoin': 'strokeLinejoin',
  strokemiterlimit: 'strokeMiterlimit',
  'stroke-miterlimit': 'strokeMiterlimit',
  strokewidth: 'strokeWidth',
  'stroke-width': 'strokeWidth',
  strokeopacity: 'strokeOpacity',
  'stroke-opacity': 'strokeOpacity',
  suppresscontenteditablewarning: 'suppressContentEditableWarning',
  suppresshydrationwarning: 'suppressHydrationWarning',
  surfacescale: 'surfaceScale',
  systemlanguage: 'systemLanguage',
  tablevalues: 'tableValues',
  targetx: 'targetX',
  targety: 'targetY',
  textanchor: 'textAnchor',
  'text-anchor': 'textAnchor',
  textdecoration: 'textDecoration',
  'text-decoration': 'textDecoration',
  textlength: 'textLength',
  textrendering: 'textRendering',
  'text-rendering': 'textRendering',
  to: 'to',
  transform: 'transform',
  typeof: 'typeof',
  u1: 'u1',
  u2: 'u2',
  underlineposition: 'underlinePosition',
  'underline-position': 'underlinePosition',
  underlinethickness: 'underlineThickness',
  'underline-thickness': 'underlineThickness',
  unicode: 'unicode',
  unicodebidi: 'unicodeBidi',
  'unicode-bidi': 'unicodeBidi',
  unicoderange: 'unicodeRange',
  'unicode-range': 'unicodeRange',
  unitsperem: 'unitsPerEm',
  'units-per-em': 'unitsPerEm',
  unselectable: 'unselectable',
  valphabetic: 'vAlphabetic',
  'v-alphabetic': 'vAlphabetic',
  values: 'values',
  vectoreffect: 'vectorEffect',
  'vector-effect': 'vectorEffect',
  version: 'version',
  vertadvy: 'vertAdvY',
  'vert-adv-y': 'vertAdvY',
  vertoriginx: 'vertOriginX',
  'vert-origin-x': 'vertOriginX',
  vertoriginy: 'vertOriginY',
  'vert-origin-y': 'vertOriginY',
  vhanging: 'vHanging',
  'v-hanging': 'vHanging',
  videographic: 'vIdeographic',
  'v-ideographic': 'vIdeographic',
  viewbox: 'viewBox',
  viewtarget: 'viewTarget',
  visibility: 'visibility',
  vmathematical: 'vMathematical',
  'v-mathematical': 'vMathematical',
  vocab: 'vocab',
  widths: 'widths',
  wordspacing: 'wordSpacing',
  'word-spacing': 'wordSpacing',
  writingmode: 'writingMode',
  'writing-mode': 'writingMode',
  x1: 'x1',
  x2: 'x2',
  x: 'x',
  xchannelselector: 'xChannelSelector',
  xheight: 'xHeight',
  'x-height': 'xHeight',
  xlinkactuate: 'xlinkActuate',
  'xlink:actuate': 'xlinkActuate',
  xlinkarcrole: 'xlinkArcrole',
  'xlink:arcrole': 'xlinkArcrole',
  xlinkhref: 'xlinkHref',
  'xlink:href': 'xlinkHref',
  xlinkrole: 'xlinkRole',
  'xlink:role': 'xlinkRole',
  xlinkshow: 'xlinkShow',
  'xlink:show': 'xlinkShow',
  xlinktitle: 'xlinkTitle',
  'xlink:title': 'xlinkTitle',
  xlinktype: 'xlinkType',
  'xlink:type': 'xlinkType',
  xmlbase: 'xmlBase',
  'xml:base': 'xmlBase',
  xmllang: 'xmlLang',
  'xml:lang': 'xmlLang',
  xmlns: 'xmlns',
  'xml:space': 'xmlSpace',
  xmlnsxlink: 'xmlnsXlink',
  'xmlns:xlink': 'xmlnsXlink',
  xmlspace: 'xmlSpace',
  y1: 'y1',
  y2: 'y2',
  y: 'y',
  ychannelselector: 'yChannelSelector',
  z: 'z',
  zoomandpan: 'zoomAndPan'
};

var ariaProperties = {
  'aria-current': 0,
  // state
  'aria-details': 0,
  'aria-disabled': 0,
  // state
  'aria-hidden': 0,
  // state
  'aria-invalid': 0,
  // state
  'aria-keyshortcuts': 0,
  'aria-label': 0,
  'aria-roledescription': 0,
  // Widget Attributes
  'aria-autocomplete': 0,
  'aria-checked': 0,
  'aria-expanded': 0,
  'aria-haspopup': 0,
  'aria-level': 0,
  'aria-modal': 0,
  'aria-multiline': 0,
  'aria-multiselectable': 0,
  'aria-orientation': 0,
  'aria-placeholder': 0,
  'aria-pressed': 0,
  'aria-readonly': 0,
  'aria-required': 0,
  'aria-selected': 0,
  'aria-sort': 0,
  'aria-valuemax': 0,
  'aria-valuemin': 0,
  'aria-valuenow': 0,
  'aria-valuetext': 0,
  // Live Region Attributes
  'aria-atomic': 0,
  'aria-busy': 0,
  'aria-live': 0,
  'aria-relevant': 0,
  // Drag-and-Drop Attributes
  'aria-dropeffect': 0,
  'aria-grabbed': 0,
  // Relationship Attributes
  'aria-activedescendant': 0,
  'aria-colcount': 0,
  'aria-colindex': 0,
  'aria-colspan': 0,
  'aria-controls': 0,
  'aria-describedby': 0,
  'aria-errormessage': 0,
  'aria-flowto': 0,
  'aria-labelledby': 0,
  'aria-owns': 0,
  'aria-posinset': 0,
  'aria-rowcount': 0,
  'aria-rowindex': 0,
  'aria-rowspan': 0,
  'aria-setsize': 0
};

var warnedProperties = {};
var rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
var rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');
var hasOwnProperty$1 = Object.prototype.hasOwnProperty;

function validateProperty(tagName, name) {
  {
    if (hasOwnProperty$1.call(warnedProperties, name) && warnedProperties[name]) {
      return true;
    }

    if (rARIACamel.test(name)) {
      var ariaName = 'aria-' + name.slice(4).toLowerCase();
      var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null; // If this is an aria-* attribute, but is not listed in the known DOM
      // DOM properties, then it is an invalid aria-* attribute.

      if (correctName == null) {
        error('Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.', name);

        warnedProperties[name] = true;
        return true;
      } // aria-* attributes should be lowercase; suggest the lowercase version.


      if (name !== correctName) {
        error('Invalid ARIA attribute `%s`. Did you mean `%s`?', name, correctName);

        warnedProperties[name] = true;
        return true;
      }
    }

    if (rARIA.test(name)) {
      var lowerCasedName = name.toLowerCase();
      var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null; // If this is an aria-* attribute, but is not listed in the known DOM
      // DOM properties, then it is an invalid aria-* attribute.

      if (standardName == null) {
        warnedProperties[name] = true;
        return false;
      } // aria-* attributes should be lowercase; suggest the lowercase version.


      if (name !== standardName) {
        error('Unknown ARIA attribute `%s`. Did you mean `%s`?', name, standardName);

        warnedProperties[name] = true;
        return true;
      }
    }
  }

  return true;
}

function warnInvalidARIAProps(type, props) {
  {
    var invalidProps = [];

    for (var key in props) {
      var isValid = validateProperty(type, key);

      if (!isValid) {
        invalidProps.push(key);
      }
    }

    var unknownPropString = invalidProps.map(function (prop) {
      return '`' + prop + '`';
    }).join(', ');

    if (invalidProps.length === 1) {
      error('Invalid aria prop %s on <%s> tag. ' + 'For details, see https://reactjs.org/link/invalid-aria-props', unknownPropString, type);
    } else if (invalidProps.length > 1) {
      error('Invalid aria props %s on <%s> tag. ' + 'For details, see https://reactjs.org/link/invalid-aria-props', unknownPropString, type);
    }
  }
}

function validateProperties(type, props) {
  if (isCustomComponent(type, props)) {
    return;
  }

  warnInvalidARIAProps(type, props);
}

var didWarnValueNull = false;
function validateProperties$1(type, props) {
  {
    if (type !== 'input' && type !== 'textarea' && type !== 'select') {
      return;
    }

    if (props != null && props.value === null && !didWarnValueNull) {
      didWarnValueNull = true;

      if (type === 'select' && props.multiple) {
        error('`value` prop on `%s` should not be null. ' + 'Consider using an empty array when `multiple` is set to `true` ' + 'to clear the component or `undefined` for uncontrolled components.', type);
      } else {
        error('`value` prop on `%s` should not be null. ' + 'Consider using an empty string to clear the component or `undefined` ' + 'for uncontrolled components.', type);
      }
    }
  }
}

var validateProperty$1 = function () {};

{
  var warnedProperties$1 = {};
  var _hasOwnProperty = Object.prototype.hasOwnProperty;
  var EVENT_NAME_REGEX = /^on./;
  var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
  var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
  var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

  validateProperty$1 = function (tagName, name, value, eventRegistry) {
    if (_hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {
      return true;
    }

    var lowerCasedName = name.toLowerCase();

    if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {
      error('React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.');

      warnedProperties$1[name] = true;
      return true;
    } // We can't rely on the event system being injected on the server.


    if (eventRegistry != null) {
      var registrationNameDependencies = eventRegistry.registrationNameDependencies,
          possibleRegistrationNames = eventRegistry.possibleRegistrationNames;

      if (registrationNameDependencies.hasOwnProperty(name)) {
        return true;
      }

      var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;

      if (registrationName != null) {
        error('Invalid event handler property `%s`. Did you mean `%s`?', name, registrationName);

        warnedProperties$1[name] = true;
        return true;
      }

      if (EVENT_NAME_REGEX.test(name)) {
        error('Unknown event handler property `%s`. It will be ignored.', name);

        warnedProperties$1[name] = true;
        return true;
      }
    } else if (EVENT_NAME_REGEX.test(name)) {
      // If no event plugins have been injected, we are in a server environment.
      // So we can't tell if the event name is correct for sure, but we can filter
      // out known bad ones like `onclick`. We can't suggest a specific replacement though.
      if (INVALID_EVENT_NAME_REGEX.test(name)) {
        error('Invalid event handler property `%s`. ' + 'React events use the camelCase naming convention, for example `onClick`.', name);
      }

      warnedProperties$1[name] = true;
      return true;
    } // Let the ARIA attribute hook validate ARIA attributes


    if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
      return true;
    }

    if (lowerCasedName === 'innerhtml') {
      error('Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.');

      warnedProperties$1[name] = true;
      return true;
    }

    if (lowerCasedName === 'aria') {
      error('The `aria` attribute is reserved for future use in React. ' + 'Pass individual `aria-` attributes instead.');

      warnedProperties$1[name] = true;
      return true;
    }

    if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {
      error('Received a `%s` for a string attribute `is`. If this is expected, cast ' + 'the value to a string.', typeof value);

      warnedProperties$1[name] = true;
      return true;
    }

    if (typeof value === 'number' && isNaN(value)) {
      error('Received NaN for the `%s` attribute. If this is expected, cast ' + 'the value to a string.', name);

      warnedProperties$1[name] = true;
      return true;
    }

    var propertyInfo = getPropertyInfo(name);
    var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED; // Known attributes should match the casing specified in the property config.

    if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
      var standardName = possibleStandardNames[lowerCasedName];

      if (standardName !== name) {
        error('Invalid DOM property `%s`. Did you mean `%s`?', name, standardName);

        warnedProperties$1[name] = true;
        return true;
      }
    } else if (!isReserved && name !== lowerCasedName) {
      // Unknown attributes should have lowercase casing since that's how they
      // will be cased anyway with server rendering.
      error('React does not recognize the `%s` prop on a DOM element. If you ' + 'intentionally want it to appear in the DOM as a custom ' + 'attribute, spell it as lowercase `%s` instead. ' + 'If you accidentally passed it from a parent component, remove ' + 'it from the DOM element.', name, lowerCasedName);

      warnedProperties$1[name] = true;
      return true;
    }

    if (typeof value === 'boolean' && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
      if (value) {
        error('Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.', value, name, name, value, name);
      } else {
        error('Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
      }

      warnedProperties$1[name] = true;
      return true;
    } // Now that we've validated casing, do not validate
    // data types for reserved props


    if (isReserved) {
      return true;
    } // Warn when a known attribute is a bad type


    if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
      warnedProperties$1[name] = true;
      return false;
    } // Warn when passing the strings 'false' or 'true' into a boolean prop


    if ((value === 'false' || value === 'true') && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
      error('Received the string `%s` for the boolean attribute `%s`. ' + '%s ' + 'Did you mean %s={%s}?', value, name, value === 'false' ? 'The browser will interpret it as a truthy value.' : 'Although this works, it will not work as expected if you pass the string "false".', name, value);

      warnedProperties$1[name] = true;
      return true;
    }

    return true;
  };
}

var warnUnknownProperties = function (type, props, eventRegistry) {
  {
    var unknownProps = [];

    for (var key in props) {
      var isValid = validateProperty$1(type, key, props[key], eventRegistry);

      if (!isValid) {
        unknownProps.push(key);
      }
    }

    var unknownPropString = unknownProps.map(function (prop) {
      return '`' + prop + '`';
    }).join(', ');

    if (unknownProps.length === 1) {
      error('Invalid value for prop %s on <%s> tag. Either remove it from the element, ' + 'or pass a string or number value to keep it in the DOM. ' + 'For details, see https://reactjs.org/link/attribute-behavior ', unknownPropString, type);
    } else if (unknownProps.length > 1) {
      error('Invalid values for props %s on <%s> tag. Either remove them from the element, ' + 'or pass a string or number value to keep them in the DOM. ' + 'For details, see https://reactjs.org/link/attribute-behavior ', unknownPropString, type);
    }
  }
};

function validateProperties$2(type, props, eventRegistry) {
  if (isCustomComponent(type, props)) {
    return;
  }

  warnUnknownProperties(type, props, eventRegistry);
}

var IS_EVENT_HANDLE_NON_MANAGED_NODE = 1;
var IS_NON_DELEGATED = 1 << 1;
var IS_CAPTURE_PHASE = 1 << 2;
var IS_REPLAYED = 1 << 4;
// set to LEGACY_FB_SUPPORT. LEGACY_FB_SUPPORT only gets set when
// we call willDeferLaterForLegacyFBSupport, thus not bailing out
// will result in endless cycles like an infinite loop.
// We also don't want to defer during event replaying.

var SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS = IS_EVENT_HANDLE_NON_MANAGED_NODE | IS_NON_DELEGATED | IS_CAPTURE_PHASE;

/**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */

function getEventTarget(nativeEvent) {
  // Fallback to nativeEvent.srcElement for IE9
  // https://github.com/facebook/react/issues/12506
  var target = nativeEvent.target || nativeEvent.srcElement || window; // Normalize SVG <use> element events #4963

  if (target.correspondingUseElement) {
    target = target.correspondingUseElement;
  } // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
  // @see http://www.quirksmode.org/js/events_properties.html


  return target.nodeType === TEXT_NODE ? target.parentNode : target;
}

var restoreImpl = null;
var restoreTarget = null;
var restoreQueue = null;

function restoreStateOfTarget(target) {
  // We perform this translation at the end of the event loop so that we
  // always receive the correct fiber here
  var internalInstance = getInstanceFromNode(target);

  if (!internalInstance) {
    // Unmounted
    return;
  }

  if (!(typeof restoreImpl === 'function')) {
    {
      throw Error( "setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue." );
    }
  }

  var stateNode = internalInstance.stateNode; // Guard against Fiber being unmounted.

  if (stateNode) {
    var _props = getFiberCurrentPropsFromNode(stateNode);

    restoreImpl(internalInstance.stateNode, internalInstance.type, _props);
  }
}

function setRestoreImplementation(impl) {
  restoreImpl = impl;
}
function enqueueStateRestore(target) {
  if (restoreTarget) {
    if (restoreQueue) {
      restoreQueue.push(target);
    } else {
      restoreQueue = [target];
    }
  } else {
    restoreTarget = target;
  }
}
function needsStateRestore() {
  return restoreTarget !== null || restoreQueue !== null;
}
function restoreStateIfNeeded() {
  if (!restoreTarget) {
    return;
  }

  var target = restoreTarget;
  var queuedTargets = restoreQueue;
  restoreTarget = null;
  restoreQueue = null;
  restoreStateOfTarget(target);

  if (queuedTargets) {
    for (var i = 0; i < queuedTargets.length; i++) {
      restoreStateOfTarget(queuedTargets[i]);
    }
  }
}

// the renderer. Such as when we're dispatching events or if third party
// libraries need to call batchedUpdates. Eventually, this API will go away when
// everything is batched by default. We'll then have a similar API to opt-out of
// scheduled work and instead do synchronous work.
// Defaults

var batchedUpdatesImpl = function (fn, bookkeeping) {
  return fn(bookkeeping);
};

var discreteUpdatesImpl = function (fn, a, b, c, d) {
  return fn(a, b, c, d);
};

var flushDiscreteUpdatesImpl = function () {};

var batchedEventUpdatesImpl = batchedUpdatesImpl;
var isInsideEventHandler = false;
var isBatchingEventUpdates = false;

function finishEventHandler() {
  // Here we wait until all updates have propagated, which is important
  // when using controlled components within layers:
  // https://github.com/facebook/react/issues/1698
  // Then we restore state of any controlled component.
  var controlledComponentsHavePendingUpdates = needsStateRestore();

  if (controlledComponentsHavePendingUpdates) {
    // If a controlled event was fired, we may need to restore the state of
    // the DOM node back to the controlled value. This is necessary when React
    // bails out of the update without touching the DOM.
    flushDiscreteUpdatesImpl();
    restoreStateIfNeeded();
  }
}

function batchedUpdates(fn, bookkeeping) {
  if (isInsideEventHandler) {
    // If we are currently inside another batch, we need to wait until it
    // fully completes before restoring state.
    return fn(bookkeeping);
  }

  isInsideEventHandler = true;

  try {
    return batchedUpdatesImpl(fn, bookkeeping);
  } finally {
    isInsideEventHandler = false;
    finishEventHandler();
  }
}
function batchedEventUpdates(fn, a, b) {
  if (isBatchingEventUpdates) {
    // If we are currently inside another batch, we need to wait until it
    // fully completes before restoring state.
    return fn(a, b);
  }

  isBatchingEventUpdates = true;

  try {
    return batchedEventUpdatesImpl(fn, a, b);
  } finally {
    isBatchingEventUpdates = false;
    finishEventHandler();
  }
}
function discreteUpdates(fn, a, b, c, d) {
  var prevIsInsideEventHandler = isInsideEventHandler;
  isInsideEventHandler = true;

  try {
    return discreteUpdatesImpl(fn, a, b, c, d);
  } finally {
    isInsideEventHandler = prevIsInsideEventHandler;

    if (!isInsideEventHandler) {
      finishEventHandler();
    }
  }
}
function flushDiscreteUpdatesIfNeeded(timeStamp) {
  {
    if (!isInsideEventHandler) {
      flushDiscreteUpdatesImpl();
    }
  }
}
function setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl, _flushDiscreteUpdatesImpl, _batchedEventUpdatesImpl) {
  batchedUpdatesImpl = _batchedUpdatesImpl;
  discreteUpdatesImpl = _discreteUpdatesImpl;
  flushDiscreteUpdatesImpl = _flushDiscreteUpdatesImpl;
  batchedEventUpdatesImpl = _batchedEventUpdatesImpl;
}

function isInteractive(tag) {
  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
}

function shouldPreventMouseEvent(name, type, props) {
  switch (name) {
    case 'onClick':
    case 'onClickCapture':
    case 'onDoubleClick':
    case 'onDoubleClickCapture':
    case 'onMouseDown':
    case 'onMouseDownCapture':
    case 'onMouseMove':
    case 'onMouseMoveCapture':
    case 'onMouseUp':
    case 'onMouseUpCapture':
    case 'onMouseEnter':
      return !!(props.disabled && isInteractive(type));

    default:
      return false;
  }
}
/**
 * @param {object} inst The instance, which is the source of events.
 * @param {string} registrationName Name of listener (e.g. `onClick`).
 * @return {?function} The stored callback.
 */


function getListener(inst, registrationName) {
  var stateNode = inst.stateNode;

  if (stateNode === null) {
    // Work in progress (ex: onload events in incremental mode).
    return null;
  }

  var props = getFiberCurrentPropsFromNode(stateNode);

  if (props === null) {
    // Work in progress.
    return null;
  }

  var listener = props[registrationName];

  if (shouldPreventMouseEvent(registrationName, inst.type, props)) {
    return null;
  }

  if (!(!listener || typeof listener === 'function')) {
    {
      throw Error( "Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type." );
    }
  }

  return listener;
}

var passiveBrowserEventsSupported = false; // Check if browser support events with passive listeners
// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support

if (canUseDOM) {
  try {
    var options = {}; // $FlowFixMe: Ignore Flow complaining about needing a value

    Object.defineProperty(options, 'passive', {
      get: function () {
        passiveBrowserEventsSupported = true;
      }
    });
    window.addEventListener('test', options, options);
    window.removeEventListener('test', options, options);
  } catch (e) {
    passiveBrowserEventsSupported = false;
  }
}

function invokeGuardedCallbackProd(name, func, context, a, b, c, d, e, f) {
  var funcArgs = Array.prototype.slice.call(arguments, 3);

  try {
    func.apply(context, funcArgs);
  } catch (error) {
    this.onError(error);
  }
}

var invokeGuardedCallbackImpl = invokeGuardedCallbackProd;

{
  // In DEV mode, we swap out invokeGuardedCallback for a special version
  // that plays more nicely with the browser's DevTools. The idea is to preserve
  // "Pause on exceptions" behavior. Because React wraps all user-provided
  // functions in invokeGuardedCallback, and the production version of
  // invokeGuardedCallback uses a try-catch, all user exceptions are treated
  // like caught exceptions, and the DevTools won't pause unless the developer
  // takes the extra step of enabling pause on caught exceptions. This is
  // unintuitive, though, because even though React has caught the error, from
  // the developer's perspective, the error is uncaught.
  //
  // To preserve the expected "Pause on exceptions" behavior, we don't use a
  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake
  // DOM node, and call the user-provided callback from inside an event handler
  // for that fake event. If the callback throws, the error is "captured" using
  // a global event handler. But because the error happens in a different
  // event loop context, it does not interrupt the normal program flow.
  // Effectively, this gives us try-catch behavior without actually using
  // try-catch. Neat!
  // Check that the browser supports the APIs we need to implement our special
  // DEV version of invokeGuardedCallback
  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
    var fakeNode = document.createElement('react');

    invokeGuardedCallbackImpl = function invokeGuardedCallbackDev(name, func, context, a, b, c, d, e, f) {
      // If document doesn't exist we know for sure we will crash in this method
      // when we call document.createEvent(). However this can cause confusing
      // errors: https://github.com/facebookincubator/create-react-app/issues/3482
      // So we preemptively throw with a better message instead.
      if (!(typeof document !== 'undefined')) {
        {
          throw Error( "The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous." );
        }
      }

      var evt = document.createEvent('Event');
      var didCall = false; // Keeps track of whether the user-provided callback threw an error. We
      // set this to true at the beginning, then set it to false right after
      // calling the function. If the function errors, `didError` will never be
      // set to false. This strategy works even if the browser is flaky and
      // fails to call our global error handler, because it doesn't rely on
      // the error event at all.

      var didError = true; // Keeps track of the value of window.event so that we can reset it
      // during the callback to let user code access window.event in the
      // browsers that support it.

      var windowEvent = window.event; // Keeps track of the descriptor of window.event to restore it after event
      // dispatching: https://github.com/facebook/react/issues/13688

      var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, 'event');

      function restoreAfterDispatch() {
        // We immediately remove the callback from event listeners so that
        // nested `invokeGuardedCallback` calls do not clash. Otherwise, a
        // nested call would trigger the fake event handlers of any call higher
        // in the stack.
        fakeNode.removeEventListener(evtType, callCallback, false); // We check for window.hasOwnProperty('event') to prevent the
        // window.event assignment in both IE <= 10 as they throw an error
        // "Member not found" in strict mode, and in Firefox which does not
        // support window.event.

        if (typeof window.event !== 'undefined' && window.hasOwnProperty('event')) {
          window.event = windowEvent;
        }
      } // Create an event handler for our fake event. We will synchronously
      // dispatch our fake event using `dispatchEvent`. Inside the handler, we
      // call the user-provided callback.


      var funcArgs = Array.prototype.slice.call(arguments, 3);

      function callCallback() {
        didCall = true;
        restoreAfterDispatch();
        func.apply(context, funcArgs);
        didError = false;
      } // Create a global error event handler. We use this to capture the value
      // that was thrown. It's possible that this error handler will fire more
      // than once; for example, if non-React code also calls `dispatchEvent`
      // and a handler for that event throws. We should be resilient to most of
      // those cases. Even if our error event handler fires more than once, the
      // last error event is always used. If the callback actually does error,
      // we know that the last error event is the correct one, because it's not
      // possible for anything else to have happened in between our callback
      // erroring and the code that follows the `dispatchEvent` call below. If
      // the callback doesn't error, but the error event was fired, we know to
      // ignore it because `didError` will be false, as described above.


      var error; // Use this to track whether the error event is ever called.

      var didSetError = false;
      var isCrossOriginError = false;

      function handleWindowError(event) {
        error = event.error;
        didSetError = true;

        if (error === null && event.colno === 0 && event.lineno === 0) {
          isCrossOriginError = true;
        }

        if (event.defaultPrevented) {
          // Some other error handler has prevented default.
          // Browsers silence the error report if this happens.
          // We'll remember this to later decide whether to log it or not.
          if (error != null && typeof error === 'object') {
            try {
              error._suppressLogging = true;
            } catch (inner) {// Ignore.
            }
          }
        }
      } // Create a fake event type.


      var evtType = "react-" + (name ? name : 'invokeguardedcallback'); // Attach our event handlers

      window.addEventListener('error', handleWindowError);
      fakeNode.addEventListener(evtType, callCallback, false); // Synchronously dispatch our fake event. If the user-provided function
      // errors, it will trigger our global error handler.

      evt.initEvent(evtType, false, false);
      fakeNode.dispatchEvent(evt);

      if (windowEventDescriptor) {
        Object.defineProperty(window, 'event', windowEventDescriptor);
      }

      if (didCall && didError) {
        if (!didSetError) {
          // The callback errored, but the error event never fired.
          error = new Error('An error was thrown inside one of your components, but React ' + "doesn't know what it was. This is likely due to browser " + 'flakiness. React does its best to preserve the "Pause on ' + 'exceptions" behavior of the DevTools, which requires some ' + "DEV-mode only tricks. It's possible that these don't work in " + 'your browser. Try triggering the error in production mode, ' + 'or switching to a modern browser. If you suspect that this is ' + 'actually an issue with React, please file an issue.');
        } else if (isCrossOriginError) {
          error = new Error("A cross-origin error was thrown. React doesn't have access to " + 'the actual error object in development. ' + 'See https://reactjs.org/link/crossorigin-error for more information.');
        }

        this.onError(error);
      } // Remove our event listeners


      window.removeEventListener('error', handleWindowError);

      if (!didCall) {
        // Something went really wrong, and our event was not dispatched.
        // https://github.com/facebook/react/issues/16734
        // https://github.com/facebook/react/issues/16585
        // Fall back to the production implementation.
        restoreAfterDispatch();
        return invokeGuardedCallbackProd.apply(this, arguments);
      }
    };
  }
}

var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;

var hasError = false;
var caughtError = null; // Used by event system to capture/rethrow the first error.

var hasRethrowError = false;
var rethrowError = null;
var reporter = {
  onError: function (error) {
    hasError = true;
    caughtError = error;
  }
};
/**
 * Call a function while guarding against errors that happens within it.
 * Returns an error if it throws, otherwise null.
 *
 * In production, this is implemented using a try-catch. The reason we don't
 * use a try-catch directly is so that we can swap out a different
 * implementation in DEV mode.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} context The context to use when calling the function
 * @param {...*} args Arguments for function
 */

function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
  hasError = false;
  caughtError = null;
  invokeGuardedCallbackImpl$1.apply(reporter, arguments);
}
/**
 * Same as invokeGuardedCallback, but instead of returning an error, it stores
 * it in a global so it can be rethrown by `rethrowCaughtError` later.
 * TODO: See if caughtError and rethrowError can be unified.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} context The context to use when calling the function
 * @param {...*} args Arguments for function
 */

function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
  invokeGuardedCallback.apply(this, arguments);

  if (hasError) {
    var error = clearCaughtError();

    if (!hasRethrowError) {
      hasRethrowError = true;
      rethrowError = error;
    }
  }
}
/**
 * During execution of guarded functions we will capture the first error which
 * we will rethrow to be handled by the top level error handler.
 */

function rethrowCaughtError() {
  if (hasRethrowError) {
    var error = rethrowError;
    hasRethrowError = false;
    rethrowError = null;
    throw error;
  }
}
function hasCaughtError() {
  return hasError;
}
function clearCaughtError() {
  if (hasError) {
    var error = caughtError;
    hasError = false;
    caughtError = null;
    return error;
  } else {
    {
      {
        throw Error( "clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue." );
      }
    }
  }
}

/**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 *
 * Note that this module is currently shared and assumed to be stateless.
 * If this becomes an actual Map, that will break.
 */
function get(key) {
  return key._reactInternals;
}
function has(key) {
  return key._reactInternals !== undefined;
}
function set(key, value) {
  key._reactInternals = value;
}

// Don't change these two values. They're used by React Dev Tools.
var NoFlags =
/*                      */
0;
var PerformedWork =
/*                */
1; // You can change the rest (and add more).

var Placement =
/*                    */
2;
var Update =
/*                       */
4;
var PlacementAndUpdate =
/*           */
6;
var Deletion =
/*                     */
8;
var ContentReset =
/*                 */
16;
var Callback =
/*                     */
32;
var DidCapture =
/*                   */
64;
var Ref =
/*                          */
128;
var Snapshot =
/*                     */
256;
var Passive =
/*                      */
512; // TODO (effects) Remove this bit once the new reconciler is synced to the old.

var PassiveUnmountPendingDev =
/*     */
8192;
var Hydrating =
/*                    */
1024;
var HydratingAndUpdate =
/*           */
1028; // Passive & Update & Callback & Ref & Snapshot

var LifecycleEffectMask =
/*          */
932; // Union of all host effects

var HostEffectMask =
/*               */
2047; // These are not really side effects, but we still reuse this field.

var Incomplete =
/*                   */
2048;
var ShouldCapture =
/*                */
4096;
var ForceUpdateForLegacySuspense =
/* */
16384; // Static tags describe aspects of a fiber that are not specific to a render,

var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
function getNearestMountedFiber(fiber) {
  var node = fiber;
  var nearestMounted = fiber;

  if (!fiber.alternate) {
    // If there is no alternate, this might be a new tree that isn't inserted
    // yet. If it is, then it will have a pending insertion effect on it.
    var nextNode = node;

    do {
      node = nextNode;

      if ((node.flags & (Placement | Hydrating)) !== NoFlags) {
        // This is an insertion or in-progress hydration. The nearest possible
        // mounted fiber is the parent but we need to continue to figure out
        // if that one is still mounted.
        nearestMounted = node.return;
      }

      nextNode = node.return;
    } while (nextNode);
  } else {
    while (node.return) {
      node = node.return;
    }
  }

  if (node.tag === HostRoot) {
    // TODO: Check if this was a nested HostRoot when used with
    // renderContainerIntoSubtree.
    return nearestMounted;
  } // If we didn't hit the root, that means that we're in an disconnected tree
  // that has been unmounted.


  return null;
}
function getSuspenseInstanceFromFiber(fiber) {
  if (fiber.tag === SuspenseComponent) {
    var suspenseState = fiber.memoizedState;

    if (suspenseState === null) {
      var current = fiber.alternate;

      if (current !== null) {
        suspenseState = current.memoizedState;
      }
    }

    if (suspenseState !== null) {
      return suspenseState.dehydrated;
    }
  }

  return null;
}
function getContainerFromFiber(fiber) {
  return fiber.tag === HostRoot ? fiber.stateNode.containerInfo : null;
}
function isFiberMounted(fiber) {
  return getNearestMountedFiber(fiber) === fiber;
}
function isMounted(component) {
  {
    var owner = ReactCurrentOwner.current;

    if (owner !== null && owner.tag === ClassComponent) {
      var ownerFiber = owner;
      var instance = ownerFiber.stateNode;

      if (!instance._warnedAboutRefsInRender) {
        error('%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(ownerFiber.type) || 'A component');
      }

      instance._warnedAboutRefsInRender = true;
    }
  }

  var fiber = get(component);

  if (!fiber) {
    return false;
  }

  return getNearestMountedFiber(fiber) === fiber;
}

function assertIsMounted(fiber) {
  if (!(getNearestMountedFiber(fiber) === fiber)) {
    {
      throw Error( "Unable to find node on an unmounted component." );
    }
  }
}

function findCurrentFiberUsingSlowPath(fiber) {
  var alternate = fiber.alternate;

  if (!alternate) {
    // If there is no alternate, then we only need to check if it is mounted.
    var nearestMounted = getNearestMountedFiber(fiber);

    if (!(nearestMounted !== null)) {
      {
        throw Error( "Unable to find node on an unmounted component." );
      }
    }

    if (nearestMounted !== fiber) {
      return null;
    }

    return fiber;
  } // If we have two possible branches, we'll walk backwards up to the root
  // to see what path the root points to. On the way we may hit one of the
  // special cases and we'll deal with them.


  var a = fiber;
  var b = alternate;

  while (true) {
    var parentA = a.return;

    if (parentA === null) {
      // We're at the root.
      break;
    }

    var parentB = parentA.alternate;

    if (parentB === null) {
      // There is no alternate. This is an unusual case. Currently, it only
      // happens when a Suspense component is hidden. An extra fragment fiber
      // is inserted in between the Suspense fiber and its children. Skip
      // over this extra fragment fiber and proceed to the next parent.
      var nextParent = parentA.return;

      if (nextParent !== null) {
        a = b = nextParent;
        continue;
      } // If there's no parent, we're at the root.


      break;
    } // If both copies of the parent fiber point to the same child, we can
    // assume that the child is current. This happens when we bailout on low
    // priority: the bailed out fiber's child reuses the current child.


    if (parentA.child === parentB.child) {
      var child = parentA.child;

      while (child) {
        if (child === a) {
          // We've determined that A is the current branch.
          assertIsMounted(parentA);
          return fiber;
        }

        if (child === b) {
          // We've determined that B is the current branch.
          assertIsMounted(parentA);
          return alternate;
        }

        child = child.sibling;
      } // We should never have an alternate for any mounting node. So the only
      // way this could possibly happen is if this was unmounted, if at all.


      {
        {
          throw Error( "Unable to find node on an unmounted component." );
        }
      }
    }

    if (a.return !== b.return) {
      // The return pointer of A and the return pointer of B point to different
      // fibers. We assume that return pointers never criss-cross, so A must
      // belong to the child set of A.return, and B must belong to the child
      // set of B.return.
      a = parentA;
      b = parentB;
    } else {
      // The return pointers point to the same fiber. We'll have to use the
      // default, slow path: scan the child sets of each parent alternate to see
      // which child belongs to which set.
      //
      // Search parent A's child set
      var didFindChild = false;
      var _child = parentA.child;

      while (_child) {
        if (_child === a) {
          didFindChild = true;
          a = parentA;
          b = parentB;
          break;
        }

        if (_child === b) {
          didFindChild = true;
          b = parentA;
          a = parentB;
          break;
        }

        _child = _child.sibling;
      }

      if (!didFindChild) {
        // Search parent B's child set
        _child = parentB.child;

        while (_child) {
          if (_child === a) {
            didFindChild = true;
            a = parentB;
            b = parentA;
            break;
          }

          if (_child === b) {
            didFindChild = true;
            b = parentB;
            a = parentA;
            break;
          }

          _child = _child.sibling;
        }

        if (!didFindChild) {
          {
            throw Error( "Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue." );
          }
        }
      }
    }

    if (!(a.alternate === b)) {
      {
        throw Error( "Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue." );
      }
    }
  } // If the root is not a host container, we're in a disconnected tree. I.e.
  // unmounted.


  if (!(a.tag === HostRoot)) {
    {
      throw Error( "Unable to find node on an unmounted component." );
    }
  }

  if (a.stateNode.current === a) {
    // We've determined that A is the current branch.
    return fiber;
  } // Otherwise B has to be current branch.


  return alternate;
}
function findCurrentHostFiber(parent) {
  var currentParent = findCurrentFiberUsingSlowPath(parent);

  if (!currentParent) {
    return null;
  } // Next we'll drill down this component to find the first HostComponent/Text.


  var node = currentParent;

  while (true) {
    if (node.tag === HostComponent || node.tag === HostText) {
      return node;
    } else if (node.child) {
      node.child.return = node;
      node = node.child;
      continue;
    }

    if (node === currentParent) {
      return null;
    }

    while (!node.sibling) {
      if (!node.return || node.return === currentParent) {
        return null;
      }

      node = node.return;
    }

    node.sibling.return = node.return;
    node = node.sibling;
  } // Flow needs the return null here, but ESLint complains about it.
  // eslint-disable-next-line no-unreachable


  return null;
}
function findCurrentHostFiberWithNoPortals(parent) {
  var currentParent = findCurrentFiberUsingSlowPath(parent);

  if (!currentParent) {
    return null;
  } // Next we'll drill down this component to find the first HostComponent/Text.


  var node = currentParent;

  while (true) {
    if (node.tag === HostComponent || node.tag === HostText || enableFundamentalAPI ) {
      return node;
    } else if (node.child && node.tag !== HostPortal) {
      node.child.return = node;
      node = node.child;
      continue;
    }

    if (node === currentParent) {
      return null;
    }

    while (!node.sibling) {
      if (!node.return || node.return === currentParent) {
        return null;
      }

      node = node.return;
    }

    node.sibling.return = node.return;
    node = node.sibling;
  } // Flow needs the return null here, but ESLint complains about it.
  // eslint-disable-next-line no-unreachable


  return null;
}
function doesFiberContain(parentFiber, childFiber) {
  var node = childFiber;
  var parentFiberAlternate = parentFiber.alternate;

  while (node !== null) {
    if (node === parentFiber || node === parentFiberAlternate) {
      return true;
    }

    node = node.return;
  }

  return false;
}

var attemptUserBlockingHydration;
function setAttemptUserBlockingHydration(fn) {
  attemptUserBlockingHydration = fn;
}
var attemptContinuousHydration;
function setAttemptContinuousHydration(fn) {
  attemptContinuousHydration = fn;
}
var attemptHydrationAtCurrentPriority;
function setAttemptHydrationAtCurrentPriority(fn) {
  attemptHydrationAtCurrentPriority = fn;
}
var attemptHydrationAtPriority;
function setAttemptHydrationAtPriority(fn) {
  attemptHydrationAtPriority = fn;
} // TODO: Upgrade this definition once we're on a newer version of Flow that
var hasScheduledReplayAttempt = false; // The queue of discrete events to be replayed.

var queuedDiscreteEvents = []; // Indicates if any continuous event targets are non-null for early bailout.
// if the last target was dehydrated.

var queuedFocus = null;
var queuedDrag = null;
var queuedMouse = null; // For pointer events there can be one latest event per pointerId.

var queuedPointers = new Map();
var queuedPointerCaptures = new Map(); // We could consider replaying selectionchange and touchmoves too.

var queuedExplicitHydrationTargets = [];
function hasQueuedDiscreteEvents() {
  return queuedDiscreteEvents.length > 0;
}
var discreteReplayableEvents = ['mousedown', 'mouseup', 'touchcancel', 'touchend', 'touchstart', 'auxclick', 'dblclick', 'pointercancel', 'pointerdown', 'pointerup', 'dragend', 'dragstart', 'drop', 'compositionend', 'compositionstart', 'keydown', 'keypress', 'keyup', 'input', 'textInput', // Intentionally camelCase
'copy', 'cut', 'paste', 'click', 'change', 'contextmenu', 'reset', 'submit'];
function isReplayableDiscreteEvent(eventType) {
  return discreteReplayableEvents.indexOf(eventType) > -1;
}

function createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
  return {
    blockedOn: blockedOn,
    domEventName: domEventName,
    eventSystemFlags: eventSystemFlags | IS_REPLAYED,
    nativeEvent: nativeEvent,
    targetContainers: [targetContainer]
  };
}

function queueDiscreteEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
  var queuedEvent = createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);
  queuedDiscreteEvents.push(queuedEvent);
} // Resets the replaying for this type of continuous event to no event.

function clearIfContinuousEvent(domEventName, nativeEvent) {
  switch (domEventName) {
    case 'focusin':
    case 'focusout':
      queuedFocus = null;
      break;

    case 'dragenter':
    case 'dragleave':
      queuedDrag = null;
      break;

    case 'mouseover':
    case 'mouseout':
      queuedMouse = null;
      break;

    case 'pointerover':
    case 'pointerout':
      {
        var pointerId = nativeEvent.pointerId;
        queuedPointers.delete(pointerId);
        break;
      }

    case 'gotpointercapture':
    case 'lostpointercapture':
      {
        var _pointerId = nativeEvent.pointerId;
        queuedPointerCaptures.delete(_pointerId);
        break;
      }
  }
}

function accumulateOrCreateContinuousQueuedReplayableEvent(existingQueuedEvent, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
  if (existingQueuedEvent === null || existingQueuedEvent.nativeEvent !== nativeEvent) {
    var queuedEvent = createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);

    if (blockedOn !== null) {
      var _fiber2 = getInstanceFromNode(blockedOn);

      if (_fiber2 !== null) {
        // Attempt to increase the priority of this target.
        attemptContinuousHydration(_fiber2);
      }
    }

    return queuedEvent;
  } // If we have already queued this exact event, then it's because
  // the different event systems have different DOM event listeners.
  // We can accumulate the flags, and the targetContainers, and
  // store a single event to be replayed.


  existingQueuedEvent.eventSystemFlags |= eventSystemFlags;
  var targetContainers = existingQueuedEvent.targetContainers;

  if (targetContainer !== null && targetContainers.indexOf(targetContainer) === -1) {
    targetContainers.push(targetContainer);
  }

  return existingQueuedEvent;
}

function queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
  // These set relatedTarget to null because the replayed event will be treated as if we
  // moved from outside the window (no target) onto the target once it hydrates.
  // Instead of mutating we could clone the event.
  switch (domEventName) {
    case 'focusin':
      {
        var focusEvent = nativeEvent;
        queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(queuedFocus, blockedOn, domEventName, eventSystemFlags, targetContainer, focusEvent);
        return true;
      }

    case 'dragenter':
      {
        var dragEvent = nativeEvent;
        queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(queuedDrag, blockedOn, domEventName, eventSystemFlags, targetContainer, dragEvent);
        return true;
      }

    case 'mouseover':
      {
        var mouseEvent = nativeEvent;
        queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(queuedMouse, blockedOn, domEventName, eventSystemFlags, targetContainer, mouseEvent);
        return true;
      }

    case 'pointerover':
      {
        var pointerEvent = nativeEvent;
        var pointerId = pointerEvent.pointerId;
        queuedPointers.set(pointerId, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointers.get(pointerId) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, pointerEvent));
        return true;
      }

    case 'gotpointercapture':
      {
        var _pointerEvent = nativeEvent;
        var _pointerId2 = _pointerEvent.pointerId;
        queuedPointerCaptures.set(_pointerId2, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointerCaptures.get(_pointerId2) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, _pointerEvent));
        return true;
      }
  }

  return false;
} // Check if this target is unblocked. Returns true if it's unblocked.

function attemptExplicitHydrationTarget(queuedTarget) {
  // TODO: This function shares a lot of logic with attemptToDispatchEvent.
  // Try to unify them. It's a bit tricky since it would require two return
  // values.
  var targetInst = getClosestInstanceFromNode(queuedTarget.target);

  if (targetInst !== null) {
    var nearestMounted = getNearestMountedFiber(targetInst);

    if (nearestMounted !== null) {
      var tag = nearestMounted.tag;

      if (tag === SuspenseComponent) {
        var instance = getSuspenseInstanceFromFiber(nearestMounted);

        if (instance !== null) {
          // We're blocked on hydrating this boundary.
          // Increase its priority.
          queuedTarget.blockedOn = instance;
          attemptHydrationAtPriority(queuedTarget.lanePriority, function () {
            Scheduler.unstable_runWithPriority(queuedTarget.priority, function () {
              attemptHydrationAtCurrentPriority(nearestMounted);
            });
          });
          return;
        }
      } else if (tag === HostRoot) {
        var root = nearestMounted.stateNode;

        if (root.hydrate) {
          queuedTarget.blockedOn = getContainerFromFiber(nearestMounted); // We don't currently have a way to increase the priority of
          // a root other than sync.

          return;
        }
      }
    }
  }

  queuedTarget.blockedOn = null;
}

function attemptReplayContinuousQueuedEvent(queuedEvent) {
  if (queuedEvent.blockedOn !== null) {
    return false;
  }

  var targetContainers = queuedEvent.targetContainers;

  while (targetContainers.length > 0) {
    var targetContainer = targetContainers[0];
    var nextBlockedOn = attemptToDispatchEvent(queuedEvent.domEventName, queuedEvent.eventSystemFlags, targetContainer, queuedEvent.nativeEvent);

    if (nextBlockedOn !== null) {
      // We're still blocked. Try again later.
      var _fiber3 = getInstanceFromNode(nextBlockedOn);

      if (_fiber3 !== null) {
        attemptContinuousHydration(_fiber3);
      }

      queuedEvent.blockedOn = nextBlockedOn;
      return false;
    } // This target container was successfully dispatched. Try the next.


    targetContainers.shift();
  }

  return true;
}

function attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {
  if (attemptReplayContinuousQueuedEvent(queuedEvent)) {
    map.delete(key);
  }
}

function replayUnblockedEvents() {
  hasScheduledReplayAttempt = false; // First replay discrete events.

  while (queuedDiscreteEvents.length > 0) {
    var nextDiscreteEvent = queuedDiscreteEvents[0];

    if (nextDiscreteEvent.blockedOn !== null) {
      // We're still blocked.
      // Increase the priority of this boundary to unblock
      // the next discrete event.
      var _fiber4 = getInstanceFromNode(nextDiscreteEvent.blockedOn);

      if (_fiber4 !== null) {
        attemptUserBlockingHydration(_fiber4);
      }

      break;
    }

    var targetContainers = nextDiscreteEvent.targetContainers;

    while (targetContainers.length > 0) {
      var targetContainer = targetContainers[0];
      var nextBlockedOn = attemptToDispatchEvent(nextDiscreteEvent.domEventName, nextDiscreteEvent.eventSystemFlags, targetContainer, nextDiscreteEvent.nativeEvent);

      if (nextBlockedOn !== null) {
        // We're still blocked. Try again later.
        nextDiscreteEvent.blockedOn = nextBlockedOn;
        break;
      } // This target container was successfully dispatched. Try the next.


      targetContainers.shift();
    }

    if (nextDiscreteEvent.blockedOn === null) {
      // We've successfully replayed the first event. Let's try the next one.
      queuedDiscreteEvents.shift();
    }
  } // Next replay any continuous events.


  if (queuedFocus !== null && attemptReplayContinuousQueuedEvent(queuedFocus)) {
    queuedFocus = null;
  }

  if (queuedDrag !== null && attemptReplayContinuousQueuedEvent(queuedDrag)) {
    queuedDrag = null;
  }

  if (queuedMouse !== null && attemptReplayContinuousQueuedEvent(queuedMouse)) {
    queuedMouse = null;
  }

  queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);
  queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);
}

function scheduleCallbackIfUnblocked(queuedEvent, unblocked) {
  if (queuedEvent.blockedOn === unblocked) {
    queuedEvent.blockedOn = null;

    if (!hasScheduledReplayAttempt) {
      hasScheduledReplayAttempt = true; // Schedule a callback to attempt replaying as many events as are
      // now unblocked. This first might not actually be unblocked yet.
      // We could check it early to avoid scheduling an unnecessary callback.

      Scheduler.unstable_scheduleCallback(Scheduler.unstable_NormalPriority, replayUnblockedEvents);
    }
  }
}

function retryIfBlockedOn(unblocked) {
  // Mark anything that was blocked on this as no longer blocked
  // and eligible for a replay.
  if (queuedDiscreteEvents.length > 0) {
    scheduleCallbackIfUnblocked(queuedDiscreteEvents[0], unblocked); // This is a exponential search for each boundary that commits. I think it's
    // worth it because we expect very few discrete events to queue up and once
    // we are actually fully unblocked it will be fast to replay them.

    for (var i = 1; i < queuedDiscreteEvents.length; i++) {
      var queuedEvent = queuedDiscreteEvents[i];

      if (queuedEvent.blockedOn === unblocked) {
        queuedEvent.blockedOn = null;
      }
    }
  }

  if (queuedFocus !== null) {
    scheduleCallbackIfUnblocked(queuedFocus, unblocked);
  }

  if (queuedDrag !== null) {
    scheduleCallbackIfUnblocked(queuedDrag, unblocked);
  }

  if (queuedMouse !== null) {
    scheduleCallbackIfUnblocked(queuedMouse, unblocked);
  }

  var unblock = function (queuedEvent) {
    return scheduleCallbackIfUnblocked(queuedEvent, unblocked);
  };

  queuedPointers.forEach(unblock);
  queuedPointerCaptures.forEach(unblock);

  for (var _i = 0; _i < queuedExplicitHydrationTargets.length; _i++) {
    var queuedTarget = queuedExplicitHydrationTargets[_i];

    if (queuedTarget.blockedOn === unblocked) {
      queuedTarget.blockedOn = null;
    }
  }

  while (queuedExplicitHydrationTargets.length > 0) {
    var nextExplicitTarget = queuedExplicitHydrationTargets[0];

    if (nextExplicitTarget.blockedOn !== null) {
      // We're still blocked.
      break;
    } else {
      attemptExplicitHydrationTarget(nextExplicitTarget);

      if (nextExplicitTarget.blockedOn === null) {
        // We're unblocked.
        queuedExplicitHydrationTargets.shift();
      }
    }
  }
}

var DiscreteEvent = 0;
var UserBlockingEvent = 1;
var ContinuousEvent = 2;

/**
 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
 *
 * @param {string} styleProp
 * @param {string} eventName
 * @returns {object}
 */

function makePrefixMap(styleProp, eventName) {
  var prefixes = {};
  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
  prefixes['Moz' + styleProp] = 'moz' + eventName;
  return prefixes;
}
/**
 * A list of event names to a configurable list of vendor prefixes.
 */


var vendorPrefixes = {
  animationend: makePrefixMap('Animation', 'AnimationEnd'),
  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
  animationstart: makePrefixMap('Animation', 'AnimationStart'),
  transitionend: makePrefixMap('Transition', 'TransitionEnd')
};
/**
 * Event names that have already been detected and prefixed (if applicable).
 */

var prefixedEventNames = {};
/**
 * Element to check for prefixes on.
 */

var style = {};
/**
 * Bootstrap if a DOM exists.
 */

if (canUseDOM) {
  style = document.createElement('div').style; // On some platforms, in particular some releases of Android 4.x,
  // the un-prefixed "animation" and "transition" properties are defined on the
  // style object but the events that fire will still be prefixed, so we need
  // to check if the un-prefixed events are usable, and if not remove them from the map.

  if (!('AnimationEvent' in window)) {
    delete vendorPrefixes.animationend.animation;
    delete vendorPrefixes.animationiteration.animation;
    delete vendorPrefixes.animationstart.animation;
  } // Same as above


  if (!('TransitionEvent' in window)) {
    delete vendorPrefixes.transitionend.transition;
  }
}
/**
 * Attempts to determine the correct vendor prefixed event name.
 *
 * @param {string} eventName
 * @returns {string}
 */


function getVendorPrefixedEventName(eventName) {
  if (prefixedEventNames[eventName]) {
    return prefixedEventNames[eventName];
  } else if (!vendorPrefixes[eventName]) {
    return eventName;
  }

  var prefixMap = vendorPrefixes[eventName];

  for (var styleProp in prefixMap) {
    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
      return prefixedEventNames[eventName] = prefixMap[styleProp];
    }
  }

  return eventName;
}

var ANIMATION_END = getVendorPrefixedEventName('animationend');
var ANIMATION_ITERATION = getVendorPrefixedEventName('animationiteration');
var ANIMATION_START = getVendorPrefixedEventName('animationstart');
var TRANSITION_END = getVendorPrefixedEventName('transitionend');

var topLevelEventsToReactNames = new Map();
var eventPriorities = new Map(); // We store most of the events in this module in pairs of two strings so we can re-use
// the code required to apply the same logic for event prioritization and that of the
// SimpleEventPlugin. This complicates things slightly, but the aim is to reduce code
// duplication (for which there would be quite a bit). For the events that are not needed
// for the SimpleEventPlugin (otherDiscreteEvents) we process them separately as an
// array of top level events.
// Lastly, we ignore prettier so we can keep the formatting sane.
// prettier-ignore

var discreteEventPairsForSimpleEventPlugin = ['cancel', 'cancel', 'click', 'click', 'close', 'close', 'contextmenu', 'contextMenu', 'copy', 'copy', 'cut', 'cut', 'auxclick', 'auxClick', 'dblclick', 'doubleClick', // Careful!
'dragend', 'dragEnd', 'dragstart', 'dragStart', 'drop', 'drop', 'focusin', 'focus', // Careful!
'focusout', 'blur', // Careful!
'input', 'input', 'invalid', 'invalid', 'keydown', 'keyDown', 'keypress', 'keyPress', 'keyup', 'keyUp', 'mousedown', 'mouseDown', 'mouseup', 'mouseUp', 'paste', 'paste', 'pause', 'pause', 'play', 'play', 'pointercancel', 'pointerCancel', 'pointerdown', 'pointerDown', 'pointerup', 'pointerUp', 'ratechange', 'rateChange', 'reset', 'reset', 'seeked', 'seeked', 'submit', 'submit', 'touchcancel', 'touchCancel', 'touchend', 'touchEnd', 'touchstart', 'touchStart', 'volumechange', 'volumeChange'];
var otherDiscreteEvents = ['change', 'selectionchange', 'textInput', 'compositionstart', 'compositionend', 'compositionupdate'];


var userBlockingPairsForSimpleEventPlugin = ['drag', 'drag', 'dragenter', 'dragEnter', 'dragexit', 'dragExit', 'dragleave', 'dragLeave', 'dragover', 'dragOver', 'mousemove', 'mouseMove', 'mouseout', 'mouseOut', 'mouseover', 'mouseOver', 'pointermove', 'pointerMove', 'pointerout', 'pointerOut', 'pointerover', 'pointerOver', 'scroll', 'scroll', 'toggle', 'toggle', 'touchmove', 'touchMove', 'wheel', 'wheel']; // prettier-ignore

var continuousPairsForSimpleEventPlugin = ['abort', 'abort', ANIMATION_END, 'animationEnd', ANIMATION_ITERATION, 'animationIteration', ANIMATION_START, 'animationStart', 'canplay', 'canPlay', 'canplaythrough', 'canPlayThrough', 'durationchange', 'durationChange', 'emptied', 'emptied', 'encrypted', 'encrypted', 'ended', 'ended', 'error', 'error', 'gotpointercapture', 'gotPointerCapture', 'load', 'load', 'loadeddata', 'loadedData', 'loadedmetadata', 'loadedMetadata', 'loadstart', 'loadStart', 'lostpointercapture', 'lostPointerCapture', 'playing', 'playing', 'progress', 'progress', 'seeking', 'seeking', 'stalled', 'stalled', 'suspend', 'suspend', 'timeupdate', 'timeUpdate', TRANSITION_END, 'transitionEnd', 'waiting', 'waiting'];
/**
 * Turns
 * ['abort', ...]
 *
 * into
 *
 * topLevelEventsToReactNames = new Map([
 *   ['abort', 'onAbort'],
 * ]);
 *
 * and registers them.
 */

function registerSimplePluginEventsAndSetTheirPriorities(eventTypes, priority) {
  // As the event types are in pairs of two, we need to iterate
  // through in twos. The events are in pairs of two to save code
  // and improve init perf of processing this array, as it will
  // result in far fewer object allocations and property accesses
  // if we only use three arrays to process all the categories of
  // instead of tuples.
  for (var i = 0; i < eventTypes.length; i += 2) {
    var topEvent = eventTypes[i];
    var event = eventTypes[i + 1];
    var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
    var reactName = 'on' + capitalizedEvent;
    eventPriorities.set(topEvent, priority);
    topLevelEventsToReactNames.set(topEvent, reactName);
    registerTwoPhaseEvent(reactName, [topEvent]);
  }
}

function setEventPriorities(eventTypes, priority) {
  for (var i = 0; i < eventTypes.length; i++) {
    eventPriorities.set(eventTypes[i], priority);
  }
}

function getEventPriorityForPluginSystem(domEventName) {
  var priority = eventPriorities.get(domEventName); // Default to a ContinuousEvent. Note: we might
  // want to warn if we can't detect the priority
  // for the event.

  return priority === undefined ? ContinuousEvent : priority;
}
function registerSimpleEvents() {
  registerSimplePluginEventsAndSetTheirPriorities(discreteEventPairsForSimpleEventPlugin, DiscreteEvent);
  registerSimplePluginEventsAndSetTheirPriorities(userBlockingPairsForSimpleEventPlugin, UserBlockingEvent);
  registerSimplePluginEventsAndSetTheirPriorities(continuousPairsForSimpleEventPlugin, ContinuousEvent);
  setEventPriorities(otherDiscreteEvents, DiscreteEvent);
}

var Scheduler_now = Scheduler.unstable_now;

{
  // Provide explicit error message when production+profiling bundle of e.g.
  // react-dom is used with production (non-profiling) bundle of
  // scheduler/tracing
  if (!(tracing.__interactionsRef != null && tracing.__interactionsRef.current != null)) {
    {
      throw Error( "It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `scheduler/tracing` module with `scheduler/tracing-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at https://reactjs.org/link/profiling" );
    }
  }
}
// ascending numbers so we can compare them like numbers. They start at 90 to
// avoid clashing with Scheduler's priorities.

var ImmediatePriority = 99;
var UserBlockingPriority = 98;
var NormalPriority = 97;
var LowPriority = 96;
var IdlePriority = 95; // NoPriority is the absence of priority. Also React-only.

var NoPriority = 90;
var initialTimeMs = Scheduler_now(); // If the initial timestamp is reasonably small, use Scheduler's `now` directly.

var SyncLanePriority = 15;
var SyncBatchedLanePriority = 14;
var InputDiscreteHydrationLanePriority = 13;
var InputDiscreteLanePriority = 12;
var InputContinuousHydrationLanePriority = 11;
var InputContinuousLanePriority = 10;
var DefaultHydrationLanePriority = 9;
var DefaultLanePriority = 8;
var TransitionHydrationPriority = 7;
var TransitionPriority = 6;
var RetryLanePriority = 5;
var SelectiveHydrationLanePriority = 4;
var IdleHydrationLanePriority = 3;
var IdleLanePriority = 2;
var OffscreenLanePriority = 1;
var NoLanePriority = 0;
var TotalLanes = 31;
var NoLanes =
/*                        */
0;
var NoLane =
/*                          */
0;
var SyncLane =
/*                        */
1;
var SyncBatchedLane =
/*                 */
2;
var InputDiscreteHydrationLane =
/*      */
4;
var InputDiscreteLanes =
/*                    */
24;
var InputContinuousHydrationLane =
/*           */
32;
var InputContinuousLanes =
/*                  */
192;
var DefaultHydrationLane =
/*            */
256;
var DefaultLanes =
/*                   */
3584;
var TransitionHydrationLane =
/*                */
4096;
var TransitionLanes =
/*                       */
4186112;
var RetryLanes =
/*                            */
62914560;
var SomeRetryLane =
/*                  */
33554432;
var SelectiveHydrationLane =
/*          */
67108864;
var NonIdleLanes =
/*                                 */
134217727;
var IdleHydrationLane =
/*               */
134217728;
var IdleLanes =
/*                             */
805306368;
var OffscreenLane =
/*                   */
1073741824;
var NoTimestamp = -1;
function setCurrentUpdateLanePriority(newLanePriority) {
} // "Registers" used to "return" multiple values
// Used by getHighestPriorityLanes and getNextLanes:

var return_highestLanePriority = DefaultLanePriority;

function getHighestPriorityLanes(lanes) {
  if ((SyncLane & lanes) !== NoLanes) {
    return_highestLanePriority = SyncLanePriority;
    return SyncLane;
  }

  if ((SyncBatchedLane & lanes) !== NoLanes) {
    return_highestLanePriority = SyncBatchedLanePriority;
    return SyncBatchedLane;
  }

  if ((InputDiscreteHydrationLane & lanes) !== NoLanes) {
    return_highestLanePriority = InputDiscreteHydrationLanePriority;
    return InputDiscreteHydrationLane;
  }

  var inputDiscreteLanes = InputDiscreteLanes & lanes;

  if (inputDiscreteLanes !== NoLanes) {
    return_highestLanePriority = InputDiscreteLanePriority;
    return inputDiscreteLanes;
  }

  if ((lanes & InputContinuousHydrationLane) !== NoLanes) {
    return_highestLanePriority = InputContinuousHydrationLanePriority;
    return InputContinuousHydrationLane;
  }

  var inputContinuousLanes = InputContinuousLanes & lanes;

  if (inputContinuousLanes !== NoLanes) {
    return_highestLanePriority = InputContinuousLanePriority;
    return inputContinuousLanes;
  }

  if ((lanes & DefaultHydrationLane) !== NoLanes) {
    return_highestLanePriority = DefaultHydrationLanePriority;
    return DefaultHydrationLane;
  }

  var defaultLanes = DefaultLanes & lanes;

  if (defaultLanes !== NoLanes) {
    return_highestLanePriority = DefaultLanePriority;
    return defaultLanes;
  }

  if ((lanes & TransitionHydrationLane) !== NoLanes) {
    return_highestLanePriority = TransitionHydrationPriority;
    return TransitionHydrationLane;
  }

  var transitionLanes = TransitionLanes & lanes;

  if (transitionLanes !== NoLanes) {
    return_highestLanePriority = TransitionPriority;
    return transitionLanes;
  }

  var retryLanes = RetryLanes & lanes;

  if (retryLanes !== NoLanes) {
    return_highestLanePriority = RetryLanePriority;
    return retryLanes;
  }

  if (lanes & SelectiveHydrationLane) {
    return_highestLanePriority = SelectiveHydrationLanePriority;
    return SelectiveHydrationLane;
  }

  if ((lanes & IdleHydrationLane) !== NoLanes) {
    return_highestLanePriority = IdleHydrationLanePriority;
    return IdleHydrationLane;
  }

  var idleLanes = IdleLanes & lanes;

  if (idleLanes !== NoLanes) {
    return_highestLanePriority = IdleLanePriority;
    return idleLanes;
  }

  if ((OffscreenLane & lanes) !== NoLanes) {
    return_highestLanePriority = OffscreenLanePriority;
    return OffscreenLane;
  }

  {
    error('Should have found matching lanes. This is a bug in React.');
  } // This shouldn't be reachable, but as a fallback, return the entire bitmask.


  return_highestLanePriority = DefaultLanePriority;
  return lanes;
}

function schedulerPriorityToLanePriority(schedulerPriorityLevel) {
  switch (schedulerPriorityLevel) {
    case ImmediatePriority:
      return SyncLanePriority;

    case UserBlockingPriority:
      return InputContinuousLanePriority;

    case NormalPriority:
    case LowPriority:
      // TODO: Handle LowSchedulerPriority, somehow. Maybe the same lane as hydration.
      return DefaultLanePriority;

    case IdlePriority:
      return IdleLanePriority;

    default:
      return NoLanePriority;
  }
}
function lanePriorityToSchedulerPriority(lanePriority) {
  switch (lanePriority) {
    case SyncLanePriority:
    case SyncBatchedLanePriority:
      return ImmediatePriority;

    case InputDiscreteHydrationLanePriority:
    case InputDiscreteLanePriority:
    case InputContinuousHydrationLanePriority:
    case InputContinuousLanePriority:
      return UserBlockingPriority;

    case DefaultHydrationLanePriority:
    case DefaultLanePriority:
    case TransitionHydrationPriority:
    case TransitionPriority:
    case SelectiveHydrationLanePriority:
    case RetryLanePriority:
      return NormalPriority;

    case IdleHydrationLanePriority:
    case IdleLanePriority:
    case OffscreenLanePriority:
      return IdlePriority;

    case NoLanePriority:
      return NoPriority;

    default:
      {
        {
          throw Error( "Invalid update priority: " + lanePriority + ". This is a bug in React." );
        }
      }

  }
}
function getNextLanes(root, wipLanes) {
  // Early bailout if there's no pending work left.
  var pendingLanes = root.pendingLanes;

  if (pendingLanes === NoLanes) {
    return_highestLanePriority = NoLanePriority;
    return NoLanes;
  }

  var nextLanes = NoLanes;
  var nextLanePriority = NoLanePriority;
  var expiredLanes = root.expiredLanes;
  var suspendedLanes = root.suspendedLanes;
  var pingedLanes = root.pingedLanes; // Check if any work has expired.

  if (expiredLanes !== NoLanes) {
    nextLanes = expiredLanes;
    nextLanePriority = return_highestLanePriority = SyncLanePriority;
  } else {
    // Do not work on any idle work until all the non-idle work has finished,
    // even if the work is suspended.
    var nonIdlePendingLanes = pendingLanes & NonIdleLanes;

    if (nonIdlePendingLanes !== NoLanes) {
      var nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;

      if (nonIdleUnblockedLanes !== NoLanes) {
        nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);
        nextLanePriority = return_highestLanePriority;
      } else {
        var nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;

        if (nonIdlePingedLanes !== NoLanes) {
          nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);
          nextLanePriority = return_highestLanePriority;
        }
      }
    } else {
      // The only remaining work is Idle.
      var unblockedLanes = pendingLanes & ~suspendedLanes;

      if (unblockedLanes !== NoLanes) {
        nextLanes = getHighestPriorityLanes(unblockedLanes);
        nextLanePriority = return_highestLanePriority;
      } else {
        if (pingedLanes !== NoLanes) {
          nextLanes = getHighestPriorityLanes(pingedLanes);
          nextLanePriority = return_highestLanePriority;
        }
      }
    }
  }

  if (nextLanes === NoLanes) {
    // This should only be reachable if we're suspended
    // TODO: Consider warning in this path if a fallback timer is not scheduled.
    return NoLanes;
  } // If there are higher priority lanes, we'll include them even if they
  // are suspended.


  nextLanes = pendingLanes & getEqualOrHigherPriorityLanes(nextLanes); // If we're already in the middle of a render, switching lanes will interrupt
  // it and we'll lose our progress. We should only do this if the new lanes are
  // higher priority.

  if (wipLanes !== NoLanes && wipLanes !== nextLanes && // If we already suspended with a delay, then interrupting is fine. Don't
  // bother waiting until the root is complete.
  (wipLanes & suspendedLanes) === NoLanes) {
    getHighestPriorityLanes(wipLanes);
    var wipLanePriority = return_highestLanePriority;

    if (nextLanePriority <= wipLanePriority) {
      return wipLanes;
    } else {
      return_highestLanePriority = nextLanePriority;
    }
  } // Check for entangled lanes and add them to the batch.
  //
  // A lane is said to be entangled with another when it's not allowed to render
  // in a batch that does not also include the other lane. Typically we do this
  // when multiple updates have the same source, and we only want to respond to
  // the most recent event from that source.
  //
  // Note that we apply entanglements *after* checking for partial work above.
  // This means that if a lane is entangled during an interleaved event while
  // it's already rendering, we won't interrupt it. This is intentional, since
  // entanglement is usually "best effort": we'll try our best to render the
  // lanes in the same batch, but it's not worth throwing out partially
  // completed work in order to do it.
  //
  // For those exceptions where entanglement is semantically important, like
  // useMutableSource, we should ensure that there is no partial work at the
  // time we apply the entanglement.


  var entangledLanes = root.entangledLanes;

  if (entangledLanes !== NoLanes) {
    var entanglements = root.entanglements;
    var lanes = nextLanes & entangledLanes;

    while (lanes > 0) {
      var index = pickArbitraryLaneIndex(lanes);
      var lane = 1 << index;
      nextLanes |= entanglements[index];
      lanes &= ~lane;
    }
  }

  return nextLanes;
}
function getMostRecentEventTime(root, lanes) {
  var eventTimes = root.eventTimes;
  var mostRecentEventTime = NoTimestamp;

  while (lanes > 0) {
    var index = pickArbitraryLaneIndex(lanes);
    var lane = 1 << index;
    var eventTime = eventTimes[index];

    if (eventTime > mostRecentEventTime) {
      mostRecentEventTime = eventTime;
    }

    lanes &= ~lane;
  }

  return mostRecentEventTime;
}

function computeExpirationTime(lane, currentTime) {
  // TODO: Expiration heuristic is constant per lane, so could use a map.
  getHighestPriorityLanes(lane);
  var priority = return_highestLanePriority;

  if (priority >= InputContinuousLanePriority) {
    // User interactions should expire slightly more quickly.
    //
    // NOTE: This is set to the corresponding constant as in Scheduler.js. When
    // we made it larger, a product metric in www regressed, suggesting there's
    // a user interaction that's being starved by a series of synchronous
    // updates. If that theory is correct, the proper solution is to fix the
    // starvation. However, this scenario supports the idea that expiration
    // times are an important safeguard when starvation does happen.
    //
    // Also note that, in the case of user input specifically, this will soon no
    // longer be an issue because we plan to make user input synchronous by
    // default (until you enter `startTransition`, of course.)
    //
    // If weren't planning to make these updates synchronous soon anyway, I
    // would probably make this number a configurable parameter.
    return currentTime + 250;
  } else if (priority >= TransitionPriority) {
    return currentTime + 5000;
  } else {
    // Anything idle priority or lower should never expire.
    return NoTimestamp;
  }
}

function markStarvedLanesAsExpired(root, currentTime) {
  // TODO: This gets called every time we yield. We can optimize by storing
  // the earliest expiration time on the root. Then use that to quickly bail out
  // of this function.
  var pendingLanes = root.pendingLanes;
  var suspendedLanes = root.suspendedLanes;
  var pingedLanes = root.pingedLanes;
  var expirationTimes = root.expirationTimes; // Iterate through the pending lanes and check if we've reached their
  // expiration time. If so, we'll assume the update is being starved and mark
  // it as expired to force it to finish.

  var lanes = pendingLanes;

  while (lanes > 0) {
    var index = pickArbitraryLaneIndex(lanes);
    var lane = 1 << index;
    var expirationTime = expirationTimes[index];

    if (expirationTime === NoTimestamp) {
      // Found a pending lane with no expiration time. If it's not suspended, or
      // if it's pinged, assume it's CPU-bound. Compute a new expiration time
      // using the current time.
      if ((lane & suspendedLanes) === NoLanes || (lane & pingedLanes) !== NoLanes) {
        // Assumes timestamps are monotonically increasing.
        expirationTimes[index] = computeExpirationTime(lane, currentTime);
      }
    } else if (expirationTime <= currentTime) {
      // This lane expired
      root.expiredLanes |= lane;
    }

    lanes &= ~lane;
  }
} // This returns the highest priority pending lanes regardless of whether they
function getLanesToRetrySynchronouslyOnError(root) {
  var everythingButOffscreen = root.pendingLanes & ~OffscreenLane;

  if (everythingButOffscreen !== NoLanes) {
    return everythingButOffscreen;
  }

  if (everythingButOffscreen & OffscreenLane) {
    return OffscreenLane;
  }

  return NoLanes;
}
function returnNextLanesPriority() {
  return return_highestLanePriority;
}
function includesNonIdleWork(lanes) {
  return (lanes & NonIdleLanes) !== NoLanes;
}
function includesOnlyRetries(lanes) {
  return (lanes & RetryLanes) === lanes;
}
function includesOnlyTransitions(lanes) {
  return (lanes & TransitionLanes) === lanes;
} // To ensure consistency across multiple updates in the same event, this should
// be a pure function, so that it always returns the same lane for given inputs.

function findUpdateLane(lanePriority, wipLanes) {
  switch (lanePriority) {
    case NoLanePriority:
      break;

    case SyncLanePriority:
      return SyncLane;

    case SyncBatchedLanePriority:
      return SyncBatchedLane;

    case InputDiscreteLanePriority:
      {
        var _lane = pickArbitraryLane(InputDiscreteLanes & ~wipLanes);

        if (_lane === NoLane) {
          // Shift to the next priority level
          return findUpdateLane(InputContinuousLanePriority, wipLanes);
        }

        return _lane;
      }

    case InputContinuousLanePriority:
      {
        var _lane2 = pickArbitraryLane(InputContinuousLanes & ~wipLanes);

        if (_lane2 === NoLane) {
          // Shift to the next priority level
          return findUpdateLane(DefaultLanePriority, wipLanes);
        }

        return _lane2;
      }

    case DefaultLanePriority:
      {
        var _lane3 = pickArbitraryLane(DefaultLanes & ~wipLanes);

        if (_lane3 === NoLane) {
          // If all the default lanes are already being worked on, look for a
          // lane in the transition range.
          _lane3 = pickArbitraryLane(TransitionLanes & ~wipLanes);

          if (_lane3 === NoLane) {
            // All the transition lanes are taken, too. This should be very
            // rare, but as a last resort, pick a default lane. This will have
            // the effect of interrupting the current work-in-progress render.
            _lane3 = pickArbitraryLane(DefaultLanes);
          }
        }

        return _lane3;
      }

    case TransitionPriority: // Should be handled by findTransitionLane instead

    case RetryLanePriority:
      // Should be handled by findRetryLane instead
      break;

    case IdleLanePriority:
      var lane = pickArbitraryLane(IdleLanes & ~wipLanes);

      if (lane === NoLane) {
        lane = pickArbitraryLane(IdleLanes);
      }

      return lane;
  }

  {
    {
      throw Error( "Invalid update priority: " + lanePriority + ". This is a bug in React." );
    }
  }
} // To ensure consistency across multiple updates in the same event, this should
// be pure function, so that it always returns the same lane for given inputs.

function findTransitionLane(wipLanes, pendingLanes) {
  // First look for lanes that are completely unclaimed, i.e. have no
  // pending work.
  var lane = pickArbitraryLane(TransitionLanes & ~pendingLanes);

  if (lane === NoLane) {
    // If all lanes have pending work, look for a lane that isn't currently
    // being worked on.
    lane = pickArbitraryLane(TransitionLanes & ~wipLanes);

    if (lane === NoLane) {
      // If everything is being worked on, pick any lane. This has the
      // effect of interrupting the current work-in-progress.
      lane = pickArbitraryLane(TransitionLanes);
    }
  }

  return lane;
} // To ensure consistency across multiple updates in the same event, this should
// be pure function, so that it always returns the same lane for given inputs.

function findRetryLane(wipLanes) {
  // This is a fork of `findUpdateLane` designed specifically for Suspense
  // "retries" — a special update that attempts to flip a Suspense boundary
  // from its placeholder state to its primary/resolved state.
  var lane = pickArbitraryLane(RetryLanes & ~wipLanes);

  if (lane === NoLane) {
    lane = pickArbitraryLane(RetryLanes);
  }

  return lane;
}

function getHighestPriorityLane(lanes) {
  return lanes & -lanes;
}

function getLowestPriorityLane(lanes) {
  // This finds the most significant non-zero bit.
  var index = 31 - clz32(lanes);
  return index < 0 ? NoLanes : 1 << index;
}

function getEqualOrHigherPriorityLanes(lanes) {
  return (getLowestPriorityLane(lanes) << 1) - 1;
}

function pickArbitraryLane(lanes) {
  // This wrapper function gets inlined. Only exists so to communicate that it
  // doesn't matter which bit is selected; you can pick any bit without
  // affecting the algorithms where its used. Here I'm using
  // getHighestPriorityLane because it requires the fewest operations.
  return getHighestPriorityLane(lanes);
}

function pickArbitraryLaneIndex(lanes) {
  return 31 - clz32(lanes);
}

function laneToIndex(lane) {
  return pickArbitraryLaneIndex(lane);
}

function includesSomeLane(a, b) {
  return (a & b) !== NoLanes;
}
function isSubsetOfLanes(set, subset) {
  return (set & subset) === subset;
}
function mergeLanes(a, b) {
  return a | b;
}
function removeLanes(set, subset) {
  return set & ~subset;
} // Seems redundant, but it changes the type from a single lane (used for
// updates) to a group of lanes (used for flushing work).

function laneToLanes(lane) {
  return lane;
}
function higherPriorityLane(a, b) {
  // This works because the bit ranges decrease in priority as you go left.
  return a !== NoLane && a < b ? a : b;
}
function createLaneMap(initial) {
  // Intentionally pushing one by one.
  // https://v8.dev/blog/elements-kinds#avoid-creating-holes
  var laneMap = [];

  for (var i = 0; i < TotalLanes; i++) {
    laneMap.push(initial);
  }

  return laneMap;
}
function markRootUpdated(root, updateLane, eventTime) {
  root.pendingLanes |= updateLane; // TODO: Theoretically, any update to any lane can unblock any other lane. But
  // it's not practical to try every single possible combination. We need a
  // heuristic to decide which lanes to attempt to render, and in which batches.
  // For now, we use the same heuristic as in the old ExpirationTimes model:
  // retry any lane at equal or lower priority, but don't try updates at higher
  // priority without also including the lower priority updates. This works well
  // when considering updates across different priority levels, but isn't
  // sufficient for updates within the same priority, since we want to treat
  // those updates as parallel.
  // Unsuspend any update at equal or lower priority.

  var higherPriorityLanes = updateLane - 1; // Turns 0b1000 into 0b0111

  root.suspendedLanes &= higherPriorityLanes;
  root.pingedLanes &= higherPriorityLanes;
  var eventTimes = root.eventTimes;
  var index = laneToIndex(updateLane); // We can always overwrite an existing timestamp because we prefer the most
  // recent event, and we assume time is monotonically increasing.

  eventTimes[index] = eventTime;
}
function markRootSuspended(root, suspendedLanes) {
  root.suspendedLanes |= suspendedLanes;
  root.pingedLanes &= ~suspendedLanes; // The suspended lanes are no longer CPU-bound. Clear their expiration times.

  var expirationTimes = root.expirationTimes;
  var lanes = suspendedLanes;

  while (lanes > 0) {
    var index = pickArbitraryLaneIndex(lanes);
    var lane = 1 << index;
    expirationTimes[index] = NoTimestamp;
    lanes &= ~lane;
  }
}
function markRootPinged(root, pingedLanes, eventTime) {
  root.pingedLanes |= root.suspendedLanes & pingedLanes;
}
function markDiscreteUpdatesExpired(root) {
  root.expiredLanes |= InputDiscreteLanes & root.pendingLanes;
}
function hasDiscreteLanes(lanes) {
  return (lanes & InputDiscreteLanes) !== NoLanes;
}
function markRootMutableRead(root, updateLane) {
  root.mutableReadLanes |= updateLane & root.pendingLanes;
}
function markRootFinished(root, remainingLanes) {
  var noLongerPendingLanes = root.pendingLanes & ~remainingLanes;
  root.pendingLanes = remainingLanes; // Let's try everything again

  root.suspendedLanes = 0;
  root.pingedLanes = 0;
  root.expiredLanes &= remainingLanes;
  root.mutableReadLanes &= remainingLanes;
  root.entangledLanes &= remainingLanes;
  var entanglements = root.entanglements;
  var eventTimes = root.eventTimes;
  var expirationTimes = root.expirationTimes; // Clear the lanes that no longer have pending work

  var lanes = noLongerPendingLanes;

  while (lanes > 0) {
    var index = pickArbitraryLaneIndex(lanes);
    var lane = 1 << index;
    entanglements[index] = NoLanes;
    eventTimes[index] = NoTimestamp;
    expirationTimes[index] = NoTimestamp;
    lanes &= ~lane;
  }
}
function markRootEntangled(root, entangledLanes) {
  root.entangledLanes |= entangledLanes;
  var entanglements = root.entanglements;
  var lanes = entangledLanes;

  while (lanes > 0) {
    var index = pickArbitraryLaneIndex(lanes);
    var lane = 1 << index;
    entanglements[index] |= entangledLanes;
    lanes &= ~lane;
  }
}
var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback; // Count leading zeros. Only used on lanes, so assume input is an integer.
// Based on:
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32

var log = Math.log;
var LN2 = Math.LN2;

function clz32Fallback(lanes) {
  if (lanes === 0) {
    return 32;
  }

  return 31 - (log(lanes) / LN2 | 0) | 0;
}

// Intentionally not named imports because Rollup would use dynamic dispatch for
var UserBlockingPriority$1 = Scheduler.unstable_UserBlockingPriority,
    runWithPriority = Scheduler.unstable_runWithPriority; // TODO: can we stop exporting these?

var _enabled = true; // This is exported in FB builds for use by legacy FB layer infra.
// We'd like to remove this but it's not clear if this is safe.

function setEnabled(enabled) {
  _enabled = !!enabled;
}
function isEnabled() {
  return _enabled;
}
function createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags) {
  var eventPriority = getEventPriorityForPluginSystem(domEventName);
  var listenerWrapper;

  switch (eventPriority) {
    case DiscreteEvent:
      listenerWrapper = dispatchDiscreteEvent;
      break;

    case UserBlockingEvent:
      listenerWrapper = dispatchUserBlockingUpdate;
      break;

    case ContinuousEvent:
    default:
      listenerWrapper = dispatchEvent;
      break;
  }

  return listenerWrapper.bind(null, domEventName, eventSystemFlags, targetContainer);
}

function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {
  {
    flushDiscreteUpdatesIfNeeded(nativeEvent.timeStamp);
  }

  discreteUpdates(dispatchEvent, domEventName, eventSystemFlags, container, nativeEvent);
}

function dispatchUserBlockingUpdate(domEventName, eventSystemFlags, container, nativeEvent) {
  {
    runWithPriority(UserBlockingPriority$1, dispatchEvent.bind(null, domEventName, eventSystemFlags, container, nativeEvent));
  }
}

function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
  if (!_enabled) {
    return;
  }

  var allowReplay = true;

  {
    // TODO: replaying capture phase events is currently broken
    // because we used to do it during top-level native bubble handlers
    // but now we use different bubble and capture handlers.
    // In eager mode, we attach capture listeners early, so we need
    // to filter them out until we fix the logic to handle them correctly.
    // This could've been outside the flag but I put it inside to reduce risk.
    allowReplay = (eventSystemFlags & IS_CAPTURE_PHASE) === 0;
  }

  if (allowReplay && hasQueuedDiscreteEvents() && isReplayableDiscreteEvent(domEventName)) {
    // If we already have a queue of discrete events, and this is another discrete
    // event, then we can't dispatch it regardless of its target, since they
    // need to dispatch in order.
    queueDiscreteEvent(null, // Flags that we're not actually blocked on anything as far as we know.
    domEventName, eventSystemFlags, targetContainer, nativeEvent);
    return;
  }

  var blockedOn = attemptToDispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);

  if (blockedOn === null) {
    // We successfully dispatched this event.
    if (allowReplay) {
      clearIfContinuousEvent(domEventName, nativeEvent);
    }

    return;
  }

  if (allowReplay) {
    if (isReplayableDiscreteEvent(domEventName)) {
      // This this to be replayed later once the target is available.
      queueDiscreteEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);
      return;
    }

    if (queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent)) {
      return;
    } // We need to clear only if we didn't queue because
    // queueing is accummulative.


    clearIfContinuousEvent(domEventName, nativeEvent);
  } // This is not replayable so we'll invoke it but without a target,
  // in case the event system needs to trace it.


  dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, null, targetContainer);
} // Attempt dispatching an event. Returns a SuspenseInstance or Container if it's blocked.

function attemptToDispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
  // TODO: Warn if _enabled is false.
  var nativeEventTarget = getEventTarget(nativeEvent);
  var targetInst = getClosestInstanceFromNode(nativeEventTarget);

  if (targetInst !== null) {
    var nearestMounted = getNearestMountedFiber(targetInst);

    if (nearestMounted === null) {
      // This tree has been unmounted already. Dispatch without a target.
      targetInst = null;
    } else {
      var tag = nearestMounted.tag;

      if (tag === SuspenseComponent) {
        var instance = getSuspenseInstanceFromFiber(nearestMounted);

        if (instance !== null) {
          // Queue the event to be replayed later. Abort dispatching since we
          // don't want this event dispatched twice through the event system.
          // TODO: If this is the first discrete event in the queue. Schedule an increased
          // priority for this boundary.
          return instance;
        } // This shouldn't happen, something went wrong but to avoid blocking
        // the whole system, dispatch the event without a target.
        // TODO: Warn.


        targetInst = null;
      } else if (tag === HostRoot) {
        var root = nearestMounted.stateNode;

        if (root.hydrate) {
          // If this happens during a replay something went wrong and it might block
          // the whole system.
          return getContainerFromFiber(nearestMounted);
        }

        targetInst = null;
      } else if (nearestMounted !== targetInst) {
        // If we get an event (ex: img onload) before committing that
        // component's mount, ignore it for now (that is, treat it as if it was an
        // event on a non-React tree). We might also consider queueing events and
        // dispatching them after the mount.
        targetInst = null;
      }
    }
  }

  dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer); // We're not blocked on anything.

  return null;
}

function addEventBubbleListener(target, eventType, listener) {
  target.addEventListener(eventType, listener, false);
  return listener;
}
function addEventCaptureListener(target, eventType, listener) {
  target.addEventListener(eventType, listener, true);
  return listener;
}
function addEventCaptureListenerWithPassiveFlag(target, eventType, listener, passive) {
  target.addEventListener(eventType, listener, {
    capture: true,
    passive: passive
  });
  return listener;
}
function addEventBubbleListenerWithPassiveFlag(target, eventType, listener, passive) {
  target.addEventListener(eventType, listener, {
    passive: passive
  });
  return listener;
}

/**
 * These variables store information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 *
 */
var root = null;
var startText = null;
var fallbackText = null;
function initialize(nativeEventTarget) {
  root = nativeEventTarget;
  startText = getText();
  return true;
}
function reset() {
  root = null;
  startText = null;
  fallbackText = null;
}
function getData() {
  if (fallbackText) {
    return fallbackText;
  }

  var start;
  var startValue = startText;
  var startLength = startValue.length;
  var end;
  var endValue = getText();
  var endLength = endValue.length;

  for (start = 0; start < startLength; start++) {
    if (startValue[start] !== endValue[start]) {
      break;
    }
  }

  var minEnd = startLength - start;

  for (end = 1; end <= minEnd; end++) {
    if (startValue[startLength - end] !== endValue[endLength - end]) {
      break;
    }
  }

  var sliceTail = end > 1 ? 1 - end : undefined;
  fallbackText = endValue.slice(start, sliceTail);
  return fallbackText;
}
function getText() {
  if ('value' in root) {
    return root.value;
  }

  return root.textContent;
}

/**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {number} Normalized `charCode` property.
 */
function getEventCharCode(nativeEvent) {
  var charCode;
  var keyCode = nativeEvent.keyCode;

  if ('charCode' in nativeEvent) {
    charCode = nativeEvent.charCode; // FF does not set `charCode` for the Enter-key, check against `keyCode`.

    if (charCode === 0 && keyCode === 13) {
      charCode = 13;
    }
  } else {
    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
    charCode = keyCode;
  } // IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)
  // report Enter as charCode 10 when ctrl is pressed.


  if (charCode === 10) {
    charCode = 13;
  } // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
  // Must not discard the (non-)printable Enter-key.


  if (charCode >= 32 || charCode === 13) {
    return charCode;
  }

  return 0;
}

function functionThatReturnsTrue() {
  return true;
}

function functionThatReturnsFalse() {
  return false;
} // This is intentionally a factory so that we have different returned constructors.
// If we had a single constructor, it would be megamorphic and engines would deopt.


function createSyntheticEvent(Interface) {
  /**
   * Synthetic events are dispatched by event plugins, typically in response to a
   * top-level event delegation handler.
   *
   * These systems should generally use pooling to reduce the frequency of garbage
   * collection. The system should check `isPersistent` to determine whether the
   * event should be released into the pool after being dispatched. Users that
   * need a persisted event should invoke `persist`.
   *
   * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
   * normalizing browser quirks. Subclasses do not necessarily have to implement a
   * DOM interface; custom application-specific events can also subclass this.
   */
  function SyntheticBaseEvent(reactName, reactEventType, targetInst, nativeEvent, nativeEventTarget) {
    this._reactName = reactName;
    this._targetInst = targetInst;
    this.type = reactEventType;
    this.nativeEvent = nativeEvent;
    this.target = nativeEventTarget;
    this.currentTarget = null;

    for (var _propName in Interface) {
      if (!Interface.hasOwnProperty(_propName)) {
        continue;
      }

      var normalize = Interface[_propName];

      if (normalize) {
        this[_propName] = normalize(nativeEvent);
      } else {
        this[_propName] = nativeEvent[_propName];
      }
    }

    var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;

    if (defaultPrevented) {
      this.isDefaultPrevented = functionThatReturnsTrue;
    } else {
      this.isDefaultPrevented = functionThatReturnsFalse;
    }

    this.isPropagationStopped = functionThatReturnsFalse;
    return this;
  }

  _assign(SyntheticBaseEvent.prototype, {
    preventDefault: function () {
      this.defaultPrevented = true;
      var event = this.nativeEvent;

      if (!event) {
        return;
      }

      if (event.preventDefault) {
        event.preventDefault(); // $FlowFixMe - flow is not aware of `unknown` in IE
      } else if (typeof event.returnValue !== 'unknown') {
        event.returnValue = false;
      }

      this.isDefaultPrevented = functionThatReturnsTrue;
    },
    stopPropagation: function () {
      var event = this.nativeEvent;

      if (!event) {
        return;
      }

      if (event.stopPropagation) {
        event.stopPropagation(); // $FlowFixMe - flow is not aware of `unknown` in IE
      } else if (typeof event.cancelBubble !== 'unknown') {
        // The ChangeEventPlugin registers a "propertychange" event for
        // IE. This event does not support bubbling or cancelling, and
        // any references to cancelBubble throw "Member not found".  A
        // typeof check of "unknown" circumvents this issue (and is also
        // IE specific).
        event.cancelBubble = true;
      }

      this.isPropagationStopped = functionThatReturnsTrue;
    },

    /**
     * We release all dispatched `SyntheticEvent`s after each event loop, adding
     * them back into the pool. This allows a way to hold onto a reference that
     * won't be added back into the pool.
     */
    persist: function () {// Modern event system doesn't use pooling.
    },

    /**
     * Checks if this event should be released back into the pool.
     *
     * @return {boolean} True if this should not be released, false otherwise.
     */
    isPersistent: functionThatReturnsTrue
  });

  return SyntheticBaseEvent;
}
/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */


var EventInterface = {
  eventPhase: 0,
  bubbles: 0,
  cancelable: 0,
  timeStamp: function (event) {
    return event.timeStamp || Date.now();
  },
  defaultPrevented: 0,
  isTrusted: 0
};
var SyntheticEvent = createSyntheticEvent(EventInterface);

var UIEventInterface = _assign({}, EventInterface, {
  view: 0,
  detail: 0
});

var SyntheticUIEvent = createSyntheticEvent(UIEventInterface);
var lastMovementX;
var lastMovementY;
var lastMouseEvent;

function updateMouseMovementPolyfillState(event) {
  if (event !== lastMouseEvent) {
    if (lastMouseEvent && event.type === 'mousemove') {
      lastMovementX = event.screenX - lastMouseEvent.screenX;
      lastMovementY = event.screenY - lastMouseEvent.screenY;
    } else {
      lastMovementX = 0;
      lastMovementY = 0;
    }

    lastMouseEvent = event;
  }
}
/**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */


var MouseEventInterface = _assign({}, UIEventInterface, {
  screenX: 0,
  screenY: 0,
  clientX: 0,
  clientY: 0,
  pageX: 0,
  pageY: 0,
  ctrlKey: 0,
  shiftKey: 0,
  altKey: 0,
  metaKey: 0,
  getModifierState: getEventModifierState,
  button: 0,
  buttons: 0,
  relatedTarget: function (event) {
    if (event.relatedTarget === undefined) return event.fromElement === event.srcElement ? event.toElement : event.fromElement;
    return event.relatedTarget;
  },
  movementX: function (event) {
    if ('movementX' in event) {
      return event.movementX;
    }

    updateMouseMovementPolyfillState(event);
    return lastMovementX;
  },
  movementY: function (event) {
    if ('movementY' in event) {
      return event.movementY;
    } // Don't need to call updateMouseMovementPolyfillState() here
    // because it's guaranteed to have already run when movementX
    // was copied.


    return lastMovementY;
  }
});

var SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface);
/**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */

var DragEventInterface = _assign({}, MouseEventInterface, {
  dataTransfer: 0
});

var SyntheticDragEvent = createSyntheticEvent(DragEventInterface);
/**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */

var FocusEventInterface = _assign({}, UIEventInterface, {
  relatedTarget: 0
});

var SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface);
/**
 * @interface Event
 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
 */

var AnimationEventInterface = _assign({}, EventInterface, {
  animationName: 0,
  elapsedTime: 0,
  pseudoElement: 0
});

var SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface);
/**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */

var ClipboardEventInterface = _assign({}, EventInterface, {
  clipboardData: function (event) {
    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
  }
});

var SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface);
/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */

var CompositionEventInterface = _assign({}, EventInterface, {
  data: 0
});

var SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface);
/**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */
// Happens to share the same list for now.

var SyntheticInputEvent = SyntheticCompositionEvent;
/**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */

var normalizeKey = {
  Esc: 'Escape',
  Spacebar: ' ',
  Left: 'ArrowLeft',
  Up: 'ArrowUp',
  Right: 'ArrowRight',
  Down: 'ArrowDown',
  Del: 'Delete',
  Win: 'OS',
  Menu: 'ContextMenu',
  Apps: 'ContextMenu',
  Scroll: 'ScrollLock',
  MozPrintableKey: 'Unidentified'
};
/**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */

var translateToKey = {
  '8': 'Backspace',
  '9': 'Tab',
  '12': 'Clear',
  '13': 'Enter',
  '16': 'Shift',
  '17': 'Control',
  '18': 'Alt',
  '19': 'Pause',
  '20': 'CapsLock',
  '27': 'Escape',
  '32': ' ',
  '33': 'PageUp',
  '34': 'PageDown',
  '35': 'End',
  '36': 'Home',
  '37': 'ArrowLeft',
  '38': 'ArrowUp',
  '39': 'ArrowRight',
  '40': 'ArrowDown',
  '45': 'Insert',
  '46': 'Delete',
  '112': 'F1',
  '113': 'F2',
  '114': 'F3',
  '115': 'F4',
  '116': 'F5',
  '117': 'F6',
  '118': 'F7',
  '119': 'F8',
  '120': 'F9',
  '121': 'F10',
  '122': 'F11',
  '123': 'F12',
  '144': 'NumLock',
  '145': 'ScrollLock',
  '224': 'Meta'
};
/**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */

function getEventKey(nativeEvent) {
  if (nativeEvent.key) {
    // Normalize inconsistent values reported by browsers due to
    // implementations of a working draft specification.
    // FireFox implements `key` but returns `MozPrintableKey` for all
    // printable characters (normalized to `Unidentified`), ignore it.
    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;

    if (key !== 'Unidentified') {
      return key;
    }
  } // Browser does not implement `key`, polyfill as much of it as we can.


  if (nativeEvent.type === 'keypress') {
    var charCode = getEventCharCode(nativeEvent); // The enter-key is technically both printable and non-printable and can
    // thus be captured by `keypress`, no other non-printable key should.

    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
  }

  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
    // While user keyboard layout determines the actual meaning of each
    // `keyCode` value, almost all function keys have a universal value.
    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
  }

  return '';
}
/**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */


var modifierKeyToProp = {
  Alt: 'altKey',
  Control: 'ctrlKey',
  Meta: 'metaKey',
  Shift: 'shiftKey'
}; // Older browsers (Safari <= 10, iOS Safari <= 10.2) do not support
// getModifierState. If getModifierState is not supported, we map it to a set of
// modifier keys exposed by the event. In this case, Lock-keys are not supported.

function modifierStateGetter(keyArg) {
  var syntheticEvent = this;
  var nativeEvent = syntheticEvent.nativeEvent;

  if (nativeEvent.getModifierState) {
    return nativeEvent.getModifierState(keyArg);
  }

  var keyProp = modifierKeyToProp[keyArg];
  return keyProp ? !!nativeEvent[keyProp] : false;
}

function getEventModifierState(nativeEvent) {
  return modifierStateGetter;
}
/**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */


var KeyboardEventInterface = _assign({}, UIEventInterface, {
  key: getEventKey,
  code: 0,
  location: 0,
  ctrlKey: 0,
  shiftKey: 0,
  altKey: 0,
  metaKey: 0,
  repeat: 0,
  locale: 0,
  getModifierState: getEventModifierState,
  // Legacy Interface
  charCode: function (event) {
    // `charCode` is the result of a KeyPress event and represents the value of
    // the actual printable character.
    // KeyPress is deprecated, but its replacement is not yet final and not
    // implemented in any major browser. Only KeyPress has charCode.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }

    return 0;
  },
  keyCode: function (event) {
    // `keyCode` is the result of a KeyDown/Up event and represents the value of
    // physical keyboard key.
    // The actual meaning of the value depends on the users' keyboard layout
    // which cannot be detected. Assuming that it is a US keyboard layout
    // provides a surprisingly accurate mapping for US and European users.
    // Due to this, it is left to the user to implement at this time.
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }

    return 0;
  },
  which: function (event) {
    // `which` is an alias for either `keyCode` or `charCode` depending on the
    // type of the event.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }

    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }

    return 0;
  }
});

var SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface);
/**
 * @interface PointerEvent
 * @see http://www.w3.org/TR/pointerevents/
 */

var PointerEventInterface = _assign({}, MouseEventInterface, {
  pointerId: 0,
  width: 0,
  height: 0,
  pressure: 0,
  tangentialPressure: 0,
  tiltX: 0,
  tiltY: 0,
  twist: 0,
  pointerType: 0,
  isPrimary: 0
});

var SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface);
/**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */

var TouchEventInterface = _assign({}, UIEventInterface, {
  touches: 0,
  targetTouches: 0,
  changedTouches: 0,
  altKey: 0,
  metaKey: 0,
  ctrlKey: 0,
  shiftKey: 0,
  getModifierState: getEventModifierState
});

var SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface);
/**
 * @interface Event
 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
 */

var TransitionEventInterface = _assign({}, EventInterface, {
  propertyName: 0,
  elapsedTime: 0,
  pseudoElement: 0
});

var SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface);
/**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */

var WheelEventInterface = _assign({}, MouseEventInterface, {
  deltaX: function (event) {
    return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
  },
  deltaY: function (event) {
    return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
    'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
    'wheelDelta' in event ? -event.wheelDelta : 0;
  },
  deltaZ: 0,
  // Browsers without "deltaMode" is reporting in raw wheel delta where one
  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
  deltaMode: 0
});

var SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface);

var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space

var START_KEYCODE = 229;
var canUseCompositionEvent = canUseDOM && 'CompositionEvent' in window;
var documentMode = null;

if (canUseDOM && 'documentMode' in document) {
  documentMode = document.documentMode;
} // Webkit offers a very useful `textInput` event that can be used to
// directly represent `beforeInput`. The IE `textinput` event is not as
// useful, so we don't use it.


var canUseTextInputEvent = canUseDOM && 'TextEvent' in window && !documentMode; // In IE9+, we have access to composition events, but the data supplied
// by the native compositionend event may be incorrect. Japanese ideographic
// spaces, for instance (\u3000) are not recorded correctly.

var useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
var SPACEBAR_CODE = 32;
var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

function registerEvents() {
  registerTwoPhaseEvent('onBeforeInput', ['compositionend', 'keypress', 'textInput', 'paste']);
  registerTwoPhaseEvent('onCompositionEnd', ['compositionend', 'focusout', 'keydown', 'keypress', 'keyup', 'mousedown']);
  registerTwoPhaseEvent('onCompositionStart', ['compositionstart', 'focusout', 'keydown', 'keypress', 'keyup', 'mousedown']);
  registerTwoPhaseEvent('onCompositionUpdate', ['compositionupdate', 'focusout', 'keydown', 'keypress', 'keyup', 'mousedown']);
} // Track whether we've ever handled a keypress on the space key.


var hasSpaceKeypress = false;
/**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */

function isKeypressCommand(nativeEvent) {
  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && // ctrlKey && altKey is equivalent to AltGr, and is not a command.
  !(nativeEvent.ctrlKey && nativeEvent.altKey);
}
/**
 * Translate native top level events into event types.
 */


function getCompositionEventType(domEventName) {
  switch (domEventName) {
    case 'compositionstart':
      return 'onCompositionStart';

    case 'compositionend':
      return 'onCompositionEnd';

    case 'compositionupdate':
      return 'onCompositionUpdate';
  }
}
/**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 */


function isFallbackCompositionStart(domEventName, nativeEvent) {
  return domEventName === 'keydown' && nativeEvent.keyCode === START_KEYCODE;
}
/**
 * Does our fallback mode think that this event is the end of composition?
 */


function isFallbackCompositionEnd(domEventName, nativeEvent) {
  switch (domEventName) {
    case 'keyup':
      // Command keys insert or clear IME input.
      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;

    case 'keydown':
      // Expect IME keyCode on each keydown. If we get any other
      // code we must have exited earlier.
      return nativeEvent.keyCode !== START_KEYCODE;

    case 'keypress':
    case 'mousedown':
    case 'focusout':
      // Events are not possible without cancelling IME.
      return true;

    default:
      return false;
  }
}
/**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */


function getDataFromCustomEvent(nativeEvent) {
  var detail = nativeEvent.detail;

  if (typeof detail === 'object' && 'data' in detail) {
    return detail.data;
  }

  return null;
}
/**
 * Check if a composition event was triggered by Korean IME.
 * Our fallback mode does not work well with IE's Korean IME,
 * so just use native composition events when Korean IME is used.
 * Although CompositionEvent.locale property is deprecated,
 * it is available in IE, where our fallback mode is enabled.
 *
 * @param {object} nativeEvent
 * @return {boolean}
 */


function isUsingKoreanIME(nativeEvent) {
  return nativeEvent.locale === 'ko';
} // Track the current IME composition status, if any.


var isComposing = false;
/**
 * @return {?object} A SyntheticCompositionEvent.
 */

function extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
  var eventType;
  var fallbackData;

  if (canUseCompositionEvent) {
    eventType = getCompositionEventType(domEventName);
  } else if (!isComposing) {
    if (isFallbackCompositionStart(domEventName, nativeEvent)) {
      eventType = 'onCompositionStart';
    }
  } else if (isFallbackCompositionEnd(domEventName, nativeEvent)) {
    eventType = 'onCompositionEnd';
  }

  if (!eventType) {
    return null;
  }

  if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {
    // The current composition is stored statically and must not be
    // overwritten while composition continues.
    if (!isComposing && eventType === 'onCompositionStart') {
      isComposing = initialize(nativeEventTarget);
    } else if (eventType === 'onCompositionEnd') {
      if (isComposing) {
        fallbackData = getData();
      }
    }
  }

  var listeners = accumulateTwoPhaseListeners(targetInst, eventType);

  if (listeners.length > 0) {
    var event = new SyntheticCompositionEvent(eventType, domEventName, null, nativeEvent, nativeEventTarget);
    dispatchQueue.push({
      event: event,
      listeners: listeners
    });

    if (fallbackData) {
      // Inject data generated from fallback path into the synthetic event.
      // This matches the property of native CompositionEventInterface.
      event.data = fallbackData;
    } else {
      var customData = getDataFromCustomEvent(nativeEvent);

      if (customData !== null) {
        event.data = customData;
      }
    }
  }
}

function getNativeBeforeInputChars(domEventName, nativeEvent) {
  switch (domEventName) {
    case 'compositionend':
      return getDataFromCustomEvent(nativeEvent);

    case 'keypress':
      /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */
      var which = nativeEvent.which;

      if (which !== SPACEBAR_CODE) {
        return null;
      }

      hasSpaceKeypress = true;
      return SPACEBAR_CHAR;

    case 'textInput':
      // Record the characters to be added to the DOM.
      var chars = nativeEvent.data; // If it's a spacebar character, assume that we have already handled
      // it at the keypress level and bail immediately. Android Chrome
      // doesn't give us keycodes, so we need to ignore it.

      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
        return null;
      }

      return chars;

    default:
      // For other native event types, do nothing.
      return null;
  }
}
/**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 */


function getFallbackBeforeInputChars(domEventName, nativeEvent) {
  // If we are currently composing (IME) and using a fallback to do so,
  // try to extract the composed characters from the fallback object.
  // If composition event is available, we extract a string only at
  // compositionevent, otherwise extract it at fallback events.
  if (isComposing) {
    if (domEventName === 'compositionend' || !canUseCompositionEvent && isFallbackCompositionEnd(domEventName, nativeEvent)) {
      var chars = getData();
      reset();
      isComposing = false;
      return chars;
    }

    return null;
  }

  switch (domEventName) {
    case 'paste':
      // If a paste event occurs after a keypress, throw out the input
      // chars. Paste events should not lead to BeforeInput events.
      return null;

    case 'keypress':
      /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */
      if (!isKeypressCommand(nativeEvent)) {
        // IE fires the `keypress` event when a user types an emoji via
        // Touch keyboard of Windows.  In such a case, the `char` property
        // holds an emoji character like `\uD83D\uDE0A`.  Because its length
        // is 2, the property `which` does not represent an emoji correctly.
        // In such a case, we directly return the `char` property instead of
        // using `which`.
        if (nativeEvent.char && nativeEvent.char.length > 1) {
          return nativeEvent.char;
        } else if (nativeEvent.which) {
          return String.fromCharCode(nativeEvent.which);
        }
      }

      return null;

    case 'compositionend':
      return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) ? null : nativeEvent.data;

    default:
      return null;
  }
}
/**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @return {?object} A SyntheticInputEvent.
 */


function extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
  var chars;

  if (canUseTextInputEvent) {
    chars = getNativeBeforeInputChars(domEventName, nativeEvent);
  } else {
    chars = getFallbackBeforeInputChars(domEventName, nativeEvent);
  } // If no characters are being inserted, no BeforeInput event should
  // be fired.


  if (!chars) {
    return null;
  }

  var listeners = accumulateTwoPhaseListeners(targetInst, 'onBeforeInput');

  if (listeners.length > 0) {
    var event = new SyntheticInputEvent('onBeforeInput', 'beforeinput', null, nativeEvent, nativeEventTarget);
    dispatchQueue.push({
      event: event,
      listeners: listeners
    });
    event.data = chars;
  }
}
/**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */


function extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
  extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
  extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
}

/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */
var supportedInputTypes = {
  color: true,
  date: true,
  datetime: true,
  'datetime-local': true,
  email: true,
  month: true,
  number: true,
  password: true,
  range: true,
  search: true,
  tel: true,
  text: true,
  time: true,
  url: true,
  week: true
};

function isTextInputElement(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

  if (nodeName === 'input') {
    return !!supportedInputTypes[elem.type];
  }

  if (nodeName === 'textarea') {
    return true;
  }

  return false;
}

/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */

function isEventSupported(eventNameSuffix) {
  if (!canUseDOM) {
    return false;
  }

  var eventName = 'on' + eventNameSuffix;
  var isSupported = (eventName in document);

  if (!isSupported) {
    var element = document.createElement('div');
    element.setAttribute(eventName, 'return;');
    isSupported = typeof element[eventName] === 'function';
  }

  return isSupported;
}

function registerEvents$1() {
  registerTwoPhaseEvent('onChange', ['change', 'click', 'focusin', 'focusout', 'input', 'keydown', 'keyup', 'selectionchange']);
}

function createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, target) {
  // Flag this event loop as needing state restore.
  enqueueStateRestore(target);
  var listeners = accumulateTwoPhaseListeners(inst, 'onChange');

  if (listeners.length > 0) {
    var event = new SyntheticEvent('onChange', 'change', null, nativeEvent, target);
    dispatchQueue.push({
      event: event,
      listeners: listeners
    });
  }
}
/**
 * For IE shims
 */


var activeElement = null;
var activeElementInst = null;
/**
 * SECTION: handle `change` event
 */

function shouldUseChangeEvent(elem) {
  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
}

function manualDispatchChangeEvent(nativeEvent) {
  var dispatchQueue = [];
  createAndAccumulateChangeEvent(dispatchQueue, activeElementInst, nativeEvent, getEventTarget(nativeEvent)); // If change and propertychange bubbled, we'd just bind to it like all the
  // other events and have it go through ReactBrowserEventEmitter. Since it
  // doesn't, we manually listen for the events and so we have to enqueue and
  // process the abstract event manually.
  //
  // Batching is necessary here in order to ensure that all event handlers run
  // before the next rerender (including event handlers attached to ancestor
  // elements instead of directly on the input). Without this, controlled
  // components don't work properly in conjunction with event bubbling because
  // the component is rerendered and the value reverted before all the event
  // handlers can run. See https://github.com/facebook/react/issues/708.

  batchedUpdates(runEventInBatch, dispatchQueue);
}

function runEventInBatch(dispatchQueue) {
  processDispatchQueue(dispatchQueue, 0);
}

function getInstIfValueChanged(targetInst) {
  var targetNode = getNodeFromInstance(targetInst);

  if (updateValueIfChanged(targetNode)) {
    return targetInst;
  }
}

function getTargetInstForChangeEvent(domEventName, targetInst) {
  if (domEventName === 'change') {
    return targetInst;
  }
}
/**
 * SECTION: handle `input` event
 */


var isInputEventSupported = false;

if (canUseDOM) {
  // IE9 claims to support the input event but fails to trigger it when
  // deleting text, so we ignore its input events.
  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);
}
/**
 * (For IE <=9) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */


function startWatchingForValueChange(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElement.attachEvent('onpropertychange', handlePropertyChange);
}
/**
 * (For IE <=9) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */


function stopWatchingForValueChange() {
  if (!activeElement) {
    return;
  }

  activeElement.detachEvent('onpropertychange', handlePropertyChange);
  activeElement = null;
  activeElementInst = null;
}
/**
 * (For IE <=9) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */


function handlePropertyChange(nativeEvent) {
  if (nativeEvent.propertyName !== 'value') {
    return;
  }

  if (getInstIfValueChanged(activeElementInst)) {
    manualDispatchChangeEvent(nativeEvent);
  }
}

function handleEventsForInputEventPolyfill(domEventName, target, targetInst) {
  if (domEventName === 'focusin') {
    // In IE9, propertychange fires for most input events but is buggy and
    // doesn't fire when text is deleted, but conveniently, selectionchange
    // appears to fire in all of the remaining cases so we catch those and
    // forward the event if the value has changed
    // In either case, we don't want to call the event handler if the value
    // is changed from JS so we redefine a setter for `.value` that updates
    // our activeElementValue variable, allowing us to ignore those changes
    //
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForValueChange();
    startWatchingForValueChange(target, targetInst);
  } else if (domEventName === 'focusout') {
    stopWatchingForValueChange();
  }
} // For IE8 and IE9.


function getTargetInstForInputEventPolyfill(domEventName, targetInst) {
  if (domEventName === 'selectionchange' || domEventName === 'keyup' || domEventName === 'keydown') {
    // On the selectionchange event, the target is just document which isn't
    // helpful for us so just check activeElement instead.
    //
    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
    // propertychange on the first input event after setting `value` from a
    // script and fires only keydown, keypress, keyup. Catching keyup usually
    // gets it and catching keydown lets us fire an event for the first
    // keystroke if user does a key repeat (it'll be a little delayed: right
    // before the second keystroke). Other input methods (e.g., paste) seem to
    // fire selectionchange normally.
    return getInstIfValueChanged(activeElementInst);
  }
}
/**
 * SECTION: handle `click` event
 */


function shouldUseClickEvent(elem) {
  // Use the `click` event to detect changes to checkbox and radio inputs.
  // This approach works across all browsers, whereas `change` does not fire
  // until `blur` in IE8.
  var nodeName = elem.nodeName;
  return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
}

function getTargetInstForClickEvent(domEventName, targetInst) {
  if (domEventName === 'click') {
    return getInstIfValueChanged(targetInst);
  }
}

function getTargetInstForInputOrChangeEvent(domEventName, targetInst) {
  if (domEventName === 'input' || domEventName === 'change') {
    return getInstIfValueChanged(targetInst);
  }
}

function handleControlledInputBlur(node) {
  var state = node._wrapperState;

  if (!state || !state.controlled || node.type !== 'number') {
    return;
  }

  {
    // If controlled, assign the value attribute to the current value on blur
    setDefaultValue(node, 'number', node.value);
  }
}
/**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */


function extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
  var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
  var getTargetInstFunc, handleEventFunc;

  if (shouldUseChangeEvent(targetNode)) {
    getTargetInstFunc = getTargetInstForChangeEvent;
  } else if (isTextInputElement(targetNode)) {
    if (isInputEventSupported) {
      getTargetInstFunc = getTargetInstForInputOrChangeEvent;
    } else {
      getTargetInstFunc = getTargetInstForInputEventPolyfill;
      handleEventFunc = handleEventsForInputEventPolyfill;
    }
  } else if (shouldUseClickEvent(targetNode)) {
    getTargetInstFunc = getTargetInstForClickEvent;
  }

  if (getTargetInstFunc) {
    var inst = getTargetInstFunc(domEventName, targetInst);

    if (inst) {
      createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, nativeEventTarget);
      return;
    }
  }

  if (handleEventFunc) {
    handleEventFunc(domEventName, targetNode, targetInst);
  } // When blurring, set the value attribute for number inputs


  if (domEventName === 'focusout') {
    handleControlledInputBlur(targetNode);
  }
}

function registerEvents$2() {
  registerDirectEvent('onMouseEnter', ['mouseout', 'mouseover']);
  registerDirectEvent('onMouseLeave', ['mouseout', 'mouseover']);
  registerDirectEvent('onPointerEnter', ['pointerout', 'pointerover']);
  registerDirectEvent('onPointerLeave', ['pointerout', 'pointerover']);
}
/**
 * For almost every interaction we care about, there will be both a top-level
 * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
 * we do not extract duplicate events. However, moving the mouse into the
 * browser from outside will not fire a `mouseout` event. In this case, we use
 * the `mouseover` top-level event.
 */


function extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
  var isOverEvent = domEventName === 'mouseover' || domEventName === 'pointerover';
  var isOutEvent = domEventName === 'mouseout' || domEventName === 'pointerout';

  if (isOverEvent && (eventSystemFlags & IS_REPLAYED) === 0) {
    // If this is an over event with a target, we might have already dispatched
    // the event in the out event of the other target. If this is replayed,
    // then it's because we couldn't dispatch against this target previously
    // so we have to do it now instead.
    var related = nativeEvent.relatedTarget || nativeEvent.fromElement;

    if (related) {
      // If the related node is managed by React, we can assume that we have
      // already dispatched the corresponding events during its mouseout.
      if (getClosestInstanceFromNode(related) || isContainerMarkedAsRoot(related)) {
        return;
      }
    }
  }

  if (!isOutEvent && !isOverEvent) {
    // Must not be a mouse or pointer in or out - ignoring.
    return;
  }

  var win; // TODO: why is this nullable in the types but we read from it?

  if (nativeEventTarget.window === nativeEventTarget) {
    // `nativeEventTarget` is probably a window object.
    win = nativeEventTarget;
  } else {
    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
    var doc = nativeEventTarget.ownerDocument;

    if (doc) {
      win = doc.defaultView || doc.parentWindow;
    } else {
      win = window;
    }
  }

  var from;
  var to;

  if (isOutEvent) {
    var _related = nativeEvent.relatedTarget || nativeEvent.toElement;

    from = targetInst;
    to = _related ? getClosestInstanceFromNode(_related) : null;

    if (to !== null) {
      var nearestMounted = getNearestMountedFiber(to);

      if (to !== nearestMounted || to.tag !== HostComponent && to.tag !== HostText) {
        to = null;
      }
    }
  } else {
    // Moving to a node from outside the window.
    from = null;
    to = targetInst;
  }

  if (from === to) {
    // Nothing pertains to our managed components.
    return;
  }

  var SyntheticEventCtor = SyntheticMouseEvent;
  var leaveEventType = 'onMouseLeave';
  var enterEventType = 'onMouseEnter';
  var eventTypePrefix = 'mouse';

  if (domEventName === 'pointerout' || domEventName === 'pointerover') {
    SyntheticEventCtor = SyntheticPointerEvent;
    leaveEventType = 'onPointerLeave';
    enterEventType = 'onPointerEnter';
    eventTypePrefix = 'pointer';
  }

  var fromNode = from == null ? win : getNodeFromInstance(from);
  var toNode = to == null ? win : getNodeFromInstance(to);
  var leave = new SyntheticEventCtor(leaveEventType, eventTypePrefix + 'leave', from, nativeEvent, nativeEventTarget);
  leave.target = fromNode;
  leave.relatedTarget = toNode;
  var enter = null; // We should only process this nativeEvent if we are processing
  // the first ancestor. Next time, we will ignore the event.

  var nativeTargetInst = getClosestInstanceFromNode(nativeEventTarget);

  if (nativeTargetInst === targetInst) {
    var enterEvent = new SyntheticEventCtor(enterEventType, eventTypePrefix + 'enter', to, nativeEvent, nativeEventTarget);
    enterEvent.target = toNode;
    enterEvent.relatedTarget = fromNode;
    enter = enterEvent;
  }

  accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leave, enter, from, to);
}

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
function is(x, y) {
  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare
  ;
}

var objectIs = typeof Object.is === 'function' ? Object.is : is;

var hasOwnProperty$2 = Object.prototype.hasOwnProperty;
/**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */

function shallowEqual(objA, objB) {
  if (objectIs(objA, objB)) {
    return true;
  }

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  } // Test for A's keys different from B.


  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty$2.call(objB, keysA[i]) || !objectIs(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

/**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */

function getLeafNode(node) {
  while (node && node.firstChild) {
    node = node.firstChild;
  }

  return node;
}
/**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */


function getSiblingNode(node) {
  while (node) {
    if (node.nextSibling) {
      return node.nextSibling;
    }

    node = node.parentNode;
  }
}
/**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */


function getNodeForCharacterOffset(root, offset) {
  var node = getLeafNode(root);
  var nodeStart = 0;
  var nodeEnd = 0;

  while (node) {
    if (node.nodeType === TEXT_NODE) {
      nodeEnd = nodeStart + node.textContent.length;

      if (nodeStart <= offset && nodeEnd >= offset) {
        return {
          node: node,
          offset: offset - nodeStart
        };
      }

      nodeStart = nodeEnd;
    }

    node = getLeafNode(getSiblingNode(node));
  }
}

/**
 * @param {DOMElement} outerNode
 * @return {?object}
 */

function getOffsets(outerNode) {
  var ownerDocument = outerNode.ownerDocument;
  var win = ownerDocument && ownerDocument.defaultView || window;
  var selection = win.getSelection && win.getSelection();

  if (!selection || selection.rangeCount === 0) {
    return null;
  }

  var anchorNode = selection.anchorNode,
      anchorOffset = selection.anchorOffset,
      focusNode = selection.focusNode,
      focusOffset = selection.focusOffset; // In Firefox, anchorNode and focusNode can be "anonymous divs", e.g. the
  // up/down buttons on an <input type="number">. Anonymous divs do not seem to
  // expose properties, triggering a "Permission denied error" if any of its
  // properties are accessed. The only seemingly possible way to avoid erroring
  // is to access a property that typically works for non-anonymous divs and
  // catch any error that may otherwise arise. See
  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427

  try {
    /* eslint-disable no-unused-expressions */
    anchorNode.nodeType;
    focusNode.nodeType;
    /* eslint-enable no-unused-expressions */
  } catch (e) {
    return null;
  }

  return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);
}
/**
 * Returns {start, end} where `start` is the character/codepoint index of
 * (anchorNode, anchorOffset) within the textContent of `outerNode`, and
 * `end` is the index of (focusNode, focusOffset).
 *
 * Returns null if you pass in garbage input but we should probably just crash.
 *
 * Exported only for testing.
 */

function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {
  var length = 0;
  var start = -1;
  var end = -1;
  var indexWithinAnchor = 0;
  var indexWithinFocus = 0;
  var node = outerNode;
  var parentNode = null;

  outer: while (true) {
    var next = null;

    while (true) {
      if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) {
        start = length + anchorOffset;
      }

      if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) {
        end = length + focusOffset;
      }

      if (node.nodeType === TEXT_NODE) {
        length += node.nodeValue.length;
      }

      if ((next = node.firstChild) === null) {
        break;
      } // Moving from `node` to its first child `next`.


      parentNode = node;
      node = next;
    }

    while (true) {
      if (node === outerNode) {
        // If `outerNode` has children, this is always the second time visiting
        // it. If it has no children, this is still the first loop, and the only
        // valid selection is anchorNode and focusNode both equal to this node
        // and both offsets 0, in which case we will have handled above.
        break outer;
      }

      if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {
        start = length;
      }

      if (parentNode === focusNode && ++indexWithinFocus === focusOffset) {
        end = length;
      }

      if ((next = node.nextSibling) !== null) {
        break;
      }

      node = parentNode;
      parentNode = node.parentNode;
    } // Moving from `node` to its next sibling `next`.


    node = next;
  }

  if (start === -1 || end === -1) {
    // This should never happen. (Would happen if the anchor/focus nodes aren't
    // actually inside the passed-in node.)
    return null;
  }

  return {
    start: start,
    end: end
  };
}
/**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programmatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */

function setOffsets(node, offsets) {
  var doc = node.ownerDocument || document;
  var win = doc && doc.defaultView || window; // Edge fails with "Object expected" in some scenarios.
  // (For instance: TinyMCE editor used in a list component that supports pasting to add more,
  // fails when pasting 100+ items)

  if (!win.getSelection) {
    return;
  }

  var selection = win.getSelection();
  var length = node.textContent.length;
  var start = Math.min(offsets.start, length);
  var end = offsets.end === undefined ? start : Math.min(offsets.end, length); // IE 11 uses modern selection, but doesn't support the extend method.
  // Flip backward selections, so we can set with a single range.

  if (!selection.extend && start > end) {
    var temp = end;
    end = start;
    start = temp;
  }

  var startMarker = getNodeForCharacterOffset(node, start);
  var endMarker = getNodeForCharacterOffset(node, end);

  if (startMarker && endMarker) {
    if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) {
      return;
    }

    var range = doc.createRange();
    range.setStart(startMarker.node, startMarker.offset);
    selection.removeAllRanges();

    if (start > end) {
      selection.addRange(range);
      selection.extend(endMarker.node, endMarker.offset);
    } else {
      range.setEnd(endMarker.node, endMarker.offset);
      selection.addRange(range);
    }
  }
}

function isTextNode(node) {
  return node && node.nodeType === TEXT_NODE;
}

function containsNode(outerNode, innerNode) {
  if (!outerNode || !innerNode) {
    return false;
  } else if (outerNode === innerNode) {
    return true;
  } else if (isTextNode(outerNode)) {
    return false;
  } else if (isTextNode(innerNode)) {
    return containsNode(outerNode, innerNode.parentNode);
  } else if ('contains' in outerNode) {
    return outerNode.contains(innerNode);
  } else if (outerNode.compareDocumentPosition) {
    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
  } else {
    return false;
  }
}

function isInDocument(node) {
  return node && node.ownerDocument && containsNode(node.ownerDocument.documentElement, node);
}

function isSameOriginFrame(iframe) {
  try {
    // Accessing the contentDocument of a HTMLIframeElement can cause the browser
    // to throw, e.g. if it has a cross-origin src attribute.
    // Safari will show an error in the console when the access results in "Blocked a frame with origin". e.g:
    // iframe.contentDocument.defaultView;
    // A safety way is to access one of the cross origin properties: Window or Location
    // Which might result in "SecurityError" DOM Exception and it is compatible to Safari.
    // https://html.spec.whatwg.org/multipage/browsers.html#integration-with-idl
    return typeof iframe.contentWindow.location.href === 'string';
  } catch (err) {
    return false;
  }
}

function getActiveElementDeep() {
  var win = window;
  var element = getActiveElement();

  while (element instanceof win.HTMLIFrameElement) {
    if (isSameOriginFrame(element)) {
      win = element.contentWindow;
    } else {
      return element;
    }

    element = getActiveElement(win.document);
  }

  return element;
}
/**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */

/**
 * @hasSelectionCapabilities: we get the element types that support selection
 * from https://html.spec.whatwg.org/#do-not-apply, looking at `selectionStart`
 * and `selectionEnd` rows.
 */


function hasSelectionCapabilities(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName && (nodeName === 'input' && (elem.type === 'text' || elem.type === 'search' || elem.type === 'tel' || elem.type === 'url' || elem.type === 'password') || nodeName === 'textarea' || elem.contentEditable === 'true');
}
function getSelectionInformation() {
  var focusedElem = getActiveElementDeep();
  return {
    focusedElem: focusedElem,
    selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection(focusedElem) : null
  };
}
/**
 * @restoreSelection: If any selection information was potentially lost,
 * restore it. This is useful when performing operations that could remove dom
 * nodes and place them back in, resulting in focus being lost.
 */

function restoreSelection(priorSelectionInformation) {
  var curFocusedElem = getActiveElementDeep();
  var priorFocusedElem = priorSelectionInformation.focusedElem;
  var priorSelectionRange = priorSelectionInformation.selectionRange;

  if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
    if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) {
      setSelection(priorFocusedElem, priorSelectionRange);
    } // Focusing a node can change the scroll position, which is undesirable


    var ancestors = [];
    var ancestor = priorFocusedElem;

    while (ancestor = ancestor.parentNode) {
      if (ancestor.nodeType === ELEMENT_NODE) {
        ancestors.push({
          element: ancestor,
          left: ancestor.scrollLeft,
          top: ancestor.scrollTop
        });
      }
    }

    if (typeof priorFocusedElem.focus === 'function') {
      priorFocusedElem.focus();
    }

    for (var i = 0; i < ancestors.length; i++) {
      var info = ancestors[i];
      info.element.scrollLeft = info.left;
      info.element.scrollTop = info.top;
    }
  }
}
/**
 * @getSelection: Gets the selection bounds of a focused textarea, input or
 * contentEditable node.
 * -@input: Look up selection bounds of this input
 * -@return {start: selectionStart, end: selectionEnd}
 */

function getSelection(input) {
  var selection;

  if ('selectionStart' in input) {
    // Modern browser with input or textarea.
    selection = {
      start: input.selectionStart,
      end: input.selectionEnd
    };
  } else {
    // Content editable or old IE textarea.
    selection = getOffsets(input);
  }

  return selection || {
    start: 0,
    end: 0
  };
}
/**
 * @setSelection: Sets the selection bounds of a textarea or input and focuses
 * the input.
 * -@input     Set selection bounds of this input or textarea
 * -@offsets   Object of same form that is returned from get*
 */

function setSelection(input, offsets) {
  var start = offsets.start;
  var end = offsets.end;

  if (end === undefined) {
    end = start;
  }

  if ('selectionStart' in input) {
    input.selectionStart = start;
    input.selectionEnd = Math.min(end, input.value.length);
  } else {
    setOffsets(input, offsets);
  }
}

var skipSelectionChangeEvent = canUseDOM && 'documentMode' in document && document.documentMode <= 11;

function registerEvents$3() {
  registerTwoPhaseEvent('onSelect', ['focusout', 'contextmenu', 'dragend', 'focusin', 'keydown', 'keyup', 'mousedown', 'mouseup', 'selectionchange']);
}

var activeElement$1 = null;
var activeElementInst$1 = null;
var lastSelection = null;
var mouseDown = false;
/**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 */

function getSelection$1(node) {
  if ('selectionStart' in node && hasSelectionCapabilities(node)) {
    return {
      start: node.selectionStart,
      end: node.selectionEnd
    };
  } else {
    var win = node.ownerDocument && node.ownerDocument.defaultView || window;
    var selection = win.getSelection();
    return {
      anchorNode: selection.anchorNode,
      anchorOffset: selection.anchorOffset,
      focusNode: selection.focusNode,
      focusOffset: selection.focusOffset
    };
  }
}
/**
 * Get document associated with the event target.
 */


function getEventTargetDocument(eventTarget) {
  return eventTarget.window === eventTarget ? eventTarget.document : eventTarget.nodeType === DOCUMENT_NODE ? eventTarget : eventTarget.ownerDocument;
}
/**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @param {object} nativeEventTarget
 * @return {?SyntheticEvent}
 */


function constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {
  // Ensure we have the right element, and that the user is not dragging a
  // selection (this matches native `select` event behavior). In HTML5, select
  // fires only on input and textarea thus if there's no focused element we
  // won't dispatch.
  var doc = getEventTargetDocument(nativeEventTarget);

  if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement(doc)) {
    return;
  } // Only fire when selection has actually changed.


  var currentSelection = getSelection$1(activeElement$1);

  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
    lastSelection = currentSelection;
    var listeners = accumulateTwoPhaseListeners(activeElementInst$1, 'onSelect');

    if (listeners.length > 0) {
      var event = new SyntheticEvent('onSelect', 'select', null, nativeEvent, nativeEventTarget);
      dispatchQueue.push({
        event: event,
        listeners: listeners
      });
      event.target = activeElement$1;
    }
  }
}
/**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */


function extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {

  var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;

  switch (domEventName) {
    // Track the input node that has focus.
    case 'focusin':
      if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
        activeElement$1 = targetNode;
        activeElementInst$1 = targetInst;
        lastSelection = null;
      }

      break;

    case 'focusout':
      activeElement$1 = null;
      activeElementInst$1 = null;
      lastSelection = null;
      break;
    // Don't fire the event while the user is dragging. This matches the
    // semantics of the native select event.

    case 'mousedown':
      mouseDown = true;
      break;

    case 'contextmenu':
    case 'mouseup':
    case 'dragend':
      mouseDown = false;
      constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
      break;
    // Chrome and IE fire non-standard event when selection is changed (and
    // sometimes when it hasn't). IE's event fires out of order with respect
    // to key and input events on deletion, so we discard it.
    //
    // Firefox doesn't support selectionchange, so check selection status
    // after each key entry. The selection changes after keydown and before
    // keyup, but we check on keydown as well in the case of holding down a
    // key, when multiple keydown events are fired but only one keyup is.
    // This is also our approach for IE handling, for the reason above.

    case 'selectionchange':
      if (skipSelectionChangeEvent) {
        break;
      }

    // falls through

    case 'keydown':
    case 'keyup':
      constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
  }
}

function extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
  var reactName = topLevelEventsToReactNames.get(domEventName);

  if (reactName === undefined) {
    return;
  }

  var SyntheticEventCtor = SyntheticEvent;
  var reactEventType = domEventName;

  switch (domEventName) {
    case 'keypress':
      // Firefox creates a keypress event for function keys too. This removes
      // the unwanted keypress events. Enter is however both printable and
      // non-printable. One would expect Tab to be as well (but it isn't).
      if (getEventCharCode(nativeEvent) === 0) {
        return;
      }

    /* falls through */

    case 'keydown':
    case 'keyup':
      SyntheticEventCtor = SyntheticKeyboardEvent;
      break;

    case 'focusin':
      reactEventType = 'focus';
      SyntheticEventCtor = SyntheticFocusEvent;
      break;

    case 'focusout':
      reactEventType = 'blur';
      SyntheticEventCtor = SyntheticFocusEvent;
      break;

    case 'beforeblur':
    case 'afterblur':
      SyntheticEventCtor = SyntheticFocusEvent;
      break;

    case 'click':
      // Firefox creates a click event on right mouse clicks. This removes the
      // unwanted click events.
      if (nativeEvent.button === 2) {
        return;
      }

    /* falls through */

    case 'auxclick':
    case 'dblclick':
    case 'mousedown':
    case 'mousemove':
    case 'mouseup': // TODO: Disabled elements should not respond to mouse events

    /* falls through */

    case 'mouseout':
    case 'mouseover':
    case 'contextmenu':
      SyntheticEventCtor = SyntheticMouseEvent;
      break;

    case 'drag':
    case 'dragend':
    case 'dragenter':
    case 'dragexit':
    case 'dragleave':
    case 'dragover':
    case 'dragstart':
    case 'drop':
      SyntheticEventCtor = SyntheticDragEvent;
      break;

    case 'touchcancel':
    case 'touchend':
    case 'touchmove':
    case 'touchstart':
      SyntheticEventCtor = SyntheticTouchEvent;
      break;

    case ANIMATION_END:
    case ANIMATION_ITERATION:
    case ANIMATION_START:
      SyntheticEventCtor = SyntheticAnimationEvent;
      break;

    case TRANSITION_END:
      SyntheticEventCtor = SyntheticTransitionEvent;
      break;

    case 'scroll':
      SyntheticEventCtor = SyntheticUIEvent;
      break;

    case 'wheel':
      SyntheticEventCtor = SyntheticWheelEvent;
      break;

    case 'copy':
    case 'cut':
    case 'paste':
      SyntheticEventCtor = SyntheticClipboardEvent;
      break;

    case 'gotpointercapture':
    case 'lostpointercapture':
    case 'pointercancel':
    case 'pointerdown':
    case 'pointermove':
    case 'pointerout':
    case 'pointerover':
    case 'pointerup':
      SyntheticEventCtor = SyntheticPointerEvent;
      break;
  }

  var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;

  {
    // Some events don't bubble in the browser.
    // In the past, React has always bubbled them, but this can be surprising.
    // We're going to try aligning closer to the browser behavior by not bubbling
    // them in React either. We'll start by not bubbling onScroll, and then expand.
    var accumulateTargetOnly = !inCapturePhase && // TODO: ideally, we'd eventually add all events from
    // nonDelegatedEvents list in DOMPluginEventSystem.
    // Then we can remove this special list.
    // This is a breaking change that can wait until React 18.
    domEventName === 'scroll';

    var _listeners = accumulateSinglePhaseListeners(targetInst, reactName, nativeEvent.type, inCapturePhase, accumulateTargetOnly);

    if (_listeners.length > 0) {
      // Intentionally create event lazily.
      var _event = new SyntheticEventCtor(reactName, reactEventType, null, nativeEvent, nativeEventTarget);

      dispatchQueue.push({
        event: _event,
        listeners: _listeners
      });
    }
  }
}

// TODO: remove top-level side effect.
registerSimpleEvents();
registerEvents$2();
registerEvents$1();
registerEvents$3();
registerEvents();

function extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
  // TODO: we should remove the concept of a "SimpleEventPlugin".
  // This is the basic functionality of the event system. All
  // the other plugins are essentially polyfills. So the plugin
  // should probably be inlined somewhere and have its logic
  // be core the to event system. This would potentially allow
  // us to ship builds of React without the polyfilled plugins below.
  extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
  var shouldProcessPolyfillPlugins = (eventSystemFlags & SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS) === 0; // We don't process these events unless we are in the
  // event's native "bubble" phase, which means that we're
  // not in the capture phase. That's because we emulate
  // the capture phase here still. This is a trade-off,
  // because in an ideal world we would not emulate and use
  // the phases properly, like we do with the SimpleEvent
  // plugin. However, the plugins below either expect
  // emulation (EnterLeave) or use state localized to that
  // plugin (BeforeInput, Change, Select). The state in
  // these modules complicates things, as you'll essentially
  // get the case where the capture phase event might change
  // state, only for the following bubble event to come in
  // later and not trigger anything as the state now
  // invalidates the heuristics of the event plugin. We
  // could alter all these plugins to work in such ways, but
  // that might cause other unknown side-effects that we
  // can't forsee right now.

  if (shouldProcessPolyfillPlugins) {
    extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
    extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
    extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
    extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
  }
} // List of events that need to be individually attached to media elements.


var mediaEventTypes = ['abort', 'canplay', 'canplaythrough', 'durationchange', 'emptied', 'encrypted', 'ended', 'error', 'loadeddata', 'loadedmetadata', 'loadstart', 'pause', 'play', 'playing', 'progress', 'ratechange', 'seeked', 'seeking', 'stalled', 'suspend', 'timeupdate', 'volumechange', 'waiting']; // We should not delegate these events to the container, but rather
// set them on the actual target element itself. This is primarily
// because these events do not consistently bubble in the DOM.

var nonDelegatedEvents = new Set(['cancel', 'close', 'invalid', 'load', 'scroll', 'toggle'].concat(mediaEventTypes));

function executeDispatch(event, listener, currentTarget) {
  var type = event.type || 'unknown-event';
  event.currentTarget = currentTarget;
  invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
  event.currentTarget = null;
}

function processDispatchQueueItemsInOrder(event, dispatchListeners, inCapturePhase) {
  var previousInstance;

  if (inCapturePhase) {
    for (var i = dispatchListeners.length - 1; i >= 0; i--) {
      var _dispatchListeners$i = dispatchListeners[i],
          instance = _dispatchListeners$i.instance,
          currentTarget = _dispatchListeners$i.currentTarget,
          listener = _dispatchListeners$i.listener;

      if (instance !== previousInstance && event.isPropagationStopped()) {
        return;
      }

      executeDispatch(event, listener, currentTarget);
      previousInstance = instance;
    }
  } else {
    for (var _i = 0; _i < dispatchListeners.length; _i++) {
      var _dispatchListeners$_i = dispatchListeners[_i],
          _instance = _dispatchListeners$_i.instance,
          _currentTarget = _dispatchListeners$_i.currentTarget,
          _listener = _dispatchListeners$_i.listener;

      if (_instance !== previousInstance && event.isPropagationStopped()) {
        return;
      }

      executeDispatch(event, _listener, _currentTarget);
      previousInstance = _instance;
    }
  }
}

function processDispatchQueue(dispatchQueue, eventSystemFlags) {
  var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;

  for (var i = 0; i < dispatchQueue.length; i++) {
    var _dispatchQueue$i = dispatchQueue[i],
        event = _dispatchQueue$i.event,
        listeners = _dispatchQueue$i.listeners;
    processDispatchQueueItemsInOrder(event, listeners, inCapturePhase); //  event system doesn't use pooling.
  } // This would be a good time to rethrow if any of the event handlers threw.


  rethrowCaughtError();
}

function dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
  var nativeEventTarget = getEventTarget(nativeEvent);
  var dispatchQueue = [];
  extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
  processDispatchQueue(dispatchQueue, eventSystemFlags);
}

function listenToNonDelegatedEvent(domEventName, targetElement) {
  var isCapturePhaseListener = false;
  var listenerSet = getEventListenerSet(targetElement);
  var listenerSetKey = getListenerSetKey(domEventName, isCapturePhaseListener);

  if (!listenerSet.has(listenerSetKey)) {
    addTrappedEventListener(targetElement, domEventName, IS_NON_DELEGATED, isCapturePhaseListener);
    listenerSet.add(listenerSetKey);
  }
}
var listeningMarker = '_reactListening' + Math.random().toString(36).slice(2);
function listenToAllSupportedEvents(rootContainerElement) {
  {
    if (rootContainerElement[listeningMarker]) {
      // Performance optimization: don't iterate through events
      // for the same portal container or root node more than once.
      // TODO: once we remove the flag, we may be able to also
      // remove some of the bookkeeping maps used for laziness.
      return;
    }

    rootContainerElement[listeningMarker] = true;
    allNativeEvents.forEach(function (domEventName) {
      if (!nonDelegatedEvents.has(domEventName)) {
        listenToNativeEvent(domEventName, false, rootContainerElement, null);
      }

      listenToNativeEvent(domEventName, true, rootContainerElement, null);
    });
  }
}
function listenToNativeEvent(domEventName, isCapturePhaseListener, rootContainerElement, targetElement) {
  var eventSystemFlags = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;
  var target = rootContainerElement; // selectionchange needs to be attached to the document
  // otherwise it won't capture incoming events that are only
  // triggered on the document directly.

  if (domEventName === 'selectionchange' && rootContainerElement.nodeType !== DOCUMENT_NODE) {
    target = rootContainerElement.ownerDocument;
  } // If the event can be delegated (or is capture phase), we can
  // register it to the root container. Otherwise, we should
  // register the event to the target element and mark it as
  // a non-delegated event.


  if (targetElement !== null && !isCapturePhaseListener && nonDelegatedEvents.has(domEventName)) {
    // For all non-delegated events, apart from scroll, we attach
    // their event listeners to the respective elements that their
    // events fire on. That means we can skip this step, as event
    // listener has already been added previously. However, we
    // special case the scroll event because the reality is that any
    // element can scroll.
    // TODO: ideally, we'd eventually apply the same logic to all
    // events from the nonDelegatedEvents list. Then we can remove
    // this special case and use the same logic for all events.
    if (domEventName !== 'scroll') {
      return;
    }

    eventSystemFlags |= IS_NON_DELEGATED;
    target = targetElement;
  }

  var listenerSet = getEventListenerSet(target);
  var listenerSetKey = getListenerSetKey(domEventName, isCapturePhaseListener); // If the listener entry is empty or we should upgrade, then
  // we need to trap an event listener onto the target.

  if (!listenerSet.has(listenerSetKey)) {
    if (isCapturePhaseListener) {
      eventSystemFlags |= IS_CAPTURE_PHASE;
    }

    addTrappedEventListener(target, domEventName, eventSystemFlags, isCapturePhaseListener);
    listenerSet.add(listenerSetKey);
  }
}

function addTrappedEventListener(targetContainer, domEventName, eventSystemFlags, isCapturePhaseListener, isDeferredListenerForLegacyFBSupport) {
  var listener = createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags); // If passive option is not supported, then the event will be
  // active and not passive.

  var isPassiveListener = undefined;

  if (passiveBrowserEventsSupported) {
    // Browsers introduced an intervention, making these events
    // passive by default on document. React doesn't bind them
    // to document anymore, but changing this now would undo
    // the performance wins from the change. So we emulate
    // the existing behavior manually on the roots now.
    // https://github.com/facebook/react/issues/19651
    if (domEventName === 'touchstart' || domEventName === 'touchmove' || domEventName === 'wheel') {
      isPassiveListener = true;
    }
  }

  targetContainer =  targetContainer;
  var unsubscribeListener; // When legacyFBSupport is enabled, it's for when we


  if (isCapturePhaseListener) {
    if (isPassiveListener !== undefined) {
      unsubscribeListener = addEventCaptureListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
    } else {
      unsubscribeListener = addEventCaptureListener(targetContainer, domEventName, listener);
    }
  } else {
    if (isPassiveListener !== undefined) {
      unsubscribeListener = addEventBubbleListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
    } else {
      unsubscribeListener = addEventBubbleListener(targetContainer, domEventName, listener);
    }
  }
}

function isMatchingRootContainer(grandContainer, targetContainer) {
  return grandContainer === targetContainer || grandContainer.nodeType === COMMENT_NODE && grandContainer.parentNode === targetContainer;
}

function dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
  var ancestorInst = targetInst;

  if ((eventSystemFlags & IS_EVENT_HANDLE_NON_MANAGED_NODE) === 0 && (eventSystemFlags & IS_NON_DELEGATED) === 0) {
    var targetContainerNode = targetContainer; // If we are using the legacy FB support flag, we

    if (targetInst !== null) {
      // The below logic attempts to work out if we need to change
      // the target fiber to a different ancestor. We had similar logic
      // in the legacy event system, except the big difference between
      // systems is that the modern event system now has an event listener
      // attached to each React Root and React Portal Root. Together,
      // the DOM nodes representing these roots are the "rootContainer".
      // To figure out which ancestor instance we should use, we traverse
      // up the fiber tree from the target instance and attempt to find
      // root boundaries that match that of our current "rootContainer".
      // If we find that "rootContainer", we find the parent fiber
      // sub-tree for that root and make that our ancestor instance.
      var node = targetInst;

      mainLoop: while (true) {
        if (node === null) {
          return;
        }

        var nodeTag = node.tag;

        if (nodeTag === HostRoot || nodeTag === HostPortal) {
          var container = node.stateNode.containerInfo;

          if (isMatchingRootContainer(container, targetContainerNode)) {
            break;
          }

          if (nodeTag === HostPortal) {
            // The target is a portal, but it's not the rootContainer we're looking for.
            // Normally portals handle their own events all the way down to the root.
            // So we should be able to stop now. However, we don't know if this portal
            // was part of *our* root.
            var grandNode = node.return;

            while (grandNode !== null) {
              var grandTag = grandNode.tag;

              if (grandTag === HostRoot || grandTag === HostPortal) {
                var grandContainer = grandNode.stateNode.containerInfo;

                if (isMatchingRootContainer(grandContainer, targetContainerNode)) {
                  // This is the rootContainer we're looking for and we found it as
                  // a parent of the Portal. That means we can ignore it because the
                  // Portal will bubble through to us.
                  return;
                }
              }

              grandNode = grandNode.return;
            }
          } // Now we need to find it's corresponding host fiber in the other
          // tree. To do this we can use getClosestInstanceFromNode, but we
          // need to validate that the fiber is a host instance, otherwise
          // we need to traverse up through the DOM till we find the correct
          // node that is from the other tree.


          while (container !== null) {
            var parentNode = getClosestInstanceFromNode(container);

            if (parentNode === null) {
              return;
            }

            var parentTag = parentNode.tag;

            if (parentTag === HostComponent || parentTag === HostText) {
              node = ancestorInst = parentNode;
              continue mainLoop;
            }

            container = container.parentNode;
          }
        }

        node = node.return;
      }
    }
  }

  batchedEventUpdates(function () {
    return dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, ancestorInst);
  });
}

function createDispatchListener(instance, listener, currentTarget) {
  return {
    instance: instance,
    listener: listener,
    currentTarget: currentTarget
  };
}

function accumulateSinglePhaseListeners(targetFiber, reactName, nativeEventType, inCapturePhase, accumulateTargetOnly) {
  var captureName = reactName !== null ? reactName + 'Capture' : null;
  var reactEventName = inCapturePhase ? captureName : reactName;
  var listeners = [];
  var instance = targetFiber;
  var lastHostComponent = null; // Accumulate all instances and listeners via the target -> root path.

  while (instance !== null) {
    var _instance2 = instance,
        stateNode = _instance2.stateNode,
        tag = _instance2.tag; // Handle listeners that are on HostComponents (i.e. <div>)

    if (tag === HostComponent && stateNode !== null) {
      lastHostComponent = stateNode; // createEventHandle listeners


      if (reactEventName !== null) {
        var listener = getListener(instance, reactEventName);

        if (listener != null) {
          listeners.push(createDispatchListener(instance, listener, lastHostComponent));
        }
      }
    } // If we are only accumulating events for the target, then we don't
    // continue to propagate through the React fiber tree to find other
    // listeners.


    if (accumulateTargetOnly) {
      break;
    }

    instance = instance.return;
  }

  return listeners;
} // We should only use this function for:
// - BeforeInputEventPlugin
// - ChangeEventPlugin
// - SelectEventPlugin
// This is because we only process these plugins
// in the bubble phase, so we need to accumulate two
// phase event listeners (via emulation).

function accumulateTwoPhaseListeners(targetFiber, reactName) {
  var captureName = reactName + 'Capture';
  var listeners = [];
  var instance = targetFiber; // Accumulate all instances and listeners via the target -> root path.

  while (instance !== null) {
    var _instance3 = instance,
        stateNode = _instance3.stateNode,
        tag = _instance3.tag; // Handle listeners that are on HostComponents (i.e. <div>)

    if (tag === HostComponent && stateNode !== null) {
      var currentTarget = stateNode;
      var captureListener = getListener(instance, captureName);

      if (captureListener != null) {
        listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
      }

      var bubbleListener = getListener(instance, reactName);

      if (bubbleListener != null) {
        listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
      }
    }

    instance = instance.return;
  }

  return listeners;
}

function getParent(inst) {
  if (inst === null) {
    return null;
  }

  do {
    inst = inst.return; // TODO: If this is a HostRoot we might want to bail out.
    // That is depending on if we want nested subtrees (layers) to bubble
    // events to their parent. We could also go through parentNode on the
    // host node but that wouldn't work for React Native and doesn't let us
    // do the portal feature.
  } while (inst && inst.tag !== HostComponent);

  if (inst) {
    return inst;
  }

  return null;
}
/**
 * Return the lowest common ancestor of A and B, or null if they are in
 * different trees.
 */


function getLowestCommonAncestor(instA, instB) {
  var nodeA = instA;
  var nodeB = instB;
  var depthA = 0;

  for (var tempA = nodeA; tempA; tempA = getParent(tempA)) {
    depthA++;
  }

  var depthB = 0;

  for (var tempB = nodeB; tempB; tempB = getParent(tempB)) {
    depthB++;
  } // If A is deeper, crawl up.


  while (depthA - depthB > 0) {
    nodeA = getParent(nodeA);
    depthA--;
  } // If B is deeper, crawl up.


  while (depthB - depthA > 0) {
    nodeB = getParent(nodeB);
    depthB--;
  } // Walk in lockstep until we find a match.


  var depth = depthA;

  while (depth--) {
    if (nodeA === nodeB || nodeB !== null && nodeA === nodeB.alternate) {
      return nodeA;
    }

    nodeA = getParent(nodeA);
    nodeB = getParent(nodeB);
  }

  return null;
}

function accumulateEnterLeaveListenersForEvent(dispatchQueue, event, target, common, inCapturePhase) {
  var registrationName = event._reactName;
  var listeners = [];
  var instance = target;

  while (instance !== null) {
    if (instance === common) {
      break;
    }

    var _instance4 = instance,
        alternate = _instance4.alternate,
        stateNode = _instance4.stateNode,
        tag = _instance4.tag;

    if (alternate !== null && alternate === common) {
      break;
    }

    if (tag === HostComponent && stateNode !== null) {
      var currentTarget = stateNode;

      if (inCapturePhase) {
        var captureListener = getListener(instance, registrationName);

        if (captureListener != null) {
          listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
        }
      } else if (!inCapturePhase) {
        var bubbleListener = getListener(instance, registrationName);

        if (bubbleListener != null) {
          listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
        }
      }
    }

    instance = instance.return;
  }

  if (listeners.length !== 0) {
    dispatchQueue.push({
      event: event,
      listeners: listeners
    });
  }
} // We should only use this function for:
// - EnterLeaveEventPlugin
// This is because we only process this plugin
// in the bubble phase, so we need to accumulate two
// phase event listeners.


function accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leaveEvent, enterEvent, from, to) {
  var common = from && to ? getLowestCommonAncestor(from, to) : null;

  if (from !== null) {
    accumulateEnterLeaveListenersForEvent(dispatchQueue, leaveEvent, from, common, false);
  }

  if (to !== null && enterEvent !== null) {
    accumulateEnterLeaveListenersForEvent(dispatchQueue, enterEvent, to, common, true);
  }
}
function getListenerSetKey(domEventName, capture) {
  return domEventName + "__" + (capture ? 'capture' : 'bubble');
}

var didWarnInvalidHydration = false;
var DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';
var SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';
var SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';
var AUTOFOCUS = 'autoFocus';
var CHILDREN = 'children';
var STYLE = 'style';
var HTML$1 = '__html';
var HTML_NAMESPACE$1 = Namespaces.html;
var warnedUnknownTags;
var suppressHydrationWarning;
var validatePropertiesInDevelopment;
var warnForTextDifference;
var warnForPropDifference;
var warnForExtraAttributes;
var warnForInvalidEventListener;
var canDiffStyleForHydrationWarning;
var normalizeMarkupForTextOrAttribute;
var normalizeHTML;

{
  warnedUnknownTags = {
    // There are working polyfills for <dialog>. Let people use it.
    dialog: true,
    // Electron ships a custom <webview> tag to display external web content in
    // an isolated frame and process.
    // This tag is not present in non Electron environments such as JSDom which
    // is often used for testing purposes.
    // @see https://electronjs.org/docs/api/webview-tag
    webview: true
  };

  validatePropertiesInDevelopment = function (type, props) {
    validateProperties(type, props);
    validateProperties$1(type, props);
    validateProperties$2(type, props, {
      registrationNameDependencies: registrationNameDependencies,
      possibleRegistrationNames: possibleRegistrationNames
    });
  }; // IE 11 parses & normalizes the style attribute as opposed to other
  // browsers. It adds spaces and sorts the properties in some
  // non-alphabetical order. Handling that would require sorting CSS
  // properties in the client & server versions or applying
  // `expectedStyle` to a temporary DOM node to read its `style` attribute
  // normalized. Since it only affects IE, we're skipping style warnings
  // in that browser completely in favor of doing all that work.
  // See https://github.com/facebook/react/issues/11807


  canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode; // HTML parsing normalizes CR and CRLF to LF.
  // It also can turn \u0000 into \uFFFD inside attributes.
  // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream
  // If we have a mismatch, it might be caused by that.
  // We will still patch up in this case but not fire the warning.

  var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
  var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;

  normalizeMarkupForTextOrAttribute = function (markup) {
    var markupString = typeof markup === 'string' ? markup : '' + markup;
    return markupString.replace(NORMALIZE_NEWLINES_REGEX, '\n').replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');
  };

  warnForTextDifference = function (serverText, clientText) {
    if (didWarnInvalidHydration) {
      return;
    }

    var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
    var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);

    if (normalizedServerText === normalizedClientText) {
      return;
    }

    didWarnInvalidHydration = true;

    error('Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
  };

  warnForPropDifference = function (propName, serverValue, clientValue) {
    if (didWarnInvalidHydration) {
      return;
    }

    var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
    var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);

    if (normalizedServerValue === normalizedClientValue) {
      return;
    }

    didWarnInvalidHydration = true;

    error('Prop `%s` did not match. Server: %s Client: %s', propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
  };

  warnForExtraAttributes = function (attributeNames) {
    if (didWarnInvalidHydration) {
      return;
    }

    didWarnInvalidHydration = true;
    var names = [];
    attributeNames.forEach(function (name) {
      names.push(name);
    });

    error('Extra attributes from the server: %s', names);
  };

  warnForInvalidEventListener = function (registrationName, listener) {
    if (listener === false) {
      error('Expected `%s` listener to be a function, instead got `false`.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', registrationName, registrationName, registrationName);
    } else {
      error('Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener);
    }
  }; // Parse the HTML and read it back to normalize the HTML string so that it
  // can be used for comparison.


  normalizeHTML = function (parent, html) {
    // We could have created a separate document here to avoid
    // re-initializing custom elements if they exist. But this breaks
    // how <noscript> is being handled. So we use the same document.
    // See the discussion in https://github.com/facebook/react/pull/11157.
    var testElement = parent.namespaceURI === HTML_NAMESPACE$1 ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
    testElement.innerHTML = html;
    return testElement.innerHTML;
  };
}

function getOwnerDocumentFromRootContainer(rootContainerElement) {
  return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
}

function noop() {}

function trapClickOnNonInteractiveElement(node) {
  // Mobile Safari does not fire properly bubble click events on
  // non-interactive elements, which means delegated click listeners do not
  // fire. The workaround for this bug involves attaching an empty click
  // listener on the target node.
  // https://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
  // Just set it using the onclick property so that we don't have to manage any
  // bookkeeping for it. Not sure if we need to clear it when the listener is
  // removed.
  // TODO: Only do this for the relevant Safaris maybe?
  node.onclick = noop;
}

function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
  for (var propKey in nextProps) {
    if (!nextProps.hasOwnProperty(propKey)) {
      continue;
    }

    var nextProp = nextProps[propKey];

    if (propKey === STYLE) {
      {
        if (nextProp) {
          // Freeze the next style object so that we can assume it won't be
          // mutated. We have already warned for this in the past.
          Object.freeze(nextProp);
        }
      } // Relies on `updateStylesByID` not mutating `styleUpdates`.


      setValueForStyles(domElement, nextProp);
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      var nextHtml = nextProp ? nextProp[HTML$1] : undefined;

      if (nextHtml != null) {
        setInnerHTML(domElement, nextHtml);
      }
    } else if (propKey === CHILDREN) {
      if (typeof nextProp === 'string') {
        // Avoid setting initial textContent when the text is empty. In IE11 setting
        // textContent on a <textarea> will cause the placeholder to not
        // show within the <textarea> until it has been focused and blurred again.
        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
        var canSetTextContent = tag !== 'textarea' || nextProp !== '';

        if (canSetTextContent) {
          setTextContent(domElement, nextProp);
        }
      } else if (typeof nextProp === 'number') {
        setTextContent(domElement, '' + nextProp);
      }
    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ; else if (propKey === AUTOFOCUS) ; else if (registrationNameDependencies.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        if ( typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }

        if (propKey === 'onScroll') {
          listenToNonDelegatedEvent('scroll', domElement);
        }
      }
    } else if (nextProp != null) {
      setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);
    }
  }
}

function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
  // TODO: Handle wasCustomComponentTag
  for (var i = 0; i < updatePayload.length; i += 2) {
    var propKey = updatePayload[i];
    var propValue = updatePayload[i + 1];

    if (propKey === STYLE) {
      setValueForStyles(domElement, propValue);
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      setInnerHTML(domElement, propValue);
    } else if (propKey === CHILDREN) {
      setTextContent(domElement, propValue);
    } else {
      setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);
    }
  }
}

function createElement(type, props, rootContainerElement, parentNamespace) {
  var isCustomComponentTag; // We create tags in the namespace of their parent container, except HTML
  // tags get no namespace.

  var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
  var domElement;
  var namespaceURI = parentNamespace;

  if (namespaceURI === HTML_NAMESPACE$1) {
    namespaceURI = getIntrinsicNamespace(type);
  }

  if (namespaceURI === HTML_NAMESPACE$1) {
    {
      isCustomComponentTag = isCustomComponent(type, props); // Should this check be gated by parent namespace? Not sure we want to
      // allow <SVG> or <mATH>.

      if (!isCustomComponentTag && type !== type.toLowerCase()) {
        error('<%s /> is using incorrect casing. ' + 'Use PascalCase for React components, ' + 'or lowercase for HTML elements.', type);
      }
    }

    if (type === 'script') {
      // Create the script via .innerHTML so its "parser-inserted" flag is
      // set to true and it does not execute
      var div = ownerDocument.createElement('div');

      div.innerHTML = '<script><' + '/script>'; // eslint-disable-line
      // This is guaranteed to yield a script element.

      var firstChild = div.firstChild;
      domElement = div.removeChild(firstChild);
    } else if (typeof props.is === 'string') {
      // $FlowIssue `createElement` should be updated for Web Components
      domElement = ownerDocument.createElement(type, {
        is: props.is
      });
    } else {
      // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.
      // See discussion in https://github.com/facebook/react/pull/6896
      // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
      domElement = ownerDocument.createElement(type); // Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple` and `size`
      // attributes on `select`s needs to be added before `option`s are inserted.
      // This prevents:
      // - a bug where the `select` does not scroll to the correct option because singular
      //  `select` elements automatically pick the first item #13222
      // - a bug where the `select` set the first item as selected despite the `size` attribute #14239
      // See https://github.com/facebook/react/issues/13222
      // and https://github.com/facebook/react/issues/14239

      if (type === 'select') {
        var node = domElement;

        if (props.multiple) {
          node.multiple = true;
        } else if (props.size) {
          // Setting a size greater than 1 causes a select to behave like `multiple=true`, where
          // it is possible that no option is selected.
          //
          // This is only necessary when a select in "single selection mode".
          node.size = props.size;
        }
      }
    }
  } else {
    domElement = ownerDocument.createElementNS(namespaceURI, type);
  }

  {
    if (namespaceURI === HTML_NAMESPACE$1) {
      if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === '[object HTMLUnknownElement]' && !Object.prototype.hasOwnProperty.call(warnedUnknownTags, type)) {
        warnedUnknownTags[type] = true;

        error('The tag <%s> is unrecognized in this browser. ' + 'If you meant to render a React component, start its name with ' + 'an uppercase letter.', type);
      }
    }
  }

  return domElement;
}
function createTextNode(text, rootContainerElement) {
  return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
}
function setInitialProperties(domElement, tag, rawProps, rootContainerElement) {
  var isCustomComponentTag = isCustomComponent(tag, rawProps);

  {
    validatePropertiesInDevelopment(tag, rawProps);
  } // TODO: Make sure that we check isMounted before firing any of these events.


  var props;

  switch (tag) {
    case 'dialog':
      listenToNonDelegatedEvent('cancel', domElement);
      listenToNonDelegatedEvent('close', domElement);
      props = rawProps;
      break;

    case 'iframe':
    case 'object':
    case 'embed':
      // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the load event.
      listenToNonDelegatedEvent('load', domElement);
      props = rawProps;
      break;

    case 'video':
    case 'audio':
      // We listen to these events in case to ensure emulated bubble
      // listeners still fire for all the media events.
      for (var i = 0; i < mediaEventTypes.length; i++) {
        listenToNonDelegatedEvent(mediaEventTypes[i], domElement);
      }

      props = rawProps;
      break;

    case 'source':
      // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the error event.
      listenToNonDelegatedEvent('error', domElement);
      props = rawProps;
      break;

    case 'img':
    case 'image':
    case 'link':
      // We listen to these events in case to ensure emulated bubble
      // listeners still fire for error and load events.
      listenToNonDelegatedEvent('error', domElement);
      listenToNonDelegatedEvent('load', domElement);
      props = rawProps;
      break;

    case 'details':
      // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the toggle event.
      listenToNonDelegatedEvent('toggle', domElement);
      props = rawProps;
      break;

    case 'input':
      initWrapperState(domElement, rawProps);
      props = getHostProps(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the invalid event.

      listenToNonDelegatedEvent('invalid', domElement);

      break;

    case 'option':
      validateProps(domElement, rawProps);
      props = getHostProps$1(domElement, rawProps);
      break;

    case 'select':
      initWrapperState$1(domElement, rawProps);
      props = getHostProps$2(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the invalid event.

      listenToNonDelegatedEvent('invalid', domElement);

      break;

    case 'textarea':
      initWrapperState$2(domElement, rawProps);
      props = getHostProps$3(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the invalid event.

      listenToNonDelegatedEvent('invalid', domElement);

      break;

    default:
      props = rawProps;
  }

  assertValidProps(tag, props);
  setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);

  switch (tag) {
    case 'input':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper(domElement, rawProps, false);
      break;

    case 'textarea':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper$3(domElement);
      break;

    case 'option':
      postMountWrapper$1(domElement, rawProps);
      break;

    case 'select':
      postMountWrapper$2(domElement, rawProps);
      break;

    default:
      if (typeof props.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }

      break;
  }
} // Calculate the diff between the two objects.

function diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
  {
    validatePropertiesInDevelopment(tag, nextRawProps);
  }

  var updatePayload = null;
  var lastProps;
  var nextProps;

  switch (tag) {
    case 'input':
      lastProps = getHostProps(domElement, lastRawProps);
      nextProps = getHostProps(domElement, nextRawProps);
      updatePayload = [];
      break;

    case 'option':
      lastProps = getHostProps$1(domElement, lastRawProps);
      nextProps = getHostProps$1(domElement, nextRawProps);
      updatePayload = [];
      break;

    case 'select':
      lastProps = getHostProps$2(domElement, lastRawProps);
      nextProps = getHostProps$2(domElement, nextRawProps);
      updatePayload = [];
      break;

    case 'textarea':
      lastProps = getHostProps$3(domElement, lastRawProps);
      nextProps = getHostProps$3(domElement, nextRawProps);
      updatePayload = [];
      break;

    default:
      lastProps = lastRawProps;
      nextProps = nextRawProps;

      if (typeof lastProps.onClick !== 'function' && typeof nextProps.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }

      break;
  }

  assertValidProps(tag, nextProps);
  var propKey;
  var styleName;
  var styleUpdates = null;

  for (propKey in lastProps) {
    if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
      continue;
    }

    if (propKey === STYLE) {
      var lastStyle = lastProps[propKey];

      for (styleName in lastStyle) {
        if (lastStyle.hasOwnProperty(styleName)) {
          if (!styleUpdates) {
            styleUpdates = {};
          }

          styleUpdates[styleName] = '';
        }
      }
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) ; else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ; else if (propKey === AUTOFOCUS) ; else if (registrationNameDependencies.hasOwnProperty(propKey)) {
      // This is a special case. If any listener updates we need to ensure
      // that the "current" fiber pointer gets updated so we need a commit
      // to update this element.
      if (!updatePayload) {
        updatePayload = [];
      }
    } else {
      // For all other deleted properties we add it to the queue. We use
      // the allowed property list in the commit phase instead.
      (updatePayload = updatePayload || []).push(propKey, null);
    }
  }

  for (propKey in nextProps) {
    var nextProp = nextProps[propKey];
    var lastProp = lastProps != null ? lastProps[propKey] : undefined;

    if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
      continue;
    }

    if (propKey === STYLE) {
      {
        if (nextProp) {
          // Freeze the next style object so that we can assume it won't be
          // mutated. We have already warned for this in the past.
          Object.freeze(nextProp);
        }
      }

      if (lastProp) {
        // Unset styles on `lastProp` but not on `nextProp`.
        for (styleName in lastProp) {
          if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
            if (!styleUpdates) {
              styleUpdates = {};
            }

            styleUpdates[styleName] = '';
          }
        } // Update styles that changed since `lastProp`.


        for (styleName in nextProp) {
          if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
            if (!styleUpdates) {
              styleUpdates = {};
            }

            styleUpdates[styleName] = nextProp[styleName];
          }
        }
      } else {
        // Relies on `updateStylesByID` not mutating `styleUpdates`.
        if (!styleUpdates) {
          if (!updatePayload) {
            updatePayload = [];
          }

          updatePayload.push(propKey, styleUpdates);
        }

        styleUpdates = nextProp;
      }
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      var nextHtml = nextProp ? nextProp[HTML$1] : undefined;
      var lastHtml = lastProp ? lastProp[HTML$1] : undefined;

      if (nextHtml != null) {
        if (lastHtml !== nextHtml) {
          (updatePayload = updatePayload || []).push(propKey, nextHtml);
        }
      }
    } else if (propKey === CHILDREN) {
      if (typeof nextProp === 'string' || typeof nextProp === 'number') {
        (updatePayload = updatePayload || []).push(propKey, '' + nextProp);
      }
    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ; else if (registrationNameDependencies.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        // We eagerly listen to this even though we haven't committed yet.
        if ( typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }

        if (propKey === 'onScroll') {
          listenToNonDelegatedEvent('scroll', domElement);
        }
      }

      if (!updatePayload && lastProp !== nextProp) {
        // This is a special case. If any listener updates we need to ensure
        // that the "current" props pointer gets updated so we need a commit
        // to update this element.
        updatePayload = [];
      }
    } else if (typeof nextProp === 'object' && nextProp !== null && nextProp.$$typeof === REACT_OPAQUE_ID_TYPE) {
      // If we encounter useOpaqueReference's opaque object, this means we are hydrating.
      // In this case, call the opaque object's toString function which generates a new client
      // ID so client and server IDs match and throws to rerender.
      nextProp.toString();
    } else {
      // For any other property we always add it to the queue and then we
      // filter it out using the allowed property list during the commit.
      (updatePayload = updatePayload || []).push(propKey, nextProp);
    }
  }

  if (styleUpdates) {
    {
      validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE]);
    }

    (updatePayload = updatePayload || []).push(STYLE, styleUpdates);
  }

  return updatePayload;
} // Apply the diff.

function updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
  // Update checked *before* name.
  // In the middle of an update, it is possible to have multiple checked.
  // When a checked radio tries to change name, browser makes another radio's checked false.
  if (tag === 'input' && nextRawProps.type === 'radio' && nextRawProps.name != null) {
    updateChecked(domElement, nextRawProps);
  }

  var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
  var isCustomComponentTag = isCustomComponent(tag, nextRawProps); // Apply the diff.

  updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag); // TODO: Ensure that an update gets scheduled if any of the special props
  // changed.

  switch (tag) {
    case 'input':
      // Update the wrapper around inputs *after* updating props. This has to
      // happen after `updateDOMProperties`. Otherwise HTML5 input validations
      // raise warnings and prevent the new value from being assigned.
      updateWrapper(domElement, nextRawProps);
      break;

    case 'textarea':
      updateWrapper$1(domElement, nextRawProps);
      break;

    case 'select':
      // <select> value update needs to occur after <option> children
      // reconciliation
      postUpdateWrapper(domElement, nextRawProps);
      break;
  }
}

function getPossibleStandardName(propName) {
  {
    var lowerCasedName = propName.toLowerCase();

    if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {
      return null;
    }

    return possibleStandardNames[lowerCasedName] || null;
  }
}

function diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement) {
  var isCustomComponentTag;
  var extraAttributeNames;

  {
    suppressHydrationWarning = rawProps[SUPPRESS_HYDRATION_WARNING] === true;
    isCustomComponentTag = isCustomComponent(tag, rawProps);
    validatePropertiesInDevelopment(tag, rawProps);
  } // TODO: Make sure that we check isMounted before firing any of these events.


  switch (tag) {
    case 'dialog':
      listenToNonDelegatedEvent('cancel', domElement);
      listenToNonDelegatedEvent('close', domElement);
      break;

    case 'iframe':
    case 'object':
    case 'embed':
      // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the load event.
      listenToNonDelegatedEvent('load', domElement);
      break;

    case 'video':
    case 'audio':
      // We listen to these events in case to ensure emulated bubble
      // listeners still fire for all the media events.
      for (var i = 0; i < mediaEventTypes.length; i++) {
        listenToNonDelegatedEvent(mediaEventTypes[i], domElement);
      }

      break;

    case 'source':
      // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the error event.
      listenToNonDelegatedEvent('error', domElement);
      break;

    case 'img':
    case 'image':
    case 'link':
      // We listen to these events in case to ensure emulated bubble
      // listeners still fire for error and load events.
      listenToNonDelegatedEvent('error', domElement);
      listenToNonDelegatedEvent('load', domElement);
      break;

    case 'details':
      // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the toggle event.
      listenToNonDelegatedEvent('toggle', domElement);
      break;

    case 'input':
      initWrapperState(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the invalid event.

      listenToNonDelegatedEvent('invalid', domElement);

      break;

    case 'option':
      validateProps(domElement, rawProps);
      break;

    case 'select':
      initWrapperState$1(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the invalid event.

      listenToNonDelegatedEvent('invalid', domElement);

      break;

    case 'textarea':
      initWrapperState$2(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the invalid event.

      listenToNonDelegatedEvent('invalid', domElement);

      break;
  }

  assertValidProps(tag, rawProps);

  {
    extraAttributeNames = new Set();
    var attributes = domElement.attributes;

    for (var _i = 0; _i < attributes.length; _i++) {
      var name = attributes[_i].name.toLowerCase();

      switch (name) {
        // Built-in SSR attribute is allowed
        case 'data-reactroot':
          break;
        // Controlled attributes are not validated
        // TODO: Only ignore them on controlled tags.

        case 'value':
          break;

        case 'checked':
          break;

        case 'selected':
          break;

        default:
          // Intentionally use the original name.
          // See discussion in https://github.com/facebook/react/pull/10676.
          extraAttributeNames.add(attributes[_i].name);
      }
    }
  }

  var updatePayload = null;

  for (var propKey in rawProps) {
    if (!rawProps.hasOwnProperty(propKey)) {
      continue;
    }

    var nextProp = rawProps[propKey];

    if (propKey === CHILDREN) {
      // For text content children we compare against textContent. This
      // might match additional HTML that is hidden when we read it using
      // textContent. E.g. "foo" will match "f<span>oo</span>" but that still
      // satisfies our requirement. Our requirement is not to produce perfect
      // HTML and attributes. Ideally we should preserve structure but it's
      // ok not to if the visible content is still enough to indicate what
      // even listeners these nodes might be wired up to.
      // TODO: Warn if there is more than a single textNode as a child.
      // TODO: Should we use domElement.firstChild.nodeValue to compare?
      if (typeof nextProp === 'string') {
        if (domElement.textContent !== nextProp) {
          if ( !suppressHydrationWarning) {
            warnForTextDifference(domElement.textContent, nextProp);
          }

          updatePayload = [CHILDREN, nextProp];
        }
      } else if (typeof nextProp === 'number') {
        if (domElement.textContent !== '' + nextProp) {
          if ( !suppressHydrationWarning) {
            warnForTextDifference(domElement.textContent, nextProp);
          }

          updatePayload = [CHILDREN, '' + nextProp];
        }
      }
    } else if (registrationNameDependencies.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        if ( typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }

        if (propKey === 'onScroll') {
          listenToNonDelegatedEvent('scroll', domElement);
        }
      }
    } else if ( // Convince Flow we've calculated it (it's DEV-only in this method.)
    typeof isCustomComponentTag === 'boolean') {
      // Validate that the properties correspond to their expected values.
      var serverValue = void 0;
      var propertyInfo = getPropertyInfo(propKey);

      if (suppressHydrationWarning) ; else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING || // Controlled attributes are not validated
      // TODO: Only ignore them on controlled tags.
      propKey === 'value' || propKey === 'checked' || propKey === 'selected') ; else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
        var serverHTML = domElement.innerHTML;
        var nextHtml = nextProp ? nextProp[HTML$1] : undefined;

        if (nextHtml != null) {
          var expectedHTML = normalizeHTML(domElement, nextHtml);

          if (expectedHTML !== serverHTML) {
            warnForPropDifference(propKey, serverHTML, expectedHTML);
          }
        }
      } else if (propKey === STYLE) {
        // $FlowFixMe - Should be inferred as not undefined.
        extraAttributeNames.delete(propKey);

        if (canDiffStyleForHydrationWarning) {
          var expectedStyle = createDangerousStringForStyles(nextProp);
          serverValue = domElement.getAttribute('style');

          if (expectedStyle !== serverValue) {
            warnForPropDifference(propKey, serverValue, expectedStyle);
          }
        }
      } else if (isCustomComponentTag) {
        // $FlowFixMe - Should be inferred as not undefined.
        extraAttributeNames.delete(propKey.toLowerCase());
        serverValue = getValueForAttribute(domElement, propKey, nextProp);

        if (nextProp !== serverValue) {
          warnForPropDifference(propKey, serverValue, nextProp);
        }
      } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {
        var isMismatchDueToBadCasing = false;

        if (propertyInfo !== null) {
          // $FlowFixMe - Should be inferred as not undefined.
          extraAttributeNames.delete(propertyInfo.attributeName);
          serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);
        } else {
          var ownNamespace = parentNamespace;

          if (ownNamespace === HTML_NAMESPACE$1) {
            ownNamespace = getIntrinsicNamespace(tag);
          }

          if (ownNamespace === HTML_NAMESPACE$1) {
            // $FlowFixMe - Should be inferred as not undefined.
            extraAttributeNames.delete(propKey.toLowerCase());
          } else {
            var standardName = getPossibleStandardName(propKey);

            if (standardName !== null && standardName !== propKey) {
              // If an SVG prop is supplied with bad casing, it will
              // be successfully parsed from HTML, but will produce a mismatch
              // (and would be incorrectly rendered on the client).
              // However, we already warn about bad casing elsewhere.
              // So we'll skip the misleading extra mismatch warning in this case.
              isMismatchDueToBadCasing = true; // $FlowFixMe - Should be inferred as not undefined.

              extraAttributeNames.delete(standardName);
            } // $FlowFixMe - Should be inferred as not undefined.


            extraAttributeNames.delete(propKey);
          }

          serverValue = getValueForAttribute(domElement, propKey, nextProp);
        }

        if (nextProp !== serverValue && !isMismatchDueToBadCasing) {
          warnForPropDifference(propKey, serverValue, nextProp);
        }
      }
    }
  }

  {
    // $FlowFixMe - Should be inferred as not undefined.
    if (extraAttributeNames.size > 0 && !suppressHydrationWarning) {
      // $FlowFixMe - Should be inferred as not undefined.
      warnForExtraAttributes(extraAttributeNames);
    }
  }

  switch (tag) {
    case 'input':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper(domElement, rawProps, true);
      break;

    case 'textarea':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper$3(domElement);
      break;

    case 'select':
    case 'option':
      // For input and textarea we current always set the value property at
      // post mount to force it to diverge from attributes. However, for
      // option and select we don't quite do the same thing and select
      // is not resilient to the DOM state changing so we don't do that here.
      // TODO: Consider not doing this for input and textarea.
      break;

    default:
      if (typeof rawProps.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }

      break;
  }

  return updatePayload;
}
function diffHydratedText(textNode, text) {
  var isDifferent = textNode.nodeValue !== text;
  return isDifferent;
}
function warnForUnmatchedText(textNode, text) {
  {
    warnForTextDifference(textNode.nodeValue, text);
  }
}
function warnForDeletedHydratableElement(parentNode, child) {
  {
    if (didWarnInvalidHydration) {
      return;
    }

    didWarnInvalidHydration = true;

    error('Did not expect server HTML to contain a <%s> in <%s>.', child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
  }
}
function warnForDeletedHydratableText(parentNode, child) {
  {
    if (didWarnInvalidHydration) {
      return;
    }

    didWarnInvalidHydration = true;

    error('Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
  }
}
function warnForInsertedHydratedElement(parentNode, tag, props) {
  {
    if (didWarnInvalidHydration) {
      return;
    }

    didWarnInvalidHydration = true;

    error('Expected server HTML to contain a matching <%s> in <%s>.', tag, parentNode.nodeName.toLowerCase());
  }
}
function warnForInsertedHydratedText(parentNode, text) {
  {
    if (text === '') {
      // We expect to insert empty text nodes since they're not represented in
      // the HTML.
      // TODO: Remove this special case if we can just avoid inserting empty
      // text nodes.
      return;
    }

    if (didWarnInvalidHydration) {
      return;
    }

    didWarnInvalidHydration = true;

    error('Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
  }
}
function restoreControlledState$3(domElement, tag, props) {
  switch (tag) {
    case 'input':
      restoreControlledState(domElement, props);
      return;

    case 'textarea':
      restoreControlledState$2(domElement, props);
      return;

    case 'select':
      restoreControlledState$1(domElement, props);
      return;
  }
}

var validateDOMNesting = function () {};

var updatedAncestorInfo = function () {};

{
  // This validation code was written based on the HTML5 parsing spec:
  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  //
  // Note: this does not catch all invalid nesting, nor does it try to (as it's
  // not clear what practical benefit doing so provides); instead, we warn only
  // for cases where the parser will give a parse tree differing from what React
  // intended. For example, <b><div></div></b> is invalid but we don't warn
  // because it still parses correctly; we do warn for other cases like nested
  // <p> tags where the beginning of the second element implicitly closes the
  // first, causing a confusing mess.
  // https://html.spec.whatwg.org/multipage/syntax.html#special
  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp']; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope

  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template', // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
  // TODO: Distinguish by namespace here -- for <title>, including it here
  // errs on the side of fewer warnings
  'foreignObject', 'desc', 'title']; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope

  var buttonScopeTags = inScopeTags.concat(['button']); // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags

  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];
  var emptyAncestorInfo = {
    current: null,
    formTag: null,
    aTagInScope: null,
    buttonTagInScope: null,
    nobrTagInScope: null,
    pTagInButtonScope: null,
    listItemTagAutoclosing: null,
    dlItemTagAutoclosing: null
  };

  updatedAncestorInfo = function (oldInfo, tag) {
    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);

    var info = {
      tag: tag
    };

    if (inScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.aTagInScope = null;
      ancestorInfo.buttonTagInScope = null;
      ancestorInfo.nobrTagInScope = null;
    }

    if (buttonScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.pTagInButtonScope = null;
    } // See rules for 'li', 'dd', 'dt' start tags in
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody


    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
      ancestorInfo.listItemTagAutoclosing = null;
      ancestorInfo.dlItemTagAutoclosing = null;
    }

    ancestorInfo.current = info;

    if (tag === 'form') {
      ancestorInfo.formTag = info;
    }

    if (tag === 'a') {
      ancestorInfo.aTagInScope = info;
    }

    if (tag === 'button') {
      ancestorInfo.buttonTagInScope = info;
    }

    if (tag === 'nobr') {
      ancestorInfo.nobrTagInScope = info;
    }

    if (tag === 'p') {
      ancestorInfo.pTagInButtonScope = info;
    }

    if (tag === 'li') {
      ancestorInfo.listItemTagAutoclosing = info;
    }

    if (tag === 'dd' || tag === 'dt') {
      ancestorInfo.dlItemTagAutoclosing = info;
    }

    return ancestorInfo;
  };
  /**
   * Returns whether
   */


  var isTagValidWithParent = function (tag, parentTag) {
    // First, let's check if we're in an unusual parsing mode...
    switch (parentTag) {
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
      case 'select':
        return tag === 'option' || tag === 'optgroup' || tag === '#text';

      case 'optgroup':
        return tag === 'option' || tag === '#text';
      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
      // but

      case 'option':
        return tag === '#text';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
      // No special behavior since these rules fall back to "in body" mode for
      // all except special table nodes which cause bad parsing behavior anyway.
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr

      case 'tr':
        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody

      case 'tbody':
      case 'thead':
      case 'tfoot':
        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup

      case 'colgroup':
        return tag === 'col' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable

      case 'table':
        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead

      case 'head':
        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element

      case 'html':
        return tag === 'head' || tag === 'body' || tag === 'frameset';

      case 'frameset':
        return tag === 'frame';

      case '#document':
        return tag === 'html';
    } // Probably in the "in body" parsing mode, so we outlaw only tag combos
    // where the parsing rules cause implicit opens or closes to be added.
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody


    switch (tag) {
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

      case 'rp':
      case 'rt':
        return impliedEndTags.indexOf(parentTag) === -1;

      case 'body':
      case 'caption':
      case 'col':
      case 'colgroup':
      case 'frameset':
      case 'frame':
      case 'head':
      case 'html':
      case 'tbody':
      case 'td':
      case 'tfoot':
      case 'th':
      case 'thead':
      case 'tr':
        // These tags are only valid with a few parents that have special child
        // parsing rules -- if we're down here, then none of those matched and
        // so we allow it only if we don't know what the parent is, as all other
        // cases are invalid.
        return parentTag == null;
    }

    return true;
  };
  /**
   * Returns whether
   */


  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
    switch (tag) {
      case 'address':
      case 'article':
      case 'aside':
      case 'blockquote':
      case 'center':
      case 'details':
      case 'dialog':
      case 'dir':
      case 'div':
      case 'dl':
      case 'fieldset':
      case 'figcaption':
      case 'figure':
      case 'footer':
      case 'header':
      case 'hgroup':
      case 'main':
      case 'menu':
      case 'nav':
      case 'ol':
      case 'p':
      case 'section':
      case 'summary':
      case 'ul':
      case 'pre':
      case 'listing':
      case 'table':
      case 'hr':
      case 'xmp':
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return ancestorInfo.pTagInButtonScope;

      case 'form':
        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

      case 'li':
        return ancestorInfo.listItemTagAutoclosing;

      case 'dd':
      case 'dt':
        return ancestorInfo.dlItemTagAutoclosing;

      case 'button':
        return ancestorInfo.buttonTagInScope;

      case 'a':
        // Spec says something about storing a list of markers, but it sounds
        // equivalent to this check.
        return ancestorInfo.aTagInScope;

      case 'nobr':
        return ancestorInfo.nobrTagInScope;
    }

    return null;
  };

  var didWarn$1 = {};

  validateDOMNesting = function (childTag, childText, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;

    if (childText != null) {
      if (childTag != null) {
        error('validateDOMNesting: when childText is passed, childTag should be null');
      }

      childTag = '#text';
    }

    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
    var invalidParentOrAncestor = invalidParent || invalidAncestor;

    if (!invalidParentOrAncestor) {
      return;
    }

    var ancestorTag = invalidParentOrAncestor.tag;
    var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag;

    if (didWarn$1[warnKey]) {
      return;
    }

    didWarn$1[warnKey] = true;
    var tagDisplayName = childTag;
    var whitespaceInfo = '';

    if (childTag === '#text') {
      if (/\S/.test(childText)) {
        tagDisplayName = 'Text nodes';
      } else {
        tagDisplayName = 'Whitespace text nodes';
        whitespaceInfo = " Make sure you don't have any extra whitespace between tags on " + 'each line of your source code.';
      }
    } else {
      tagDisplayName = '<' + childTag + '>';
    }

    if (invalidParent) {
      var info = '';

      if (ancestorTag === 'table' && childTag === 'tr') {
        info += ' Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by ' + 'the browser.';
      }

      error('validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s', tagDisplayName, ancestorTag, whitespaceInfo, info);
    } else {
      error('validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>.', tagDisplayName, ancestorTag);
    }
  };
}

var SUPPRESS_HYDRATION_WARNING$1;

{
  SUPPRESS_HYDRATION_WARNING$1 = 'suppressHydrationWarning';
}

var SUSPENSE_START_DATA = '$';
var SUSPENSE_END_DATA = '/$';
var SUSPENSE_PENDING_START_DATA = '$?';
var SUSPENSE_FALLBACK_START_DATA = '$!';
var STYLE$1 = 'style';
var eventsEnabled = null;
var selectionInformation = null;

function shouldAutoFocusHostComponent(type, props) {
  switch (type) {
    case 'button':
    case 'input':
    case 'select':
    case 'textarea':
      return !!props.autoFocus;
  }

  return false;
}
function getRootHostContext(rootContainerInstance) {
  var type;
  var namespace;
  var nodeType = rootContainerInstance.nodeType;

  switch (nodeType) {
    case DOCUMENT_NODE:
    case DOCUMENT_FRAGMENT_NODE:
      {
        type = nodeType === DOCUMENT_NODE ? '#document' : '#fragment';
        var root = rootContainerInstance.documentElement;
        namespace = root ? root.namespaceURI : getChildNamespace(null, '');
        break;
      }

    default:
      {
        var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
        var ownNamespace = container.namespaceURI || null;
        type = container.tagName;
        namespace = getChildNamespace(ownNamespace, type);
        break;
      }
  }

  {
    var validatedTag = type.toLowerCase();
    var ancestorInfo = updatedAncestorInfo(null, validatedTag);
    return {
      namespace: namespace,
      ancestorInfo: ancestorInfo
    };
  }
}
function getChildHostContext(parentHostContext, type, rootContainerInstance) {
  {
    var parentHostContextDev = parentHostContext;
    var namespace = getChildNamespace(parentHostContextDev.namespace, type);
    var ancestorInfo = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type);
    return {
      namespace: namespace,
      ancestorInfo: ancestorInfo
    };
  }
}
function getPublicInstance(instance) {
  return instance;
}
function prepareForCommit(containerInfo) {
  eventsEnabled = isEnabled();
  selectionInformation = getSelectionInformation();
  var activeInstance = null;

  setEnabled(false);
  return activeInstance;
}
function resetAfterCommit(containerInfo) {
  restoreSelection(selectionInformation);
  setEnabled(eventsEnabled);
  eventsEnabled = null;
  selectionInformation = null;
}
function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
  var parentNamespace;

  {
    // TODO: take namespace into account when validating.
    var hostContextDev = hostContext;
    validateDOMNesting(type, null, hostContextDev.ancestorInfo);

    if (typeof props.children === 'string' || typeof props.children === 'number') {
      var string = '' + props.children;
      var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
      validateDOMNesting(null, string, ownAncestorInfo);
    }

    parentNamespace = hostContextDev.namespace;
  }

  var domElement = createElement(type, props, rootContainerInstance, parentNamespace);
  precacheFiberNode(internalInstanceHandle, domElement);
  updateFiberProps(domElement, props);
  return domElement;
}
function appendInitialChild(parentInstance, child) {
  parentInstance.appendChild(child);
}
function finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {
  setInitialProperties(domElement, type, props, rootContainerInstance);
  return shouldAutoFocusHostComponent(type, props);
}
function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
  {
    var hostContextDev = hostContext;

    if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === 'string' || typeof newProps.children === 'number')) {
      var string = '' + newProps.children;
      var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
      validateDOMNesting(null, string, ownAncestorInfo);
    }
  }

  return diffProperties(domElement, type, oldProps, newProps);
}
function shouldSetTextContent(type, props) {
  return type === 'textarea' || type === 'option' || type === 'noscript' || typeof props.children === 'string' || typeof props.children === 'number' || typeof props.dangerouslySetInnerHTML === 'object' && props.dangerouslySetInnerHTML !== null && props.dangerouslySetInnerHTML.__html != null;
}
function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
  {
    var hostContextDev = hostContext;
    validateDOMNesting(null, text, hostContextDev.ancestorInfo);
  }

  var textNode = createTextNode(text, rootContainerInstance);
  precacheFiberNode(internalInstanceHandle, textNode);
  return textNode;
}
// if a component just imports ReactDOM (e.g. for findDOMNode).
// Some environments might not have setTimeout or clearTimeout.

var scheduleTimeout = typeof setTimeout === 'function' ? setTimeout : undefined;
var cancelTimeout = typeof clearTimeout === 'function' ? clearTimeout : undefined;
var noTimeout = -1; // -------------------
function commitMount(domElement, type, newProps, internalInstanceHandle) {
  // Despite the naming that might imply otherwise, this method only
  // fires if there is an `Update` effect scheduled during mounting.
  // This happens if `finalizeInitialChildren` returns `true` (which it
  // does to implement the `autoFocus` attribute on the client). But
  // there are also other cases when this might happen (such as patching
  // up text content during hydration mismatch). So we'll check this again.
  if (shouldAutoFocusHostComponent(type, newProps)) {
    domElement.focus();
  }
}
function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
  // Update the props handle so that we know which props are the ones with
  // with current event handlers.
  updateFiberProps(domElement, newProps); // Apply the diff to the DOM node.

  updateProperties(domElement, updatePayload, type, oldProps, newProps);
}
function resetTextContent(domElement) {
  setTextContent(domElement, '');
}
function commitTextUpdate(textInstance, oldText, newText) {
  textInstance.nodeValue = newText;
}
function appendChild(parentInstance, child) {
  parentInstance.appendChild(child);
}
function appendChildToContainer(container, child) {
  var parentNode;

  if (container.nodeType === COMMENT_NODE) {
    parentNode = container.parentNode;
    parentNode.insertBefore(child, container);
  } else {
    parentNode = container;
    parentNode.appendChild(child);
  } // This container might be used for a portal.
  // If something inside a portal is clicked, that click should bubble
  // through the React tree. However, on Mobile Safari the click would
  // never bubble through the *DOM* tree unless an ancestor with onclick
  // event exists. So we wouldn't see it and dispatch it.
  // This is why we ensure that non React root containers have inline onclick
  // defined.
  // https://github.com/facebook/react/issues/11918


  var reactRootContainer = container._reactRootContainer;

  if ((reactRootContainer === null || reactRootContainer === undefined) && parentNode.onclick === null) {
    // TODO: This cast may not be sound for SVG, MathML or custom elements.
    trapClickOnNonInteractiveElement(parentNode);
  }
}
function insertBefore(parentInstance, child, beforeChild) {
  parentInstance.insertBefore(child, beforeChild);
}
function insertInContainerBefore(container, child, beforeChild) {
  if (container.nodeType === COMMENT_NODE) {
    container.parentNode.insertBefore(child, beforeChild);
  } else {
    container.insertBefore(child, beforeChild);
  }
}

function removeChild(parentInstance, child) {
  parentInstance.removeChild(child);
}
function removeChildFromContainer(container, child) {
  if (container.nodeType === COMMENT_NODE) {
    container.parentNode.removeChild(child);
  } else {
    container.removeChild(child);
  }
}
function hideInstance(instance) {
  // TODO: Does this work for all element types? What about MathML? Should we
  // pass host context to this method?
  instance = instance;
  var style = instance.style;

  if (typeof style.setProperty === 'function') {
    style.setProperty('display', 'none', 'important');
  } else {
    style.display = 'none';
  }
}
function hideTextInstance(textInstance) {
  textInstance.nodeValue = '';
}
function unhideInstance(instance, props) {
  instance = instance;
  var styleProp = props[STYLE$1];
  var display = styleProp !== undefined && styleProp !== null && styleProp.hasOwnProperty('display') ? styleProp.display : null;
  instance.style.display = dangerousStyleValue('display', display);
}
function unhideTextInstance(textInstance, text) {
  textInstance.nodeValue = text;
}
function clearContainer(container) {
  if (container.nodeType === ELEMENT_NODE) {
    container.textContent = '';
  } else if (container.nodeType === DOCUMENT_NODE) {
    var body = container.body;

    if (body != null) {
      body.textContent = '';
    }
  }
} // -------------------
function canHydrateInstance(instance, type, props) {
  if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) {
    return null;
  } // This has now been refined to an element node.


  return instance;
}
function canHydrateTextInstance(instance, text) {
  if (text === '' || instance.nodeType !== TEXT_NODE) {
    // Empty strings are not parsed by HTML so there won't be a correct match here.
    return null;
  } // This has now been refined to a text node.


  return instance;
}
function isSuspenseInstancePending(instance) {
  return instance.data === SUSPENSE_PENDING_START_DATA;
}
function isSuspenseInstanceFallback(instance) {
  return instance.data === SUSPENSE_FALLBACK_START_DATA;
}

function getNextHydratable(node) {
  // Skip non-hydratable nodes.
  for (; node != null; node = node.nextSibling) {
    var nodeType = node.nodeType;

    if (nodeType === ELEMENT_NODE || nodeType === TEXT_NODE) {
      break;
    }
  }

  return node;
}

function getNextHydratableSibling(instance) {
  return getNextHydratable(instance.nextSibling);
}
function getFirstHydratableChild(parentInstance) {
  return getNextHydratable(parentInstance.firstChild);
}
function hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
  precacheFiberNode(internalInstanceHandle, instance); // TODO: Possibly defer this until the commit phase where all the events
  // get attached.

  updateFiberProps(instance, props);
  var parentNamespace;

  {
    var hostContextDev = hostContext;
    parentNamespace = hostContextDev.namespace;
  }

  return diffHydratedProperties(instance, type, props, parentNamespace);
}
function hydrateTextInstance(textInstance, text, internalInstanceHandle) {
  precacheFiberNode(internalInstanceHandle, textInstance);
  return diffHydratedText(textInstance, text);
}
function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {
  var node = suspenseInstance.nextSibling; // Skip past all nodes within this suspense boundary.
  // There might be nested nodes so we need to keep track of how
  // deep we are and only break out when we're back on top.

  var depth = 0;

  while (node) {
    if (node.nodeType === COMMENT_NODE) {
      var data = node.data;

      if (data === SUSPENSE_END_DATA) {
        if (depth === 0) {
          return getNextHydratableSibling(node);
        } else {
          depth--;
        }
      } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
        depth++;
      }
    }

    node = node.nextSibling;
  } // TODO: Warn, we didn't find the end comment boundary.


  return null;
} // Returns the SuspenseInstance if this node is a direct child of a
// SuspenseInstance. I.e. if its previous sibling is a Comment with
// SUSPENSE_x_START_DATA. Otherwise, null.

function getParentSuspenseInstance(targetInstance) {
  var node = targetInstance.previousSibling; // Skip past all nodes within this suspense boundary.
  // There might be nested nodes so we need to keep track of how
  // deep we are and only break out when we're back on top.

  var depth = 0;

  while (node) {
    if (node.nodeType === COMMENT_NODE) {
      var data = node.data;

      if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
        if (depth === 0) {
          return node;
        } else {
          depth--;
        }
      } else if (data === SUSPENSE_END_DATA) {
        depth++;
      }
    }

    node = node.previousSibling;
  }

  return null;
}
function commitHydratedContainer(container) {
  // Retry if any event replaying was blocked on this.
  retryIfBlockedOn(container);
}
function commitHydratedSuspenseInstance(suspenseInstance) {
  // Retry if any event replaying was blocked on this.
  retryIfBlockedOn(suspenseInstance);
}
function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text) {
  {
    warnForUnmatchedText(textInstance, text);
  }
}
function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text) {
  if ( parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
    warnForUnmatchedText(textInstance, text);
  }
}
function didNotHydrateContainerInstance(parentContainer, instance) {
  {
    if (instance.nodeType === ELEMENT_NODE) {
      warnForDeletedHydratableElement(parentContainer, instance);
    } else if (instance.nodeType === COMMENT_NODE) ; else {
      warnForDeletedHydratableText(parentContainer, instance);
    }
  }
}
function didNotHydrateInstance(parentType, parentProps, parentInstance, instance) {
  if ( parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
    if (instance.nodeType === ELEMENT_NODE) {
      warnForDeletedHydratableElement(parentInstance, instance);
    } else if (instance.nodeType === COMMENT_NODE) ; else {
      warnForDeletedHydratableText(parentInstance, instance);
    }
  }
}
function didNotFindHydratableContainerInstance(parentContainer, type, props) {
  {
    warnForInsertedHydratedElement(parentContainer, type);
  }
}
function didNotFindHydratableContainerTextInstance(parentContainer, text) {
  {
    warnForInsertedHydratedText(parentContainer, text);
  }
}
function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props) {
  if ( parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
    warnForInsertedHydratedElement(parentInstance, type);
  }
}
function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text) {
  if ( parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
    warnForInsertedHydratedText(parentInstance, text);
  }
}
function didNotFindHydratableSuspenseInstance(parentType, parentProps, parentInstance) {
  if ( parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) ;
}
var clientId = 0;
function makeClientIdInDEV(warnOnAccessInDEV) {
  var id = 'r:' + (clientId++).toString(36);
  return {
    toString: function () {
      warnOnAccessInDEV();
      return id;
    },
    valueOf: function () {
      warnOnAccessInDEV();
      return id;
    }
  };
}
function isOpaqueHydratingObject(value) {
  return value !== null && typeof value === 'object' && value.$$typeof === REACT_OPAQUE_ID_TYPE;
}
function makeOpaqueHydratingObject(attemptToReadValue) {
  return {
    $$typeof: REACT_OPAQUE_ID_TYPE,
    toString: attemptToReadValue,
    valueOf: attemptToReadValue
  };
}
function preparePortalMount(portalInstance) {
  {
    listenToAllSupportedEvents(portalInstance);
  }
}

var randomKey = Math.random().toString(36).slice(2);
var internalInstanceKey = '__reactFiber$' + randomKey;
var internalPropsKey = '__reactProps$' + randomKey;
var internalContainerInstanceKey = '__reactContainer$' + randomKey;
var internalEventHandlersKey = '__reactEvents$' + randomKey;
function precacheFiberNode(hostInst, node) {
  node[internalInstanceKey] = hostInst;
}
function markContainerAsRoot(hostRoot, node) {
  node[internalContainerInstanceKey] = hostRoot;
}
function unmarkContainerAsRoot(node) {
  node[internalContainerInstanceKey] = null;
}
function isContainerMarkedAsRoot(node) {
  return !!node[internalContainerInstanceKey];
} // Given a DOM node, return the closest HostComponent or HostText fiber ancestor.
// If the target node is part of a hydrated or not yet rendered subtree, then
// this may also return a SuspenseComponent or HostRoot to indicate that.
// Conceptually the HostRoot fiber is a child of the Container node. So if you
// pass the Container node as the targetNode, you will not actually get the
// HostRoot back. To get to the HostRoot, you need to pass a child of it.
// The same thing applies to Suspense boundaries.

function getClosestInstanceFromNode(targetNode) {
  var targetInst = targetNode[internalInstanceKey];

  if (targetInst) {
    // Don't return HostRoot or SuspenseComponent here.
    return targetInst;
  } // If the direct event target isn't a React owned DOM node, we need to look
  // to see if one of its parents is a React owned DOM node.


  var parentNode = targetNode.parentNode;

  while (parentNode) {
    // We'll check if this is a container root that could include
    // React nodes in the future. We need to check this first because
    // if we're a child of a dehydrated container, we need to first
    // find that inner container before moving on to finding the parent
    // instance. Note that we don't check this field on  the targetNode
    // itself because the fibers are conceptually between the container
    // node and the first child. It isn't surrounding the container node.
    // If it's not a container, we check if it's an instance.
    targetInst = parentNode[internalContainerInstanceKey] || parentNode[internalInstanceKey];

    if (targetInst) {
      // Since this wasn't the direct target of the event, we might have
      // stepped past dehydrated DOM nodes to get here. However they could
      // also have been non-React nodes. We need to answer which one.
      // If we the instance doesn't have any children, then there can't be
      // a nested suspense boundary within it. So we can use this as a fast
      // bailout. Most of the time, when people add non-React children to
      // the tree, it is using a ref to a child-less DOM node.
      // Normally we'd only need to check one of the fibers because if it
      // has ever gone from having children to deleting them or vice versa
      // it would have deleted the dehydrated boundary nested inside already.
      // However, since the HostRoot starts out with an alternate it might
      // have one on the alternate so we need to check in case this was a
      // root.
      var alternate = targetInst.alternate;

      if (targetInst.child !== null || alternate !== null && alternate.child !== null) {
        // Next we need to figure out if the node that skipped past is
        // nested within a dehydrated boundary and if so, which one.
        var suspenseInstance = getParentSuspenseInstance(targetNode);

        while (suspenseInstance !== null) {
          // We found a suspense instance. That means that we haven't
          // hydrated it yet. Even though we leave the comments in the
          // DOM after hydrating, and there are boundaries in the DOM
          // that could already be hydrated, we wouldn't have found them
          // through this pass since if the target is hydrated it would
          // have had an internalInstanceKey on it.
          // Let's get the fiber associated with the SuspenseComponent
          // as the deepest instance.
          var targetSuspenseInst = suspenseInstance[internalInstanceKey];

          if (targetSuspenseInst) {
            return targetSuspenseInst;
          } // If we don't find a Fiber on the comment, it might be because
          // we haven't gotten to hydrate it yet. There might still be a
          // parent boundary that hasn't above this one so we need to find
          // the outer most that is known.


          suspenseInstance = getParentSuspenseInstance(suspenseInstance); // If we don't find one, then that should mean that the parent
          // host component also hasn't hydrated yet. We can return it
          // below since it will bail out on the isMounted check later.
        }
      }

      return targetInst;
    }

    targetNode = parentNode;
    parentNode = targetNode.parentNode;
  }

  return null;
}
/**
 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
 * instance, or null if the node was not rendered by this React.
 */

function getInstanceFromNode(node) {
  var inst = node[internalInstanceKey] || node[internalContainerInstanceKey];

  if (inst) {
    if (inst.tag === HostComponent || inst.tag === HostText || inst.tag === SuspenseComponent || inst.tag === HostRoot) {
      return inst;
    } else {
      return null;
    }
  }

  return null;
}
/**
 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
 * DOM node.
 */

function getNodeFromInstance(inst) {
  if (inst.tag === HostComponent || inst.tag === HostText) {
    // In Fiber this, is just the state node right now. We assume it will be
    // a host component or host text.
    return inst.stateNode;
  } // Without this first invariant, passing a non-DOM-component triggers the next
  // invariant for a missing parent, which is super confusing.


  {
    {
      throw Error( "getNodeFromInstance: Invalid argument." );
    }
  }
}
function getFiberCurrentPropsFromNode(node) {
  return node[internalPropsKey] || null;
}
function updateFiberProps(node, props) {
  node[internalPropsKey] = props;
}
function getEventListenerSet(node) {
  var elementListenerSet = node[internalEventHandlersKey];

  if (elementListenerSet === undefined) {
    elementListenerSet = node[internalEventHandlersKey] = new Set();
  }

  return elementListenerSet;
}

var loggedTypeFailures = {};
var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;

function setCurrentlyValidatingElement(element) {
  {
    if (element) {
      var owner = element._owner;
      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
    } else {
      ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
  }
}

function checkPropTypes(typeSpecs, values, location, componentName, element) {
  {
    // $FlowFixMe This is okay but Flow doesn't know it.
    var has = Function.call.bind(Object.prototype.hasOwnProperty);

    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.

        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
            err.name = 'Invariant Violation';
            throw err;
          }

          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
        } catch (ex) {
          error$1 = ex;
        }

        if (error$1 && !(error$1 instanceof Error)) {
          setCurrentlyValidatingElement(element);

          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);

          setCurrentlyValidatingElement(null);
        }

        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error$1.message] = true;
          setCurrentlyValidatingElement(element);

          error('Failed %s type: %s', location, error$1.message);

          setCurrentlyValidatingElement(null);
        }
      }
    }
  }
}

var valueStack = [];
var fiberStack;

{
  fiberStack = [];
}

var index = -1;

function createCursor(defaultValue) {
  return {
    current: defaultValue
  };
}

function pop(cursor, fiber) {
  if (index < 0) {
    {
      error('Unexpected pop.');
    }

    return;
  }

  {
    if (fiber !== fiberStack[index]) {
      error('Unexpected Fiber popped.');
    }
  }

  cursor.current = valueStack[index];
  valueStack[index] = null;

  {
    fiberStack[index] = null;
  }

  index--;
}

function push(cursor, value, fiber) {
  index++;
  valueStack[index] = cursor.current;

  {
    fiberStack[index] = fiber;
  }

  cursor.current = value;
}

var warnedAboutMissingGetChildContext;

{
  warnedAboutMissingGetChildContext = {};
}

var emptyContextObject = {};

{
  Object.freeze(emptyContextObject);
} // A cursor to the current merged context object on the stack.


var contextStackCursor = createCursor(emptyContextObject); // A cursor to a boolean indicating whether the context has changed.

var didPerformWorkStackCursor = createCursor(false); // Keep track of the previous context object that was on the stack.
// We use this to get access to the parent context after we have already
// pushed the next context provider, and now need to merge their contexts.

var previousContext = emptyContextObject;

function getUnmaskedContext(workInProgress, Component, didPushOwnContextIfProvider) {
  {
    if (didPushOwnContextIfProvider && isContextProvider(Component)) {
      // If the fiber is a context provider itself, when we read its context
      // we may have already pushed its own child context on the stack. A context
      // provider should not "see" its own child context. Therefore we read the
      // previous (parent) context instead for a context provider.
      return previousContext;
    }

    return contextStackCursor.current;
  }
}

function cacheContext(workInProgress, unmaskedContext, maskedContext) {
  {
    var instance = workInProgress.stateNode;
    instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
    instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
  }
}

function getMaskedContext(workInProgress, unmaskedContext) {
  {
    var type = workInProgress.type;
    var contextTypes = type.contextTypes;

    if (!contextTypes) {
      return emptyContextObject;
    } // Avoid recreating masked context unless unmasked context has changed.
    // Failing to do this will result in unnecessary calls to componentWillReceiveProps.
    // This may trigger infinite loops if componentWillReceiveProps calls setState.


    var instance = workInProgress.stateNode;

    if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {
      return instance.__reactInternalMemoizedMaskedChildContext;
    }

    var context = {};

    for (var key in contextTypes) {
      context[key] = unmaskedContext[key];
    }

    {
      var name = getComponentName(type) || 'Unknown';
      checkPropTypes(contextTypes, context, 'context', name);
    } // Cache unmasked context so we can avoid recreating masked context unless necessary.
    // Context is created before the class component is instantiated so check for instance.


    if (instance) {
      cacheContext(workInProgress, unmaskedContext, context);
    }

    return context;
  }
}

function hasContextChanged() {
  {
    return didPerformWorkStackCursor.current;
  }
}

function isContextProvider(type) {
  {
    var childContextTypes = type.childContextTypes;
    return childContextTypes !== null && childContextTypes !== undefined;
  }
}

function popContext(fiber) {
  {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }
}

function popTopLevelContextObject(fiber) {
  {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }
}

function pushTopLevelContextObject(fiber, context, didChange) {
  {
    if (!(contextStackCursor.current === emptyContextObject)) {
      {
        throw Error( "Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue." );
      }
    }

    push(contextStackCursor, context, fiber);
    push(didPerformWorkStackCursor, didChange, fiber);
  }
}

function processChildContext(fiber, type, parentContext) {
  {
    var instance = fiber.stateNode;
    var childContextTypes = type.childContextTypes; // TODO (bvaughn) Replace this behavior with an invariant() in the future.
    // It has only been added in Fiber to match the (unintentional) behavior in Stack.

    if (typeof instance.getChildContext !== 'function') {
      {
        var componentName = getComponentName(type) || 'Unknown';

        if (!warnedAboutMissingGetChildContext[componentName]) {
          warnedAboutMissingGetChildContext[componentName] = true;

          error('%s.childContextTypes is specified but there is no getChildContext() method ' + 'on the instance. You can either define getChildContext() on %s or remove ' + 'childContextTypes from it.', componentName, componentName);
        }
      }

      return parentContext;
    }

    var childContext = instance.getChildContext();

    for (var contextKey in childContext) {
      if (!(contextKey in childContextTypes)) {
        {
          throw Error( (getComponentName(type) || 'Unknown') + ".getChildContext(): key \"" + contextKey + "\" is not defined in childContextTypes." );
        }
      }
    }

    {
      var name = getComponentName(type) || 'Unknown';
      checkPropTypes(childContextTypes, childContext, 'child context', name);
    }

    return _assign({}, parentContext, childContext);
  }
}

function pushContextProvider(workInProgress) {
  {
    var instance = workInProgress.stateNode; // We push the context as early as possible to ensure stack integrity.
    // If the instance does not exist yet, we will push null at first,
    // and replace it on the stack later when invalidating the context.

    var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject; // Remember the parent context so we can merge with it later.
    // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.

    previousContext = contextStackCursor.current;
    push(contextStackCursor, memoizedMergedChildContext, workInProgress);
    push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);
    return true;
  }
}

function invalidateContextProvider(workInProgress, type, didChange) {
  {
    var instance = workInProgress.stateNode;

    if (!instance) {
      {
        throw Error( "Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue." );
      }
    }

    if (didChange) {
      // Merge parent and own context.
      // Skip this if we're not updating due to sCU.
      // This avoids unnecessarily recomputing memoized values.
      var mergedContext = processChildContext(workInProgress, type, previousContext);
      instance.__reactInternalMemoizedMergedChildContext = mergedContext; // Replace the old (or empty) context with the new one.
      // It is important to unwind the context in the reverse order.

      pop(didPerformWorkStackCursor, workInProgress);
      pop(contextStackCursor, workInProgress); // Now push the new context and mark that it has changed.

      push(contextStackCursor, mergedContext, workInProgress);
      push(didPerformWorkStackCursor, didChange, workInProgress);
    } else {
      pop(didPerformWorkStackCursor, workInProgress);
      push(didPerformWorkStackCursor, didChange, workInProgress);
    }
  }
}

function findCurrentUnmaskedContext(fiber) {
  {
    // Currently this is only used with renderSubtreeIntoContainer; not sure if it
    // makes sense elsewhere
    if (!(isFiberMounted(fiber) && fiber.tag === ClassComponent)) {
      {
        throw Error( "Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue." );
      }
    }

    var node = fiber;

    do {
      switch (node.tag) {
        case HostRoot:
          return node.stateNode.context;

        case ClassComponent:
          {
            var Component = node.type;

            if (isContextProvider(Component)) {
              return node.stateNode.__reactInternalMemoizedMergedChildContext;
            }

            break;
          }
      }

      node = node.return;
    } while (node !== null);

    {
      {
        throw Error( "Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue." );
      }
    }
  }
}

var LegacyRoot = 0;
var BlockingRoot = 1;
var ConcurrentRoot = 2;

var rendererID = null;
var injectedHook = null;
var hasLoggedError = false;
var isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';
function injectInternals(internals) {
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
    // No DevTools
    return false;
  }

  var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;

  if (hook.isDisabled) {
    // This isn't a real property on the hook, but it can be set to opt out
    // of DevTools integration and associated warnings and logs.
    // https://github.com/facebook/react/issues/3877
    return true;
  }

  if (!hook.supportsFiber) {
    {
      error('The installed version of React DevTools is too old and will not work ' + 'with the current version of React. Please update React DevTools. ' + 'https://reactjs.org/link/react-devtools');
    } // DevTools exists, even though it doesn't support Fiber.


    return true;
  }

  try {
    rendererID = hook.inject(internals); // We have successfully injected, so now it is safe to set up hooks.

    injectedHook = hook;
  } catch (err) {
    // Catch all errors because it is unsafe to throw during initialization.
    {
      error('React instrumentation encountered an error: %s.', err);
    }
  } // DevTools exists


  return true;
}
function onScheduleRoot(root, children) {
  {
    if (injectedHook && typeof injectedHook.onScheduleFiberRoot === 'function') {
      try {
        injectedHook.onScheduleFiberRoot(rendererID, root, children);
      } catch (err) {
        if ( !hasLoggedError) {
          hasLoggedError = true;

          error('React instrumentation encountered an error: %s', err);
        }
      }
    }
  }
}
function onCommitRoot(root, priorityLevel) {
  if (injectedHook && typeof injectedHook.onCommitFiberRoot === 'function') {
    try {
      var didError = (root.current.flags & DidCapture) === DidCapture;

      if (enableProfilerTimer) {
        injectedHook.onCommitFiberRoot(rendererID, root, priorityLevel, didError);
      } else {
        injectedHook.onCommitFiberRoot(rendererID, root, undefined, didError);
      }
    } catch (err) {
      {
        if (!hasLoggedError) {
          hasLoggedError = true;

          error('React instrumentation encountered an error: %s', err);
        }
      }
    }
  }
}
function onCommitUnmount(fiber) {
  if (injectedHook && typeof injectedHook.onCommitFiberUnmount === 'function') {
    try {
      injectedHook.onCommitFiberUnmount(rendererID, fiber);
    } catch (err) {
      {
        if (!hasLoggedError) {
          hasLoggedError = true;

          error('React instrumentation encountered an error: %s', err);
        }
      }
    }
  }
}

var Scheduler_runWithPriority = Scheduler.unstable_runWithPriority,
    Scheduler_scheduleCallback = Scheduler.unstable_scheduleCallback,
    Scheduler_cancelCallback = Scheduler.unstable_cancelCallback,
    Scheduler_shouldYield = Scheduler.unstable_shouldYield,
    Scheduler_requestPaint = Scheduler.unstable_requestPaint,
    Scheduler_now$1 = Scheduler.unstable_now,
    Scheduler_getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel,
    Scheduler_ImmediatePriority = Scheduler.unstable_ImmediatePriority,
    Scheduler_UserBlockingPriority = Scheduler.unstable_UserBlockingPriority,
    Scheduler_NormalPriority = Scheduler.unstable_NormalPriority,
    Scheduler_LowPriority = Scheduler.unstable_LowPriority,
    Scheduler_IdlePriority = Scheduler.unstable_IdlePriority;

{
  // Provide explicit error message when production+profiling bundle of e.g.
  // react-dom is used with production (non-profiling) bundle of
  // scheduler/tracing
  if (!(tracing.__interactionsRef != null && tracing.__interactionsRef.current != null)) {
    {
      throw Error( "It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `scheduler/tracing` module with `scheduler/tracing-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at https://reactjs.org/link/profiling" );
    }
  }
}

var fakeCallbackNode = {}; // Except for NoPriority, these correspond to Scheduler priorities. We use
// ascending numbers so we can compare them like numbers. They start at 90 to
// avoid clashing with Scheduler's priorities.

var ImmediatePriority$1 = 99;
var UserBlockingPriority$2 = 98;
var NormalPriority$1 = 97;
var LowPriority$1 = 96;
var IdlePriority$1 = 95; // NoPriority is the absence of priority. Also React-only.

var NoPriority$1 = 90;
var shouldYield = Scheduler_shouldYield;
var requestPaint = // Fall back gracefully if we're running an older version of Scheduler.
Scheduler_requestPaint !== undefined ? Scheduler_requestPaint : function () {};
var syncQueue = null;
var immediateQueueCallbackNode = null;
var isFlushingSyncQueue = false;
var initialTimeMs$1 = Scheduler_now$1(); // If the initial timestamp is reasonably small, use Scheduler's `now` directly.
// This will be the case for modern browsers that support `performance.now`. In
// older browsers, Scheduler falls back to `Date.now`, which returns a Unix
// timestamp. In that case, subtract the module initialization time to simulate
// the behavior of performance.now and keep our times small enough to fit
// within 32 bits.
// TODO: Consider lifting this into Scheduler.

var now = initialTimeMs$1 < 10000 ? Scheduler_now$1 : function () {
  return Scheduler_now$1() - initialTimeMs$1;
};
function getCurrentPriorityLevel() {
  switch (Scheduler_getCurrentPriorityLevel()) {
    case Scheduler_ImmediatePriority:
      return ImmediatePriority$1;

    case Scheduler_UserBlockingPriority:
      return UserBlockingPriority$2;

    case Scheduler_NormalPriority:
      return NormalPriority$1;

    case Scheduler_LowPriority:
      return LowPriority$1;

    case Scheduler_IdlePriority:
      return IdlePriority$1;

    default:
      {
        {
          throw Error( "Unknown priority level." );
        }
      }

  }
}

function reactPriorityToSchedulerPriority(reactPriorityLevel) {
  switch (reactPriorityLevel) {
    case ImmediatePriority$1:
      return Scheduler_ImmediatePriority;

    case UserBlockingPriority$2:
      return Scheduler_UserBlockingPriority;

    case NormalPriority$1:
      return Scheduler_NormalPriority;

    case LowPriority$1:
      return Scheduler_LowPriority;

    case IdlePriority$1:
      return Scheduler_IdlePriority;

    default:
      {
        {
          throw Error( "Unknown priority level." );
        }
      }

  }
}

function runWithPriority$1(reactPriorityLevel, fn) {
  var priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
  return Scheduler_runWithPriority(priorityLevel, fn);
}
function scheduleCallback(reactPriorityLevel, callback, options) {
  var priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
  return Scheduler_scheduleCallback(priorityLevel, callback, options);
}
function scheduleSyncCallback(callback) {
  // Push this callback into an internal queue. We'll flush these either in
  // the next tick, or earlier if something calls `flushSyncCallbackQueue`.
  if (syncQueue === null) {
    syncQueue = [callback]; // Flush the queue in the next tick, at the earliest.

    immediateQueueCallbackNode = Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueueImpl);
  } else {
    // Push onto existing queue. Don't need to schedule a callback because
    // we already scheduled one when we created the queue.
    syncQueue.push(callback);
  }

  return fakeCallbackNode;
}
function cancelCallback(callbackNode) {
  if (callbackNode !== fakeCallbackNode) {
    Scheduler_cancelCallback(callbackNode);
  }
}
function flushSyncCallbackQueue() {
  if (immediateQueueCallbackNode !== null) {
    var node = immediateQueueCallbackNode;
    immediateQueueCallbackNode = null;
    Scheduler_cancelCallback(node);
  }

  flushSyncCallbackQueueImpl();
}

function flushSyncCallbackQueueImpl() {
  if (!isFlushingSyncQueue && syncQueue !== null) {
    // Prevent re-entrancy.
    isFlushingSyncQueue = true;
    var i = 0;

    {
      try {
        var _isSync2 = true;
        var _queue = syncQueue;
        runWithPriority$1(ImmediatePriority$1, function () {
          for (; i < _queue.length; i++) {
            var callback = _queue[i];

            do {
              callback = callback(_isSync2);
            } while (callback !== null);
          }
        });
        syncQueue = null;
      } catch (error) {
        // If something throws, leave the remaining callbacks on the queue.
        if (syncQueue !== null) {
          syncQueue = syncQueue.slice(i + 1);
        } // Resume flushing in the next tick


        Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueue);
        throw error;
      } finally {
        isFlushingSyncQueue = false;
      }
    }
  }
}

// TODO: this is special because it gets imported during build.
var ReactVersion = '17.0.2';

var NoMode = 0;
var StrictMode = 1; // TODO: Remove BlockingMode and ConcurrentMode by reading from the root
// tag instead

var BlockingMode = 2;
var ConcurrentMode = 4;
var ProfileMode = 8;
var DebugTracingMode = 16;

var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig;
var NoTransition = 0;
function requestCurrentTransition() {
  return ReactCurrentBatchConfig.transition;
}

var ReactStrictModeWarnings = {
  recordUnsafeLifecycleWarnings: function (fiber, instance) {},
  flushPendingUnsafeLifecycleWarnings: function () {},
  recordLegacyContextWarning: function (fiber, instance) {},
  flushLegacyContextWarning: function () {},
  discardPendingWarnings: function () {}
};

{
  var findStrictRoot = function (fiber) {
    var maybeStrictRoot = null;
    var node = fiber;

    while (node !== null) {
      if (node.mode & StrictMode) {
        maybeStrictRoot = node;
      }

      node = node.return;
    }

    return maybeStrictRoot;
  };

  var setToSortedString = function (set) {
    var array = [];
    set.forEach(function (value) {
      array.push(value);
    });
    return array.sort().join(', ');
  };

  var pendingComponentWillMountWarnings = [];
  var pendingUNSAFE_ComponentWillMountWarnings = [];
  var pendingComponentWillReceivePropsWarnings = [];
  var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
  var pendingComponentWillUpdateWarnings = [];
  var pendingUNSAFE_ComponentWillUpdateWarnings = []; // Tracks components we have already warned about.

  var didWarnAboutUnsafeLifecycles = new Set();

  ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function (fiber, instance) {
    // Dedup strategy: Warn once per component.
    if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {
      return;
    }

    if (typeof instance.componentWillMount === 'function' && // Don't warn about react-lifecycles-compat polyfilled components.
    instance.componentWillMount.__suppressDeprecationWarning !== true) {
      pendingComponentWillMountWarnings.push(fiber);
    }

    if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillMount === 'function') {
      pendingUNSAFE_ComponentWillMountWarnings.push(fiber);
    }

    if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
      pendingComponentWillReceivePropsWarnings.push(fiber);
    }

    if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
      pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);
    }

    if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
      pendingComponentWillUpdateWarnings.push(fiber);
    }

    if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillUpdate === 'function') {
      pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);
    }
  };

  ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function () {
    // We do an initial pass to gather component names
    var componentWillMountUniqueNames = new Set();

    if (pendingComponentWillMountWarnings.length > 0) {
      pendingComponentWillMountWarnings.forEach(function (fiber) {
        componentWillMountUniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingComponentWillMountWarnings = [];
    }

    var UNSAFE_componentWillMountUniqueNames = new Set();

    if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {
      pendingUNSAFE_ComponentWillMountWarnings.forEach(function (fiber) {
        UNSAFE_componentWillMountUniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingUNSAFE_ComponentWillMountWarnings = [];
    }

    var componentWillReceivePropsUniqueNames = new Set();

    if (pendingComponentWillReceivePropsWarnings.length > 0) {
      pendingComponentWillReceivePropsWarnings.forEach(function (fiber) {
        componentWillReceivePropsUniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingComponentWillReceivePropsWarnings = [];
    }

    var UNSAFE_componentWillReceivePropsUniqueNames = new Set();

    if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {
      pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function (fiber) {
        UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
    }

    var componentWillUpdateUniqueNames = new Set();

    if (pendingComponentWillUpdateWarnings.length > 0) {
      pendingComponentWillUpdateWarnings.forEach(function (fiber) {
        componentWillUpdateUniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingComponentWillUpdateWarnings = [];
    }

    var UNSAFE_componentWillUpdateUniqueNames = new Set();

    if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {
      pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function (fiber) {
        UNSAFE_componentWillUpdateUniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingUNSAFE_ComponentWillUpdateWarnings = [];
    } // Finally, we flush all the warnings
    // UNSAFE_ ones before the deprecated ones, since they'll be 'louder'


    if (UNSAFE_componentWillMountUniqueNames.size > 0) {
      var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);

      error('Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n' + '* Move code with side effects to componentDidMount, and set initial state in the constructor.\n' + '\nPlease update the following components: %s', sortedNames);
    }

    if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {
      var _sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);

      error('Using UNSAFE_componentWillReceiveProps in strict mode is not recommended ' + 'and may indicate bugs in your code. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + "* If you're updating state whenever props change, " + 'refactor your code to use memoization techniques or move it to ' + 'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n' + '\nPlease update the following components: %s', _sortedNames);
    }

    if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {
      var _sortedNames2 = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);

      error('Using UNSAFE_componentWillUpdate in strict mode is not recommended ' + 'and may indicate bugs in your code. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + '\nPlease update the following components: %s', _sortedNames2);
    }

    if (componentWillMountUniqueNames.size > 0) {
      var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);

      warn('componentWillMount has been renamed, and is not recommended for use. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n' + '* Move code with side effects to componentDidMount, and set initial state in the constructor.\n' + '* Rename componentWillMount to UNSAFE_componentWillMount to suppress ' + 'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n' + '\nPlease update the following components: %s', _sortedNames3);
    }

    if (componentWillReceivePropsUniqueNames.size > 0) {
      var _sortedNames4 = setToSortedString(componentWillReceivePropsUniqueNames);

      warn('componentWillReceiveProps has been renamed, and is not recommended for use. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + "* If you're updating state whenever props change, refactor your " + 'code to use memoization techniques or move it to ' + 'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n' + '* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress ' + 'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n' + '\nPlease update the following components: %s', _sortedNames4);
    }

    if (componentWillUpdateUniqueNames.size > 0) {
      var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);

      warn('componentWillUpdate has been renamed, and is not recommended for use. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + '* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress ' + 'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n' + '\nPlease update the following components: %s', _sortedNames5);
    }
  };

  var pendingLegacyContextWarning = new Map(); // Tracks components we have already warned about.

  var didWarnAboutLegacyContext = new Set();

  ReactStrictModeWarnings.recordLegacyContextWarning = function (fiber, instance) {
    var strictRoot = findStrictRoot(fiber);

    if (strictRoot === null) {
      error('Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');

      return;
    } // Dedup strategy: Warn once per component.


    if (didWarnAboutLegacyContext.has(fiber.type)) {
      return;
    }

    var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);

    if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === 'function') {
      if (warningsForRoot === undefined) {
        warningsForRoot = [];
        pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
      }

      warningsForRoot.push(fiber);
    }
  };

  ReactStrictModeWarnings.flushLegacyContextWarning = function () {
    pendingLegacyContextWarning.forEach(function (fiberArray, strictRoot) {
      if (fiberArray.length === 0) {
        return;
      }

      var firstFiber = fiberArray[0];
      var uniqueNames = new Set();
      fiberArray.forEach(function (fiber) {
        uniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutLegacyContext.add(fiber.type);
      });
      var sortedNames = setToSortedString(uniqueNames);

      try {
        setCurrentFiber(firstFiber);

        error('Legacy context API has been detected within a strict-mode tree.' + '\n\nThe old API will be supported in all 16.x releases, but applications ' + 'using it should migrate to the new version.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here: https://reactjs.org/link/legacy-context', sortedNames);
      } finally {
        resetCurrentFiber();
      }
    });
  };

  ReactStrictModeWarnings.discardPendingWarnings = function () {
    pendingComponentWillMountWarnings = [];
    pendingUNSAFE_ComponentWillMountWarnings = [];
    pendingComponentWillReceivePropsWarnings = [];
    pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
    pendingComponentWillUpdateWarnings = [];
    pendingUNSAFE_ComponentWillUpdateWarnings = [];
    pendingLegacyContextWarning = new Map();
  };
}

function resolveDefaultProps(Component, baseProps) {
  if (Component && Component.defaultProps) {
    // Resolve default props. Taken from ReactElement
    var props = _assign({}, baseProps);

    var defaultProps = Component.defaultProps;

    for (var propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }

    return props;
  }

  return baseProps;
}

// Max 31 bit integer. The max integer size in V8 for 32-bit systems.
// Math.pow(2, 30) - 1
// 0b111111111111111111111111111111
var MAX_SIGNED_31_BIT_INT = 1073741823;

var valueCursor = createCursor(null);
var rendererSigil;

{
  // Use this to detect multiple renderers using the same context
  rendererSigil = {};
}

var currentlyRenderingFiber = null;
var lastContextDependency = null;
var lastContextWithAllBitsObserved = null;
var isDisallowedContextReadInDEV = false;
function resetContextDependencies() {
  // This is called right before React yields execution, to ensure `readContext`
  // cannot be called outside the render phase.
  currentlyRenderingFiber = null;
  lastContextDependency = null;
  lastContextWithAllBitsObserved = null;

  {
    isDisallowedContextReadInDEV = false;
  }
}
function enterDisallowedContextReadInDEV() {
  {
    isDisallowedContextReadInDEV = true;
  }
}
function exitDisallowedContextReadInDEV() {
  {
    isDisallowedContextReadInDEV = false;
  }
}
function pushProvider(providerFiber, nextValue) {
  var context = providerFiber.type._context;

  {
    push(valueCursor, context._currentValue, providerFiber);
    context._currentValue = nextValue;

    {
      if (context._currentRenderer !== undefined && context._currentRenderer !== null && context._currentRenderer !== rendererSigil) {
        error('Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.');
      }

      context._currentRenderer = rendererSigil;
    }
  }
}
function popProvider(providerFiber) {
  var currentValue = valueCursor.current;
  pop(valueCursor, providerFiber);
  var context = providerFiber.type._context;

  {
    context._currentValue = currentValue;
  }
}
function calculateChangedBits(context, newValue, oldValue) {
  if (objectIs(oldValue, newValue)) {
    // No change
    return 0;
  } else {
    var changedBits = typeof context._calculateChangedBits === 'function' ? context._calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;

    {
      if ((changedBits & MAX_SIGNED_31_BIT_INT) !== changedBits) {
        error('calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: %s', changedBits);
      }
    }

    return changedBits | 0;
  }
}
function scheduleWorkOnParentPath(parent, renderLanes) {
  // Update the child lanes of all the ancestors, including the alternates.
  var node = parent;

  while (node !== null) {
    var alternate = node.alternate;

    if (!isSubsetOfLanes(node.childLanes, renderLanes)) {
      node.childLanes = mergeLanes(node.childLanes, renderLanes);

      if (alternate !== null) {
        alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);
      }
    } else if (alternate !== null && !isSubsetOfLanes(alternate.childLanes, renderLanes)) {
      alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);
    } else {
      // Neither alternate was updated, which means the rest of the
      // ancestor path already has sufficient priority.
      break;
    }

    node = node.return;
  }
}
function propagateContextChange(workInProgress, context, changedBits, renderLanes) {
  var fiber = workInProgress.child;

  if (fiber !== null) {
    // Set the return pointer of the child to the work-in-progress fiber.
    fiber.return = workInProgress;
  }

  while (fiber !== null) {
    var nextFiber = void 0; // Visit this fiber.

    var list = fiber.dependencies;

    if (list !== null) {
      nextFiber = fiber.child;
      var dependency = list.firstContext;

      while (dependency !== null) {
        // Check if the context matches.
        if (dependency.context === context && (dependency.observedBits & changedBits) !== 0) {
          // Match! Schedule an update on this fiber.
          if (fiber.tag === ClassComponent) {
            // Schedule a force update on the work-in-progress.
            var update = createUpdate(NoTimestamp, pickArbitraryLane(renderLanes));
            update.tag = ForceUpdate; // TODO: Because we don't have a work-in-progress, this will add the
            // update to the current fiber, too, which means it will persist even if
            // this render is thrown away. Since it's a race condition, not sure it's
            // worth fixing.

            enqueueUpdate(fiber, update);
          }

          fiber.lanes = mergeLanes(fiber.lanes, renderLanes);
          var alternate = fiber.alternate;

          if (alternate !== null) {
            alternate.lanes = mergeLanes(alternate.lanes, renderLanes);
          }

          scheduleWorkOnParentPath(fiber.return, renderLanes); // Mark the updated lanes on the list, too.

          list.lanes = mergeLanes(list.lanes, renderLanes); // Since we already found a match, we can stop traversing the
          // dependency list.

          break;
        }

        dependency = dependency.next;
      }
    } else if (fiber.tag === ContextProvider) {
      // Don't scan deeper if this is a matching provider
      nextFiber = fiber.type === workInProgress.type ? null : fiber.child;
    } else {
      // Traverse down.
      nextFiber = fiber.child;
    }

    if (nextFiber !== null) {
      // Set the return pointer of the child to the work-in-progress fiber.
      nextFiber.return = fiber;
    } else {
      // No child. Traverse to next sibling.
      nextFiber = fiber;

      while (nextFiber !== null) {
        if (nextFiber === workInProgress) {
          // We're back to the root of this subtree. Exit.
          nextFiber = null;
          break;
        }

        var sibling = nextFiber.sibling;

        if (sibling !== null) {
          // Set the return pointer of the sibling to the work-in-progress fiber.
          sibling.return = nextFiber.return;
          nextFiber = sibling;
          break;
        } // No more siblings. Traverse up.


        nextFiber = nextFiber.return;
      }
    }

    fiber = nextFiber;
  }
}
function prepareToReadContext(workInProgress, renderLanes) {
  currentlyRenderingFiber = workInProgress;
  lastContextDependency = null;
  lastContextWithAllBitsObserved = null;
  var dependencies = workInProgress.dependencies;

  if (dependencies !== null) {
    var firstContext = dependencies.firstContext;

    if (firstContext !== null) {
      if (includesSomeLane(dependencies.lanes, renderLanes)) {
        // Context list has a pending update. Mark that this fiber performed work.
        markWorkInProgressReceivedUpdate();
      } // Reset the work-in-progress list


      dependencies.firstContext = null;
    }
  }
}
function readContext(context, observedBits) {
  {
    // This warning would fire if you read context inside a Hook like useMemo.
    // Unlike the class check below, it's not enforced in production for perf.
    if (isDisallowedContextReadInDEV) {
      error('Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');
    }
  }

  if (lastContextWithAllBitsObserved === context) ; else if (observedBits === false || observedBits === 0) ; else {
    var resolvedObservedBits; // Avoid deopting on observable arguments or heterogeneous types.

    if (typeof observedBits !== 'number' || observedBits === MAX_SIGNED_31_BIT_INT) {
      // Observe all updates.
      lastContextWithAllBitsObserved = context;
      resolvedObservedBits = MAX_SIGNED_31_BIT_INT;
    } else {
      resolvedObservedBits = observedBits;
    }

    var contextItem = {
      context: context,
      observedBits: resolvedObservedBits,
      next: null
    };

    if (lastContextDependency === null) {
      if (!(currentlyRenderingFiber !== null)) {
        {
          throw Error( "Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo()." );
        }
      } // This is the first dependency for this component. Create a new list.


      lastContextDependency = contextItem;
      currentlyRenderingFiber.dependencies = {
        lanes: NoLanes,
        firstContext: contextItem,
        responders: null
      };
    } else {
      // Append a new context item.
      lastContextDependency = lastContextDependency.next = contextItem;
    }
  }

  return  context._currentValue ;
}

var UpdateState = 0;
var ReplaceState = 1;
var ForceUpdate = 2;
var CaptureUpdate = 3; // Global state that is reset at the beginning of calling `processUpdateQueue`.
// It should only be read right after calling `processUpdateQueue`, via
// `checkHasForceUpdateAfterProcessing`.

var hasForceUpdate = false;
var didWarnUpdateInsideUpdate;
var currentlyProcessingQueue;

{
  didWarnUpdateInsideUpdate = false;
  currentlyProcessingQueue = null;
}

function initializeUpdateQueue(fiber) {
  var queue = {
    baseState: fiber.memoizedState,
    firstBaseUpdate: null,
    lastBaseUpdate: null,
    shared: {
      pending: null
    },
    effects: null
  };
  fiber.updateQueue = queue;
}
function cloneUpdateQueue(current, workInProgress) {
  // Clone the update queue from current. Unless it's already a clone.
  var queue = workInProgress.updateQueue;
  var currentQueue = current.updateQueue;

  if (queue === currentQueue) {
    var clone = {
      baseState: currentQueue.baseState,
      firstBaseUpdate: currentQueue.firstBaseUpdate,
      lastBaseUpdate: currentQueue.lastBaseUpdate,
      shared: currentQueue.shared,
      effects: currentQueue.effects
    };
    workInProgress.updateQueue = clone;
  }
}
function createUpdate(eventTime, lane) {
  var update = {
    eventTime: eventTime,
    lane: lane,
    tag: UpdateState,
    payload: null,
    callback: null,
    next: null
  };
  return update;
}
function enqueueUpdate(fiber, update) {
  var updateQueue = fiber.updateQueue;

  if (updateQueue === null) {
    // Only occurs if the fiber has been unmounted.
    return;
  }

  var sharedQueue = updateQueue.shared;
  var pending = sharedQueue.pending;

  if (pending === null) {
    // This is the first update. Create a circular list.
    update.next = update;
  } else {
    update.next = pending.next;
    pending.next = update;
  }

  sharedQueue.pending = update;

  {
    if (currentlyProcessingQueue === sharedQueue && !didWarnUpdateInsideUpdate) {
      error('An update (setState, replaceState, or forceUpdate) was scheduled ' + 'from inside an update function. Update functions should be pure, ' + 'with zero side-effects. Consider using componentDidUpdate or a ' + 'callback.');

      didWarnUpdateInsideUpdate = true;
    }
  }
}
function enqueueCapturedUpdate(workInProgress, capturedUpdate) {
  // Captured updates are updates that are thrown by a child during the render
  // phase. They should be discarded if the render is aborted. Therefore,
  // we should only put them on the work-in-progress queue, not the current one.
  var queue = workInProgress.updateQueue; // Check if the work-in-progress queue is a clone.

  var current = workInProgress.alternate;

  if (current !== null) {
    var currentQueue = current.updateQueue;

    if (queue === currentQueue) {
      // The work-in-progress queue is the same as current. This happens when
      // we bail out on a parent fiber that then captures an error thrown by
      // a child. Since we want to append the update only to the work-in
      // -progress queue, we need to clone the updates. We usually clone during
      // processUpdateQueue, but that didn't happen in this case because we
      // skipped over the parent when we bailed out.
      var newFirst = null;
      var newLast = null;
      var firstBaseUpdate = queue.firstBaseUpdate;

      if (firstBaseUpdate !== null) {
        // Loop through the updates and clone them.
        var update = firstBaseUpdate;

        do {
          var clone = {
            eventTime: update.eventTime,
            lane: update.lane,
            tag: update.tag,
            payload: update.payload,
            callback: update.callback,
            next: null
          };

          if (newLast === null) {
            newFirst = newLast = clone;
          } else {
            newLast.next = clone;
            newLast = clone;
          }

          update = update.next;
        } while (update !== null); // Append the captured update the end of the cloned list.


        if (newLast === null) {
          newFirst = newLast = capturedUpdate;
        } else {
          newLast.next = capturedUpdate;
          newLast = capturedUpdate;
        }
      } else {
        // There are no base updates.
        newFirst = newLast = capturedUpdate;
      }

      queue = {
        baseState: currentQueue.baseState,
        firstBaseUpdate: newFirst,
        lastBaseUpdate: newLast,
        shared: currentQueue.shared,
        effects: currentQueue.effects
      };
      workInProgress.updateQueue = queue;
      return;
    }
  } // Append the update to the end of the list.


  var lastBaseUpdate = queue.lastBaseUpdate;

  if (lastBaseUpdate === null) {
    queue.firstBaseUpdate = capturedUpdate;
  } else {
    lastBaseUpdate.next = capturedUpdate;
  }

  queue.lastBaseUpdate = capturedUpdate;
}

function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
  switch (update.tag) {
    case ReplaceState:
      {
        var payload = update.payload;

        if (typeof payload === 'function') {
          // Updater function
          {
            enterDisallowedContextReadInDEV();
          }

          var nextState = payload.call(instance, prevState, nextProps);

          {
            if ( workInProgress.mode & StrictMode) {
              disableLogs();

              try {
                payload.call(instance, prevState, nextProps);
              } finally {
                reenableLogs();
              }
            }

            exitDisallowedContextReadInDEV();
          }

          return nextState;
        } // State object


        return payload;
      }

    case CaptureUpdate:
      {
        workInProgress.flags = workInProgress.flags & ~ShouldCapture | DidCapture;
      }
    // Intentional fallthrough

    case UpdateState:
      {
        var _payload = update.payload;
        var partialState;

        if (typeof _payload === 'function') {
          // Updater function
          {
            enterDisallowedContextReadInDEV();
          }

          partialState = _payload.call(instance, prevState, nextProps);

          {
            if ( workInProgress.mode & StrictMode) {
              disableLogs();

              try {
                _payload.call(instance, prevState, nextProps);
              } finally {
                reenableLogs();
              }
            }

            exitDisallowedContextReadInDEV();
          }
        } else {
          // Partial state object
          partialState = _payload;
        }

        if (partialState === null || partialState === undefined) {
          // Null and undefined are treated as no-ops.
          return prevState;
        } // Merge the partial state and the previous state.


        return _assign({}, prevState, partialState);
      }

    case ForceUpdate:
      {
        hasForceUpdate = true;
        return prevState;
      }
  }

  return prevState;
}

function processUpdateQueue(workInProgress, props, instance, renderLanes) {
  // This is always non-null on a ClassComponent or HostRoot
  var queue = workInProgress.updateQueue;
  hasForceUpdate = false;

  {
    currentlyProcessingQueue = queue.shared;
  }

  var firstBaseUpdate = queue.firstBaseUpdate;
  var lastBaseUpdate = queue.lastBaseUpdate; // Check if there are pending updates. If so, transfer them to the base queue.

  var pendingQueue = queue.shared.pending;

  if (pendingQueue !== null) {
    queue.shared.pending = null; // The pending queue is circular. Disconnect the pointer between first
    // and last so that it's non-circular.

    var lastPendingUpdate = pendingQueue;
    var firstPendingUpdate = lastPendingUpdate.next;
    lastPendingUpdate.next = null; // Append pending updates to base queue

    if (lastBaseUpdate === null) {
      firstBaseUpdate = firstPendingUpdate;
    } else {
      lastBaseUpdate.next = firstPendingUpdate;
    }

    lastBaseUpdate = lastPendingUpdate; // If there's a current queue, and it's different from the base queue, then
    // we need to transfer the updates to that queue, too. Because the base
    // queue is a singly-linked list with no cycles, we can append to both
    // lists and take advantage of structural sharing.
    // TODO: Pass `current` as argument

    var current = workInProgress.alternate;

    if (current !== null) {
      // This is always non-null on a ClassComponent or HostRoot
      var currentQueue = current.updateQueue;
      var currentLastBaseUpdate = currentQueue.lastBaseUpdate;

      if (currentLastBaseUpdate !== lastBaseUpdate) {
        if (currentLastBaseUpdate === null) {
          currentQueue.firstBaseUpdate = firstPendingUpdate;
        } else {
          currentLastBaseUpdate.next = firstPendingUpdate;
        }

        currentQueue.lastBaseUpdate = lastPendingUpdate;
      }
    }
  } // These values may change as we process the queue.


  if (firstBaseUpdate !== null) {
    // Iterate through the list of updates to compute the result.
    var newState = queue.baseState; // TODO: Don't need to accumulate this. Instead, we can remove renderLanes
    // from the original lanes.

    var newLanes = NoLanes;
    var newBaseState = null;
    var newFirstBaseUpdate = null;
    var newLastBaseUpdate = null;
    var update = firstBaseUpdate;

    do {
      var updateLane = update.lane;
      var updateEventTime = update.eventTime;

      if (!isSubsetOfLanes(renderLanes, updateLane)) {
        // Priority is insufficient. Skip this update. If this is the first
        // skipped update, the previous update/state is the new base
        // update/state.
        var clone = {
          eventTime: updateEventTime,
          lane: updateLane,
          tag: update.tag,
          payload: update.payload,
          callback: update.callback,
          next: null
        };

        if (newLastBaseUpdate === null) {
          newFirstBaseUpdate = newLastBaseUpdate = clone;
          newBaseState = newState;
        } else {
          newLastBaseUpdate = newLastBaseUpdate.next = clone;
        } // Update the remaining priority in the queue.


        newLanes = mergeLanes(newLanes, updateLane);
      } else {
        // This update does have sufficient priority.
        if (newLastBaseUpdate !== null) {
          var _clone = {
            eventTime: updateEventTime,
            // This update is going to be committed so we never want uncommit
            // it. Using NoLane works because 0 is a subset of all bitmasks, so
            // this will never be skipped by the check above.
            lane: NoLane,
            tag: update.tag,
            payload: update.payload,
            callback: update.callback,
            next: null
          };
          newLastBaseUpdate = newLastBaseUpdate.next = _clone;
        } // Process this update.


        newState = getStateFromUpdate(workInProgress, queue, update, newState, props, instance);
        var callback = update.callback;

        if (callback !== null) {
          workInProgress.flags |= Callback;
          var effects = queue.effects;

          if (effects === null) {
            queue.effects = [update];
          } else {
            effects.push(update);
          }
        }
      }

      update = update.next;

      if (update === null) {
        pendingQueue = queue.shared.pending;

        if (pendingQueue === null) {
          break;
        } else {
          // An update was scheduled from inside a reducer. Add the new
          // pending updates to the end of the list and keep processing.
          var _lastPendingUpdate = pendingQueue; // Intentionally unsound. Pending updates form a circular list, but we
          // unravel them when transferring them to the base queue.

          var _firstPendingUpdate = _lastPendingUpdate.next;
          _lastPendingUpdate.next = null;
          update = _firstPendingUpdate;
          queue.lastBaseUpdate = _lastPendingUpdate;
          queue.shared.pending = null;
        }
      }
    } while (true);

    if (newLastBaseUpdate === null) {
      newBaseState = newState;
    }

    queue.baseState = newBaseState;
    queue.firstBaseUpdate = newFirstBaseUpdate;
    queue.lastBaseUpdate = newLastBaseUpdate; // Set the remaining expiration time to be whatever is remaining in the queue.
    // This should be fine because the only two other things that contribute to
    // expiration time are props and context. We're already in the middle of the
    // begin phase by the time we start processing the queue, so we've already
    // dealt with the props. Context in components that specify
    // shouldComponentUpdate is tricky; but we'll have to account for
    // that regardless.

    markSkippedUpdateLanes(newLanes);
    workInProgress.lanes = newLanes;
    workInProgress.memoizedState = newState;
  }

  {
    currentlyProcessingQueue = null;
  }
}

function callCallback(callback, context) {
  if (!(typeof callback === 'function')) {
    {
      throw Error( "Invalid argument passed as callback. Expected a function. Instead received: " + callback );
    }
  }

  callback.call(context);
}

function resetHasForceUpdateBeforeProcessing() {
  hasForceUpdate = false;
}
function checkHasForceUpdateAfterProcessing() {
  return hasForceUpdate;
}
function commitUpdateQueue(finishedWork, finishedQueue, instance) {
  // Commit the effects
  var effects = finishedQueue.effects;
  finishedQueue.effects = null;

  if (effects !== null) {
    for (var i = 0; i < effects.length; i++) {
      var effect = effects[i];
      var callback = effect.callback;

      if (callback !== null) {
        effect.callback = null;
        callCallback(callback, instance);
      }
    }
  }
}

var fakeInternalInstance = {};
var isArray = Array.isArray; // React.Component uses a shared frozen object by default.
// We'll use it to determine whether we need to initialize legacy refs.

var emptyRefsObject = new React.Component().refs;
var didWarnAboutStateAssignmentForComponent;
var didWarnAboutUninitializedState;
var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;
var didWarnAboutLegacyLifecyclesAndDerivedState;
var didWarnAboutUndefinedDerivedState;
var warnOnUndefinedDerivedState;
var warnOnInvalidCallback;
var didWarnAboutDirectlyAssigningPropsToState;
var didWarnAboutContextTypeAndContextTypes;
var didWarnAboutInvalidateContextType;

{
  didWarnAboutStateAssignmentForComponent = new Set();
  didWarnAboutUninitializedState = new Set();
  didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();
  didWarnAboutLegacyLifecyclesAndDerivedState = new Set();
  didWarnAboutDirectlyAssigningPropsToState = new Set();
  didWarnAboutUndefinedDerivedState = new Set();
  didWarnAboutContextTypeAndContextTypes = new Set();
  didWarnAboutInvalidateContextType = new Set();
  var didWarnOnInvalidCallback = new Set();

  warnOnInvalidCallback = function (callback, callerName) {
    if (callback === null || typeof callback === 'function') {
      return;
    }

    var key = callerName + '_' + callback;

    if (!didWarnOnInvalidCallback.has(key)) {
      didWarnOnInvalidCallback.add(key);

      error('%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);
    }
  };

  warnOnUndefinedDerivedState = function (type, partialState) {
    if (partialState === undefined) {
      var componentName = getComponentName(type) || 'Component';

      if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
        didWarnAboutUndefinedDerivedState.add(componentName);

        error('%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' + 'You have returned undefined.', componentName);
      }
    }
  }; // This is so gross but it's at least non-critical and can be removed if
  // it causes problems. This is meant to give a nicer error message for
  // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,
  // ...)) which otherwise throws a "_processChildContext is not a function"
  // exception.


  Object.defineProperty(fakeInternalInstance, '_processChildContext', {
    enumerable: false,
    value: function () {
      {
        {
          throw Error( "_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal)." );
        }
      }
    }
  });
  Object.freeze(fakeInternalInstance);
}

function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
  var prevState = workInProgress.memoizedState;

  {
    if ( workInProgress.mode & StrictMode) {
      disableLogs();

      try {
        // Invoke the function an extra time to help detect side-effects.
        getDerivedStateFromProps(nextProps, prevState);
      } finally {
        reenableLogs();
      }
    }
  }

  var partialState = getDerivedStateFromProps(nextProps, prevState);

  {
    warnOnUndefinedDerivedState(ctor, partialState);
  } // Merge the partial state and the previous state.


  var memoizedState = partialState === null || partialState === undefined ? prevState : _assign({}, prevState, partialState);
  workInProgress.memoizedState = memoizedState; // Once the update queue is empty, persist the derived state onto the
  // base state.

  if (workInProgress.lanes === NoLanes) {
    // Queue is always non-null for classes
    var updateQueue = workInProgress.updateQueue;
    updateQueue.baseState = memoizedState;
  }
}
var classComponentUpdater = {
  isMounted: isMounted,
  enqueueSetState: function (inst, payload, callback) {
    var fiber = get(inst);
    var eventTime = requestEventTime();
    var lane = requestUpdateLane(fiber);
    var update = createUpdate(eventTime, lane);
    update.payload = payload;

    if (callback !== undefined && callback !== null) {
      {
        warnOnInvalidCallback(callback, 'setState');
      }

      update.callback = callback;
    }

    enqueueUpdate(fiber, update);
    scheduleUpdateOnFiber(fiber, lane, eventTime);
  },
  enqueueReplaceState: function (inst, payload, callback) {
    var fiber = get(inst);
    var eventTime = requestEventTime();
    var lane = requestUpdateLane(fiber);
    var update = createUpdate(eventTime, lane);
    update.tag = ReplaceState;
    update.payload = payload;

    if (callback !== undefined && callback !== null) {
      {
        warnOnInvalidCallback(callback, 'replaceState');
      }

      update.callback = callback;
    }

    enqueueUpdate(fiber, update);
    scheduleUpdateOnFiber(fiber, lane, eventTime);
  },
  enqueueForceUpdate: function (inst, callback) {
    var fiber = get(inst);
    var eventTime = requestEventTime();
    var lane = requestUpdateLane(fiber);
    var update = createUpdate(eventTime, lane);
    update.tag = ForceUpdate;

    if (callback !== undefined && callback !== null) {
      {
        warnOnInvalidCallback(callback, 'forceUpdate');
      }

      update.callback = callback;
    }

    enqueueUpdate(fiber, update);
    scheduleUpdateOnFiber(fiber, lane, eventTime);
  }
};

function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
  var instance = workInProgress.stateNode;

  if (typeof instance.shouldComponentUpdate === 'function') {
    {
      if ( workInProgress.mode & StrictMode) {
        disableLogs();

        try {
          // Invoke the function an extra time to help detect side-effects.
          instance.shouldComponentUpdate(newProps, newState, nextContext);
        } finally {
          reenableLogs();
        }
      }
    }

    var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);

    {
      if (shouldUpdate === undefined) {
        error('%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', getComponentName(ctor) || 'Component');
      }
    }

    return shouldUpdate;
  }

  if (ctor.prototype && ctor.prototype.isPureReactComponent) {
    return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
  }

  return true;
}

function checkClassInstance(workInProgress, ctor, newProps) {
  var instance = workInProgress.stateNode;

  {
    var name = getComponentName(ctor) || 'Component';
    var renderPresent = instance.render;

    if (!renderPresent) {
      if (ctor.prototype && typeof ctor.prototype.render === 'function') {
        error('%s(...): No `render` method found on the returned component ' + 'instance: did you accidentally return an object from the constructor?', name);
      } else {
        error('%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', name);
      }
    }

    if (instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state) {
      error('getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', name);
    }

    if (instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved) {
      error('getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', name);
    }

    if (instance.propTypes) {
      error('propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', name);
    }

    if (instance.contextType) {
      error('contextType was defined as an instance property on %s. Use a static ' + 'property to define contextType instead.', name);
    }

    {
      if (instance.contextTypes) {
        error('contextTypes was defined as an instance property on %s. Use a static ' + 'property to define contextTypes instead.', name);
      }

      if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
        didWarnAboutContextTypeAndContextTypes.add(ctor);

        error('%s declares both contextTypes and contextType static properties. ' + 'The legacy contextTypes property will be ignored.', name);
      }
    }

    if (typeof instance.componentShouldUpdate === 'function') {
      error('%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', name);
    }

    if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') {
      error('%s has a method called shouldComponentUpdate(). ' + 'shouldComponentUpdate should not be used when extending React.PureComponent. ' + 'Please extend React.Component if shouldComponentUpdate is used.', getComponentName(ctor) || 'A pure component');
    }

    if (typeof instance.componentDidUnmount === 'function') {
      error('%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', name);
    }

    if (typeof instance.componentDidReceiveProps === 'function') {
      error('%s has a method called ' + 'componentDidReceiveProps(). But there is no such lifecycle method. ' + 'If you meant to update the state in response to changing props, ' + 'use componentWillReceiveProps(). If you meant to fetch data or ' + 'run side-effects or mutations after React has updated the UI, use componentDidUpdate().', name);
    }

    if (typeof instance.componentWillRecieveProps === 'function') {
      error('%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', name);
    }

    if (typeof instance.UNSAFE_componentWillRecieveProps === 'function') {
      error('%s has a method called ' + 'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?', name);
    }

    var hasMutatedProps = instance.props !== newProps;

    if (instance.props !== undefined && hasMutatedProps) {
      error('%s(...): When calling super() in `%s`, make sure to pass ' + "up the same props that your component's constructor was passed.", name, name);
    }

    if (instance.defaultProps) {
      error('Setting defaultProps as an instance property on %s is not supported and will be ignored.' + ' Instead, define defaultProps as a static property on %s.', name, name);
    }

    if (typeof instance.getSnapshotBeforeUpdate === 'function' && typeof instance.componentDidUpdate !== 'function' && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);

      error('%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' + 'This component defines getSnapshotBeforeUpdate() only.', getComponentName(ctor));
    }

    if (typeof instance.getDerivedStateFromProps === 'function') {
      error('%s: getDerivedStateFromProps() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name);
    }

    if (typeof instance.getDerivedStateFromError === 'function') {
      error('%s: getDerivedStateFromError() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name);
    }

    if (typeof ctor.getSnapshotBeforeUpdate === 'function') {
      error('%s: getSnapshotBeforeUpdate() is defined as a static method ' + 'and will be ignored. Instead, declare it as an instance method.', name);
    }

    var _state = instance.state;

    if (_state && (typeof _state !== 'object' || isArray(_state))) {
      error('%s.state: must be set to an object or null', name);
    }

    if (typeof instance.getChildContext === 'function' && typeof ctor.childContextTypes !== 'object') {
      error('%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', name);
    }
  }
}

function adoptClassInstance(workInProgress, instance) {
  instance.updater = classComponentUpdater;
  workInProgress.stateNode = instance; // The instance needs access to the fiber so that it can schedule updates

  set(instance, workInProgress);

  {
    instance._reactInternalInstance = fakeInternalInstance;
  }
}

function constructClassInstance(workInProgress, ctor, props) {
  var isLegacyContextConsumer = false;
  var unmaskedContext = emptyContextObject;
  var context = emptyContextObject;
  var contextType = ctor.contextType;

  {
    if ('contextType' in ctor) {
      var isValid = // Allow null for conditional declaration
      contextType === null || contextType !== undefined && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === undefined; // Not a <Context.Consumer>

      if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
        didWarnAboutInvalidateContextType.add(ctor);
        var addendum = '';

        if (contextType === undefined) {
          addendum = ' However, it is set to undefined. ' + 'This can be caused by a typo or by mixing up named and default imports. ' + 'This can also happen due to a circular dependency, so ' + 'try moving the createContext() call to a separate file.';
        } else if (typeof contextType !== 'object') {
          addendum = ' However, it is set to a ' + typeof contextType + '.';
        } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {
          addendum = ' Did you accidentally pass the Context.Provider instead?';
        } else if (contextType._context !== undefined) {
          // <Context.Consumer>
          addendum = ' Did you accidentally pass the Context.Consumer instead?';
        } else {
          addendum = ' However, it is set to an object with keys {' + Object.keys(contextType).join(', ') + '}.';
        }

        error('%s defines an invalid contextType. ' + 'contextType should point to the Context object returned by React.createContext().%s', getComponentName(ctor) || 'Component', addendum);
      }
    }
  }

  if (typeof contextType === 'object' && contextType !== null) {
    context = readContext(contextType);
  } else {
    unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
    var contextTypes = ctor.contextTypes;
    isLegacyContextConsumer = contextTypes !== null && contextTypes !== undefined;
    context = isLegacyContextConsumer ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject;
  } // Instantiate twice to help detect side-effects.


  {
    if ( workInProgress.mode & StrictMode) {
      disableLogs();

      try {
        new ctor(props, context); // eslint-disable-line no-new
      } finally {
        reenableLogs();
      }
    }
  }

  var instance = new ctor(props, context);
  var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;
  adoptClassInstance(workInProgress, instance);

  {
    if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {
      var componentName = getComponentName(ctor) || 'Component';

      if (!didWarnAboutUninitializedState.has(componentName)) {
        didWarnAboutUninitializedState.add(componentName);

        error('`%s` uses `getDerivedStateFromProps` but its initial state is ' + '%s. This is not recommended. Instead, define the initial state by ' + 'assigning an object to `this.state` in the constructor of `%s`. ' + 'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.', componentName, instance.state === null ? 'null' : 'undefined', componentName);
      }
    } // If new component APIs are defined, "unsafe" lifecycles won't be called.
    // Warn about these lifecycles if they are present.
    // Don't warn about react-lifecycles-compat polyfilled methods though.


    if (typeof ctor.getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function') {
      var foundWillMountName = null;
      var foundWillReceivePropsName = null;
      var foundWillUpdateName = null;

      if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {
        foundWillMountName = 'componentWillMount';
      } else if (typeof instance.UNSAFE_componentWillMount === 'function') {
        foundWillMountName = 'UNSAFE_componentWillMount';
      }

      if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
        foundWillReceivePropsName = 'componentWillReceiveProps';
      } else if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
        foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
      }

      if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
        foundWillUpdateName = 'componentWillUpdate';
      } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
        foundWillUpdateName = 'UNSAFE_componentWillUpdate';
      }

      if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
        var _componentName = getComponentName(ctor) || 'Component';

        var newApiName = typeof ctor.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';

        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
          didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);

          error('Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' + '%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\n' + 'The above lifecycles should be removed. Learn more about this warning here:\n' + 'https://reactjs.org/link/unsafe-component-lifecycles', _componentName, newApiName, foundWillMountName !== null ? "\n  " + foundWillMountName : '', foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : '', foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : '');
        }
      }
    }
  } // Cache unmasked context so we can avoid recreating masked context unless necessary.
  // ReactFiberContext usually updates this cache but can't for newly-created instances.


  if (isLegacyContextConsumer) {
    cacheContext(workInProgress, unmaskedContext, context);
  }

  return instance;
}

function callComponentWillMount(workInProgress, instance) {
  var oldState = instance.state;

  if (typeof instance.componentWillMount === 'function') {
    instance.componentWillMount();
  }

  if (typeof instance.UNSAFE_componentWillMount === 'function') {
    instance.UNSAFE_componentWillMount();
  }

  if (oldState !== instance.state) {
    {
      error('%s.componentWillMount(): Assigning directly to this.state is ' + "deprecated (except inside a component's " + 'constructor). Use setState instead.', getComponentName(workInProgress.type) || 'Component');
    }

    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }
}

function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
  var oldState = instance.state;

  if (typeof instance.componentWillReceiveProps === 'function') {
    instance.componentWillReceiveProps(newProps, nextContext);
  }

  if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
  }

  if (instance.state !== oldState) {
    {
      var componentName = getComponentName(workInProgress.type) || 'Component';

      if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {
        didWarnAboutStateAssignmentForComponent.add(componentName);

        error('%s.componentWillReceiveProps(): Assigning directly to ' + "this.state is deprecated (except inside a component's " + 'constructor). Use setState instead.', componentName);
      }
    }

    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }
} // Invokes the mount life-cycles on a previously never rendered instance.


function mountClassInstance(workInProgress, ctor, newProps, renderLanes) {
  {
    checkClassInstance(workInProgress, ctor, newProps);
  }

  var instance = workInProgress.stateNode;
  instance.props = newProps;
  instance.state = workInProgress.memoizedState;
  instance.refs = emptyRefsObject;
  initializeUpdateQueue(workInProgress);
  var contextType = ctor.contextType;

  if (typeof contextType === 'object' && contextType !== null) {
    instance.context = readContext(contextType);
  } else {
    var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
    instance.context = getMaskedContext(workInProgress, unmaskedContext);
  }

  {
    if (instance.state === newProps) {
      var componentName = getComponentName(ctor) || 'Component';

      if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
        didWarnAboutDirectlyAssigningPropsToState.add(componentName);

        error('%s: It is not recommended to assign props directly to state ' + "because updates to props won't be reflected in state. " + 'In most cases, it is better to use props directly.', componentName);
      }
    }

    if (workInProgress.mode & StrictMode) {
      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);
    }

    {
      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);
    }
  }

  processUpdateQueue(workInProgress, newProps, instance, renderLanes);
  instance.state = workInProgress.memoizedState;
  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;

  if (typeof getDerivedStateFromProps === 'function') {
    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
    instance.state = workInProgress.memoizedState;
  } // In order to support react-lifecycles-compat polyfilled components,
  // Unsafe lifecycles should not be invoked for components using the new APIs.


  if (typeof ctor.getDerivedStateFromProps !== 'function' && typeof instance.getSnapshotBeforeUpdate !== 'function' && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
    callComponentWillMount(workInProgress, instance); // If we had additional state updates during this life-cycle, let's
    // process them now.

    processUpdateQueue(workInProgress, newProps, instance, renderLanes);
    instance.state = workInProgress.memoizedState;
  }

  if (typeof instance.componentDidMount === 'function') {
    workInProgress.flags |= Update;
  }
}

function resumeMountClassInstance(workInProgress, ctor, newProps, renderLanes) {
  var instance = workInProgress.stateNode;
  var oldProps = workInProgress.memoizedProps;
  instance.props = oldProps;
  var oldContext = instance.context;
  var contextType = ctor.contextType;
  var nextContext = emptyContextObject;

  if (typeof contextType === 'object' && contextType !== null) {
    nextContext = readContext(contextType);
  } else {
    var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
    nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);
  }

  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what
  // ever the previously attempted to render - not the "current". However,
  // during componentDidUpdate we pass the "current" props.
  // In order to support react-lifecycles-compat polyfilled components,
  // Unsafe lifecycles should not be invoked for components using the new APIs.

  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
    if (oldProps !== newProps || oldContext !== nextContext) {
      callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
    }
  }

  resetHasForceUpdateBeforeProcessing();
  var oldState = workInProgress.memoizedState;
  var newState = instance.state = oldState;
  processUpdateQueue(workInProgress, newProps, instance, renderLanes);
  newState = workInProgress.memoizedState;

  if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidMount === 'function') {
      workInProgress.flags |= Update;
    }

    return false;
  }

  if (typeof getDerivedStateFromProps === 'function') {
    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
    newState = workInProgress.memoizedState;
  }

  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);

  if (shouldUpdate) {
    // In order to support react-lifecycles-compat polyfilled components,
    // Unsafe lifecycles should not be invoked for components using the new APIs.
    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
      if (typeof instance.componentWillMount === 'function') {
        instance.componentWillMount();
      }

      if (typeof instance.UNSAFE_componentWillMount === 'function') {
        instance.UNSAFE_componentWillMount();
      }
    }

    if (typeof instance.componentDidMount === 'function') {
      workInProgress.flags |= Update;
    }
  } else {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidMount === 'function') {
      workInProgress.flags |= Update;
    } // If shouldComponentUpdate returned false, we should still update the
    // memoized state to indicate that this work can be reused.


    workInProgress.memoizedProps = newProps;
    workInProgress.memoizedState = newState;
  } // Update the existing instance's state, props, and context pointers even
  // if shouldComponentUpdate returns false.


  instance.props = newProps;
  instance.state = newState;
  instance.context = nextContext;
  return shouldUpdate;
} // Invokes the update life-cycles and returns false if it shouldn't rerender.


function updateClassInstance(current, workInProgress, ctor, newProps, renderLanes) {
  var instance = workInProgress.stateNode;
  cloneUpdateQueue(current, workInProgress);
  var unresolvedOldProps = workInProgress.memoizedProps;
  var oldProps = workInProgress.type === workInProgress.elementType ? unresolvedOldProps : resolveDefaultProps(workInProgress.type, unresolvedOldProps);
  instance.props = oldProps;
  var unresolvedNewProps = workInProgress.pendingProps;
  var oldContext = instance.context;
  var contextType = ctor.contextType;
  var nextContext = emptyContextObject;

  if (typeof contextType === 'object' && contextType !== null) {
    nextContext = readContext(contextType);
  } else {
    var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
    nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);
  }

  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what
  // ever the previously attempted to render - not the "current". However,
  // during componentDidUpdate we pass the "current" props.
  // In order to support react-lifecycles-compat polyfilled components,
  // Unsafe lifecycles should not be invoked for components using the new APIs.

  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
    if (unresolvedOldProps !== unresolvedNewProps || oldContext !== nextContext) {
      callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
    }
  }

  resetHasForceUpdateBeforeProcessing();
  var oldState = workInProgress.memoizedState;
  var newState = instance.state = oldState;
  processUpdateQueue(workInProgress, newProps, instance, renderLanes);
  newState = workInProgress.memoizedState;

  if (unresolvedOldProps === unresolvedNewProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidUpdate === 'function') {
      if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.flags |= Update;
      }
    }

    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
      if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.flags |= Snapshot;
      }
    }

    return false;
  }

  if (typeof getDerivedStateFromProps === 'function') {
    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
    newState = workInProgress.memoizedState;
  }

  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);

  if (shouldUpdate) {
    // In order to support react-lifecycles-compat polyfilled components,
    // Unsafe lifecycles should not be invoked for components using the new APIs.
    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === 'function' || typeof instance.componentWillUpdate === 'function')) {
      if (typeof instance.componentWillUpdate === 'function') {
        instance.componentWillUpdate(newProps, newState, nextContext);
      }

      if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
        instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);
      }
    }

    if (typeof instance.componentDidUpdate === 'function') {
      workInProgress.flags |= Update;
    }

    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
      workInProgress.flags |= Snapshot;
    }
  } else {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidUpdate === 'function') {
      if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.flags |= Update;
      }
    }

    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
      if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.flags |= Snapshot;
      }
    } // If shouldComponentUpdate returned false, we should still update the
    // memoized props/state to indicate that this work can be reused.


    workInProgress.memoizedProps = newProps;
    workInProgress.memoizedState = newState;
  } // Update the existing instance's state, props, and context pointers even
  // if shouldComponentUpdate returns false.


  instance.props = newProps;
  instance.state = newState;
  instance.context = nextContext;
  return shouldUpdate;
}

var didWarnAboutMaps;
var didWarnAboutGenerators;
var didWarnAboutStringRefs;
var ownerHasKeyUseWarning;
var ownerHasFunctionTypeWarning;

var warnForMissingKey = function (child, returnFiber) {};

{
  didWarnAboutMaps = false;
  didWarnAboutGenerators = false;
  didWarnAboutStringRefs = {};
  /**
   * Warn if there's no key explicitly set on dynamic arrays of children or
   * object keys are not valid. This allows us to keep track of children between
   * updates.
   */

  ownerHasKeyUseWarning = {};
  ownerHasFunctionTypeWarning = {};

  warnForMissingKey = function (child, returnFiber) {
    if (child === null || typeof child !== 'object') {
      return;
    }

    if (!child._store || child._store.validated || child.key != null) {
      return;
    }

    if (!(typeof child._store === 'object')) {
      {
        throw Error( "React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue." );
      }
    }

    child._store.validated = true;
    var componentName = getComponentName(returnFiber.type) || 'Component';

    if (ownerHasKeyUseWarning[componentName]) {
      return;
    }

    ownerHasKeyUseWarning[componentName] = true;

    error('Each child in a list should have a unique ' + '"key" prop. See https://reactjs.org/link/warning-keys for ' + 'more information.');
  };
}

var isArray$1 = Array.isArray;

function coerceRef(returnFiber, current, element) {
  var mixedRef = element.ref;

  if (mixedRef !== null && typeof mixedRef !== 'function' && typeof mixedRef !== 'object') {
    {
      // TODO: Clean this up once we turn on the string ref warning for
      // everyone, because the strict mode case will no longer be relevant
      if ((returnFiber.mode & StrictMode || warnAboutStringRefs) && // We warn in ReactElement.js if owner and self are equal for string refs
      // because these cannot be automatically converted to an arrow function
      // using a codemod. Therefore, we don't have to warn about string refs again.
      !(element._owner && element._self && element._owner.stateNode !== element._self)) {
        var componentName = getComponentName(returnFiber.type) || 'Component';

        if (!didWarnAboutStringRefs[componentName]) {
          {
            error('A string ref, "%s", has been found within a strict mode tree. ' + 'String refs are a source of potential bugs and should be avoided. ' + 'We recommend using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', mixedRef);
          }

          didWarnAboutStringRefs[componentName] = true;
        }
      }
    }

    if (element._owner) {
      var owner = element._owner;
      var inst;

      if (owner) {
        var ownerFiber = owner;

        if (!(ownerFiber.tag === ClassComponent)) {
          {
            throw Error( "Function components cannot have string refs. We recommend using useRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref" );
          }
        }

        inst = ownerFiber.stateNode;
      }

      if (!inst) {
        {
          throw Error( "Missing owner for string ref " + mixedRef + ". This error is likely caused by a bug in React. Please file an issue." );
        }
      }

      var stringRef = '' + mixedRef; // Check if previous string ref matches new string ref

      if (current !== null && current.ref !== null && typeof current.ref === 'function' && current.ref._stringRef === stringRef) {
        return current.ref;
      }

      var ref = function (value) {
        var refs = inst.refs;

        if (refs === emptyRefsObject) {
          // This is a lazy pooled frozen object, so we need to initialize.
          refs = inst.refs = {};
        }

        if (value === null) {
          delete refs[stringRef];
        } else {
          refs[stringRef] = value;
        }
      };

      ref._stringRef = stringRef;
      return ref;
    } else {
      if (!(typeof mixedRef === 'string')) {
        {
          throw Error( "Expected ref to be a function, a string, an object returned by React.createRef(), or null." );
        }
      }

      if (!element._owner) {
        {
          throw Error( "Element ref was specified as a string (" + mixedRef + ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://reactjs.org/link/refs-must-have-owner for more information." );
        }
      }
    }
  }

  return mixedRef;
}

function throwOnInvalidObjectType(returnFiber, newChild) {
  if (returnFiber.type !== 'textarea') {
    {
      {
        throw Error( "Objects are not valid as a React child (found: " + (Object.prototype.toString.call(newChild) === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : newChild) + "). If you meant to render a collection of children, use an array instead." );
      }
    }
  }
}

function warnOnFunctionType(returnFiber) {
  {
    var componentName = getComponentName(returnFiber.type) || 'Component';

    if (ownerHasFunctionTypeWarning[componentName]) {
      return;
    }

    ownerHasFunctionTypeWarning[componentName] = true;

    error('Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.');
  }
} // We avoid inlining this to avoid potential deopts from using try/catch.
// to be able to optimize each path individually by branching early. This needs
// a compiler or we can do it manually. Helpers that don't need this branching
// live outside of this function.


function ChildReconciler(shouldTrackSideEffects) {
  function deleteChild(returnFiber, childToDelete) {
    if (!shouldTrackSideEffects) {
      // Noop.
      return;
    } // Deletions are added in reversed order so we add it to the front.
    // At this point, the return fiber's effect list is empty except for
    // deletions, so we can just append the deletion to the list. The remaining
    // effects aren't added until the complete phase. Once we implement
    // resuming, this may not be true.


    var last = returnFiber.lastEffect;

    if (last !== null) {
      last.nextEffect = childToDelete;
      returnFiber.lastEffect = childToDelete;
    } else {
      returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
    }

    childToDelete.nextEffect = null;
    childToDelete.flags = Deletion;
  }

  function deleteRemainingChildren(returnFiber, currentFirstChild) {
    if (!shouldTrackSideEffects) {
      // Noop.
      return null;
    } // TODO: For the shouldClone case, this could be micro-optimized a bit by
    // assuming that after the first child we've already added everything.


    var childToDelete = currentFirstChild;

    while (childToDelete !== null) {
      deleteChild(returnFiber, childToDelete);
      childToDelete = childToDelete.sibling;
    }

    return null;
  }

  function mapRemainingChildren(returnFiber, currentFirstChild) {
    // Add the remaining children to a temporary map so that we can find them by
    // keys quickly. Implicit (null) keys get added to this set with their index
    // instead.
    var existingChildren = new Map();
    var existingChild = currentFirstChild;

    while (existingChild !== null) {
      if (existingChild.key !== null) {
        existingChildren.set(existingChild.key, existingChild);
      } else {
        existingChildren.set(existingChild.index, existingChild);
      }

      existingChild = existingChild.sibling;
    }

    return existingChildren;
  }

  function useFiber(fiber, pendingProps) {
    // We currently set sibling to null and index to 0 here because it is easy
    // to forget to do before returning it. E.g. for the single child case.
    var clone = createWorkInProgress(fiber, pendingProps);
    clone.index = 0;
    clone.sibling = null;
    return clone;
  }

  function placeChild(newFiber, lastPlacedIndex, newIndex) {
    newFiber.index = newIndex;

    if (!shouldTrackSideEffects) {
      // Noop.
      return lastPlacedIndex;
    }

    var current = newFiber.alternate;

    if (current !== null) {
      var oldIndex = current.index;

      if (oldIndex < lastPlacedIndex) {
        // This is a move.
        newFiber.flags = Placement;
        return lastPlacedIndex;
      } else {
        // This item can stay in place.
        return oldIndex;
      }
    } else {
      // This is an insertion.
      newFiber.flags = Placement;
      return lastPlacedIndex;
    }
  }

  function placeSingleChild(newFiber) {
    // This is simpler for the single child case. We only need to do a
    // placement for inserting new children.
    if (shouldTrackSideEffects && newFiber.alternate === null) {
      newFiber.flags = Placement;
    }

    return newFiber;
  }

  function updateTextNode(returnFiber, current, textContent, lanes) {
    if (current === null || current.tag !== HostText) {
      // Insert
      var created = createFiberFromText(textContent, returnFiber.mode, lanes);
      created.return = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current, textContent);
      existing.return = returnFiber;
      return existing;
    }
  }

  function updateElement(returnFiber, current, element, lanes) {
    if (current !== null) {
      if (current.elementType === element.type || ( // Keep this check inline so it only runs on the false path:
       isCompatibleFamilyForHotReloading(current, element) )) {
        // Move based on index
        var existing = useFiber(current, element.props);
        existing.ref = coerceRef(returnFiber, current, element);
        existing.return = returnFiber;

        {
          existing._debugSource = element._source;
          existing._debugOwner = element._owner;
        }

        return existing;
      }
    } // Insert


    var created = createFiberFromElement(element, returnFiber.mode, lanes);
    created.ref = coerceRef(returnFiber, current, element);
    created.return = returnFiber;
    return created;
  }

  function updatePortal(returnFiber, current, portal, lanes) {
    if (current === null || current.tag !== HostPortal || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {
      // Insert
      var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
      created.return = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current, portal.children || []);
      existing.return = returnFiber;
      return existing;
    }
  }

  function updateFragment(returnFiber, current, fragment, lanes, key) {
    if (current === null || current.tag !== Fragment) {
      // Insert
      var created = createFiberFromFragment(fragment, returnFiber.mode, lanes, key);
      created.return = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current, fragment);
      existing.return = returnFiber;
      return existing;
    }
  }

  function createChild(returnFiber, newChild, lanes) {
    if (typeof newChild === 'string' || typeof newChild === 'number') {
      // Text nodes don't have keys. If the previous node is implicitly keyed
      // we can continue to replace it without aborting even if it is not a text
      // node.
      var created = createFiberFromText('' + newChild, returnFiber.mode, lanes);
      created.return = returnFiber;
      return created;
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            var _created = createFiberFromElement(newChild, returnFiber.mode, lanes);

            _created.ref = coerceRef(returnFiber, null, newChild);
            _created.return = returnFiber;
            return _created;
          }

        case REACT_PORTAL_TYPE:
          {
            var _created2 = createFiberFromPortal(newChild, returnFiber.mode, lanes);

            _created2.return = returnFiber;
            return _created2;
          }
      }

      if (isArray$1(newChild) || getIteratorFn(newChild)) {
        var _created3 = createFiberFromFragment(newChild, returnFiber.mode, lanes, null);

        _created3.return = returnFiber;
        return _created3;
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType(returnFiber);
      }
    }

    return null;
  }

  function updateSlot(returnFiber, oldFiber, newChild, lanes) {
    // Update the fiber if the keys match, otherwise return null.
    var key = oldFiber !== null ? oldFiber.key : null;

    if (typeof newChild === 'string' || typeof newChild === 'number') {
      // Text nodes don't have keys. If the previous node is implicitly keyed
      // we can continue to replace it without aborting even if it is not a text
      // node.
      if (key !== null) {
        return null;
      }

      return updateTextNode(returnFiber, oldFiber, '' + newChild, lanes);
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            if (newChild.key === key) {
              if (newChild.type === REACT_FRAGMENT_TYPE) {
                return updateFragment(returnFiber, oldFiber, newChild.props.children, lanes, key);
              }

              return updateElement(returnFiber, oldFiber, newChild, lanes);
            } else {
              return null;
            }
          }

        case REACT_PORTAL_TYPE:
          {
            if (newChild.key === key) {
              return updatePortal(returnFiber, oldFiber, newChild, lanes);
            } else {
              return null;
            }
          }
      }

      if (isArray$1(newChild) || getIteratorFn(newChild)) {
        if (key !== null) {
          return null;
        }

        return updateFragment(returnFiber, oldFiber, newChild, lanes, null);
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType(returnFiber);
      }
    }

    return null;
  }

  function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {
    if (typeof newChild === 'string' || typeof newChild === 'number') {
      // Text nodes don't have keys, so we neither have to check the old nor
      // new node for the key. If both are text nodes, they match.
      var matchedFiber = existingChildren.get(newIdx) || null;
      return updateTextNode(returnFiber, matchedFiber, '' + newChild, lanes);
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;

            if (newChild.type === REACT_FRAGMENT_TYPE) {
              return updateFragment(returnFiber, _matchedFiber, newChild.props.children, lanes, newChild.key);
            }

            return updateElement(returnFiber, _matchedFiber, newChild, lanes);
          }

        case REACT_PORTAL_TYPE:
          {
            var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;

            return updatePortal(returnFiber, _matchedFiber2, newChild, lanes);
          }

      }

      if (isArray$1(newChild) || getIteratorFn(newChild)) {
        var _matchedFiber3 = existingChildren.get(newIdx) || null;

        return updateFragment(returnFiber, _matchedFiber3, newChild, lanes, null);
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType(returnFiber);
      }
    }

    return null;
  }
  /**
   * Warns if there is a duplicate or missing key
   */


  function warnOnInvalidKey(child, knownKeys, returnFiber) {
    {
      if (typeof child !== 'object' || child === null) {
        return knownKeys;
      }

      switch (child.$$typeof) {
        case REACT_ELEMENT_TYPE:
        case REACT_PORTAL_TYPE:
          warnForMissingKey(child, returnFiber);
          var key = child.key;

          if (typeof key !== 'string') {
            break;
          }

          if (knownKeys === null) {
            knownKeys = new Set();
            knownKeys.add(key);
            break;
          }

          if (!knownKeys.has(key)) {
            knownKeys.add(key);
            break;
          }

          error('Encountered two children with the same key, `%s`. ' + 'Keys should be unique so that components maintain their identity ' + 'across updates. Non-unique keys may cause children to be ' + 'duplicated and/or omitted — the behavior is unsupported and ' + 'could change in a future version.', key);

          break;
      }
    }

    return knownKeys;
  }

  function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {
    // This algorithm can't optimize by searching from both ends since we
    // don't have backpointers on fibers. I'm trying to see how far we can get
    // with that model. If it ends up not being worth the tradeoffs, we can
    // add it later.
    // Even with a two ended optimization, we'd want to optimize for the case
    // where there are few changes and brute force the comparison instead of
    // going for the Map. It'd like to explore hitting that path first in
    // forward-only mode and only go for the Map once we notice that we need
    // lots of look ahead. This doesn't handle reversal as well as two ended
    // search but that's unusual. Besides, for the two ended optimization to
    // work on Iterables, we'd need to copy the whole set.
    // In this first iteration, we'll just live with hitting the bad case
    // (adding everything to a Map) in for every insert/move.
    // If you change this code, also update reconcileChildrenIterator() which
    // uses the same algorithm.
    {
      // First, validate keys.
      var knownKeys = null;

      for (var i = 0; i < newChildren.length; i++) {
        var child = newChildren[i];
        knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
      }
    }

    var resultingFirstChild = null;
    var previousNewFiber = null;
    var oldFiber = currentFirstChild;
    var lastPlacedIndex = 0;
    var newIdx = 0;
    var nextOldFiber = null;

    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {
      if (oldFiber.index > newIdx) {
        nextOldFiber = oldFiber;
        oldFiber = null;
      } else {
        nextOldFiber = oldFiber.sibling;
      }

      var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);

      if (newFiber === null) {
        // TODO: This breaks on empty slots like null children. That's
        // unfortunate because it triggers the slow path all the time. We need
        // a better way to communicate whether this was a miss or null,
        // boolean, undefined, etc.
        if (oldFiber === null) {
          oldFiber = nextOldFiber;
        }

        break;
      }

      if (shouldTrackSideEffects) {
        if (oldFiber && newFiber.alternate === null) {
          // We matched the slot, but we didn't reuse the existing fiber, so we
          // need to delete the existing child.
          deleteChild(returnFiber, oldFiber);
        }
      }

      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);

      if (previousNewFiber === null) {
        // TODO: Move out of the loop. This only happens for the first run.
        resultingFirstChild = newFiber;
      } else {
        // TODO: Defer siblings if we're not at the right index for this slot.
        // I.e. if we had null values before, then we want to defer this
        // for each null value. However, we also don't want to call updateSlot
        // with the previous one.
        previousNewFiber.sibling = newFiber;
      }

      previousNewFiber = newFiber;
      oldFiber = nextOldFiber;
    }

    if (newIdx === newChildren.length) {
      // We've reached the end of the new children. We can delete the rest.
      deleteRemainingChildren(returnFiber, oldFiber);
      return resultingFirstChild;
    }

    if (oldFiber === null) {
      // If we don't have any more existing children we can choose a fast path
      // since the rest will all be insertions.
      for (; newIdx < newChildren.length; newIdx++) {
        var _newFiber = createChild(returnFiber, newChildren[newIdx], lanes);

        if (_newFiber === null) {
          continue;
        }

        lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);

        if (previousNewFiber === null) {
          // TODO: Move out of the loop. This only happens for the first run.
          resultingFirstChild = _newFiber;
        } else {
          previousNewFiber.sibling = _newFiber;
        }

        previousNewFiber = _newFiber;
      }

      return resultingFirstChild;
    } // Add all children to a key map for quick lookups.


    var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.

    for (; newIdx < newChildren.length; newIdx++) {
      var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], lanes);

      if (_newFiber2 !== null) {
        if (shouldTrackSideEffects) {
          if (_newFiber2.alternate !== null) {
            // The new fiber is a work in progress, but if there exists a
            // current, that means that we reused the fiber. We need to delete
            // it from the child list so that we don't add it to the deletion
            // list.
            existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
          }
        }

        lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);

        if (previousNewFiber === null) {
          resultingFirstChild = _newFiber2;
        } else {
          previousNewFiber.sibling = _newFiber2;
        }

        previousNewFiber = _newFiber2;
      }
    }

    if (shouldTrackSideEffects) {
      // Any existing children that weren't consumed above were deleted. We need
      // to add them to the deletion list.
      existingChildren.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
    }

    return resultingFirstChild;
  }

  function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, lanes) {
    // This is the same implementation as reconcileChildrenArray(),
    // but using the iterator instead.
    var iteratorFn = getIteratorFn(newChildrenIterable);

    if (!(typeof iteratorFn === 'function')) {
      {
        throw Error( "An object is not an iterable. This error is likely caused by a bug in React. Please file an issue." );
      }
    }

    {
      // We don't support rendering Generators because it's a mutation.
      // See https://github.com/facebook/react/issues/12995
      if (typeof Symbol === 'function' && // $FlowFixMe Flow doesn't know about toStringTag
      newChildrenIterable[Symbol.toStringTag] === 'Generator') {
        if (!didWarnAboutGenerators) {
          error('Using Generators as children is unsupported and will likely yield ' + 'unexpected results because enumerating a generator mutates it. ' + 'You may convert it to an array with `Array.from()` or the ' + '`[...spread]` operator before rendering. Keep in mind ' + 'you might need to polyfill these features for older browsers.');
        }

        didWarnAboutGenerators = true;
      } // Warn about using Maps as children


      if (newChildrenIterable.entries === iteratorFn) {
        if (!didWarnAboutMaps) {
          error('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');
        }

        didWarnAboutMaps = true;
      } // First, validate keys.
      // We'll get a different iterator later for the main pass.


      var _newChildren = iteratorFn.call(newChildrenIterable);

      if (_newChildren) {
        var knownKeys = null;

        var _step = _newChildren.next();

        for (; !_step.done; _step = _newChildren.next()) {
          var child = _step.value;
          knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
        }
      }
    }

    var newChildren = iteratorFn.call(newChildrenIterable);

    if (!(newChildren != null)) {
      {
        throw Error( "An iterable object provided no iterator." );
      }
    }

    var resultingFirstChild = null;
    var previousNewFiber = null;
    var oldFiber = currentFirstChild;
    var lastPlacedIndex = 0;
    var newIdx = 0;
    var nextOldFiber = null;
    var step = newChildren.next();

    for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {
      if (oldFiber.index > newIdx) {
        nextOldFiber = oldFiber;
        oldFiber = null;
      } else {
        nextOldFiber = oldFiber.sibling;
      }

      var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);

      if (newFiber === null) {
        // TODO: This breaks on empty slots like null children. That's
        // unfortunate because it triggers the slow path all the time. We need
        // a better way to communicate whether this was a miss or null,
        // boolean, undefined, etc.
        if (oldFiber === null) {
          oldFiber = nextOldFiber;
        }

        break;
      }

      if (shouldTrackSideEffects) {
        if (oldFiber && newFiber.alternate === null) {
          // We matched the slot, but we didn't reuse the existing fiber, so we
          // need to delete the existing child.
          deleteChild(returnFiber, oldFiber);
        }
      }

      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);

      if (previousNewFiber === null) {
        // TODO: Move out of the loop. This only happens for the first run.
        resultingFirstChild = newFiber;
      } else {
        // TODO: Defer siblings if we're not at the right index for this slot.
        // I.e. if we had null values before, then we want to defer this
        // for each null value. However, we also don't want to call updateSlot
        // with the previous one.
        previousNewFiber.sibling = newFiber;
      }

      previousNewFiber = newFiber;
      oldFiber = nextOldFiber;
    }

    if (step.done) {
      // We've reached the end of the new children. We can delete the rest.
      deleteRemainingChildren(returnFiber, oldFiber);
      return resultingFirstChild;
    }

    if (oldFiber === null) {
      // If we don't have any more existing children we can choose a fast path
      // since the rest will all be insertions.
      for (; !step.done; newIdx++, step = newChildren.next()) {
        var _newFiber3 = createChild(returnFiber, step.value, lanes);

        if (_newFiber3 === null) {
          continue;
        }

        lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);

        if (previousNewFiber === null) {
          // TODO: Move out of the loop. This only happens for the first run.
          resultingFirstChild = _newFiber3;
        } else {
          previousNewFiber.sibling = _newFiber3;
        }

        previousNewFiber = _newFiber3;
      }

      return resultingFirstChild;
    } // Add all children to a key map for quick lookups.


    var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.

    for (; !step.done; newIdx++, step = newChildren.next()) {
      var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, lanes);

      if (_newFiber4 !== null) {
        if (shouldTrackSideEffects) {
          if (_newFiber4.alternate !== null) {
            // The new fiber is a work in progress, but if there exists a
            // current, that means that we reused the fiber. We need to delete
            // it from the child list so that we don't add it to the deletion
            // list.
            existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
          }
        }

        lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);

        if (previousNewFiber === null) {
          resultingFirstChild = _newFiber4;
        } else {
          previousNewFiber.sibling = _newFiber4;
        }

        previousNewFiber = _newFiber4;
      }
    }

    if (shouldTrackSideEffects) {
      // Any existing children that weren't consumed above were deleted. We need
      // to add them to the deletion list.
      existingChildren.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
    }

    return resultingFirstChild;
  }

  function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, lanes) {
    // There's no need to check for keys on text nodes since we don't have a
    // way to define them.
    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
      // We already have an existing node so let's just update it and delete
      // the rest.
      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
      var existing = useFiber(currentFirstChild, textContent);
      existing.return = returnFiber;
      return existing;
    } // The existing first child is not a text node so we need to create one
    // and delete the existing ones.


    deleteRemainingChildren(returnFiber, currentFirstChild);
    var created = createFiberFromText(textContent, returnFiber.mode, lanes);
    created.return = returnFiber;
    return created;
  }

  function reconcileSingleElement(returnFiber, currentFirstChild, element, lanes) {
    var key = element.key;
    var child = currentFirstChild;

    while (child !== null) {
      // TODO: If key === null and child.key === null, then this only applies to
      // the first item in the list.
      if (child.key === key) {
        switch (child.tag) {
          case Fragment:
            {
              if (element.type === REACT_FRAGMENT_TYPE) {
                deleteRemainingChildren(returnFiber, child.sibling);
                var existing = useFiber(child, element.props.children);
                existing.return = returnFiber;

                {
                  existing._debugSource = element._source;
                  existing._debugOwner = element._owner;
                }

                return existing;
              }

              break;
            }

          case Block:

          // We intentionally fallthrough here if enableBlocksAPI is not on.
          // eslint-disable-next-lined no-fallthrough

          default:
            {
              if (child.elementType === element.type || ( // Keep this check inline so it only runs on the false path:
               isCompatibleFamilyForHotReloading(child, element) )) {
                deleteRemainingChildren(returnFiber, child.sibling);

                var _existing3 = useFiber(child, element.props);

                _existing3.ref = coerceRef(returnFiber, child, element);
                _existing3.return = returnFiber;

                {
                  _existing3._debugSource = element._source;
                  _existing3._debugOwner = element._owner;
                }

                return _existing3;
              }

              break;
            }
        } // Didn't match.


        deleteRemainingChildren(returnFiber, child);
        break;
      } else {
        deleteChild(returnFiber, child);
      }

      child = child.sibling;
    }

    if (element.type === REACT_FRAGMENT_TYPE) {
      var created = createFiberFromFragment(element.props.children, returnFiber.mode, lanes, element.key);
      created.return = returnFiber;
      return created;
    } else {
      var _created4 = createFiberFromElement(element, returnFiber.mode, lanes);

      _created4.ref = coerceRef(returnFiber, currentFirstChild, element);
      _created4.return = returnFiber;
      return _created4;
    }
  }

  function reconcileSinglePortal(returnFiber, currentFirstChild, portal, lanes) {
    var key = portal.key;
    var child = currentFirstChild;

    while (child !== null) {
      // TODO: If key === null and child.key === null, then this only applies to
      // the first item in the list.
      if (child.key === key) {
        if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
          deleteRemainingChildren(returnFiber, child.sibling);
          var existing = useFiber(child, portal.children || []);
          existing.return = returnFiber;
          return existing;
        } else {
          deleteRemainingChildren(returnFiber, child);
          break;
        }
      } else {
        deleteChild(returnFiber, child);
      }

      child = child.sibling;
    }

    var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
    created.return = returnFiber;
    return created;
  } // This API will tag the children with the side-effect of the reconciliation
  // itself. They will be added to the side-effect list as we pass through the
  // children and the parent.


  function reconcileChildFibers(returnFiber, currentFirstChild, newChild, lanes) {
    // This function is not recursive.
    // If the top level item is an array, we treat it as a set of children,
    // not as a fragment. Nested arrays on the other hand will be treated as
    // fragment nodes. Recursion happens at the normal flow.
    // Handle top level unkeyed fragments as if they were arrays.
    // This leads to an ambiguity between <>{[...]}</> and <>...</>.
    // We treat the ambiguous cases above the same.
    var isUnkeyedTopLevelFragment = typeof newChild === 'object' && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;

    if (isUnkeyedTopLevelFragment) {
      newChild = newChild.props.children;
    } // Handle object types


    var isObject = typeof newChild === 'object' && newChild !== null;

    if (isObject) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, lanes));

        case REACT_PORTAL_TYPE:
          return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, lanes));

      }
    }

    if (typeof newChild === 'string' || typeof newChild === 'number') {
      return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, lanes));
    }

    if (isArray$1(newChild)) {
      return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes);
    }

    if (getIteratorFn(newChild)) {
      return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, lanes);
    }

    if (isObject) {
      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType(returnFiber);
      }
    }

    if (typeof newChild === 'undefined' && !isUnkeyedTopLevelFragment) {
      // If the new child is undefined, and the return fiber is a composite
      // component, throw an error. If Fiber return types are disabled,
      // we already threw above.
      switch (returnFiber.tag) {
        case ClassComponent:
          {
            {
              var instance = returnFiber.stateNode;

              if (instance.render._isMockFunction) {
                // We allow auto-mocks to proceed as if they're returning null.
                break;
              }
            }
          }
        // Intentionally fall through to the next case, which handles both
        // functions and classes
        // eslint-disable-next-lined no-fallthrough

        case Block:
        case FunctionComponent:
        case ForwardRef:
        case SimpleMemoComponent:
          {
            {
              {
                throw Error( (getComponentName(returnFiber.type) || 'Component') + "(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null." );
              }
            }
          }
      }
    } // Remaining cases are all treated as empty.


    return deleteRemainingChildren(returnFiber, currentFirstChild);
  }

  return reconcileChildFibers;
}

var reconcileChildFibers = ChildReconciler(true);
var mountChildFibers = ChildReconciler(false);
function cloneChildFibers(current, workInProgress) {
  if (!(current === null || workInProgress.child === current.child)) {
    {
      throw Error( "Resuming work not yet implemented." );
    }
  }

  if (workInProgress.child === null) {
    return;
  }

  var currentChild = workInProgress.child;
  var newChild = createWorkInProgress(currentChild, currentChild.pendingProps);
  workInProgress.child = newChild;
  newChild.return = workInProgress;

  while (currentChild.sibling !== null) {
    currentChild = currentChild.sibling;
    newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps);
    newChild.return = workInProgress;
  }

  newChild.sibling = null;
} // Reset a workInProgress child set to prepare it for a second pass.

function resetChildFibers(workInProgress, lanes) {
  var child = workInProgress.child;

  while (child !== null) {
    resetWorkInProgress(child, lanes);
    child = child.sibling;
  }
}

var NO_CONTEXT = {};
var contextStackCursor$1 = createCursor(NO_CONTEXT);
var contextFiberStackCursor = createCursor(NO_CONTEXT);
var rootInstanceStackCursor = createCursor(NO_CONTEXT);

function requiredContext(c) {
  if (!(c !== NO_CONTEXT)) {
    {
      throw Error( "Expected host context to exist. This error is likely caused by a bug in React. Please file an issue." );
    }
  }

  return c;
}

function getRootHostContainer() {
  var rootInstance = requiredContext(rootInstanceStackCursor.current);
  return rootInstance;
}

function pushHostContainer(fiber, nextRootInstance) {
  // Push current root instance onto the stack;
  // This allows us to reset root when portals are popped.
  push(rootInstanceStackCursor, nextRootInstance, fiber); // Track the context and the Fiber that provided it.
  // This enables us to pop only Fibers that provide unique contexts.

  push(contextFiberStackCursor, fiber, fiber); // Finally, we need to push the host context to the stack.
  // However, we can't just call getRootHostContext() and push it because
  // we'd have a different number of entries on the stack depending on
  // whether getRootHostContext() throws somewhere in renderer code or not.
  // So we push an empty value first. This lets us safely unwind on errors.

  push(contextStackCursor$1, NO_CONTEXT, fiber);
  var nextRootContext = getRootHostContext(nextRootInstance); // Now that we know this function doesn't throw, replace it.

  pop(contextStackCursor$1, fiber);
  push(contextStackCursor$1, nextRootContext, fiber);
}

function popHostContainer(fiber) {
  pop(contextStackCursor$1, fiber);
  pop(contextFiberStackCursor, fiber);
  pop(rootInstanceStackCursor, fiber);
}

function getHostContext() {
  var context = requiredContext(contextStackCursor$1.current);
  return context;
}

function pushHostContext(fiber) {
  var rootInstance = requiredContext(rootInstanceStackCursor.current);
  var context = requiredContext(contextStackCursor$1.current);
  var nextContext = getChildHostContext(context, fiber.type); // Don't push this Fiber's context unless it's unique.

  if (context === nextContext) {
    return;
  } // Track the context and the Fiber that provided it.
  // This enables us to pop only Fibers that provide unique contexts.


  push(contextFiberStackCursor, fiber, fiber);
  push(contextStackCursor$1, nextContext, fiber);
}

function popHostContext(fiber) {
  // Do not pop unless this Fiber provided the current context.
  // pushHostContext() only pushes Fibers that provide unique contexts.
  if (contextFiberStackCursor.current !== fiber) {
    return;
  }

  pop(contextStackCursor$1, fiber);
  pop(contextFiberStackCursor, fiber);
}

var DefaultSuspenseContext = 0; // The Suspense Context is split into two parts. The lower bits is
// inherited deeply down the subtree. The upper bits only affect
// this immediate suspense boundary and gets reset each new
// boundary or suspense list.

var SubtreeSuspenseContextMask = 1; // Subtree Flags:
// InvisibleParentSuspenseContext indicates that one of our parent Suspense
// boundaries is not currently showing visible main content.
// Either because it is already showing a fallback or is not mounted at all.
// We can use this to determine if it is desirable to trigger a fallback at
// the parent. If not, then we might need to trigger undesirable boundaries
// and/or suspend the commit to avoid hiding the parent content.

var InvisibleParentSuspenseContext = 1; // Shallow Flags:
// ForceSuspenseFallback can be used by SuspenseList to force newly added
// items into their fallback state during one of the render passes.

var ForceSuspenseFallback = 2;
var suspenseStackCursor = createCursor(DefaultSuspenseContext);
function hasSuspenseContext(parentContext, flag) {
  return (parentContext & flag) !== 0;
}
function setDefaultShallowSuspenseContext(parentContext) {
  return parentContext & SubtreeSuspenseContextMask;
}
function setShallowSuspenseContext(parentContext, shallowContext) {
  return parentContext & SubtreeSuspenseContextMask | shallowContext;
}
function addSubtreeSuspenseContext(parentContext, subtreeContext) {
  return parentContext | subtreeContext;
}
function pushSuspenseContext(fiber, newContext) {
  push(suspenseStackCursor, newContext, fiber);
}
function popSuspenseContext(fiber) {
  pop(suspenseStackCursor, fiber);
}

function shouldCaptureSuspense(workInProgress, hasInvisibleParent) {
  // If it was the primary children that just suspended, capture and render the
  // fallback. Otherwise, don't capture and bubble to the next boundary.
  var nextState = workInProgress.memoizedState;

  if (nextState !== null) {
    if (nextState.dehydrated !== null) {
      // A dehydrated boundary always captures.
      return true;
    }

    return false;
  }

  var props = workInProgress.memoizedProps; // In order to capture, the Suspense component must have a fallback prop.

  if (props.fallback === undefined) {
    return false;
  } // Regular boundaries always capture.


  if (props.unstable_avoidThisFallback !== true) {
    return true;
  } // If it's a boundary we should avoid, then we prefer to bubble up to the
  // parent boundary if it is currently invisible.


  if (hasInvisibleParent) {
    return false;
  } // If the parent is not able to handle it, we must handle it.


  return true;
}
function findFirstSuspended(row) {
  var node = row;

  while (node !== null) {
    if (node.tag === SuspenseComponent) {
      var state = node.memoizedState;

      if (state !== null) {
        var dehydrated = state.dehydrated;

        if (dehydrated === null || isSuspenseInstancePending(dehydrated) || isSuspenseInstanceFallback(dehydrated)) {
          return node;
        }
      }
    } else if (node.tag === SuspenseListComponent && // revealOrder undefined can't be trusted because it don't
    // keep track of whether it suspended or not.
    node.memoizedProps.revealOrder !== undefined) {
      var didSuspend = (node.flags & DidCapture) !== NoFlags;

      if (didSuspend) {
        return node;
      }
    } else if (node.child !== null) {
      node.child.return = node;
      node = node.child;
      continue;
    }

    if (node === row) {
      return null;
    }

    while (node.sibling === null) {
      if (node.return === null || node.return === row) {
        return null;
      }

      node = node.return;
    }

    node.sibling.return = node.return;
    node = node.sibling;
  }

  return null;
}

var NoFlags$1 =
/*  */
0; // Represents whether effect should fire.

var HasEffect =
/* */
1; // Represents the phase in which the effect (not the clean-up) fires.

var Layout =
/*    */
2;
var Passive$1 =
/*   */
4;

// This may have been an insertion or a hydration.

var hydrationParentFiber = null;
var nextHydratableInstance = null;
var isHydrating = false;

function enterHydrationState(fiber) {

  var parentInstance = fiber.stateNode.containerInfo;
  nextHydratableInstance = getFirstHydratableChild(parentInstance);
  hydrationParentFiber = fiber;
  isHydrating = true;
  return true;
}

function deleteHydratableInstance(returnFiber, instance) {
  {
    switch (returnFiber.tag) {
      case HostRoot:
        didNotHydrateContainerInstance(returnFiber.stateNode.containerInfo, instance);
        break;

      case HostComponent:
        didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance);
        break;
    }
  }

  var childToDelete = createFiberFromHostInstanceForDeletion();
  childToDelete.stateNode = instance;
  childToDelete.return = returnFiber;
  childToDelete.flags = Deletion; // This might seem like it belongs on progressedFirstDeletion. However,
  // these children are not part of the reconciliation list of children.
  // Even if we abort and rereconcile the children, that will try to hydrate
  // again and the nodes are still in the host tree so these will be
  // recreated.

  if (returnFiber.lastEffect !== null) {
    returnFiber.lastEffect.nextEffect = childToDelete;
    returnFiber.lastEffect = childToDelete;
  } else {
    returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
  }
}

function insertNonHydratedInstance(returnFiber, fiber) {
  fiber.flags = fiber.flags & ~Hydrating | Placement;

  {
    switch (returnFiber.tag) {
      case HostRoot:
        {
          var parentContainer = returnFiber.stateNode.containerInfo;

          switch (fiber.tag) {
            case HostComponent:
              var type = fiber.type;
              var props = fiber.pendingProps;
              didNotFindHydratableContainerInstance(parentContainer, type);
              break;

            case HostText:
              var text = fiber.pendingProps;
              didNotFindHydratableContainerTextInstance(parentContainer, text);
              break;
          }

          break;
        }

      case HostComponent:
        {
          var parentType = returnFiber.type;
          var parentProps = returnFiber.memoizedProps;
          var parentInstance = returnFiber.stateNode;

          switch (fiber.tag) {
            case HostComponent:
              var _type = fiber.type;
              var _props = fiber.pendingProps;
              didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type);
              break;

            case HostText:
              var _text = fiber.pendingProps;
              didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text);
              break;

            case SuspenseComponent:
              didNotFindHydratableSuspenseInstance(parentType, parentProps);
              break;
          }

          break;
        }

      default:
        return;
    }
  }
}

function tryHydrate(fiber, nextInstance) {
  switch (fiber.tag) {
    case HostComponent:
      {
        var type = fiber.type;
        var props = fiber.pendingProps;
        var instance = canHydrateInstance(nextInstance, type);

        if (instance !== null) {
          fiber.stateNode = instance;
          return true;
        }

        return false;
      }

    case HostText:
      {
        var text = fiber.pendingProps;
        var textInstance = canHydrateTextInstance(nextInstance, text);

        if (textInstance !== null) {
          fiber.stateNode = textInstance;
          return true;
        }

        return false;
      }

    case SuspenseComponent:
      {

        return false;
      }

    default:
      return false;
  }
}

function tryToClaimNextHydratableInstance(fiber) {
  if (!isHydrating) {
    return;
  }

  var nextInstance = nextHydratableInstance;

  if (!nextInstance) {
    // Nothing to hydrate. Make it an insertion.
    insertNonHydratedInstance(hydrationParentFiber, fiber);
    isHydrating = false;
    hydrationParentFiber = fiber;
    return;
  }

  var firstAttemptedInstance = nextInstance;

  if (!tryHydrate(fiber, nextInstance)) {
    // If we can't hydrate this instance let's try the next one.
    // We use this as a heuristic. It's based on intuition and not data so it
    // might be flawed or unnecessary.
    nextInstance = getNextHydratableSibling(firstAttemptedInstance);

    if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
      // Nothing to hydrate. Make it an insertion.
      insertNonHydratedInstance(hydrationParentFiber, fiber);
      isHydrating = false;
      hydrationParentFiber = fiber;
      return;
    } // We matched the next one, we'll now assume that the first one was
    // superfluous and we'll delete it. Since we can't eagerly delete it
    // we'll have to schedule a deletion. To do that, this node needs a dummy
    // fiber associated with it.


    deleteHydratableInstance(hydrationParentFiber, firstAttemptedInstance);
  }

  hydrationParentFiber = fiber;
  nextHydratableInstance = getFirstHydratableChild(nextInstance);
}

function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {

  var instance = fiber.stateNode;
  var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber); // TODO: Type this specific to this type of component.

  fiber.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there
  // is a new ref we mark this as an update.

  if (updatePayload !== null) {
    return true;
  }

  return false;
}

function prepareToHydrateHostTextInstance(fiber) {

  var textInstance = fiber.stateNode;
  var textContent = fiber.memoizedProps;
  var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);

  {
    if (shouldUpdate) {
      // We assume that prepareToHydrateHostTextInstance is called in a context where the
      // hydration parent is the parent host component of this host text.
      var returnFiber = hydrationParentFiber;

      if (returnFiber !== null) {
        switch (returnFiber.tag) {
          case HostRoot:
            {
              var parentContainer = returnFiber.stateNode.containerInfo;
              didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent);
              break;
            }

          case HostComponent:
            {
              var parentType = returnFiber.type;
              var parentProps = returnFiber.memoizedProps;
              var parentInstance = returnFiber.stateNode;
              didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent);
              break;
            }
        }
      }
    }
  }

  return shouldUpdate;
}

function skipPastDehydratedSuspenseInstance(fiber) {

  var suspenseState = fiber.memoizedState;
  var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;

  if (!suspenseInstance) {
    {
      throw Error( "Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue." );
    }
  }

  return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);
}

function popToNextHostParent(fiber) {
  var parent = fiber.return;

  while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot && parent.tag !== SuspenseComponent) {
    parent = parent.return;
  }

  hydrationParentFiber = parent;
}

function popHydrationState(fiber) {

  if (fiber !== hydrationParentFiber) {
    // We're deeper than the current hydration context, inside an inserted
    // tree.
    return false;
  }

  if (!isHydrating) {
    // If we're not currently hydrating but we're in a hydration context, then
    // we were an insertion and now need to pop up reenter hydration of our
    // siblings.
    popToNextHostParent(fiber);
    isHydrating = true;
    return false;
  }

  var type = fiber.type; // If we have any remaining hydratable nodes, we need to delete them now.
  // We only do this deeper than head and body since they tend to have random
  // other nodes in them. We also ignore components with pure text content in
  // side of them.
  // TODO: Better heuristic.

  if (fiber.tag !== HostComponent || type !== 'head' && type !== 'body' && !shouldSetTextContent(type, fiber.memoizedProps)) {
    var nextInstance = nextHydratableInstance;

    while (nextInstance) {
      deleteHydratableInstance(fiber, nextInstance);
      nextInstance = getNextHydratableSibling(nextInstance);
    }
  }

  popToNextHostParent(fiber);

  if (fiber.tag === SuspenseComponent) {
    nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);
  } else {
    nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
  }

  return true;
}

function resetHydrationState() {

  hydrationParentFiber = null;
  nextHydratableInstance = null;
  isHydrating = false;
}

function getIsHydrating() {
  return isHydrating;
}

// and should be reset before starting a new render.
// This tracks which mutable sources need to be reset after a render.

var workInProgressSources = [];
var rendererSigil$1;

{
  // Used to detect multiple renderers using the same mutable source.
  rendererSigil$1 = {};
}

function markSourceAsDirty(mutableSource) {
  workInProgressSources.push(mutableSource);
}
function resetWorkInProgressVersions() {
  for (var i = 0; i < workInProgressSources.length; i++) {
    var mutableSource = workInProgressSources[i];

    {
      mutableSource._workInProgressVersionPrimary = null;
    }
  }

  workInProgressSources.length = 0;
}
function getWorkInProgressVersion(mutableSource) {
  {
    return mutableSource._workInProgressVersionPrimary;
  }
}
function setWorkInProgressVersion(mutableSource, version) {
  {
    mutableSource._workInProgressVersionPrimary = version;
  }

  workInProgressSources.push(mutableSource);
}
function warnAboutMultipleRenderersDEV(mutableSource) {
  {
    {
      if (mutableSource._currentPrimaryRenderer == null) {
        mutableSource._currentPrimaryRenderer = rendererSigil$1;
      } else if (mutableSource._currentPrimaryRenderer !== rendererSigil$1) {
        error('Detected multiple renderers concurrently rendering the ' + 'same mutable source. This is currently unsupported.');
      }
    }
  }
} // Eager reads the version of a mutable source and stores it on the root.

var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher,
    ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;
var didWarnAboutMismatchedHooksForComponent;
var didWarnAboutUseOpaqueIdentifier;

{
  didWarnAboutUseOpaqueIdentifier = {};
  didWarnAboutMismatchedHooksForComponent = new Set();
}

// These are set right before calling the component.
var renderLanes = NoLanes; // The work-in-progress fiber. I've named it differently to distinguish it from
// the work-in-progress hook.

var currentlyRenderingFiber$1 = null; // Hooks are stored as a linked list on the fiber's memoizedState field. The
// current hook list is the list that belongs to the current fiber. The
// work-in-progress hook list is a new list that will be added to the
// work-in-progress fiber.

var currentHook = null;
var workInProgressHook = null; // Whether an update was scheduled at any point during the render phase. This
// does not get reset if we do another render pass; only when we're completely
// finished evaluating this component. This is an optimization so we know
// whether we need to clear render phase updates after a throw.

var didScheduleRenderPhaseUpdate = false; // Where an update was scheduled only during the current render pass. This
// gets reset after each attempt.
// TODO: Maybe there's some way to consolidate this with
// `didScheduleRenderPhaseUpdate`. Or with `numberOfReRenders`.

var didScheduleRenderPhaseUpdateDuringThisPass = false;
var RE_RENDER_LIMIT = 25; // In DEV, this is the name of the currently executing primitive hook

var currentHookNameInDev = null; // In DEV, this list ensures that hooks are called in the same order between renders.
// The list stores the order of hooks used during the initial render (mount).
// Subsequent renders (updates) reference this list.

var hookTypesDev = null;
var hookTypesUpdateIndexDev = -1; // In DEV, this tracks whether currently rendering component needs to ignore
// the dependencies for Hooks that need them (e.g. useEffect or useMemo).
// When true, such Hooks will always be "remounted". Only used during hot reload.

var ignorePreviousDependencies = false;

function mountHookTypesDev() {
  {
    var hookName = currentHookNameInDev;

    if (hookTypesDev === null) {
      hookTypesDev = [hookName];
    } else {
      hookTypesDev.push(hookName);
    }
  }
}

function updateHookTypesDev() {
  {
    var hookName = currentHookNameInDev;

    if (hookTypesDev !== null) {
      hookTypesUpdateIndexDev++;

      if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {
        warnOnHookMismatchInDev(hookName);
      }
    }
  }
}

function checkDepsAreArrayDev(deps) {
  {
    if (deps !== undefined && deps !== null && !Array.isArray(deps)) {
      // Verify deps, but only on mount to avoid extra checks.
      // It's unlikely their type would change as usually you define them inline.
      error('%s received a final argument that is not an array (instead, received `%s`). When ' + 'specified, the final argument must be an array.', currentHookNameInDev, typeof deps);
    }
  }
}

function warnOnHookMismatchInDev(currentHookName) {
  {
    var componentName = getComponentName(currentlyRenderingFiber$1.type);

    if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {
      didWarnAboutMismatchedHooksForComponent.add(componentName);

      if (hookTypesDev !== null) {
        var table = '';
        var secondColumnStart = 30;

        for (var i = 0; i <= hookTypesUpdateIndexDev; i++) {
          var oldHookName = hookTypesDev[i];
          var newHookName = i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;
          var row = i + 1 + ". " + oldHookName; // Extra space so second column lines up
          // lol @ IE not supporting String#repeat

          while (row.length < secondColumnStart) {
            row += ' ';
          }

          row += newHookName + '\n';
          table += row;
        }

        error('React has detected a change in the order of Hooks called by %s. ' + 'This will lead to bugs and errors if not fixed. ' + 'For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\n\n' + '   Previous render            Next render\n' + '   ------------------------------------------------------\n' + '%s' + '   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n', componentName, table);
      }
    }
  }
}

function throwInvalidHookError() {
  {
    {
      throw Error( "Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem." );
    }
  }
}

function areHookInputsEqual(nextDeps, prevDeps) {
  {
    if (ignorePreviousDependencies) {
      // Only true when this component is being hot reloaded.
      return false;
    }
  }

  if (prevDeps === null) {
    {
      error('%s received a final argument during this render, but not during ' + 'the previous render. Even though the final argument is optional, ' + 'its type cannot change between renders.', currentHookNameInDev);
    }

    return false;
  }

  {
    // Don't bother comparing lengths in prod because these arrays should be
    // passed inline.
    if (nextDeps.length !== prevDeps.length) {
      error('The final argument passed to %s changed size between renders. The ' + 'order and size of this array must remain constant.\n\n' + 'Previous: %s\n' + 'Incoming: %s', currentHookNameInDev, "[" + prevDeps.join(', ') + "]", "[" + nextDeps.join(', ') + "]");
    }
  }

  for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
    if (objectIs(nextDeps[i], prevDeps[i])) {
      continue;
    }

    return false;
  }

  return true;
}

function renderWithHooks(current, workInProgress, Component, props, secondArg, nextRenderLanes) {
  renderLanes = nextRenderLanes;
  currentlyRenderingFiber$1 = workInProgress;

  {
    hookTypesDev = current !== null ? current._debugHookTypes : null;
    hookTypesUpdateIndexDev = -1; // Used for hot reloading:

    ignorePreviousDependencies = current !== null && current.type !== workInProgress.type;
  }

  workInProgress.memoizedState = null;
  workInProgress.updateQueue = null;
  workInProgress.lanes = NoLanes; // The following should have already been reset
  // currentHook = null;
  // workInProgressHook = null;
  // didScheduleRenderPhaseUpdate = false;
  // TODO Warn if no hooks are used at all during mount, then some are used during update.
  // Currently we will identify the update render as a mount because memoizedState === null.
  // This is tricky because it's valid for certain types of components (e.g. React.lazy)
  // Using memoizedState to differentiate between mount/update only works if at least one stateful hook is used.
  // Non-stateful hooks (e.g. context) don't get added to memoizedState,
  // so memoizedState would be null during updates and mounts.

  {
    if (current !== null && current.memoizedState !== null) {
      ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;
    } else if (hookTypesDev !== null) {
      // This dispatcher handles an edge case where a component is updating,
      // but no stateful hooks have been used.
      // We want to match the production code behavior (which will use HooksDispatcherOnMount),
      // but with the extra DEV validation to ensure hooks ordering hasn't changed.
      // This dispatcher does that.
      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;
    } else {
      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;
    }
  }

  var children = Component(props, secondArg); // Check if there was a render phase update

  if (didScheduleRenderPhaseUpdateDuringThisPass) {
    // Keep rendering in a loop for as long as render phase updates continue to
    // be scheduled. Use a counter to prevent infinite loops.
    var numberOfReRenders = 0;

    do {
      didScheduleRenderPhaseUpdateDuringThisPass = false;

      if (!(numberOfReRenders < RE_RENDER_LIMIT)) {
        {
          throw Error( "Too many re-renders. React limits the number of renders to prevent an infinite loop." );
        }
      }

      numberOfReRenders += 1;

      {
        // Even when hot reloading, allow dependencies to stabilize
        // after first render to prevent infinite render phase updates.
        ignorePreviousDependencies = false;
      } // Start over from the beginning of the list


      currentHook = null;
      workInProgressHook = null;
      workInProgress.updateQueue = null;

      {
        // Also validate hook order for cascading updates.
        hookTypesUpdateIndexDev = -1;
      }

      ReactCurrentDispatcher$1.current =  HooksDispatcherOnRerenderInDEV ;
      children = Component(props, secondArg);
    } while (didScheduleRenderPhaseUpdateDuringThisPass);
  } // We can assume the previous dispatcher is always this one, since we set it
  // at the beginning of the render phase and there's no re-entrancy.


  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;

  {
    workInProgress._debugHookTypes = hookTypesDev;
  } // This check uses currentHook so that it works the same in DEV and prod bundles.
  // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.


  var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;
  renderLanes = NoLanes;
  currentlyRenderingFiber$1 = null;
  currentHook = null;
  workInProgressHook = null;

  {
    currentHookNameInDev = null;
    hookTypesDev = null;
    hookTypesUpdateIndexDev = -1;
  }

  didScheduleRenderPhaseUpdate = false;

  if (!!didRenderTooFewHooks) {
    {
      throw Error( "Rendered fewer hooks than expected. This may be caused by an accidental early return statement." );
    }
  }

  return children;
}
function bailoutHooks(current, workInProgress, lanes) {
  workInProgress.updateQueue = current.updateQueue;
  workInProgress.flags &= ~(Passive | Update);
  current.lanes = removeLanes(current.lanes, lanes);
}
function resetHooksAfterThrow() {
  // We can assume the previous dispatcher is always this one, since we set it
  // at the beginning of the render phase and there's no re-entrancy.
  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;

  if (didScheduleRenderPhaseUpdate) {
    // There were render phase updates. These are only valid for this render
    // phase, which we are now aborting. Remove the updates from the queues so
    // they do not persist to the next render. Do not remove updates from hooks
    // that weren't processed.
    //
    // Only reset the updates from the queue if it has a clone. If it does
    // not have a clone, that means it wasn't processed, and the updates were
    // scheduled before we entered the render phase.
    var hook = currentlyRenderingFiber$1.memoizedState;

    while (hook !== null) {
      var queue = hook.queue;

      if (queue !== null) {
        queue.pending = null;
      }

      hook = hook.next;
    }

    didScheduleRenderPhaseUpdate = false;
  }

  renderLanes = NoLanes;
  currentlyRenderingFiber$1 = null;
  currentHook = null;
  workInProgressHook = null;

  {
    hookTypesDev = null;
    hookTypesUpdateIndexDev = -1;
    currentHookNameInDev = null;
    isUpdatingOpaqueValueInRenderPhase = false;
  }

  didScheduleRenderPhaseUpdateDuringThisPass = false;
}

function mountWorkInProgressHook() {
  var hook = {
    memoizedState: null,
    baseState: null,
    baseQueue: null,
    queue: null,
    next: null
  };

  if (workInProgressHook === null) {
    // This is the first hook in the list
    currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook;
  } else {
    // Append to the end of the list
    workInProgressHook = workInProgressHook.next = hook;
  }

  return workInProgressHook;
}

function updateWorkInProgressHook() {
  // This function is used both for updates and for re-renders triggered by a
  // render phase update. It assumes there is either a current hook we can
  // clone, or a work-in-progress hook from a previous render pass that we can
  // use as a base. When we reach the end of the base list, we must switch to
  // the dispatcher used for mounts.
  var nextCurrentHook;

  if (currentHook === null) {
    var current = currentlyRenderingFiber$1.alternate;

    if (current !== null) {
      nextCurrentHook = current.memoizedState;
    } else {
      nextCurrentHook = null;
    }
  } else {
    nextCurrentHook = currentHook.next;
  }

  var nextWorkInProgressHook;

  if (workInProgressHook === null) {
    nextWorkInProgressHook = currentlyRenderingFiber$1.memoizedState;
  } else {
    nextWorkInProgressHook = workInProgressHook.next;
  }

  if (nextWorkInProgressHook !== null) {
    // There's already a work-in-progress. Reuse it.
    workInProgressHook = nextWorkInProgressHook;
    nextWorkInProgressHook = workInProgressHook.next;
    currentHook = nextCurrentHook;
  } else {
    // Clone from the current hook.
    if (!(nextCurrentHook !== null)) {
      {
        throw Error( "Rendered more hooks than during the previous render." );
      }
    }

    currentHook = nextCurrentHook;
    var newHook = {
      memoizedState: currentHook.memoizedState,
      baseState: currentHook.baseState,
      baseQueue: currentHook.baseQueue,
      queue: currentHook.queue,
      next: null
    };

    if (workInProgressHook === null) {
      // This is the first hook in the list.
      currentlyRenderingFiber$1.memoizedState = workInProgressHook = newHook;
    } else {
      // Append to the end of the list.
      workInProgressHook = workInProgressHook.next = newHook;
    }
  }

  return workInProgressHook;
}

function createFunctionComponentUpdateQueue() {
  return {
    lastEffect: null
  };
}

function basicStateReducer(state, action) {
  // $FlowFixMe: Flow doesn't like mixed types
  return typeof action === 'function' ? action(state) : action;
}

function mountReducer(reducer, initialArg, init) {
  var hook = mountWorkInProgressHook();
  var initialState;

  if (init !== undefined) {
    initialState = init(initialArg);
  } else {
    initialState = initialArg;
  }

  hook.memoizedState = hook.baseState = initialState;
  var queue = hook.queue = {
    pending: null,
    dispatch: null,
    lastRenderedReducer: reducer,
    lastRenderedState: initialState
  };
  var dispatch = queue.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, queue);
  return [hook.memoizedState, dispatch];
}

function updateReducer(reducer, initialArg, init) {
  var hook = updateWorkInProgressHook();
  var queue = hook.queue;

  if (!(queue !== null)) {
    {
      throw Error( "Should have a queue. This is likely a bug in React. Please file an issue." );
    }
  }

  queue.lastRenderedReducer = reducer;
  var current = currentHook; // The last rebase update that is NOT part of the base state.

  var baseQueue = current.baseQueue; // The last pending update that hasn't been processed yet.

  var pendingQueue = queue.pending;

  if (pendingQueue !== null) {
    // We have new updates that haven't been processed yet.
    // We'll add them to the base queue.
    if (baseQueue !== null) {
      // Merge the pending queue and the base queue.
      var baseFirst = baseQueue.next;
      var pendingFirst = pendingQueue.next;
      baseQueue.next = pendingFirst;
      pendingQueue.next = baseFirst;
    }

    {
      if (current.baseQueue !== baseQueue) {
        // Internal invariant that should never happen, but feasibly could in
        // the future if we implement resuming, or some form of that.
        error('Internal error: Expected work-in-progress queue to be a clone. ' + 'This is a bug in React.');
      }
    }

    current.baseQueue = baseQueue = pendingQueue;
    queue.pending = null;
  }

  if (baseQueue !== null) {
    // We have a queue to process.
    var first = baseQueue.next;
    var newState = current.baseState;
    var newBaseState = null;
    var newBaseQueueFirst = null;
    var newBaseQueueLast = null;
    var update = first;

    do {
      var updateLane = update.lane;

      if (!isSubsetOfLanes(renderLanes, updateLane)) {
        // Priority is insufficient. Skip this update. If this is the first
        // skipped update, the previous update/state is the new base
        // update/state.
        var clone = {
          lane: updateLane,
          action: update.action,
          eagerReducer: update.eagerReducer,
          eagerState: update.eagerState,
          next: null
        };

        if (newBaseQueueLast === null) {
          newBaseQueueFirst = newBaseQueueLast = clone;
          newBaseState = newState;
        } else {
          newBaseQueueLast = newBaseQueueLast.next = clone;
        } // Update the remaining priority in the queue.
        // TODO: Don't need to accumulate this. Instead, we can remove
        // renderLanes from the original lanes.


        currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, updateLane);
        markSkippedUpdateLanes(updateLane);
      } else {
        // This update does have sufficient priority.
        if (newBaseQueueLast !== null) {
          var _clone = {
            // This update is going to be committed so we never want uncommit
            // it. Using NoLane works because 0 is a subset of all bitmasks, so
            // this will never be skipped by the check above.
            lane: NoLane,
            action: update.action,
            eagerReducer: update.eagerReducer,
            eagerState: update.eagerState,
            next: null
          };
          newBaseQueueLast = newBaseQueueLast.next = _clone;
        } // Process this update.


        if (update.eagerReducer === reducer) {
          // If this update was processed eagerly, and its reducer matches the
          // current reducer, we can use the eagerly computed state.
          newState = update.eagerState;
        } else {
          var action = update.action;
          newState = reducer(newState, action);
        }
      }

      update = update.next;
    } while (update !== null && update !== first);

    if (newBaseQueueLast === null) {
      newBaseState = newState;
    } else {
      newBaseQueueLast.next = newBaseQueueFirst;
    } // Mark that the fiber performed work, but only if the new state is
    // different from the current state.


    if (!objectIs(newState, hook.memoizedState)) {
      markWorkInProgressReceivedUpdate();
    }

    hook.memoizedState = newState;
    hook.baseState = newBaseState;
    hook.baseQueue = newBaseQueueLast;
    queue.lastRenderedState = newState;
  }

  var dispatch = queue.dispatch;
  return [hook.memoizedState, dispatch];
}

function rerenderReducer(reducer, initialArg, init) {
  var hook = updateWorkInProgressHook();
  var queue = hook.queue;

  if (!(queue !== null)) {
    {
      throw Error( "Should have a queue. This is likely a bug in React. Please file an issue." );
    }
  }

  queue.lastRenderedReducer = reducer; // This is a re-render. Apply the new render phase updates to the previous
  // work-in-progress hook.

  var dispatch = queue.dispatch;
  var lastRenderPhaseUpdate = queue.pending;
  var newState = hook.memoizedState;

  if (lastRenderPhaseUpdate !== null) {
    // The queue doesn't persist past this render pass.
    queue.pending = null;
    var firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;
    var update = firstRenderPhaseUpdate;

    do {
      // Process this render phase update. We don't have to check the
      // priority because it will always be the same as the current
      // render's.
      var action = update.action;
      newState = reducer(newState, action);
      update = update.next;
    } while (update !== firstRenderPhaseUpdate); // Mark that the fiber performed work, but only if the new state is
    // different from the current state.


    if (!objectIs(newState, hook.memoizedState)) {
      markWorkInProgressReceivedUpdate();
    }

    hook.memoizedState = newState; // Don't persist the state accumulated from the render phase updates to
    // the base state unless the queue is empty.
    // TODO: Not sure if this is the desired semantics, but it's what we
    // do for gDSFP. I can't remember why.

    if (hook.baseQueue === null) {
      hook.baseState = newState;
    }

    queue.lastRenderedState = newState;
  }

  return [newState, dispatch];
}

function readFromUnsubcribedMutableSource(root, source, getSnapshot) {
  {
    warnAboutMultipleRenderersDEV(source);
  }

  var getVersion = source._getVersion;
  var version = getVersion(source._source); // Is it safe for this component to read from this source during the current render?

  var isSafeToReadFromSource = false; // Check the version first.
  // If this render has already been started with a specific version,
  // we can use it alone to determine if we can safely read from the source.

  var currentRenderVersion = getWorkInProgressVersion(source);

  if (currentRenderVersion !== null) {
    // It's safe to read if the store hasn't been mutated since the last time
    // we read something.
    isSafeToReadFromSource = currentRenderVersion === version;
  } else {
    // If there's no version, then this is the first time we've read from the
    // source during the current render pass, so we need to do a bit more work.
    // What we need to determine is if there are any hooks that already
    // subscribed to the source, and if so, whether there are any pending
    // mutations that haven't been synchronized yet.
    //
    // If there are no pending mutations, then `root.mutableReadLanes` will be
    // empty, and we know we can safely read.
    //
    // If there *are* pending mutations, we may still be able to safely read
    // if the currently rendering lanes are inclusive of the pending mutation
    // lanes, since that guarantees that the value we're about to read from
    // the source is consistent with the values that we read during the most
    // recent mutation.
    isSafeToReadFromSource = isSubsetOfLanes(renderLanes, root.mutableReadLanes);

    if (isSafeToReadFromSource) {
      // If it's safe to read from this source during the current render,
      // store the version in case other components read from it.
      // A changed version number will let those components know to throw and restart the render.
      setWorkInProgressVersion(source, version);
    }
  }

  if (isSafeToReadFromSource) {
    var snapshot = getSnapshot(source._source);

    {
      if (typeof snapshot === 'function') {
        error('Mutable source should not return a function as the snapshot value. ' + 'Functions may close over mutable values and cause tearing.');
      }
    }

    return snapshot;
  } else {
    // This handles the special case of a mutable source being shared between renderers.
    // In that case, if the source is mutated between the first and second renderer,
    // The second renderer don't know that it needs to reset the WIP version during unwind,
    // (because the hook only marks sources as dirty if it's written to their WIP version).
    // That would cause this tear check to throw again and eventually be visible to the user.
    // We can avoid this infinite loop by explicitly marking the source as dirty.
    //
    // This can lead to tearing in the first renderer when it resumes,
    // but there's nothing we can do about that (short of throwing here and refusing to continue the render).
    markSourceAsDirty(source);

    {
      {
        throw Error( "Cannot read from mutable source during the current render without tearing. This is a bug in React. Please file an issue." );
      }
    }
  }
}

function useMutableSource(hook, source, getSnapshot, subscribe) {
  var root = getWorkInProgressRoot();

  if (!(root !== null)) {
    {
      throw Error( "Expected a work-in-progress root. This is a bug in React. Please file an issue." );
    }
  }

  var getVersion = source._getVersion;
  var version = getVersion(source._source);
  var dispatcher = ReactCurrentDispatcher$1.current; // eslint-disable-next-line prefer-const

  var _dispatcher$useState = dispatcher.useState(function () {
    return readFromUnsubcribedMutableSource(root, source, getSnapshot);
  }),
      currentSnapshot = _dispatcher$useState[0],
      setSnapshot = _dispatcher$useState[1];

  var snapshot = currentSnapshot; // Grab a handle to the state hook as well.
  // We use it to clear the pending update queue if we have a new source.

  var stateHook = workInProgressHook;
  var memoizedState = hook.memoizedState;
  var refs = memoizedState.refs;
  var prevGetSnapshot = refs.getSnapshot;
  var prevSource = memoizedState.source;
  var prevSubscribe = memoizedState.subscribe;
  var fiber = currentlyRenderingFiber$1;
  hook.memoizedState = {
    refs: refs,
    source: source,
    subscribe: subscribe
  }; // Sync the values needed by our subscription handler after each commit.

  dispatcher.useEffect(function () {
    refs.getSnapshot = getSnapshot; // Normally the dispatch function for a state hook never changes,
    // but this hook recreates the queue in certain cases  to avoid updates from stale sources.
    // handleChange() below needs to reference the dispatch function without re-subscribing,
    // so we use a ref to ensure that it always has the latest version.

    refs.setSnapshot = setSnapshot; // Check for a possible change between when we last rendered now.

    var maybeNewVersion = getVersion(source._source);

    if (!objectIs(version, maybeNewVersion)) {
      var maybeNewSnapshot = getSnapshot(source._source);

      {
        if (typeof maybeNewSnapshot === 'function') {
          error('Mutable source should not return a function as the snapshot value. ' + 'Functions may close over mutable values and cause tearing.');
        }
      }

      if (!objectIs(snapshot, maybeNewSnapshot)) {
        setSnapshot(maybeNewSnapshot);
        var lane = requestUpdateLane(fiber);
        markRootMutableRead(root, lane);
      } // If the source mutated between render and now,
      // there may be state updates already scheduled from the old source.
      // Entangle the updates so that they render in the same batch.


      markRootEntangled(root, root.mutableReadLanes);
    }
  }, [getSnapshot, source, subscribe]); // If we got a new source or subscribe function, re-subscribe in a passive effect.

  dispatcher.useEffect(function () {
    var handleChange = function () {
      var latestGetSnapshot = refs.getSnapshot;
      var latestSetSnapshot = refs.setSnapshot;

      try {
        latestSetSnapshot(latestGetSnapshot(source._source)); // Record a pending mutable source update with the same expiration time.

        var lane = requestUpdateLane(fiber);
        markRootMutableRead(root, lane);
      } catch (error) {
        // A selector might throw after a source mutation.
        // e.g. it might try to read from a part of the store that no longer exists.
        // In this case we should still schedule an update with React.
        // Worst case the selector will throw again and then an error boundary will handle it.
        latestSetSnapshot(function () {
          throw error;
        });
      }
    };

    var unsubscribe = subscribe(source._source, handleChange);

    {
      if (typeof unsubscribe !== 'function') {
        error('Mutable source subscribe function must return an unsubscribe function.');
      }
    }

    return unsubscribe;
  }, [source, subscribe]); // If any of the inputs to useMutableSource change, reading is potentially unsafe.
  //
  // If either the source or the subscription have changed we can't can't trust the update queue.
  // Maybe the source changed in a way that the old subscription ignored but the new one depends on.
  //
  // If the getSnapshot function changed, we also shouldn't rely on the update queue.
  // It's possible that the underlying source was mutated between the when the last "change" event fired,
  // and when the current render (with the new getSnapshot function) is processed.
  //
  // In both cases, we need to throw away pending updates (since they are no longer relevant)
  // and treat reading from the source as we do in the mount case.

  if (!objectIs(prevGetSnapshot, getSnapshot) || !objectIs(prevSource, source) || !objectIs(prevSubscribe, subscribe)) {
    // Create a new queue and setState method,
    // So if there are interleaved updates, they get pushed to the older queue.
    // When this becomes current, the previous queue and dispatch method will be discarded,
    // including any interleaving updates that occur.
    var newQueue = {
      pending: null,
      dispatch: null,
      lastRenderedReducer: basicStateReducer,
      lastRenderedState: snapshot
    };
    newQueue.dispatch = setSnapshot = dispatchAction.bind(null, currentlyRenderingFiber$1, newQueue);
    stateHook.queue = newQueue;
    stateHook.baseQueue = null;
    snapshot = readFromUnsubcribedMutableSource(root, source, getSnapshot);
    stateHook.memoizedState = stateHook.baseState = snapshot;
  }

  return snapshot;
}

function mountMutableSource(source, getSnapshot, subscribe) {
  var hook = mountWorkInProgressHook();
  hook.memoizedState = {
    refs: {
      getSnapshot: getSnapshot,
      setSnapshot: null
    },
    source: source,
    subscribe: subscribe
  };
  return useMutableSource(hook, source, getSnapshot, subscribe);
}

function updateMutableSource(source, getSnapshot, subscribe) {
  var hook = updateWorkInProgressHook();
  return useMutableSource(hook, source, getSnapshot, subscribe);
}

function mountState(initialState) {
  var hook = mountWorkInProgressHook();

  if (typeof initialState === 'function') {
    // $FlowFixMe: Flow doesn't like mixed types
    initialState = initialState();
  }

  hook.memoizedState = hook.baseState = initialState;
  var queue = hook.queue = {
    pending: null,
    dispatch: null,
    lastRenderedReducer: basicStateReducer,
    lastRenderedState: initialState
  };
  var dispatch = queue.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, queue);
  return [hook.memoizedState, dispatch];
}

function updateState(initialState) {
  return updateReducer(basicStateReducer);
}

function rerenderState(initialState) {
  return rerenderReducer(basicStateReducer);
}

function pushEffect(tag, create, destroy, deps) {
  var effect = {
    tag: tag,
    create: create,
    destroy: destroy,
    deps: deps,
    // Circular
    next: null
  };
  var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;

  if (componentUpdateQueue === null) {
    componentUpdateQueue = createFunctionComponentUpdateQueue();
    currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;
    componentUpdateQueue.lastEffect = effect.next = effect;
  } else {
    var lastEffect = componentUpdateQueue.lastEffect;

    if (lastEffect === null) {
      componentUpdateQueue.lastEffect = effect.next = effect;
    } else {
      var firstEffect = lastEffect.next;
      lastEffect.next = effect;
      effect.next = firstEffect;
      componentUpdateQueue.lastEffect = effect;
    }
  }

  return effect;
}

function mountRef(initialValue) {
  var hook = mountWorkInProgressHook();
  var ref = {
    current: initialValue
  };

  {
    Object.seal(ref);
  }

  hook.memoizedState = ref;
  return ref;
}

function updateRef(initialValue) {
  var hook = updateWorkInProgressHook();
  return hook.memoizedState;
}

function mountEffectImpl(fiberFlags, hookFlags, create, deps) {
  var hook = mountWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  currentlyRenderingFiber$1.flags |= fiberFlags;
  hook.memoizedState = pushEffect(HasEffect | hookFlags, create, undefined, nextDeps);
}

function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
  var hook = updateWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  var destroy = undefined;

  if (currentHook !== null) {
    var prevEffect = currentHook.memoizedState;
    destroy = prevEffect.destroy;

    if (nextDeps !== null) {
      var prevDeps = prevEffect.deps;

      if (areHookInputsEqual(nextDeps, prevDeps)) {
        pushEffect(hookFlags, create, destroy, nextDeps);
        return;
      }
    }
  }

  currentlyRenderingFiber$1.flags |= fiberFlags;
  hook.memoizedState = pushEffect(HasEffect | hookFlags, create, destroy, nextDeps);
}

function mountEffect(create, deps) {
  {
    // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
    if ('undefined' !== typeof jest) {
      warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber$1);
    }
  }

  return mountEffectImpl(Update | Passive, Passive$1, create, deps);
}

function updateEffect(create, deps) {
  {
    // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
    if ('undefined' !== typeof jest) {
      warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber$1);
    }
  }

  return updateEffectImpl(Update | Passive, Passive$1, create, deps);
}

function mountLayoutEffect(create, deps) {
  return mountEffectImpl(Update, Layout, create, deps);
}

function updateLayoutEffect(create, deps) {
  return updateEffectImpl(Update, Layout, create, deps);
}

function imperativeHandleEffect(create, ref) {
  if (typeof ref === 'function') {
    var refCallback = ref;

    var _inst = create();

    refCallback(_inst);
    return function () {
      refCallback(null);
    };
  } else if (ref !== null && ref !== undefined) {
    var refObject = ref;

    {
      if (!refObject.hasOwnProperty('current')) {
        error('Expected useImperativeHandle() first argument to either be a ' + 'ref callback or React.createRef() object. Instead received: %s.', 'an object with keys {' + Object.keys(refObject).join(', ') + '}');
      }
    }

    var _inst2 = create();

    refObject.current = _inst2;
    return function () {
      refObject.current = null;
    };
  }
}

function mountImperativeHandle(ref, create, deps) {
  {
    if (typeof create !== 'function') {
      error('Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null');
    }
  } // TODO: If deps are provided, should we skip comparing the ref itself?


  var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;
  return mountEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
}

function updateImperativeHandle(ref, create, deps) {
  {
    if (typeof create !== 'function') {
      error('Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null');
    }
  } // TODO: If deps are provided, should we skip comparing the ref itself?


  var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;
  return updateEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
}

function mountDebugValue(value, formatterFn) {// This hook is normally a no-op.
  // The react-debug-hooks package injects its own implementation
  // so that e.g. DevTools can display custom hook values.
}

var updateDebugValue = mountDebugValue;

function mountCallback(callback, deps) {
  var hook = mountWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  hook.memoizedState = [callback, nextDeps];
  return callback;
}

function updateCallback(callback, deps) {
  var hook = updateWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  var prevState = hook.memoizedState;

  if (prevState !== null) {
    if (nextDeps !== null) {
      var prevDeps = prevState[1];

      if (areHookInputsEqual(nextDeps, prevDeps)) {
        return prevState[0];
      }
    }
  }

  hook.memoizedState = [callback, nextDeps];
  return callback;
}

function mountMemo(nextCreate, deps) {
  var hook = mountWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  var nextValue = nextCreate();
  hook.memoizedState = [nextValue, nextDeps];
  return nextValue;
}

function updateMemo(nextCreate, deps) {
  var hook = updateWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  var prevState = hook.memoizedState;

  if (prevState !== null) {
    // Assume these are defined. If they're not, areHookInputsEqual will warn.
    if (nextDeps !== null) {
      var prevDeps = prevState[1];

      if (areHookInputsEqual(nextDeps, prevDeps)) {
        return prevState[0];
      }
    }
  }

  var nextValue = nextCreate();
  hook.memoizedState = [nextValue, nextDeps];
  return nextValue;
}

function mountDeferredValue(value) {
  var _mountState = mountState(value),
      prevValue = _mountState[0],
      setValue = _mountState[1];

  mountEffect(function () {
    var prevTransition = ReactCurrentBatchConfig$1.transition;
    ReactCurrentBatchConfig$1.transition = 1;

    try {
      setValue(value);
    } finally {
      ReactCurrentBatchConfig$1.transition = prevTransition;
    }
  }, [value]);
  return prevValue;
}

function updateDeferredValue(value) {
  var _updateState = updateState(),
      prevValue = _updateState[0],
      setValue = _updateState[1];

  updateEffect(function () {
    var prevTransition = ReactCurrentBatchConfig$1.transition;
    ReactCurrentBatchConfig$1.transition = 1;

    try {
      setValue(value);
    } finally {
      ReactCurrentBatchConfig$1.transition = prevTransition;
    }
  }, [value]);
  return prevValue;
}

function rerenderDeferredValue(value) {
  var _rerenderState = rerenderState(),
      prevValue = _rerenderState[0],
      setValue = _rerenderState[1];

  updateEffect(function () {
    var prevTransition = ReactCurrentBatchConfig$1.transition;
    ReactCurrentBatchConfig$1.transition = 1;

    try {
      setValue(value);
    } finally {
      ReactCurrentBatchConfig$1.transition = prevTransition;
    }
  }, [value]);
  return prevValue;
}

function startTransition(setPending, callback) {
  var priorityLevel = getCurrentPriorityLevel();

  {
    runWithPriority$1(priorityLevel < UserBlockingPriority$2 ? UserBlockingPriority$2 : priorityLevel, function () {
      setPending(true);
    });
    runWithPriority$1(priorityLevel > NormalPriority$1 ? NormalPriority$1 : priorityLevel, function () {
      var prevTransition = ReactCurrentBatchConfig$1.transition;
      ReactCurrentBatchConfig$1.transition = 1;

      try {
        setPending(false);
        callback();
      } finally {
        ReactCurrentBatchConfig$1.transition = prevTransition;
      }
    });
  }
}

function mountTransition() {
  var _mountState2 = mountState(false),
      isPending = _mountState2[0],
      setPending = _mountState2[1]; // The `start` method can be stored on a ref, since `setPending`
  // never changes.


  var start = startTransition.bind(null, setPending);
  mountRef(start);
  return [start, isPending];
}

function updateTransition() {
  var _updateState2 = updateState(),
      isPending = _updateState2[0];

  var startRef = updateRef();
  var start = startRef.current;
  return [start, isPending];
}

function rerenderTransition() {
  var _rerenderState2 = rerenderState(),
      isPending = _rerenderState2[0];

  var startRef = updateRef();
  var start = startRef.current;
  return [start, isPending];
}

var isUpdatingOpaqueValueInRenderPhase = false;
function getIsUpdatingOpaqueValueInRenderPhaseInDEV() {
  {
    return isUpdatingOpaqueValueInRenderPhase;
  }
}

function warnOnOpaqueIdentifierAccessInDEV(fiber) {
  {
    // TODO: Should warn in effects and callbacks, too
    var name = getComponentName(fiber.type) || 'Unknown';

    if (getIsRendering() && !didWarnAboutUseOpaqueIdentifier[name]) {
      error('The object passed back from useOpaqueIdentifier is meant to be ' + 'passed through to attributes only. Do not read the ' + 'value directly.');

      didWarnAboutUseOpaqueIdentifier[name] = true;
    }
  }
}

function mountOpaqueIdentifier() {
  var makeId =  makeClientIdInDEV.bind(null, warnOnOpaqueIdentifierAccessInDEV.bind(null, currentlyRenderingFiber$1)) ;

  if (getIsHydrating()) {
    var didUpgrade = false;
    var fiber = currentlyRenderingFiber$1;

    var readValue = function () {
      if (!didUpgrade) {
        // Only upgrade once. This works even inside the render phase because
        // the update is added to a shared queue, which outlasts the
        // in-progress render.
        didUpgrade = true;

        {
          isUpdatingOpaqueValueInRenderPhase = true;
          setId(makeId());
          isUpdatingOpaqueValueInRenderPhase = false;
          warnOnOpaqueIdentifierAccessInDEV(fiber);
        }
      }

      {
        {
          throw Error( "The object passed back from useOpaqueIdentifier is meant to be passed through to attributes only. Do not read the value directly." );
        }
      }
    };

    var id = makeOpaqueHydratingObject(readValue);
    var setId = mountState(id)[1];

    if ((currentlyRenderingFiber$1.mode & BlockingMode) === NoMode) {
      currentlyRenderingFiber$1.flags |= Update | Passive;
      pushEffect(HasEffect | Passive$1, function () {
        setId(makeId());
      }, undefined, null);
    }

    return id;
  } else {
    var _id = makeId();

    mountState(_id);
    return _id;
  }
}

function updateOpaqueIdentifier() {
  var id = updateState()[0];
  return id;
}

function rerenderOpaqueIdentifier() {
  var id = rerenderState()[0];
  return id;
}

function dispatchAction(fiber, queue, action) {
  {
    if (typeof arguments[3] === 'function') {
      error("State updates from the useState() and useReducer() Hooks don't support the " + 'second callback argument. To execute a side effect after ' + 'rendering, declare it in the component body with useEffect().');
    }
  }

  var eventTime = requestEventTime();
  var lane = requestUpdateLane(fiber);
  var update = {
    lane: lane,
    action: action,
    eagerReducer: null,
    eagerState: null,
    next: null
  }; // Append the update to the end of the list.

  var pending = queue.pending;

  if (pending === null) {
    // This is the first update. Create a circular list.
    update.next = update;
  } else {
    update.next = pending.next;
    pending.next = update;
  }

  queue.pending = update;
  var alternate = fiber.alternate;

  if (fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1) {
    // This is a render phase update. Stash it in a lazily-created map of
    // queue -> linked list of updates. After this render pass, we'll restart
    // and apply the stashed updates on top of the work-in-progress hook.
    didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;
  } else {
    if (fiber.lanes === NoLanes && (alternate === null || alternate.lanes === NoLanes)) {
      // The queue is currently empty, which means we can eagerly compute the
      // next state before entering the render phase. If the new state is the
      // same as the current state, we may be able to bail out entirely.
      var lastRenderedReducer = queue.lastRenderedReducer;

      if (lastRenderedReducer !== null) {
        var prevDispatcher;

        {
          prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
        }

        try {
          var currentState = queue.lastRenderedState;
          var eagerState = lastRenderedReducer(currentState, action); // Stash the eagerly computed state, and the reducer used to compute
          // it, on the update object. If the reducer hasn't changed by the
          // time we enter the render phase, then the eager state can be used
          // without calling the reducer again.

          update.eagerReducer = lastRenderedReducer;
          update.eagerState = eagerState;

          if (objectIs(eagerState, currentState)) {
            // Fast path. We can bail out without scheduling React to re-render.
            // It's still possible that we'll need to rebase this update later,
            // if the component re-renders for a different reason and by that
            // time the reducer has changed.
            return;
          }
        } catch (error) {// Suppress the error. It will throw again in the render phase.
        } finally {
          {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        }
      }
    }

    {
      // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
      if ('undefined' !== typeof jest) {
        warnIfNotScopedWithMatchingAct(fiber);
        warnIfNotCurrentlyActingUpdatesInDev(fiber);
      }
    }

    scheduleUpdateOnFiber(fiber, lane, eventTime);
  }
}

var ContextOnlyDispatcher = {
  readContext: readContext,
  useCallback: throwInvalidHookError,
  useContext: throwInvalidHookError,
  useEffect: throwInvalidHookError,
  useImperativeHandle: throwInvalidHookError,
  useLayoutEffect: throwInvalidHookError,
  useMemo: throwInvalidHookError,
  useReducer: throwInvalidHookError,
  useRef: throwInvalidHookError,
  useState: throwInvalidHookError,
  useDebugValue: throwInvalidHookError,
  useDeferredValue: throwInvalidHookError,
  useTransition: throwInvalidHookError,
  useMutableSource: throwInvalidHookError,
  useOpaqueIdentifier: throwInvalidHookError,
  unstable_isNewReconciler: enableNewReconciler
};
var HooksDispatcherOnMountInDEV = null;
var HooksDispatcherOnMountWithHookTypesInDEV = null;
var HooksDispatcherOnUpdateInDEV = null;
var HooksDispatcherOnRerenderInDEV = null;
var InvalidNestedHooksDispatcherOnMountInDEV = null;
var InvalidNestedHooksDispatcherOnUpdateInDEV = null;
var InvalidNestedHooksDispatcherOnRerenderInDEV = null;

{
  var warnInvalidContextAccess = function () {
    error('Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');
  };

  var warnInvalidHookAccess = function () {
    error('Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. ' + 'You can only call Hooks at the top level of your React function. ' + 'For more information, see ' + 'https://reactjs.org/link/rules-of-hooks');
  };

  HooksDispatcherOnMountInDEV = {
    readContext: function (context, observedBits) {
      return readContext(context, observedBits);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      return mountCallback(callback, deps);
    },
    useContext: function (context, observedBits) {
      currentHookNameInDev = 'useContext';
      mountHookTypesDev();
      return readContext(context, observedBits);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      return mountEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      return mountImperativeHandle(ref, create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      return mountLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      mountHookTypesDev();
      return mountRef(initialValue);
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      mountHookTypesDev();
      return mountDebugValue();
    },
    useDeferredValue: function (value) {
      currentHookNameInDev = 'useDeferredValue';
      mountHookTypesDev();
      return mountDeferredValue(value);
    },
    useTransition: function () {
      currentHookNameInDev = 'useTransition';
      mountHookTypesDev();
      return mountTransition();
    },
    useMutableSource: function (source, getSnapshot, subscribe) {
      currentHookNameInDev = 'useMutableSource';
      mountHookTypesDev();
      return mountMutableSource(source, getSnapshot, subscribe);
    },
    useOpaqueIdentifier: function () {
      currentHookNameInDev = 'useOpaqueIdentifier';
      mountHookTypesDev();
      return mountOpaqueIdentifier();
    },
    unstable_isNewReconciler: enableNewReconciler
  };
  HooksDispatcherOnMountWithHookTypesInDEV = {
    readContext: function (context, observedBits) {
      return readContext(context, observedBits);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      updateHookTypesDev();
      return mountCallback(callback, deps);
    },
    useContext: function (context, observedBits) {
      currentHookNameInDev = 'useContext';
      updateHookTypesDev();
      return readContext(context, observedBits);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      updateHookTypesDev();
      return mountEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      updateHookTypesDev();
      return mountImperativeHandle(ref, create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      updateHookTypesDev();
      return mountLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      updateHookTypesDev();
      return mountRef(initialValue);
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      updateHookTypesDev();
      return mountDebugValue();
    },
    useDeferredValue: function (value) {
      currentHookNameInDev = 'useDeferredValue';
      updateHookTypesDev();
      return mountDeferredValue(value);
    },
    useTransition: function () {
      currentHookNameInDev = 'useTransition';
      updateHookTypesDev();
      return mountTransition();
    },
    useMutableSource: function (source, getSnapshot, subscribe) {
      currentHookNameInDev = 'useMutableSource';
      updateHookTypesDev();
      return mountMutableSource(source, getSnapshot, subscribe);
    },
    useOpaqueIdentifier: function () {
      currentHookNameInDev = 'useOpaqueIdentifier';
      updateHookTypesDev();
      return mountOpaqueIdentifier();
    },
    unstable_isNewReconciler: enableNewReconciler
  };
  HooksDispatcherOnUpdateInDEV = {
    readContext: function (context, observedBits) {
      return readContext(context, observedBits);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      updateHookTypesDev();
      return updateCallback(callback, deps);
    },
    useContext: function (context, observedBits) {
      currentHookNameInDev = 'useContext';
      updateHookTypesDev();
      return readContext(context, observedBits);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      updateHookTypesDev();
      return updateEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      updateHookTypesDev();
      return updateImperativeHandle(ref, create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      updateHookTypesDev();
      return updateLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      updateHookTypesDev();
      return updateRef();
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      updateHookTypesDev();
      return updateDebugValue();
    },
    useDeferredValue: function (value) {
      currentHookNameInDev = 'useDeferredValue';
      updateHookTypesDev();
      return updateDeferredValue(value);
    },
    useTransition: function () {
      currentHookNameInDev = 'useTransition';
      updateHookTypesDev();
      return updateTransition();
    },
    useMutableSource: function (source, getSnapshot, subscribe) {
      currentHookNameInDev = 'useMutableSource';
      updateHookTypesDev();
      return updateMutableSource(source, getSnapshot, subscribe);
    },
    useOpaqueIdentifier: function () {
      currentHookNameInDev = 'useOpaqueIdentifier';
      updateHookTypesDev();
      return updateOpaqueIdentifier();
    },
    unstable_isNewReconciler: enableNewReconciler
  };
  HooksDispatcherOnRerenderInDEV = {
    readContext: function (context, observedBits) {
      return readContext(context, observedBits);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      updateHookTypesDev();
      return updateCallback(callback, deps);
    },
    useContext: function (context, observedBits) {
      currentHookNameInDev = 'useContext';
      updateHookTypesDev();
      return readContext(context, observedBits);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      updateHookTypesDev();
      return updateEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      updateHookTypesDev();
      return updateImperativeHandle(ref, create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      updateHookTypesDev();
      return updateLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;

      try {
        return updateMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;

      try {
        return rerenderReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      updateHookTypesDev();
      return updateRef();
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;

      try {
        return rerenderState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      updateHookTypesDev();
      return updateDebugValue();
    },
    useDeferredValue: function (value) {
      currentHookNameInDev = 'useDeferredValue';
      updateHookTypesDev();
      return rerenderDeferredValue(value);
    },
    useTransition: function () {
      currentHookNameInDev = 'useTransition';
      updateHookTypesDev();
      return rerenderTransition();
    },
    useMutableSource: function (source, getSnapshot, subscribe) {
      currentHookNameInDev = 'useMutableSource';
      updateHookTypesDev();
      return updateMutableSource(source, getSnapshot, subscribe);
    },
    useOpaqueIdentifier: function () {
      currentHookNameInDev = 'useOpaqueIdentifier';
      updateHookTypesDev();
      return rerenderOpaqueIdentifier();
    },
    unstable_isNewReconciler: enableNewReconciler
  };
  InvalidNestedHooksDispatcherOnMountInDEV = {
    readContext: function (context, observedBits) {
      warnInvalidContextAccess();
      return readContext(context, observedBits);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountCallback(callback, deps);
    },
    useContext: function (context, observedBits) {
      currentHookNameInDev = 'useContext';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return readContext(context, observedBits);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountImperativeHandle(ref, create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      warnInvalidHookAccess();
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      warnInvalidHookAccess();
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountRef(initialValue);
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      warnInvalidHookAccess();
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountDebugValue();
    },
    useDeferredValue: function (value) {
      currentHookNameInDev = 'useDeferredValue';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountDeferredValue(value);
    },
    useTransition: function () {
      currentHookNameInDev = 'useTransition';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountTransition();
    },
    useMutableSource: function (source, getSnapshot, subscribe) {
      currentHookNameInDev = 'useMutableSource';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountMutableSource(source, getSnapshot, subscribe);
    },
    useOpaqueIdentifier: function () {
      currentHookNameInDev = 'useOpaqueIdentifier';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountOpaqueIdentifier();
    },
    unstable_isNewReconciler: enableNewReconciler
  };
  InvalidNestedHooksDispatcherOnUpdateInDEV = {
    readContext: function (context, observedBits) {
      warnInvalidContextAccess();
      return readContext(context, observedBits);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateCallback(callback, deps);
    },
    useContext: function (context, observedBits) {
      currentHookNameInDev = 'useContext';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return readContext(context, observedBits);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateImperativeHandle(ref, create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      warnInvalidHookAccess();
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      warnInvalidHookAccess();
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateRef();
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      warnInvalidHookAccess();
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateDebugValue();
    },
    useDeferredValue: function (value) {
      currentHookNameInDev = 'useDeferredValue';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateDeferredValue(value);
    },
    useTransition: function () {
      currentHookNameInDev = 'useTransition';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateTransition();
    },
    useMutableSource: function (source, getSnapshot, subscribe) {
      currentHookNameInDev = 'useMutableSource';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateMutableSource(source, getSnapshot, subscribe);
    },
    useOpaqueIdentifier: function () {
      currentHookNameInDev = 'useOpaqueIdentifier';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateOpaqueIdentifier();
    },
    unstable_isNewReconciler: enableNewReconciler
  };
  InvalidNestedHooksDispatcherOnRerenderInDEV = {
    readContext: function (context, observedBits) {
      warnInvalidContextAccess();
      return readContext(context, observedBits);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateCallback(callback, deps);
    },
    useContext: function (context, observedBits) {
      currentHookNameInDev = 'useContext';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return readContext(context, observedBits);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateImperativeHandle(ref, create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      warnInvalidHookAccess();
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      warnInvalidHookAccess();
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return rerenderReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateRef();
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      warnInvalidHookAccess();
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return rerenderState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateDebugValue();
    },
    useDeferredValue: function (value) {
      currentHookNameInDev = 'useDeferredValue';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return rerenderDeferredValue(value);
    },
    useTransition: function () {
      currentHookNameInDev = 'useTransition';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return rerenderTransition();
    },
    useMutableSource: function (source, getSnapshot, subscribe) {
      currentHookNameInDev = 'useMutableSource';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateMutableSource(source, getSnapshot, subscribe);
    },
    useOpaqueIdentifier: function () {
      currentHookNameInDev = 'useOpaqueIdentifier';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return rerenderOpaqueIdentifier();
    },
    unstable_isNewReconciler: enableNewReconciler
  };
}

var now$1 = Scheduler.unstable_now;
var commitTime = 0;
var profilerStartTime = -1;

function getCommitTime() {
  return commitTime;
}

function recordCommitTime() {

  commitTime = now$1();
}

function startProfilerTimer(fiber) {

  profilerStartTime = now$1();

  if (fiber.actualStartTime < 0) {
    fiber.actualStartTime = now$1();
  }
}

function stopProfilerTimerIfRunning(fiber) {

  profilerStartTime = -1;
}

function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {

  if (profilerStartTime >= 0) {
    var elapsedTime = now$1() - profilerStartTime;
    fiber.actualDuration += elapsedTime;

    if (overrideBaseTime) {
      fiber.selfBaseDuration = elapsedTime;
    }

    profilerStartTime = -1;
  }
}

function transferActualDuration(fiber) {
  // Transfer time spent rendering these children so we don't lose it
  // after we rerender. This is used as a helper in special cases
  // where we should count the work of multiple passes.
  var child = fiber.child;

  while (child) {
    fiber.actualDuration += child.actualDuration;
    child = child.sibling;
  }
}

var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
var didReceiveUpdate = false;
var didWarnAboutBadClass;
var didWarnAboutModulePatternComponent;
var didWarnAboutContextTypeOnFunctionComponent;
var didWarnAboutGetDerivedStateOnFunctionComponent;
var didWarnAboutFunctionRefs;
var didWarnAboutReassigningProps;
var didWarnAboutRevealOrder;
var didWarnAboutTailOptions;

{
  didWarnAboutBadClass = {};
  didWarnAboutModulePatternComponent = {};
  didWarnAboutContextTypeOnFunctionComponent = {};
  didWarnAboutGetDerivedStateOnFunctionComponent = {};
  didWarnAboutFunctionRefs = {};
  didWarnAboutReassigningProps = false;
  didWarnAboutRevealOrder = {};
  didWarnAboutTailOptions = {};
}

function reconcileChildren(current, workInProgress, nextChildren, renderLanes) {
  if (current === null) {
    // If this is a fresh new component that hasn't been rendered yet, we
    // won't update its child set by applying minimal side-effects. Instead,
    // we will add them all to the child before it gets rendered. That means
    // we can optimize this reconciliation pass by not tracking side-effects.
    workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);
  } else {
    // If the current child is the same as the work in progress, it means that
    // we haven't yet started any work on these children. Therefore, we use
    // the clone algorithm to create a copy of all the current children.
    // If we had any progressed work already, that is invalid at this point so
    // let's throw it out.
    workInProgress.child = reconcileChildFibers(workInProgress, current.child, nextChildren, renderLanes);
  }
}

function forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes) {
  // This function is fork of reconcileChildren. It's used in cases where we
  // want to reconcile without matching against the existing set. This has the
  // effect of all current children being unmounted; even if the type and key
  // are the same, the old child is unmounted and a new child is created.
  //
  // To do this, we're going to go through the reconcile algorithm twice. In
  // the first pass, we schedule a deletion for all the current children by
  // passing null.
  workInProgress.child = reconcileChildFibers(workInProgress, current.child, null, renderLanes); // In the second pass, we mount the new children. The trick here is that we
  // pass null in place of where we usually pass the current child set. This has
  // the effect of remounting all children regardless of whether their
  // identities match.

  workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);
}

function updateForwardRef(current, workInProgress, Component, nextProps, renderLanes) {
  // TODO: current can be non-null here even if the component
  // hasn't yet mounted. This happens after the first render suspends.
  // We'll need to figure out if this is fine or can cause issues.
  {
    if (workInProgress.type !== workInProgress.elementType) {
      // Lazy component props can't be validated in createElement
      // because they're only guaranteed to be resolved here.
      var innerPropTypes = Component.propTypes;

      if (innerPropTypes) {
        checkPropTypes(innerPropTypes, nextProps, // Resolved props
        'prop', getComponentName(Component));
      }
    }
  }

  var render = Component.render;
  var ref = workInProgress.ref; // The rest is a fork of updateFunctionComponent

  var nextChildren;
  prepareToReadContext(workInProgress, renderLanes);

  {
    ReactCurrentOwner$1.current = workInProgress;
    setIsRendering(true);
    nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);

    if ( workInProgress.mode & StrictMode) {
      disableLogs();

      try {
        nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);
      } finally {
        reenableLogs();
      }
    }

    setIsRendering(false);
  }

  if (current !== null && !didReceiveUpdate) {
    bailoutHooks(current, workInProgress, renderLanes);
    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
  } // React DevTools reads this flag.


  workInProgress.flags |= PerformedWork;
  reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  return workInProgress.child;
}

function updateMemoComponent(current, workInProgress, Component, nextProps, updateLanes, renderLanes) {
  if (current === null) {
    var type = Component.type;

    if (isSimpleFunctionComponent(type) && Component.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.
    Component.defaultProps === undefined) {
      var resolvedType = type;

      {
        resolvedType = resolveFunctionForHotReloading(type);
      } // If this is a plain function component without default props,
      // and with only the default shallow comparison, we upgrade it
      // to a SimpleMemoComponent to allow fast path updates.


      workInProgress.tag = SimpleMemoComponent;
      workInProgress.type = resolvedType;

      {
        validateFunctionComponentInDev(workInProgress, type);
      }

      return updateSimpleMemoComponent(current, workInProgress, resolvedType, nextProps, updateLanes, renderLanes);
    }

    {
      var innerPropTypes = type.propTypes;

      if (innerPropTypes) {
        // Inner memo component props aren't currently validated in createElement.
        // We could move it there, but we'd still need this for lazy code path.
        checkPropTypes(innerPropTypes, nextProps, // Resolved props
        'prop', getComponentName(type));
      }
    }

    var child = createFiberFromTypeAndProps(Component.type, null, nextProps, workInProgress, workInProgress.mode, renderLanes);
    child.ref = workInProgress.ref;
    child.return = workInProgress;
    workInProgress.child = child;
    return child;
  }

  {
    var _type = Component.type;
    var _innerPropTypes = _type.propTypes;

    if (_innerPropTypes) {
      // Inner memo component props aren't currently validated in createElement.
      // We could move it there, but we'd still need this for lazy code path.
      checkPropTypes(_innerPropTypes, nextProps, // Resolved props
      'prop', getComponentName(_type));
    }
  }

  var currentChild = current.child; // This is always exactly one child

  if (!includesSomeLane(updateLanes, renderLanes)) {
    // This will be the props with resolved defaultProps,
    // unlike current.memoizedProps which will be the unresolved ones.
    var prevProps = currentChild.memoizedProps; // Default to shallow comparison

    var compare = Component.compare;
    compare = compare !== null ? compare : shallowEqual;

    if (compare(prevProps, nextProps) && current.ref === workInProgress.ref) {
      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
    }
  } // React DevTools reads this flag.


  workInProgress.flags |= PerformedWork;
  var newChild = createWorkInProgress(currentChild, nextProps);
  newChild.ref = workInProgress.ref;
  newChild.return = workInProgress;
  workInProgress.child = newChild;
  return newChild;
}

function updateSimpleMemoComponent(current, workInProgress, Component, nextProps, updateLanes, renderLanes) {
  // TODO: current can be non-null here even if the component
  // hasn't yet mounted. This happens when the inner render suspends.
  // We'll need to figure out if this is fine or can cause issues.
  {
    if (workInProgress.type !== workInProgress.elementType) {
      // Lazy component props can't be validated in createElement
      // because they're only guaranteed to be resolved here.
      var outerMemoType = workInProgress.elementType;

      if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {
        // We warn when you define propTypes on lazy()
        // so let's just skip over it to find memo() outer wrapper.
        // Inner props for memo are validated later.
        var lazyComponent = outerMemoType;
        var payload = lazyComponent._payload;
        var init = lazyComponent._init;

        try {
          outerMemoType = init(payload);
        } catch (x) {
          outerMemoType = null;
        } // Inner propTypes will be validated in the function component path.


        var outerPropTypes = outerMemoType && outerMemoType.propTypes;

        if (outerPropTypes) {
          checkPropTypes(outerPropTypes, nextProps, // Resolved (SimpleMemoComponent has no defaultProps)
          'prop', getComponentName(outerMemoType));
        }
      }
    }
  }

  if (current !== null) {
    var prevProps = current.memoizedProps;

    if (shallowEqual(prevProps, nextProps) && current.ref === workInProgress.ref && ( // Prevent bailout if the implementation changed due to hot reload.
     workInProgress.type === current.type )) {
      didReceiveUpdate = false;

      if (!includesSomeLane(renderLanes, updateLanes)) {
        // The pending lanes were cleared at the beginning of beginWork. We're
        // about to bail out, but there might be other lanes that weren't
        // included in the current render. Usually, the priority level of the
        // remaining updates is accumlated during the evaluation of the
        // component (i.e. when processing the update queue). But since since
        // we're bailing out early *without* evaluating the component, we need
        // to account for it here, too. Reset to the value of the current fiber.
        // NOTE: This only applies to SimpleMemoComponent, not MemoComponent,
        // because a MemoComponent fiber does not have hooks or an update queue;
        // rather, it wraps around an inner component, which may or may not
        // contains hooks.
        // TODO: Move the reset at in beginWork out of the common path so that
        // this is no longer necessary.
        workInProgress.lanes = current.lanes;
        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
      } else if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {
        // This is a special case that only exists for legacy mode.
        // See https://github.com/facebook/react/pull/19216.
        didReceiveUpdate = true;
      }
    }
  }

  return updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes);
}

function updateOffscreenComponent(current, workInProgress, renderLanes) {
  var nextProps = workInProgress.pendingProps;
  var nextChildren = nextProps.children;
  var prevState = current !== null ? current.memoizedState : null;

  if (nextProps.mode === 'hidden' || nextProps.mode === 'unstable-defer-without-hiding') {
    if ((workInProgress.mode & ConcurrentMode) === NoMode) {
      // In legacy sync mode, don't defer the subtree. Render it now.
      // TODO: Figure out what we should do in Blocking mode.
      var nextState = {
        baseLanes: NoLanes
      };
      workInProgress.memoizedState = nextState;
      pushRenderLanes(workInProgress, renderLanes);
    } else if (!includesSomeLane(renderLanes, OffscreenLane)) {
      var nextBaseLanes;

      if (prevState !== null) {
        var prevBaseLanes = prevState.baseLanes;
        nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes);
      } else {
        nextBaseLanes = renderLanes;
      } // Schedule this fiber to re-render at offscreen priority. Then bailout.


      {
        markSpawnedWork(OffscreenLane);
      }

      workInProgress.lanes = workInProgress.childLanes = laneToLanes(OffscreenLane);
      var _nextState = {
        baseLanes: nextBaseLanes
      };
      workInProgress.memoizedState = _nextState; // We're about to bail out, but we need to push this to the stack anyway
      // to avoid a push/pop misalignment.

      pushRenderLanes(workInProgress, nextBaseLanes);
      return null;
    } else {
      // Rendering at offscreen, so we can clear the base lanes.
      var _nextState2 = {
        baseLanes: NoLanes
      };
      workInProgress.memoizedState = _nextState2; // Push the lanes that were skipped when we bailed out.

      var subtreeRenderLanes = prevState !== null ? prevState.baseLanes : renderLanes;
      pushRenderLanes(workInProgress, subtreeRenderLanes);
    }
  } else {
    var _subtreeRenderLanes;

    if (prevState !== null) {
      _subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes); // Since we're not hidden anymore, reset the state

      workInProgress.memoizedState = null;
    } else {
      // We weren't previously hidden, and we still aren't, so there's nothing
      // special to do. Need to push to the stack regardless, though, to avoid
      // a push/pop misalignment.
      _subtreeRenderLanes = renderLanes;
    }

    pushRenderLanes(workInProgress, _subtreeRenderLanes);
  }

  reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  return workInProgress.child;
} // Note: These happen to have identical begin phases, for now. We shouldn't hold
// ourselves to this constraint, though. If the behavior diverges, we should
// fork the function.


var updateLegacyHiddenComponent = updateOffscreenComponent;

function updateFragment(current, workInProgress, renderLanes) {
  var nextChildren = workInProgress.pendingProps;
  reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  return workInProgress.child;
}

function updateMode(current, workInProgress, renderLanes) {
  var nextChildren = workInProgress.pendingProps.children;
  reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  return workInProgress.child;
}

function updateProfiler(current, workInProgress, renderLanes) {
  {
    workInProgress.flags |= Update; // Reset effect durations for the next eventual effect phase.
    // These are reset during render to allow the DevTools commit hook a chance to read them,

    var stateNode = workInProgress.stateNode;
    stateNode.effectDuration = 0;
    stateNode.passiveEffectDuration = 0;
  }

  var nextProps = workInProgress.pendingProps;
  var nextChildren = nextProps.children;
  reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  return workInProgress.child;
}

function markRef(current, workInProgress) {
  var ref = workInProgress.ref;

  if (current === null && ref !== null || current !== null && current.ref !== ref) {
    // Schedule a Ref effect
    workInProgress.flags |= Ref;
  }
}

function updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes) {
  {
    if (workInProgress.type !== workInProgress.elementType) {
      // Lazy component props can't be validated in createElement
      // because they're only guaranteed to be resolved here.
      var innerPropTypes = Component.propTypes;

      if (innerPropTypes) {
        checkPropTypes(innerPropTypes, nextProps, // Resolved props
        'prop', getComponentName(Component));
      }
    }
  }

  var context;

  {
    var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);
    context = getMaskedContext(workInProgress, unmaskedContext);
  }

  var nextChildren;
  prepareToReadContext(workInProgress, renderLanes);

  {
    ReactCurrentOwner$1.current = workInProgress;
    setIsRendering(true);
    nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);

    if ( workInProgress.mode & StrictMode) {
      disableLogs();

      try {
        nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);
      } finally {
        reenableLogs();
      }
    }

    setIsRendering(false);
  }

  if (current !== null && !didReceiveUpdate) {
    bailoutHooks(current, workInProgress, renderLanes);
    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
  } // React DevTools reads this flag.


  workInProgress.flags |= PerformedWork;
  reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  return workInProgress.child;
}

function updateClassComponent(current, workInProgress, Component, nextProps, renderLanes) {
  {
    if (workInProgress.type !== workInProgress.elementType) {
      // Lazy component props can't be validated in createElement
      // because they're only guaranteed to be resolved here.
      var innerPropTypes = Component.propTypes;

      if (innerPropTypes) {
        checkPropTypes(innerPropTypes, nextProps, // Resolved props
        'prop', getComponentName(Component));
      }
    }
  } // Push context providers early to prevent context stack mismatches.
  // During mounting we don't know the child context yet as the instance doesn't exist.
  // We will invalidate the child context in finishClassComponent() right after rendering.


  var hasContext;

  if (isContextProvider(Component)) {
    hasContext = true;
    pushContextProvider(workInProgress);
  } else {
    hasContext = false;
  }

  prepareToReadContext(workInProgress, renderLanes);
  var instance = workInProgress.stateNode;
  var shouldUpdate;

  if (instance === null) {
    if (current !== null) {
      // A class component without an instance only mounts if it suspended
      // inside a non-concurrent tree, in an inconsistent state. We want to
      // treat it like a new mount, even though an empty version of it already
      // committed. Disconnect the alternate pointers.
      current.alternate = null;
      workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect

      workInProgress.flags |= Placement;
    } // In the initial pass we might need to construct the instance.


    constructClassInstance(workInProgress, Component, nextProps);
    mountClassInstance(workInProgress, Component, nextProps, renderLanes);
    shouldUpdate = true;
  } else if (current === null) {
    // In a resume, we'll already have an instance we can reuse.
    shouldUpdate = resumeMountClassInstance(workInProgress, Component, nextProps, renderLanes);
  } else {
    shouldUpdate = updateClassInstance(current, workInProgress, Component, nextProps, renderLanes);
  }

  var nextUnitOfWork = finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes);

  {
    var inst = workInProgress.stateNode;

    if (shouldUpdate && inst.props !== nextProps) {
      if (!didWarnAboutReassigningProps) {
        error('It looks like %s is reassigning its own `this.props` while rendering. ' + 'This is not supported and can lead to confusing bugs.', getComponentName(workInProgress.type) || 'a component');
      }

      didWarnAboutReassigningProps = true;
    }
  }

  return nextUnitOfWork;
}

function finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes) {
  // Refs should update even if shouldComponentUpdate returns false
  markRef(current, workInProgress);
  var didCaptureError = (workInProgress.flags & DidCapture) !== NoFlags;

  if (!shouldUpdate && !didCaptureError) {
    // Context providers should defer to sCU for rendering
    if (hasContext) {
      invalidateContextProvider(workInProgress, Component, false);
    }

    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
  }

  var instance = workInProgress.stateNode; // Rerender

  ReactCurrentOwner$1.current = workInProgress;
  var nextChildren;

  if (didCaptureError && typeof Component.getDerivedStateFromError !== 'function') {
    // If we captured an error, but getDerivedStateFromError is not defined,
    // unmount all the children. componentDidCatch will schedule an update to
    // re-render a fallback. This is temporary until we migrate everyone to
    // the new API.
    // TODO: Warn in a future release.
    nextChildren = null;

    {
      stopProfilerTimerIfRunning();
    }
  } else {
    {
      setIsRendering(true);
      nextChildren = instance.render();

      if ( workInProgress.mode & StrictMode) {
        disableLogs();

        try {
          instance.render();
        } finally {
          reenableLogs();
        }
      }

      setIsRendering(false);
    }
  } // React DevTools reads this flag.


  workInProgress.flags |= PerformedWork;

  if (current !== null && didCaptureError) {
    // If we're recovering from an error, reconcile without reusing any of
    // the existing children. Conceptually, the normal children and the children
    // that are shown on error are two different sets, so we shouldn't reuse
    // normal children even if their identities match.
    forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes);
  } else {
    reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  } // Memoize state using the values we just used to render.
  // TODO: Restructure so we never read values from the instance.


  workInProgress.memoizedState = instance.state; // The context might have changed so we need to recalculate it.

  if (hasContext) {
    invalidateContextProvider(workInProgress, Component, true);
  }

  return workInProgress.child;
}

function pushHostRootContext(workInProgress) {
  var root = workInProgress.stateNode;

  if (root.pendingContext) {
    pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);
  } else if (root.context) {
    // Should always be set
    pushTopLevelContextObject(workInProgress, root.context, false);
  }

  pushHostContainer(workInProgress, root.containerInfo);
}

function updateHostRoot(current, workInProgress, renderLanes) {
  pushHostRootContext(workInProgress);
  var updateQueue = workInProgress.updateQueue;

  if (!(current !== null && updateQueue !== null)) {
    {
      throw Error( "If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue." );
    }
  }

  var nextProps = workInProgress.pendingProps;
  var prevState = workInProgress.memoizedState;
  var prevChildren = prevState !== null ? prevState.element : null;
  cloneUpdateQueue(current, workInProgress);
  processUpdateQueue(workInProgress, nextProps, null, renderLanes);
  var nextState = workInProgress.memoizedState; // Caution: React DevTools currently depends on this property
  // being called "element".

  var nextChildren = nextState.element;

  if (nextChildren === prevChildren) {
    resetHydrationState();
    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
  }

  var root = workInProgress.stateNode;

  if (root.hydrate && enterHydrationState(workInProgress)) {
    // If we don't have any current children this might be the first pass.
    // We always try to hydrate. If this isn't a hydration pass there won't
    // be any children to hydrate which is effectively the same thing as
    // not hydrating.
    {
      var mutableSourceEagerHydrationData = root.mutableSourceEagerHydrationData;

      if (mutableSourceEagerHydrationData != null) {
        for (var i = 0; i < mutableSourceEagerHydrationData.length; i += 2) {
          var mutableSource = mutableSourceEagerHydrationData[i];
          var version = mutableSourceEagerHydrationData[i + 1];
          setWorkInProgressVersion(mutableSource, version);
        }
      }
    }

    var child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);
    workInProgress.child = child;
    var node = child;

    while (node) {
      // Mark each child as hydrating. This is a fast path to know whether this
      // tree is part of a hydrating tree. This is used to determine if a child
      // node has fully mounted yet, and for scheduling event replaying.
      // Conceptually this is similar to Placement in that a new subtree is
      // inserted into the React tree here. It just happens to not need DOM
      // mutations because it already exists.
      node.flags = node.flags & ~Placement | Hydrating;
      node = node.sibling;
    }
  } else {
    // Otherwise reset hydration state in case we aborted and resumed another
    // root.
    reconcileChildren(current, workInProgress, nextChildren, renderLanes);
    resetHydrationState();
  }

  return workInProgress.child;
}

function updateHostComponent(current, workInProgress, renderLanes) {
  pushHostContext(workInProgress);

  if (current === null) {
    tryToClaimNextHydratableInstance(workInProgress);
  }

  var type = workInProgress.type;
  var nextProps = workInProgress.pendingProps;
  var prevProps = current !== null ? current.memoizedProps : null;
  var nextChildren = nextProps.children;
  var isDirectTextChild = shouldSetTextContent(type, nextProps);

  if (isDirectTextChild) {
    // We special case a direct text child of a host node. This is a common
    // case. We won't handle it as a reified child. We will instead handle
    // this in the host environment that also has access to this prop. That
    // avoids allocating another HostText fiber and traversing it.
    nextChildren = null;
  } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {
    // If we're switching from a direct text child to a normal child, or to
    // empty, we need to schedule the text content to be reset.
    workInProgress.flags |= ContentReset;
  }

  markRef(current, workInProgress);
  reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  return workInProgress.child;
}

function updateHostText(current, workInProgress) {
  if (current === null) {
    tryToClaimNextHydratableInstance(workInProgress);
  } // Nothing to do here. This is terminal. We'll do the completion step
  // immediately after.


  return null;
}

function mountLazyComponent(_current, workInProgress, elementType, updateLanes, renderLanes) {
  if (_current !== null) {
    // A lazy component only mounts if it suspended inside a non-
    // concurrent tree, in an inconsistent state. We want to treat it like
    // a new mount, even though an empty version of it already committed.
    // Disconnect the alternate pointers.
    _current.alternate = null;
    workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect

    workInProgress.flags |= Placement;
  }

  var props = workInProgress.pendingProps;
  var lazyComponent = elementType;
  var payload = lazyComponent._payload;
  var init = lazyComponent._init;
  var Component = init(payload); // Store the unwrapped component in the type.

  workInProgress.type = Component;
  var resolvedTag = workInProgress.tag = resolveLazyComponentTag(Component);
  var resolvedProps = resolveDefaultProps(Component, props);
  var child;

  switch (resolvedTag) {
    case FunctionComponent:
      {
        {
          validateFunctionComponentInDev(workInProgress, Component);
          workInProgress.type = Component = resolveFunctionForHotReloading(Component);
        }

        child = updateFunctionComponent(null, workInProgress, Component, resolvedProps, renderLanes);
        return child;
      }

    case ClassComponent:
      {
        {
          workInProgress.type = Component = resolveClassForHotReloading(Component);
        }

        child = updateClassComponent(null, workInProgress, Component, resolvedProps, renderLanes);
        return child;
      }

    case ForwardRef:
      {
        {
          workInProgress.type = Component = resolveForwardRefForHotReloading(Component);
        }

        child = updateForwardRef(null, workInProgress, Component, resolvedProps, renderLanes);
        return child;
      }

    case MemoComponent:
      {
        {
          if (workInProgress.type !== workInProgress.elementType) {
            var outerPropTypes = Component.propTypes;

            if (outerPropTypes) {
              checkPropTypes(outerPropTypes, resolvedProps, // Resolved for outer only
              'prop', getComponentName(Component));
            }
          }
        }

        child = updateMemoComponent(null, workInProgress, Component, resolveDefaultProps(Component.type, resolvedProps), // The inner type can have defaults too
        updateLanes, renderLanes);
        return child;
      }
  }

  var hint = '';

  {
    if (Component !== null && typeof Component === 'object' && Component.$$typeof === REACT_LAZY_TYPE) {
      hint = ' Did you wrap a component in React.lazy() more than once?';
    }
  } // This message intentionally doesn't mention ForwardRef or MemoComponent
  // because the fact that it's a separate type of work is an
  // implementation detail.


  {
    {
      throw Error( "Element type is invalid. Received a promise that resolves to: " + Component + ". Lazy element type must resolve to a class or function." + hint );
    }
  }
}

function mountIncompleteClassComponent(_current, workInProgress, Component, nextProps, renderLanes) {
  if (_current !== null) {
    // An incomplete component only mounts if it suspended inside a non-
    // concurrent tree, in an inconsistent state. We want to treat it like
    // a new mount, even though an empty version of it already committed.
    // Disconnect the alternate pointers.
    _current.alternate = null;
    workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect

    workInProgress.flags |= Placement;
  } // Promote the fiber to a class and try rendering again.


  workInProgress.tag = ClassComponent; // The rest of this function is a fork of `updateClassComponent`
  // Push context providers early to prevent context stack mismatches.
  // During mounting we don't know the child context yet as the instance doesn't exist.
  // We will invalidate the child context in finishClassComponent() right after rendering.

  var hasContext;

  if (isContextProvider(Component)) {
    hasContext = true;
    pushContextProvider(workInProgress);
  } else {
    hasContext = false;
  }

  prepareToReadContext(workInProgress, renderLanes);
  constructClassInstance(workInProgress, Component, nextProps);
  mountClassInstance(workInProgress, Component, nextProps, renderLanes);
  return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);
}

function mountIndeterminateComponent(_current, workInProgress, Component, renderLanes) {
  if (_current !== null) {
    // An indeterminate component only mounts if it suspended inside a non-
    // concurrent tree, in an inconsistent state. We want to treat it like
    // a new mount, even though an empty version of it already committed.
    // Disconnect the alternate pointers.
    _current.alternate = null;
    workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect

    workInProgress.flags |= Placement;
  }

  var props = workInProgress.pendingProps;
  var context;

  {
    var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);
    context = getMaskedContext(workInProgress, unmaskedContext);
  }

  prepareToReadContext(workInProgress, renderLanes);
  var value;

  {
    if (Component.prototype && typeof Component.prototype.render === 'function') {
      var componentName = getComponentName(Component) || 'Unknown';

      if (!didWarnAboutBadClass[componentName]) {
        error("The <%s /> component appears to have a render method, but doesn't extend React.Component. " + 'This is likely to cause errors. Change %s to extend React.Component instead.', componentName, componentName);

        didWarnAboutBadClass[componentName] = true;
      }
    }

    if (workInProgress.mode & StrictMode) {
      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);
    }

    setIsRendering(true);
    ReactCurrentOwner$1.current = workInProgress;
    value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);
    setIsRendering(false);
  } // React DevTools reads this flag.


  workInProgress.flags |= PerformedWork;

  {
    // Support for module components is deprecated and is removed behind a flag.
    // Whether or not it would crash later, we want to show a good message in DEV first.
    if (typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {
      var _componentName = getComponentName(Component) || 'Unknown';

      if (!didWarnAboutModulePatternComponent[_componentName]) {
        error('The <%s /> component appears to be a function component that returns a class instance. ' + 'Change %s to a class that extends React.Component instead. ' + "If you can't use a class try assigning the prototype on the function as a workaround. " + "`%s.prototype = React.Component.prototype`. Don't use an arrow function since it " + 'cannot be called with `new` by React.', _componentName, _componentName, _componentName);

        didWarnAboutModulePatternComponent[_componentName] = true;
      }
    }
  }

  if ( // Run these checks in production only if the flag is off.
  // Eventually we'll delete this branch altogether.
   typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {
    {
      var _componentName2 = getComponentName(Component) || 'Unknown';

      if (!didWarnAboutModulePatternComponent[_componentName2]) {
        error('The <%s /> component appears to be a function component that returns a class instance. ' + 'Change %s to a class that extends React.Component instead. ' + "If you can't use a class try assigning the prototype on the function as a workaround. " + "`%s.prototype = React.Component.prototype`. Don't use an arrow function since it " + 'cannot be called with `new` by React.', _componentName2, _componentName2, _componentName2);

        didWarnAboutModulePatternComponent[_componentName2] = true;
      }
    } // Proceed under the assumption that this is a class instance


    workInProgress.tag = ClassComponent; // Throw out any hooks that were used.

    workInProgress.memoizedState = null;
    workInProgress.updateQueue = null; // Push context providers early to prevent context stack mismatches.
    // During mounting we don't know the child context yet as the instance doesn't exist.
    // We will invalidate the child context in finishClassComponent() right after rendering.

    var hasContext = false;

    if (isContextProvider(Component)) {
      hasContext = true;
      pushContextProvider(workInProgress);
    } else {
      hasContext = false;
    }

    workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;
    initializeUpdateQueue(workInProgress);
    var getDerivedStateFromProps = Component.getDerivedStateFromProps;

    if (typeof getDerivedStateFromProps === 'function') {
      applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, props);
    }

    adoptClassInstance(workInProgress, value);
    mountClassInstance(workInProgress, Component, props, renderLanes);
    return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);
  } else {
    // Proceed under the assumption that this is a function component
    workInProgress.tag = FunctionComponent;

    {

      if ( workInProgress.mode & StrictMode) {
        disableLogs();

        try {
          value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);
        } finally {
          reenableLogs();
        }
      }
    }

    reconcileChildren(null, workInProgress, value, renderLanes);

    {
      validateFunctionComponentInDev(workInProgress, Component);
    }

    return workInProgress.child;
  }
}

function validateFunctionComponentInDev(workInProgress, Component) {
  {
    if (Component) {
      if (Component.childContextTypes) {
        error('%s(...): childContextTypes cannot be defined on a function component.', Component.displayName || Component.name || 'Component');
      }
    }

    if (workInProgress.ref !== null) {
      var info = '';
      var ownerName = getCurrentFiberOwnerNameInDevOrNull();

      if (ownerName) {
        info += '\n\nCheck the render method of `' + ownerName + '`.';
      }

      var warningKey = ownerName || workInProgress._debugID || '';
      var debugSource = workInProgress._debugSource;

      if (debugSource) {
        warningKey = debugSource.fileName + ':' + debugSource.lineNumber;
      }

      if (!didWarnAboutFunctionRefs[warningKey]) {
        didWarnAboutFunctionRefs[warningKey] = true;

        error('Function components cannot be given refs. ' + 'Attempts to access this ref will fail. ' + 'Did you mean to use React.forwardRef()?%s', info);
      }
    }

    if (typeof Component.getDerivedStateFromProps === 'function') {
      var _componentName3 = getComponentName(Component) || 'Unknown';

      if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {
        error('%s: Function components do not support getDerivedStateFromProps.', _componentName3);

        didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;
      }
    }

    if (typeof Component.contextType === 'object' && Component.contextType !== null) {
      var _componentName4 = getComponentName(Component) || 'Unknown';

      if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {
        error('%s: Function components do not support contextType.', _componentName4);

        didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;
      }
    }
  }
}

var SUSPENDED_MARKER = {
  dehydrated: null,
  retryLane: NoLane
};

function mountSuspenseOffscreenState(renderLanes) {
  return {
    baseLanes: renderLanes
  };
}

function updateSuspenseOffscreenState(prevOffscreenState, renderLanes) {
  return {
    baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes)
  };
} // TODO: Probably should inline this back


function shouldRemainOnFallback(suspenseContext, current, workInProgress, renderLanes) {
  // If we're already showing a fallback, there are cases where we need to
  // remain on that fallback regardless of whether the content has resolved.
  // For example, SuspenseList coordinates when nested content appears.
  if (current !== null) {
    var suspenseState = current.memoizedState;

    if (suspenseState === null) {
      // Currently showing content. Don't hide it, even if ForceSuspenseFallack
      // is true. More precise name might be "ForceRemainSuspenseFallback".
      // Note: This is a factoring smell. Can't remain on a fallback if there's
      // no fallback to remain on.
      return false;
    }
  } // Not currently showing content. Consult the Suspense context.


  return hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
}

function getRemainingWorkInPrimaryTree(current, renderLanes) {
  // TODO: Should not remove render lanes that were pinged during this render
  return removeLanes(current.childLanes, renderLanes);
}

function updateSuspenseComponent(current, workInProgress, renderLanes) {
  var nextProps = workInProgress.pendingProps; // This is used by DevTools to force a boundary to suspend.

  {
    if (shouldSuspend(workInProgress)) {
      workInProgress.flags |= DidCapture;
    }
  }

  var suspenseContext = suspenseStackCursor.current;
  var showFallback = false;
  var didSuspend = (workInProgress.flags & DidCapture) !== NoFlags;

  if (didSuspend || shouldRemainOnFallback(suspenseContext, current)) {
    // Something in this boundary's subtree already suspended. Switch to
    // rendering the fallback children.
    showFallback = true;
    workInProgress.flags &= ~DidCapture;
  } else {
    // Attempting the main content
    if (current === null || current.memoizedState !== null) {
      // This is a new mount or this boundary is already showing a fallback state.
      // Mark this subtree context as having at least one invisible parent that could
      // handle the fallback state.
      // Boundaries without fallbacks or should be avoided are not considered since
      // they cannot handle preferred fallback states.
      if (nextProps.fallback !== undefined && nextProps.unstable_avoidThisFallback !== true) {
        suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext);
      }
    }
  }

  suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
  pushSuspenseContext(workInProgress, suspenseContext); // OK, the next part is confusing. We're about to reconcile the Suspense
  // boundary's children. This involves some custom reconcilation logic. Two
  // main reasons this is so complicated.
  //
  // First, Legacy Mode has different semantics for backwards compatibility. The
  // primary tree will commit in an inconsistent state, so when we do the
  // second pass to render the fallback, we do some exceedingly, uh, clever
  // hacks to make that not totally break. Like transferring effects and
  // deletions from hidden tree. In Concurrent Mode, it's much simpler,
  // because we bailout on the primary tree completely and leave it in its old
  // state, no effects. Same as what we do for Offscreen (except that
  // Offscreen doesn't have the first render pass).
  //
  // Second is hydration. During hydration, the Suspense fiber has a slightly
  // different layout, where the child points to a dehydrated fragment, which
  // contains the DOM rendered by the server.
  //
  // Third, even if you set all that aside, Suspense is like error boundaries in
  // that we first we try to render one tree, and if that fails, we render again
  // and switch to a different tree. Like a try/catch block. So we have to track
  // which branch we're currently rendering. Ideally we would model this using
  // a stack.

  if (current === null) {
    // Initial mount
    // If we're currently hydrating, try to hydrate this boundary.
    // But only if this has a fallback.
    if (nextProps.fallback !== undefined) {
      tryToClaimNextHydratableInstance(workInProgress); // This could've been a dehydrated suspense component.
    }

    var nextPrimaryChildren = nextProps.children;
    var nextFallbackChildren = nextProps.fallback;

    if (showFallback) {
      var fallbackFragment = mountSuspenseFallbackChildren(workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);
      var primaryChildFragment = workInProgress.child;
      primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes);
      workInProgress.memoizedState = SUSPENDED_MARKER;
      return fallbackFragment;
    } else if (typeof nextProps.unstable_expectedLoadTime === 'number') {
      // This is a CPU-bound tree. Skip this tree and show a placeholder to
      // unblock the surrounding content. Then immediately retry after the
      // initial commit.
      var _fallbackFragment = mountSuspenseFallbackChildren(workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);

      var _primaryChildFragment = workInProgress.child;
      _primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes);
      workInProgress.memoizedState = SUSPENDED_MARKER; // Since nothing actually suspended, there will nothing to ping this to
      // get it started back up to attempt the next item. While in terms of
      // priority this work has the same priority as this current render, it's
      // not part of the same transition once the transition has committed. If
      // it's sync, we still want to yield so that it can be painted.
      // Conceptually, this is really the same as pinging. We can use any
      // RetryLane even if it's the one currently rendering since we're leaving
      // it behind on this node.

      workInProgress.lanes = SomeRetryLane;

      {
        markSpawnedWork(SomeRetryLane);
      }

      return _fallbackFragment;
    } else {
      return mountSuspensePrimaryChildren(workInProgress, nextPrimaryChildren, renderLanes);
    }
  } else {
    // This is an update.
    // If the current fiber has a SuspenseState, that means it's already showing
    // a fallback.
    var prevState = current.memoizedState;

    if (prevState !== null) {

      if (showFallback) {
        var _nextFallbackChildren2 = nextProps.fallback;
        var _nextPrimaryChildren2 = nextProps.children;

        var _fallbackChildFragment = updateSuspenseFallbackChildren(current, workInProgress, _nextPrimaryChildren2, _nextFallbackChildren2, renderLanes);

        var _primaryChildFragment3 = workInProgress.child;
        var prevOffscreenState = current.child.memoizedState;
        _primaryChildFragment3.memoizedState = prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes) : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);
        _primaryChildFragment3.childLanes = getRemainingWorkInPrimaryTree(current, renderLanes);
        workInProgress.memoizedState = SUSPENDED_MARKER;
        return _fallbackChildFragment;
      } else {
        var _nextPrimaryChildren3 = nextProps.children;

        var _primaryChildFragment4 = updateSuspensePrimaryChildren(current, workInProgress, _nextPrimaryChildren3, renderLanes);

        workInProgress.memoizedState = null;
        return _primaryChildFragment4;
      }
    } else {
      // The current tree is not already showing a fallback.
      if (showFallback) {
        // Timed out.
        var _nextFallbackChildren3 = nextProps.fallback;
        var _nextPrimaryChildren4 = nextProps.children;

        var _fallbackChildFragment2 = updateSuspenseFallbackChildren(current, workInProgress, _nextPrimaryChildren4, _nextFallbackChildren3, renderLanes);

        var _primaryChildFragment5 = workInProgress.child;
        var _prevOffscreenState = current.child.memoizedState;
        _primaryChildFragment5.memoizedState = _prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes) : updateSuspenseOffscreenState(_prevOffscreenState, renderLanes);
        _primaryChildFragment5.childLanes = getRemainingWorkInPrimaryTree(current, renderLanes); // Skip the primary children, and continue working on the
        // fallback children.

        workInProgress.memoizedState = SUSPENDED_MARKER;
        return _fallbackChildFragment2;
      } else {
        // Still haven't timed out. Continue rendering the children, like we
        // normally do.
        var _nextPrimaryChildren5 = nextProps.children;

        var _primaryChildFragment6 = updateSuspensePrimaryChildren(current, workInProgress, _nextPrimaryChildren5, renderLanes);

        workInProgress.memoizedState = null;
        return _primaryChildFragment6;
      }
    }
  }
}

function mountSuspensePrimaryChildren(workInProgress, primaryChildren, renderLanes) {
  var mode = workInProgress.mode;
  var primaryChildProps = {
    mode: 'visible',
    children: primaryChildren
  };
  var primaryChildFragment = createFiberFromOffscreen(primaryChildProps, mode, renderLanes, null);
  primaryChildFragment.return = workInProgress;
  workInProgress.child = primaryChildFragment;
  return primaryChildFragment;
}

function mountSuspenseFallbackChildren(workInProgress, primaryChildren, fallbackChildren, renderLanes) {
  var mode = workInProgress.mode;
  var progressedPrimaryFragment = workInProgress.child;
  var primaryChildProps = {
    mode: 'hidden',
    children: primaryChildren
  };
  var primaryChildFragment;
  var fallbackChildFragment;

  if ((mode & BlockingMode) === NoMode && progressedPrimaryFragment !== null) {
    // In legacy mode, we commit the primary tree as if it successfully
    // completed, even though it's in an inconsistent state.
    primaryChildFragment = progressedPrimaryFragment;
    primaryChildFragment.childLanes = NoLanes;
    primaryChildFragment.pendingProps = primaryChildProps;

    if ( workInProgress.mode & ProfileMode) {
      // Reset the durations from the first pass so they aren't included in the
      // final amounts. This seems counterintuitive, since we're intentionally
      // not measuring part of the render phase, but this makes it match what we
      // do in Concurrent Mode.
      primaryChildFragment.actualDuration = 0;
      primaryChildFragment.actualStartTime = -1;
      primaryChildFragment.selfBaseDuration = 0;
      primaryChildFragment.treeBaseDuration = 0;
    }

    fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);
  } else {
    primaryChildFragment = createFiberFromOffscreen(primaryChildProps, mode, NoLanes, null);
    fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);
  }

  primaryChildFragment.return = workInProgress;
  fallbackChildFragment.return = workInProgress;
  primaryChildFragment.sibling = fallbackChildFragment;
  workInProgress.child = primaryChildFragment;
  return fallbackChildFragment;
}

function createWorkInProgressOffscreenFiber(current, offscreenProps) {
  // The props argument to `createWorkInProgress` is `any` typed, so we use this
  // wrapper function to constrain it.
  return createWorkInProgress(current, offscreenProps);
}

function updateSuspensePrimaryChildren(current, workInProgress, primaryChildren, renderLanes) {
  var currentPrimaryChildFragment = current.child;
  var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
  var primaryChildFragment = createWorkInProgressOffscreenFiber(currentPrimaryChildFragment, {
    mode: 'visible',
    children: primaryChildren
  });

  if ((workInProgress.mode & BlockingMode) === NoMode) {
    primaryChildFragment.lanes = renderLanes;
  }

  primaryChildFragment.return = workInProgress;
  primaryChildFragment.sibling = null;

  if (currentFallbackChildFragment !== null) {
    // Delete the fallback child fragment
    currentFallbackChildFragment.nextEffect = null;
    currentFallbackChildFragment.flags = Deletion;
    workInProgress.firstEffect = workInProgress.lastEffect = currentFallbackChildFragment;
  }

  workInProgress.child = primaryChildFragment;
  return primaryChildFragment;
}

function updateSuspenseFallbackChildren(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {
  var mode = workInProgress.mode;
  var currentPrimaryChildFragment = current.child;
  var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
  var primaryChildProps = {
    mode: 'hidden',
    children: primaryChildren
  };
  var primaryChildFragment;

  if ( // In legacy mode, we commit the primary tree as if it successfully
  // completed, even though it's in an inconsistent state.
  (mode & BlockingMode) === NoMode && // Make sure we're on the second pass, i.e. the primary child fragment was
  // already cloned. In legacy mode, the only case where this isn't true is
  // when DevTools forces us to display a fallback; we skip the first render
  // pass entirely and go straight to rendering the fallback. (In Concurrent
  // Mode, SuspenseList can also trigger this scenario, but this is a legacy-
  // only codepath.)
  workInProgress.child !== currentPrimaryChildFragment) {
    var progressedPrimaryFragment = workInProgress.child;
    primaryChildFragment = progressedPrimaryFragment;
    primaryChildFragment.childLanes = NoLanes;
    primaryChildFragment.pendingProps = primaryChildProps;

    if ( workInProgress.mode & ProfileMode) {
      // Reset the durations from the first pass so they aren't included in the
      // final amounts. This seems counterintuitive, since we're intentionally
      // not measuring part of the render phase, but this makes it match what we
      // do in Concurrent Mode.
      primaryChildFragment.actualDuration = 0;
      primaryChildFragment.actualStartTime = -1;
      primaryChildFragment.selfBaseDuration = currentPrimaryChildFragment.selfBaseDuration;
      primaryChildFragment.treeBaseDuration = currentPrimaryChildFragment.treeBaseDuration;
    } // The fallback fiber was added as a deletion effect during the first pass.
    // However, since we're going to remain on the fallback, we no longer want
    // to delete it. So we need to remove it from the list. Deletions are stored
    // on the same list as effects. We want to keep the effects from the primary
    // tree. So we copy the primary child fragment's effect list, which does not
    // include the fallback deletion effect.


    var progressedLastEffect = primaryChildFragment.lastEffect;

    if (progressedLastEffect !== null) {
      workInProgress.firstEffect = primaryChildFragment.firstEffect;
      workInProgress.lastEffect = progressedLastEffect;
      progressedLastEffect.nextEffect = null;
    } else {
      // TODO: Reset this somewhere else? Lol legacy mode is so weird.
      workInProgress.firstEffect = workInProgress.lastEffect = null;
    }
  } else {
    primaryChildFragment = createWorkInProgressOffscreenFiber(currentPrimaryChildFragment, primaryChildProps);
  }

  var fallbackChildFragment;

  if (currentFallbackChildFragment !== null) {
    fallbackChildFragment = createWorkInProgress(currentFallbackChildFragment, fallbackChildren);
  } else {
    fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null); // Needs a placement effect because the parent (the Suspense boundary) already
    // mounted but this is a new fiber.

    fallbackChildFragment.flags |= Placement;
  }

  fallbackChildFragment.return = workInProgress;
  primaryChildFragment.return = workInProgress;
  primaryChildFragment.sibling = fallbackChildFragment;
  workInProgress.child = primaryChildFragment;
  return fallbackChildFragment;
}

function scheduleWorkOnFiber(fiber, renderLanes) {
  fiber.lanes = mergeLanes(fiber.lanes, renderLanes);
  var alternate = fiber.alternate;

  if (alternate !== null) {
    alternate.lanes = mergeLanes(alternate.lanes, renderLanes);
  }

  scheduleWorkOnParentPath(fiber.return, renderLanes);
}

function propagateSuspenseContextChange(workInProgress, firstChild, renderLanes) {
  // Mark any Suspense boundaries with fallbacks as having work to do.
  // If they were previously forced into fallbacks, they may now be able
  // to unblock.
  var node = firstChild;

  while (node !== null) {
    if (node.tag === SuspenseComponent) {
      var state = node.memoizedState;

      if (state !== null) {
        scheduleWorkOnFiber(node, renderLanes);
      }
    } else if (node.tag === SuspenseListComponent) {
      // If the tail is hidden there might not be an Suspense boundaries
      // to schedule work on. In this case we have to schedule it on the
      // list itself.
      // We don't have to traverse to the children of the list since
      // the list will propagate the change when it rerenders.
      scheduleWorkOnFiber(node, renderLanes);
    } else if (node.child !== null) {
      node.child.return = node;
      node = node.child;
      continue;
    }

    if (node === workInProgress) {
      return;
    }

    while (node.sibling === null) {
      if (node.return === null || node.return === workInProgress) {
        return;
      }

      node = node.return;
    }

    node.sibling.return = node.return;
    node = node.sibling;
  }
}

function findLastContentRow(firstChild) {
  // This is going to find the last row among these children that is already
  // showing content on the screen, as opposed to being in fallback state or
  // new. If a row has multiple Suspense boundaries, any of them being in the
  // fallback state, counts as the whole row being in a fallback state.
  // Note that the "rows" will be workInProgress, but any nested children
  // will still be current since we haven't rendered them yet. The mounted
  // order may not be the same as the new order. We use the new order.
  var row = firstChild;
  var lastContentRow = null;

  while (row !== null) {
    var currentRow = row.alternate; // New rows can't be content rows.

    if (currentRow !== null && findFirstSuspended(currentRow) === null) {
      lastContentRow = row;
    }

    row = row.sibling;
  }

  return lastContentRow;
}

function validateRevealOrder(revealOrder) {
  {
    if (revealOrder !== undefined && revealOrder !== 'forwards' && revealOrder !== 'backwards' && revealOrder !== 'together' && !didWarnAboutRevealOrder[revealOrder]) {
      didWarnAboutRevealOrder[revealOrder] = true;

      if (typeof revealOrder === 'string') {
        switch (revealOrder.toLowerCase()) {
          case 'together':
          case 'forwards':
          case 'backwards':
            {
              error('"%s" is not a valid value for revealOrder on <SuspenseList />. ' + 'Use lowercase "%s" instead.', revealOrder, revealOrder.toLowerCase());

              break;
            }

          case 'forward':
          case 'backward':
            {
              error('"%s" is not a valid value for revealOrder on <SuspenseList />. ' + 'React uses the -s suffix in the spelling. Use "%ss" instead.', revealOrder, revealOrder.toLowerCase());

              break;
            }

          default:
            error('"%s" is not a supported revealOrder on <SuspenseList />. ' + 'Did you mean "together", "forwards" or "backwards"?', revealOrder);

            break;
        }
      } else {
        error('%s is not a supported value for revealOrder on <SuspenseList />. ' + 'Did you mean "together", "forwards" or "backwards"?', revealOrder);
      }
    }
  }
}

function validateTailOptions(tailMode, revealOrder) {
  {
    if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {
      if (tailMode !== 'collapsed' && tailMode !== 'hidden') {
        didWarnAboutTailOptions[tailMode] = true;

        error('"%s" is not a supported value for tail on <SuspenseList />. ' + 'Did you mean "collapsed" or "hidden"?', tailMode);
      } else if (revealOrder !== 'forwards' && revealOrder !== 'backwards') {
        didWarnAboutTailOptions[tailMode] = true;

        error('<SuspenseList tail="%s" /> is only valid if revealOrder is ' + '"forwards" or "backwards". ' + 'Did you mean to specify revealOrder="forwards"?', tailMode);
      }
    }
  }
}

function validateSuspenseListNestedChild(childSlot, index) {
  {
    var isArray = Array.isArray(childSlot);
    var isIterable = !isArray && typeof getIteratorFn(childSlot) === 'function';

    if (isArray || isIterable) {
      var type = isArray ? 'array' : 'iterable';

      error('A nested %s was passed to row #%s in <SuspenseList />. Wrap it in ' + 'an additional SuspenseList to configure its revealOrder: ' + '<SuspenseList revealOrder=...> ... ' + '<SuspenseList revealOrder=...>{%s}</SuspenseList> ... ' + '</SuspenseList>', type, index, type);

      return false;
    }
  }

  return true;
}

function validateSuspenseListChildren(children, revealOrder) {
  {
    if ((revealOrder === 'forwards' || revealOrder === 'backwards') && children !== undefined && children !== null && children !== false) {
      if (Array.isArray(children)) {
        for (var i = 0; i < children.length; i++) {
          if (!validateSuspenseListNestedChild(children[i], i)) {
            return;
          }
        }
      } else {
        var iteratorFn = getIteratorFn(children);

        if (typeof iteratorFn === 'function') {
          var childrenIterator = iteratorFn.call(children);

          if (childrenIterator) {
            var step = childrenIterator.next();
            var _i = 0;

            for (; !step.done; step = childrenIterator.next()) {
              if (!validateSuspenseListNestedChild(step.value, _i)) {
                return;
              }

              _i++;
            }
          }
        } else {
          error('A single row was passed to a <SuspenseList revealOrder="%s" />. ' + 'This is not useful since it needs multiple rows. ' + 'Did you mean to pass multiple children or an array?', revealOrder);
        }
      }
    }
  }
}

function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode, lastEffectBeforeRendering) {
  var renderState = workInProgress.memoizedState;

  if (renderState === null) {
    workInProgress.memoizedState = {
      isBackwards: isBackwards,
      rendering: null,
      renderingStartTime: 0,
      last: lastContentRow,
      tail: tail,
      tailMode: tailMode,
      lastEffect: lastEffectBeforeRendering
    };
  } else {
    // We can reuse the existing object from previous renders.
    renderState.isBackwards = isBackwards;
    renderState.rendering = null;
    renderState.renderingStartTime = 0;
    renderState.last = lastContentRow;
    renderState.tail = tail;
    renderState.tailMode = tailMode;
    renderState.lastEffect = lastEffectBeforeRendering;
  }
} // This can end up rendering this component multiple passes.
// The first pass splits the children fibers into two sets. A head and tail.
// We first render the head. If anything is in fallback state, we do another
// pass through beginWork to rerender all children (including the tail) with
// the force suspend context. If the first render didn't have anything in
// in fallback state. Then we render each row in the tail one-by-one.
// That happens in the completeWork phase without going back to beginWork.


function updateSuspenseListComponent(current, workInProgress, renderLanes) {
  var nextProps = workInProgress.pendingProps;
  var revealOrder = nextProps.revealOrder;
  var tailMode = nextProps.tail;
  var newChildren = nextProps.children;
  validateRevealOrder(revealOrder);
  validateTailOptions(tailMode, revealOrder);
  validateSuspenseListChildren(newChildren, revealOrder);
  reconcileChildren(current, workInProgress, newChildren, renderLanes);
  var suspenseContext = suspenseStackCursor.current;
  var shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);

  if (shouldForceFallback) {
    suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
    workInProgress.flags |= DidCapture;
  } else {
    var didSuspendBefore = current !== null && (current.flags & DidCapture) !== NoFlags;

    if (didSuspendBefore) {
      // If we previously forced a fallback, we need to schedule work
      // on any nested boundaries to let them know to try to render
      // again. This is the same as context updating.
      propagateSuspenseContextChange(workInProgress, workInProgress.child, renderLanes);
    }

    suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
  }

  pushSuspenseContext(workInProgress, suspenseContext);

  if ((workInProgress.mode & BlockingMode) === NoMode) {
    // In legacy mode, SuspenseList doesn't work so we just
    // use make it a noop by treating it as the default revealOrder.
    workInProgress.memoizedState = null;
  } else {
    switch (revealOrder) {
      case 'forwards':
        {
          var lastContentRow = findLastContentRow(workInProgress.child);
          var tail;

          if (lastContentRow === null) {
            // The whole list is part of the tail.
            // TODO: We could fast path by just rendering the tail now.
            tail = workInProgress.child;
            workInProgress.child = null;
          } else {
            // Disconnect the tail rows after the content row.
            // We're going to render them separately later.
            tail = lastContentRow.sibling;
            lastContentRow.sibling = null;
          }

          initSuspenseListRenderState(workInProgress, false, // isBackwards
          tail, lastContentRow, tailMode, workInProgress.lastEffect);
          break;
        }

      case 'backwards':
        {
          // We're going to find the first row that has existing content.
          // At the same time we're going to reverse the list of everything
          // we pass in the meantime. That's going to be our tail in reverse
          // order.
          var _tail = null;
          var row = workInProgress.child;
          workInProgress.child = null;

          while (row !== null) {
            var currentRow = row.alternate; // New rows can't be content rows.

            if (currentRow !== null && findFirstSuspended(currentRow) === null) {
              // This is the beginning of the main content.
              workInProgress.child = row;
              break;
            }

            var nextRow = row.sibling;
            row.sibling = _tail;
            _tail = row;
            row = nextRow;
          } // TODO: If workInProgress.child is null, we can continue on the tail immediately.


          initSuspenseListRenderState(workInProgress, true, // isBackwards
          _tail, null, // last
          tailMode, workInProgress.lastEffect);
          break;
        }

      case 'together':
        {
          initSuspenseListRenderState(workInProgress, false, // isBackwards
          null, // tail
          null, // last
          undefined, workInProgress.lastEffect);
          break;
        }

      default:
        {
          // The default reveal order is the same as not having
          // a boundary.
          workInProgress.memoizedState = null;
        }
    }
  }

  return workInProgress.child;
}

function updatePortalComponent(current, workInProgress, renderLanes) {
  pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
  var nextChildren = workInProgress.pendingProps;

  if (current === null) {
    // Portals are special because we don't append the children during mount
    // but at commit. Therefore we need to track insertions which the normal
    // flow doesn't do during mount. This doesn't happen at the root because
    // the root always starts with a "current" with a null child.
    // TODO: Consider unifying this with how the root works.
    workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);
  } else {
    reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  }

  return workInProgress.child;
}

var hasWarnedAboutUsingNoValuePropOnContextProvider = false;

function updateContextProvider(current, workInProgress, renderLanes) {
  var providerType = workInProgress.type;
  var context = providerType._context;
  var newProps = workInProgress.pendingProps;
  var oldProps = workInProgress.memoizedProps;
  var newValue = newProps.value;

  {
    if (!('value' in newProps)) {
      if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {
        hasWarnedAboutUsingNoValuePropOnContextProvider = true;

        error('The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?');
      }
    }

    var providerPropTypes = workInProgress.type.propTypes;

    if (providerPropTypes) {
      checkPropTypes(providerPropTypes, newProps, 'prop', 'Context.Provider');
    }
  }

  pushProvider(workInProgress, newValue);

  if (oldProps !== null) {
    var oldValue = oldProps.value;
    var changedBits = calculateChangedBits(context, newValue, oldValue);

    if (changedBits === 0) {
      // No change. Bailout early if children are the same.
      if (oldProps.children === newProps.children && !hasContextChanged()) {
        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
      }
    } else {
      // The context value changed. Search for matching consumers and schedule
      // them to update.
      propagateContextChange(workInProgress, context, changedBits, renderLanes);
    }
  }

  var newChildren = newProps.children;
  reconcileChildren(current, workInProgress, newChildren, renderLanes);
  return workInProgress.child;
}

var hasWarnedAboutUsingContextAsConsumer = false;

function updateContextConsumer(current, workInProgress, renderLanes) {
  var context = workInProgress.type; // The logic below for Context differs depending on PROD or DEV mode. In
  // DEV mode, we create a separate object for Context.Consumer that acts
  // like a proxy to Context. This proxy object adds unnecessary code in PROD
  // so we use the old behaviour (Context.Consumer references Context) to
  // reduce size and overhead. The separate object references context via
  // a property called "_context", which also gives us the ability to check
  // in DEV mode if this property exists or not and warn if it does not.

  {
    if (context._context === undefined) {
      // This may be because it's a Context (rather than a Consumer).
      // Or it may be because it's older React where they're the same thing.
      // We only want to warn if we're sure it's a new React.
      if (context !== context.Consumer) {
        if (!hasWarnedAboutUsingContextAsConsumer) {
          hasWarnedAboutUsingContextAsConsumer = true;

          error('Rendering <Context> directly is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
        }
      }
    } else {
      context = context._context;
    }
  }

  var newProps = workInProgress.pendingProps;
  var render = newProps.children;

  {
    if (typeof render !== 'function') {
      error('A context consumer was rendered with multiple children, or a child ' + "that isn't a function. A context consumer expects a single child " + 'that is a function. If you did pass a function, make sure there ' + 'is no trailing or leading whitespace around it.');
    }
  }

  prepareToReadContext(workInProgress, renderLanes);
  var newValue = readContext(context, newProps.unstable_observedBits);
  var newChildren;

  {
    ReactCurrentOwner$1.current = workInProgress;
    setIsRendering(true);
    newChildren = render(newValue);
    setIsRendering(false);
  } // React DevTools reads this flag.


  workInProgress.flags |= PerformedWork;
  reconcileChildren(current, workInProgress, newChildren, renderLanes);
  return workInProgress.child;
}

function markWorkInProgressReceivedUpdate() {
  didReceiveUpdate = true;
}

function bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {
  if (current !== null) {
    // Reuse previous dependencies
    workInProgress.dependencies = current.dependencies;
  }

  {
    // Don't update "base" render times for bailouts.
    stopProfilerTimerIfRunning();
  }

  markSkippedUpdateLanes(workInProgress.lanes); // Check if the children have any pending work.

  if (!includesSomeLane(renderLanes, workInProgress.childLanes)) {
    // The children don't have any work either. We can skip them.
    // TODO: Once we add back resuming, we should check if the children are
    // a work-in-progress set. If so, we need to transfer their effects.
    return null;
  } else {
    // This fiber doesn't have work, but its subtree does. Clone the child
    // fibers and continue.
    cloneChildFibers(current, workInProgress);
    return workInProgress.child;
  }
}

function remountFiber(current, oldWorkInProgress, newWorkInProgress) {
  {
    var returnFiber = oldWorkInProgress.return;

    if (returnFiber === null) {
      throw new Error('Cannot swap the root fiber.');
    } // Disconnect from the old current.
    // It will get deleted.


    current.alternate = null;
    oldWorkInProgress.alternate = null; // Connect to the new tree.

    newWorkInProgress.index = oldWorkInProgress.index;
    newWorkInProgress.sibling = oldWorkInProgress.sibling;
    newWorkInProgress.return = oldWorkInProgress.return;
    newWorkInProgress.ref = oldWorkInProgress.ref; // Replace the child/sibling pointers above it.

    if (oldWorkInProgress === returnFiber.child) {
      returnFiber.child = newWorkInProgress;
    } else {
      var prevSibling = returnFiber.child;

      if (prevSibling === null) {
        throw new Error('Expected parent to have a child.');
      }

      while (prevSibling.sibling !== oldWorkInProgress) {
        prevSibling = prevSibling.sibling;

        if (prevSibling === null) {
          throw new Error('Expected to find the previous sibling.');
        }
      }

      prevSibling.sibling = newWorkInProgress;
    } // Delete the old fiber and place the new one.
    // Since the old fiber is disconnected, we have to schedule it manually.


    var last = returnFiber.lastEffect;

    if (last !== null) {
      last.nextEffect = current;
      returnFiber.lastEffect = current;
    } else {
      returnFiber.firstEffect = returnFiber.lastEffect = current;
    }

    current.nextEffect = null;
    current.flags = Deletion;
    newWorkInProgress.flags |= Placement; // Restart work from the new fiber.

    return newWorkInProgress;
  }
}

function beginWork(current, workInProgress, renderLanes) {
  var updateLanes = workInProgress.lanes;

  {
    if (workInProgress._debugNeedsRemount && current !== null) {
      // This will restart the begin phase with a new fiber.
      return remountFiber(current, workInProgress, createFiberFromTypeAndProps(workInProgress.type, workInProgress.key, workInProgress.pendingProps, workInProgress._debugOwner || null, workInProgress.mode, workInProgress.lanes));
    }
  }

  if (current !== null) {
    var oldProps = current.memoizedProps;
    var newProps = workInProgress.pendingProps;

    if (oldProps !== newProps || hasContextChanged() || ( // Force a re-render if the implementation changed due to hot reload:
     workInProgress.type !== current.type )) {
      // If props or context changed, mark the fiber as having performed work.
      // This may be unset if the props are determined to be equal later (memo).
      didReceiveUpdate = true;
    } else if (!includesSomeLane(renderLanes, updateLanes)) {
      didReceiveUpdate = false; // This fiber does not have any pending work. Bailout without entering
      // the begin phase. There's still some bookkeeping we that needs to be done
      // in this optimized path, mostly pushing stuff onto the stack.

      switch (workInProgress.tag) {
        case HostRoot:
          pushHostRootContext(workInProgress);
          resetHydrationState();
          break;

        case HostComponent:
          pushHostContext(workInProgress);
          break;

        case ClassComponent:
          {
            var Component = workInProgress.type;

            if (isContextProvider(Component)) {
              pushContextProvider(workInProgress);
            }

            break;
          }

        case HostPortal:
          pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
          break;

        case ContextProvider:
          {
            var newValue = workInProgress.memoizedProps.value;
            pushProvider(workInProgress, newValue);
            break;
          }

        case Profiler:
          {
            // Profiler should only call onRender when one of its descendants actually rendered.
            var hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);

            if (hasChildWork) {
              workInProgress.flags |= Update;
            } // Reset effect durations for the next eventual effect phase.
            // These are reset during render to allow the DevTools commit hook a chance to read them,


            var stateNode = workInProgress.stateNode;
            stateNode.effectDuration = 0;
            stateNode.passiveEffectDuration = 0;
          }

          break;

        case SuspenseComponent:
          {
            var state = workInProgress.memoizedState;

            if (state !== null) {
              // whether to retry the primary children, or to skip over it and
              // go straight to the fallback. Check the priority of the primary
              // child fragment.


              var primaryChildFragment = workInProgress.child;
              var primaryChildLanes = primaryChildFragment.childLanes;

              if (includesSomeLane(renderLanes, primaryChildLanes)) {
                // The primary children have pending work. Use the normal path
                // to attempt to render the primary children again.
                return updateSuspenseComponent(current, workInProgress, renderLanes);
              } else {
                // The primary child fragment does not have pending work marked
                // on it
                pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // The primary children do not have pending work with sufficient
                // priority. Bailout.

                var child = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);

                if (child !== null) {
                  // The fallback children have pending work. Skip over the
                  // primary children and work on the fallback.
                  return child.sibling;
                } else {
                  return null;
                }
              }
            } else {
              pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
            }

            break;
          }

        case SuspenseListComponent:
          {
            var didSuspendBefore = (current.flags & DidCapture) !== NoFlags;

            var _hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);

            if (didSuspendBefore) {
              if (_hasChildWork) {
                // If something was in fallback state last time, and we have all the
                // same children then we're still in progressive loading state.
                // Something might get unblocked by state updates or retries in the
                // tree which will affect the tail. So we need to use the normal
                // path to compute the correct tail.
                return updateSuspenseListComponent(current, workInProgress, renderLanes);
              } // If none of the children had any work, that means that none of
              // them got retried so they'll still be blocked in the same way
              // as before. We can fast bail out.


              workInProgress.flags |= DidCapture;
            } // If nothing suspended before and we're rendering the same children,
            // then the tail doesn't matter. Anything new that suspends will work
            // in the "together" mode, so we can continue from the state we had.


            var renderState = workInProgress.memoizedState;

            if (renderState !== null) {
              // Reset to the "together" mode in case we've started a different
              // update in the past but didn't complete it.
              renderState.rendering = null;
              renderState.tail = null;
              renderState.lastEffect = null;
            }

            pushSuspenseContext(workInProgress, suspenseStackCursor.current);

            if (_hasChildWork) {
              break;
            } else {
              // If none of the children had any work, that means that none of
              // them got retried so they'll still be blocked in the same way
              // as before. We can fast bail out.
              return null;
            }
          }

        case OffscreenComponent:
        case LegacyHiddenComponent:
          {
            // Need to check if the tree still needs to be deferred. This is
            // almost identical to the logic used in the normal update path,
            // so we'll just enter that. The only difference is we'll bail out
            // at the next level instead of this one, because the child props
            // have not changed. Which is fine.
            // TODO: Probably should refactor `beginWork` to split the bailout
            // path from the normal path. I'm tempted to do a labeled break here
            // but I won't :)
            workInProgress.lanes = NoLanes;
            return updateOffscreenComponent(current, workInProgress, renderLanes);
          }
      }

      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
    } else {
      if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {
        // This is a special case that only exists for legacy mode.
        // See https://github.com/facebook/react/pull/19216.
        didReceiveUpdate = true;
      } else {
        // An update was scheduled on this fiber, but there are no new props
        // nor legacy context. Set this to false. If an update queue or context
        // consumer produces a changed value, it will set this to true. Otherwise,
        // the component will assume the children have not changed and bail out.
        didReceiveUpdate = false;
      }
    }
  } else {
    didReceiveUpdate = false;
  } // Before entering the begin phase, clear pending update priority.
  // TODO: This assumes that we're about to evaluate the component and process
  // the update queue. However, there's an exception: SimpleMemoComponent
  // sometimes bails out later in the begin phase. This indicates that we should
  // move this assignment out of the common path and into each branch.


  workInProgress.lanes = NoLanes;

  switch (workInProgress.tag) {
    case IndeterminateComponent:
      {
        return mountIndeterminateComponent(current, workInProgress, workInProgress.type, renderLanes);
      }

    case LazyComponent:
      {
        var elementType = workInProgress.elementType;
        return mountLazyComponent(current, workInProgress, elementType, updateLanes, renderLanes);
      }

    case FunctionComponent:
      {
        var _Component = workInProgress.type;
        var unresolvedProps = workInProgress.pendingProps;
        var resolvedProps = workInProgress.elementType === _Component ? unresolvedProps : resolveDefaultProps(_Component, unresolvedProps);
        return updateFunctionComponent(current, workInProgress, _Component, resolvedProps, renderLanes);
      }

    case ClassComponent:
      {
        var _Component2 = workInProgress.type;
        var _unresolvedProps = workInProgress.pendingProps;

        var _resolvedProps = workInProgress.elementType === _Component2 ? _unresolvedProps : resolveDefaultProps(_Component2, _unresolvedProps);

        return updateClassComponent(current, workInProgress, _Component2, _resolvedProps, renderLanes);
      }

    case HostRoot:
      return updateHostRoot(current, workInProgress, renderLanes);

    case HostComponent:
      return updateHostComponent(current, workInProgress, renderLanes);

    case HostText:
      return updateHostText(current, workInProgress);

    case SuspenseComponent:
      return updateSuspenseComponent(current, workInProgress, renderLanes);

    case HostPortal:
      return updatePortalComponent(current, workInProgress, renderLanes);

    case ForwardRef:
      {
        var type = workInProgress.type;
        var _unresolvedProps2 = workInProgress.pendingProps;

        var _resolvedProps2 = workInProgress.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);

        return updateForwardRef(current, workInProgress, type, _resolvedProps2, renderLanes);
      }

    case Fragment:
      return updateFragment(current, workInProgress, renderLanes);

    case Mode:
      return updateMode(current, workInProgress, renderLanes);

    case Profiler:
      return updateProfiler(current, workInProgress, renderLanes);

    case ContextProvider:
      return updateContextProvider(current, workInProgress, renderLanes);

    case ContextConsumer:
      return updateContextConsumer(current, workInProgress, renderLanes);

    case MemoComponent:
      {
        var _type2 = workInProgress.type;
        var _unresolvedProps3 = workInProgress.pendingProps; // Resolve outer props first, then resolve inner props.

        var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);

        {
          if (workInProgress.type !== workInProgress.elementType) {
            var outerPropTypes = _type2.propTypes;

            if (outerPropTypes) {
              checkPropTypes(outerPropTypes, _resolvedProps3, // Resolved for outer only
              'prop', getComponentName(_type2));
            }
          }
        }

        _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);
        return updateMemoComponent(current, workInProgress, _type2, _resolvedProps3, updateLanes, renderLanes);
      }

    case SimpleMemoComponent:
      {
        return updateSimpleMemoComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, updateLanes, renderLanes);
      }

    case IncompleteClassComponent:
      {
        var _Component3 = workInProgress.type;
        var _unresolvedProps4 = workInProgress.pendingProps;

        var _resolvedProps4 = workInProgress.elementType === _Component3 ? _unresolvedProps4 : resolveDefaultProps(_Component3, _unresolvedProps4);

        return mountIncompleteClassComponent(current, workInProgress, _Component3, _resolvedProps4, renderLanes);
      }

    case SuspenseListComponent:
      {
        return updateSuspenseListComponent(current, workInProgress, renderLanes);
      }

    case FundamentalComponent:
      {

        break;
      }

    case ScopeComponent:
      {

        break;
      }

    case Block:
      {

        break;
      }

    case OffscreenComponent:
      {
        return updateOffscreenComponent(current, workInProgress, renderLanes);
      }

    case LegacyHiddenComponent:
      {
        return updateLegacyHiddenComponent(current, workInProgress, renderLanes);
      }
  }

  {
    {
      throw Error( "Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in React. Please file an issue." );
    }
  }
}

function markUpdate(workInProgress) {
  // Tag the fiber with an update effect. This turns a Placement into
  // a PlacementAndUpdate.
  workInProgress.flags |= Update;
}

function markRef$1(workInProgress) {
  workInProgress.flags |= Ref;
}

var appendAllChildren;
var updateHostContainer;
var updateHostComponent$1;
var updateHostText$1;

{
  // Mutation mode
  appendAllChildren = function (parent, workInProgress, needsVisibilityToggle, isHidden) {
    // We only have the top Fiber that was created but we need recurse down its
    // children to find all the terminal nodes.
    var node = workInProgress.child;

    while (node !== null) {
      if (node.tag === HostComponent || node.tag === HostText) {
        appendInitialChild(parent, node.stateNode);
      } else if (node.tag === HostPortal) ; else if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === workInProgress) {
        return;
      }

      while (node.sibling === null) {
        if (node.return === null || node.return === workInProgress) {
          return;
        }

        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  };

  updateHostContainer = function (workInProgress) {// Noop
  };

  updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {
    // If we have an alternate, that means this is an update and we need to
    // schedule a side-effect to do the updates.
    var oldProps = current.memoizedProps;

    if (oldProps === newProps) {
      // In mutation mode, this is sufficient for a bailout because
      // we won't touch this node even if children changed.
      return;
    } // If we get updated because one of our children updated, we don't
    // have newProps so we'll have to reuse them.
    // TODO: Split the update API as separate for the props vs. children.
    // Even better would be if children weren't special cased at all tho.


    var instance = workInProgress.stateNode;
    var currentHostContext = getHostContext(); // TODO: Experiencing an error where oldProps is null. Suggests a host
    // component is hitting the resume path. Figure out why. Possibly
    // related to `hidden`.

    var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext); // TODO: Type this specific to this type of component.

    workInProgress.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there
    // is a new ref we mark this as an update. All the work is done in commitWork.

    if (updatePayload) {
      markUpdate(workInProgress);
    }
  };

  updateHostText$1 = function (current, workInProgress, oldText, newText) {
    // If the text differs, mark it as an update. All the work in done in commitWork.
    if (oldText !== newText) {
      markUpdate(workInProgress);
    }
  };
}

function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
  if (getIsHydrating()) {
    // If we're hydrating, we should consume as many items as we can
    // so we don't leave any behind.
    return;
  }

  switch (renderState.tailMode) {
    case 'hidden':
      {
        // Any insertions at the end of the tail list after this point
        // should be invisible. If there are already mounted boundaries
        // anything before them are not considered for collapsing.
        // Therefore we need to go through the whole tail to find if
        // there are any.
        var tailNode = renderState.tail;
        var lastTailNode = null;

        while (tailNode !== null) {
          if (tailNode.alternate !== null) {
            lastTailNode = tailNode;
          }

          tailNode = tailNode.sibling;
        } // Next we're simply going to delete all insertions after the
        // last rendered item.


        if (lastTailNode === null) {
          // All remaining items in the tail are insertions.
          renderState.tail = null;
        } else {
          // Detach the insertion after the last node that was already
          // inserted.
          lastTailNode.sibling = null;
        }

        break;
      }

    case 'collapsed':
      {
        // Any insertions at the end of the tail list after this point
        // should be invisible. If there are already mounted boundaries
        // anything before them are not considered for collapsing.
        // Therefore we need to go through the whole tail to find if
        // there are any.
        var _tailNode = renderState.tail;
        var _lastTailNode = null;

        while (_tailNode !== null) {
          if (_tailNode.alternate !== null) {
            _lastTailNode = _tailNode;
          }

          _tailNode = _tailNode.sibling;
        } // Next we're simply going to delete all insertions after the
        // last rendered item.


        if (_lastTailNode === null) {
          // All remaining items in the tail are insertions.
          if (!hasRenderedATailFallback && renderState.tail !== null) {
            // We suspended during the head. We want to show at least one
            // row at the tail. So we'll keep on and cut off the rest.
            renderState.tail.sibling = null;
          } else {
            renderState.tail = null;
          }
        } else {
          // Detach the insertion after the last node that was already
          // inserted.
          _lastTailNode.sibling = null;
        }

        break;
      }
  }
}

function completeWork(current, workInProgress, renderLanes) {
  var newProps = workInProgress.pendingProps;

  switch (workInProgress.tag) {
    case IndeterminateComponent:
    case LazyComponent:
    case SimpleMemoComponent:
    case FunctionComponent:
    case ForwardRef:
    case Fragment:
    case Mode:
    case Profiler:
    case ContextConsumer:
    case MemoComponent:
      return null;

    case ClassComponent:
      {
        var Component = workInProgress.type;

        if (isContextProvider(Component)) {
          popContext(workInProgress);
        }

        return null;
      }

    case HostRoot:
      {
        popHostContainer(workInProgress);
        popTopLevelContextObject(workInProgress);
        resetWorkInProgressVersions();
        var fiberRoot = workInProgress.stateNode;

        if (fiberRoot.pendingContext) {
          fiberRoot.context = fiberRoot.pendingContext;
          fiberRoot.pendingContext = null;
        }

        if (current === null || current.child === null) {
          // If we hydrated, pop so that we can delete any remaining children
          // that weren't hydrated.
          var wasHydrated = popHydrationState(workInProgress);

          if (wasHydrated) {
            // If we hydrated, then we'll need to schedule an update for
            // the commit side-effects on the root.
            markUpdate(workInProgress);
          } else if (!fiberRoot.hydrate) {
            // Schedule an effect to clear this container at the start of the next commit.
            // This handles the case of React rendering into a container with previous children.
            // It's also safe to do for updates too, because current.child would only be null
            // if the previous render was null (so the the container would already be empty).
            workInProgress.flags |= Snapshot;
          }
        }

        updateHostContainer(workInProgress);
        return null;
      }

    case HostComponent:
      {
        popHostContext(workInProgress);
        var rootContainerInstance = getRootHostContainer();
        var type = workInProgress.type;

        if (current !== null && workInProgress.stateNode != null) {
          updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance);

          if (current.ref !== workInProgress.ref) {
            markRef$1(workInProgress);
          }
        } else {
          if (!newProps) {
            if (!(workInProgress.stateNode !== null)) {
              {
                throw Error( "We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue." );
              }
            } // This can happen when we abort work.


            return null;
          }

          var currentHostContext = getHostContext(); // TODO: Move createInstance to beginWork and keep it on a context
          // "stack" as the parent. Then append children as we go in beginWork
          // or completeWork depending on whether we want to add them top->down or
          // bottom->up. Top->down is faster in IE11.

          var _wasHydrated = popHydrationState(workInProgress);

          if (_wasHydrated) {
            // TODO: Move this and createInstance step into the beginPhase
            // to consolidate.
            if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, currentHostContext)) {
              // If changes to the hydrated node need to be applied at the
              // commit-phase we mark this as such.
              markUpdate(workInProgress);
            }
          } else {
            var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress);
            appendAllChildren(instance, workInProgress, false, false);
            workInProgress.stateNode = instance; // Certain renderers require commit-time effects for initial mount.
            // (eg DOM renderer supports auto-focus for certain elements).
            // Make sure such renderers get scheduled for later work.

            if (finalizeInitialChildren(instance, type, newProps, rootContainerInstance)) {
              markUpdate(workInProgress);
            }
          }

          if (workInProgress.ref !== null) {
            // If there is a ref on a host node we need to schedule a callback
            markRef$1(workInProgress);
          }
        }

        return null;
      }

    case HostText:
      {
        var newText = newProps;

        if (current && workInProgress.stateNode != null) {
          var oldText = current.memoizedProps; // If we have an alternate, that means this is an update and we need
          // to schedule a side-effect to do the updates.

          updateHostText$1(current, workInProgress, oldText, newText);
        } else {
          if (typeof newText !== 'string') {
            if (!(workInProgress.stateNode !== null)) {
              {
                throw Error( "We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue." );
              }
            } // This can happen when we abort work.

          }

          var _rootContainerInstance = getRootHostContainer();

          var _currentHostContext = getHostContext();

          var _wasHydrated2 = popHydrationState(workInProgress);

          if (_wasHydrated2) {
            if (prepareToHydrateHostTextInstance(workInProgress)) {
              markUpdate(workInProgress);
            }
          } else {
            workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress);
          }
        }

        return null;
      }

    case SuspenseComponent:
      {
        popSuspenseContext(workInProgress);
        var nextState = workInProgress.memoizedState;

        if ((workInProgress.flags & DidCapture) !== NoFlags) {
          // Something suspended. Re-render with the fallback children.
          workInProgress.lanes = renderLanes; // Do not reset the effect list.

          if ( (workInProgress.mode & ProfileMode) !== NoMode) {
            transferActualDuration(workInProgress);
          }

          return workInProgress;
        }

        var nextDidTimeout = nextState !== null;
        var prevDidTimeout = false;

        if (current === null) {
          if (workInProgress.memoizedProps.fallback !== undefined) {
            popHydrationState(workInProgress);
          }
        } else {
          var prevState = current.memoizedState;
          prevDidTimeout = prevState !== null;
        }

        if (nextDidTimeout && !prevDidTimeout) {
          // If this subtreee is running in blocking mode we can suspend,
          // otherwise we won't suspend.
          // TODO: This will still suspend a synchronous tree if anything
          // in the concurrent tree already suspended during this render.
          // This is a known bug.
          if ((workInProgress.mode & BlockingMode) !== NoMode) {
            // TODO: Move this back to throwException because this is too late
            // if this is a large tree which is common for initial loads. We
            // don't know if we should restart a render or not until we get
            // this marker, and this is too late.
            // If this render already had a ping or lower pri updates,
            // and this is the first time we know we're going to suspend we
            // should be able to immediately restart from within throwException.
            var hasInvisibleChildContext = current === null && workInProgress.memoizedProps.unstable_avoidThisFallback !== true;

            if (hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext)) {
              // If this was in an invisible tree or a new render, then showing
              // this boundary is ok.
              renderDidSuspend();
            } else {
              // Otherwise, we're going to have to hide content so we should
              // suspend for longer if possible.
              renderDidSuspendDelayIfPossible();
            }
          }
        }

        {
          // TODO: Only schedule updates if these values are non equal, i.e. it changed.
          if (nextDidTimeout || prevDidTimeout) {
            // If this boundary just timed out, schedule an effect to attach a
            // retry listener to the promise. This flag is also used to hide the
            // primary children. In mutation mode, we also need the flag to
            // *unhide* children that were previously hidden, so check if this
            // is currently timed out, too.
            workInProgress.flags |= Update;
          }
        }

        return null;
      }

    case HostPortal:
      popHostContainer(workInProgress);
      updateHostContainer(workInProgress);

      if (current === null) {
        preparePortalMount(workInProgress.stateNode.containerInfo);
      }

      return null;

    case ContextProvider:
      // Pop provider fiber
      popProvider(workInProgress);
      return null;

    case IncompleteClassComponent:
      {
        // Same as class component case. I put it down here so that the tags are
        // sequential to ensure this switch is compiled to a jump table.
        var _Component = workInProgress.type;

        if (isContextProvider(_Component)) {
          popContext(workInProgress);
        }

        return null;
      }

    case SuspenseListComponent:
      {
        popSuspenseContext(workInProgress);
        var renderState = workInProgress.memoizedState;

        if (renderState === null) {
          // We're running in the default, "independent" mode.
          // We don't do anything in this mode.
          return null;
        }

        var didSuspendAlready = (workInProgress.flags & DidCapture) !== NoFlags;
        var renderedTail = renderState.rendering;

        if (renderedTail === null) {
          // We just rendered the head.
          if (!didSuspendAlready) {
            // This is the first pass. We need to figure out if anything is still
            // suspended in the rendered set.
            // If new content unsuspended, but there's still some content that
            // didn't. Then we need to do a second pass that forces everything
            // to keep showing their fallbacks.
            // We might be suspended if something in this render pass suspended, or
            // something in the previous committed pass suspended. Otherwise,
            // there's no chance so we can skip the expensive call to
            // findFirstSuspended.
            var cannotBeSuspended = renderHasNotSuspendedYet() && (current === null || (current.flags & DidCapture) === NoFlags);

            if (!cannotBeSuspended) {
              var row = workInProgress.child;

              while (row !== null) {
                var suspended = findFirstSuspended(row);

                if (suspended !== null) {
                  didSuspendAlready = true;
                  workInProgress.flags |= DidCapture;
                  cutOffTailIfNeeded(renderState, false); // If this is a newly suspended tree, it might not get committed as
                  // part of the second pass. In that case nothing will subscribe to
                  // its thennables. Instead, we'll transfer its thennables to the
                  // SuspenseList so that it can retry if they resolve.
                  // There might be multiple of these in the list but since we're
                  // going to wait for all of them anyway, it doesn't really matter
                  // which ones gets to ping. In theory we could get clever and keep
                  // track of how many dependencies remain but it gets tricky because
                  // in the meantime, we can add/remove/change items and dependencies.
                  // We might bail out of the loop before finding any but that
                  // doesn't matter since that means that the other boundaries that
                  // we did find already has their listeners attached.

                  var newThennables = suspended.updateQueue;

                  if (newThennables !== null) {
                    workInProgress.updateQueue = newThennables;
                    workInProgress.flags |= Update;
                  } // Rerender the whole list, but this time, we'll force fallbacks
                  // to stay in place.
                  // Reset the effect list before doing the second pass since that's now invalid.


                  if (renderState.lastEffect === null) {
                    workInProgress.firstEffect = null;
                  }

                  workInProgress.lastEffect = renderState.lastEffect; // Reset the child fibers to their original state.

                  resetChildFibers(workInProgress, renderLanes); // Set up the Suspense Context to force suspense and immediately
                  // rerender the children.

                  pushSuspenseContext(workInProgress, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback));
                  return workInProgress.child;
                }

                row = row.sibling;
              }
            }

            if (renderState.tail !== null && now() > getRenderTargetTime()) {
              // We have already passed our CPU deadline but we still have rows
              // left in the tail. We'll just give up further attempts to render
              // the main content and only render fallbacks.
              workInProgress.flags |= DidCapture;
              didSuspendAlready = true;
              cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this
              // to get it started back up to attempt the next item. While in terms
              // of priority this work has the same priority as this current render,
              // it's not part of the same transition once the transition has
              // committed. If it's sync, we still want to yield so that it can be
              // painted. Conceptually, this is really the same as pinging.
              // We can use any RetryLane even if it's the one currently rendering
              // since we're leaving it behind on this node.

              workInProgress.lanes = SomeRetryLane;

              {
                markSpawnedWork(SomeRetryLane);
              }
            }
          } else {
            cutOffTailIfNeeded(renderState, false);
          } // Next we're going to render the tail.

        } else {
          // Append the rendered row to the child list.
          if (!didSuspendAlready) {
            var _suspended = findFirstSuspended(renderedTail);

            if (_suspended !== null) {
              workInProgress.flags |= DidCapture;
              didSuspendAlready = true; // Ensure we transfer the update queue to the parent so that it doesn't
              // get lost if this row ends up dropped during a second pass.

              var _newThennables = _suspended.updateQueue;

              if (_newThennables !== null) {
                workInProgress.updateQueue = _newThennables;
                workInProgress.flags |= Update;
              }

              cutOffTailIfNeeded(renderState, true); // This might have been modified.

              if (renderState.tail === null && renderState.tailMode === 'hidden' && !renderedTail.alternate && !getIsHydrating() // We don't cut it if we're hydrating.
              ) {
                  // We need to delete the row we just rendered.
                  // Reset the effect list to what it was before we rendered this
                  // child. The nested children have already appended themselves.
                  var lastEffect = workInProgress.lastEffect = renderState.lastEffect; // Remove any effects that were appended after this point.

                  if (lastEffect !== null) {
                    lastEffect.nextEffect = null;
                  } // We're done.


                  return null;
                }
            } else if ( // The time it took to render last row is greater than the remaining
            // time we have to render. So rendering one more row would likely
            // exceed it.
            now() * 2 - renderState.renderingStartTime > getRenderTargetTime() && renderLanes !== OffscreenLane) {
              // We have now passed our CPU deadline and we'll just give up further
              // attempts to render the main content and only render fallbacks.
              // The assumption is that this is usually faster.
              workInProgress.flags |= DidCapture;
              didSuspendAlready = true;
              cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this
              // to get it started back up to attempt the next item. While in terms
              // of priority this work has the same priority as this current render,
              // it's not part of the same transition once the transition has
              // committed. If it's sync, we still want to yield so that it can be
              // painted. Conceptually, this is really the same as pinging.
              // We can use any RetryLane even if it's the one currently rendering
              // since we're leaving it behind on this node.

              workInProgress.lanes = SomeRetryLane;

              {
                markSpawnedWork(SomeRetryLane);
              }
            }
          }

          if (renderState.isBackwards) {
            // The effect list of the backwards tail will have been added
            // to the end. This breaks the guarantee that life-cycles fire in
            // sibling order but that isn't a strong guarantee promised by React.
            // Especially since these might also just pop in during future commits.
            // Append to the beginning of the list.
            renderedTail.sibling = workInProgress.child;
            workInProgress.child = renderedTail;
          } else {
            var previousSibling = renderState.last;

            if (previousSibling !== null) {
              previousSibling.sibling = renderedTail;
            } else {
              workInProgress.child = renderedTail;
            }

            renderState.last = renderedTail;
          }
        }

        if (renderState.tail !== null) {
          // We still have tail rows to render.
          // Pop a row.
          var next = renderState.tail;
          renderState.rendering = next;
          renderState.tail = next.sibling;
          renderState.lastEffect = workInProgress.lastEffect;
          renderState.renderingStartTime = now();
          next.sibling = null; // Restore the context.
          // TODO: We can probably just avoid popping it instead and only
          // setting it the first time we go from not suspended to suspended.

          var suspenseContext = suspenseStackCursor.current;

          if (didSuspendAlready) {
            suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
          } else {
            suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
          }

          pushSuspenseContext(workInProgress, suspenseContext); // Do a pass over the next row.

          return next;
        }

        return null;
      }

    case FundamentalComponent:
      {

        break;
      }

    case ScopeComponent:
      {

        break;
      }

    case Block:

      break;

    case OffscreenComponent:
    case LegacyHiddenComponent:
      {
        popRenderLanes(workInProgress);

        if (current !== null) {
          var _nextState = workInProgress.memoizedState;
          var _prevState = current.memoizedState;
          var prevIsHidden = _prevState !== null;
          var nextIsHidden = _nextState !== null;

          if (prevIsHidden !== nextIsHidden && newProps.mode !== 'unstable-defer-without-hiding') {
            workInProgress.flags |= Update;
          }
        }

        return null;
      }
  }

  {
    {
      throw Error( "Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in React. Please file an issue." );
    }
  }
}

function unwindWork(workInProgress, renderLanes) {
  switch (workInProgress.tag) {
    case ClassComponent:
      {
        var Component = workInProgress.type;

        if (isContextProvider(Component)) {
          popContext(workInProgress);
        }

        var flags = workInProgress.flags;

        if (flags & ShouldCapture) {
          workInProgress.flags = flags & ~ShouldCapture | DidCapture;

          if ( (workInProgress.mode & ProfileMode) !== NoMode) {
            transferActualDuration(workInProgress);
          }

          return workInProgress;
        }

        return null;
      }

    case HostRoot:
      {
        popHostContainer(workInProgress);
        popTopLevelContextObject(workInProgress);
        resetWorkInProgressVersions();
        var _flags = workInProgress.flags;

        if (!((_flags & DidCapture) === NoFlags)) {
          {
            throw Error( "The root failed to unmount after an error. This is likely a bug in React. Please file an issue." );
          }
        }

        workInProgress.flags = _flags & ~ShouldCapture | DidCapture;
        return workInProgress;
      }

    case HostComponent:
      {
        // TODO: popHydrationState
        popHostContext(workInProgress);
        return null;
      }

    case SuspenseComponent:
      {
        popSuspenseContext(workInProgress);

        var _flags2 = workInProgress.flags;

        if (_flags2 & ShouldCapture) {
          workInProgress.flags = _flags2 & ~ShouldCapture | DidCapture; // Captured a suspense effect. Re-render the boundary.

          if ( (workInProgress.mode & ProfileMode) !== NoMode) {
            transferActualDuration(workInProgress);
          }

          return workInProgress;
        }

        return null;
      }

    case SuspenseListComponent:
      {
        popSuspenseContext(workInProgress); // SuspenseList doesn't actually catch anything. It should've been
        // caught by a nested boundary. If not, it should bubble through.

        return null;
      }

    case HostPortal:
      popHostContainer(workInProgress);
      return null;

    case ContextProvider:
      popProvider(workInProgress);
      return null;

    case OffscreenComponent:
    case LegacyHiddenComponent:
      popRenderLanes(workInProgress);
      return null;

    default:
      return null;
  }
}

function unwindInterruptedWork(interruptedWork) {
  switch (interruptedWork.tag) {
    case ClassComponent:
      {
        var childContextTypes = interruptedWork.type.childContextTypes;

        if (childContextTypes !== null && childContextTypes !== undefined) {
          popContext(interruptedWork);
        }

        break;
      }

    case HostRoot:
      {
        popHostContainer(interruptedWork);
        popTopLevelContextObject(interruptedWork);
        resetWorkInProgressVersions();
        break;
      }

    case HostComponent:
      {
        popHostContext(interruptedWork);
        break;
      }

    case HostPortal:
      popHostContainer(interruptedWork);
      break;

    case SuspenseComponent:
      popSuspenseContext(interruptedWork);
      break;

    case SuspenseListComponent:
      popSuspenseContext(interruptedWork);
      break;

    case ContextProvider:
      popProvider(interruptedWork);
      break;

    case OffscreenComponent:
    case LegacyHiddenComponent:
      popRenderLanes(interruptedWork);
      break;
  }
}

function createCapturedValue(value, source) {
  // If the value is an error, call this function immediately after it is thrown
  // so the stack is accurate.
  return {
    value: value,
    source: source,
    stack: getStackByFiberInDevAndProd(source)
  };
}

// This module is forked in different environments.
// By default, return `true` to log errors to the console.
// Forks can return `false` if this isn't desirable.
function showErrorDialog(boundary, errorInfo) {
  return true;
}

function logCapturedError(boundary, errorInfo) {
  try {
    var logError = showErrorDialog(boundary, errorInfo); // Allow injected showErrorDialog() to prevent default console.error logging.
    // This enables renderers like ReactNative to better manage redbox behavior.

    if (logError === false) {
      return;
    }

    var error = errorInfo.value;

    if (true) {
      var source = errorInfo.source;
      var stack = errorInfo.stack;
      var componentStack = stack !== null ? stack : ''; // Browsers support silencing uncaught errors by calling
      // `preventDefault()` in window `error` handler.
      // We record this information as an expando on the error.

      if (error != null && error._suppressLogging) {
        if (boundary.tag === ClassComponent) {
          // The error is recoverable and was silenced.
          // Ignore it and don't print the stack addendum.
          // This is handy for testing error boundaries without noise.
          return;
        } // The error is fatal. Since the silencing might have
        // been accidental, we'll surface it anyway.
        // However, the browser would have silenced the original error
        // so we'll print it first, and then print the stack addendum.


        console['error'](error); // Don't transform to our wrapper
        // For a more detailed description of this block, see:
        // https://github.com/facebook/react/pull/13384
      }

      var componentName = source ? getComponentName(source.type) : null;
      var componentNameMessage = componentName ? "The above error occurred in the <" + componentName + "> component:" : 'The above error occurred in one of your React components:';
      var errorBoundaryMessage;
      var errorBoundaryName = getComponentName(boundary.type);

      if (errorBoundaryName) {
        errorBoundaryMessage = "React will try to recreate this component tree from scratch " + ("using the error boundary you provided, " + errorBoundaryName + ".");
      } else {
        errorBoundaryMessage = 'Consider adding an error boundary to your tree to customize error handling behavior.\n' + 'Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.';
      }

      var combinedMessage = componentNameMessage + "\n" + componentStack + "\n\n" + ("" + errorBoundaryMessage); // In development, we provide our own message with just the component stack.
      // We don't include the original error message and JS stack because the browser
      // has already printed it. Even if the application swallows the error, it is still
      // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.

      console['error'](combinedMessage); // Don't transform to our wrapper
    } else {}
  } catch (e) {
    // This method must not throw, or React internal state will get messed up.
    // If console.error is overridden, or logCapturedError() shows a dialog that throws,
    // we want to report this error outside of the normal stack as a last resort.
    // https://github.com/facebook/react/issues/13188
    setTimeout(function () {
      throw e;
    });
  }
}

var PossiblyWeakMap$1 = typeof WeakMap === 'function' ? WeakMap : Map;

function createRootErrorUpdate(fiber, errorInfo, lane) {
  var update = createUpdate(NoTimestamp, lane); // Unmount the root by rendering null.

  update.tag = CaptureUpdate; // Caution: React DevTools currently depends on this property
  // being called "element".

  update.payload = {
    element: null
  };
  var error = errorInfo.value;

  update.callback = function () {
    onUncaughtError(error);
    logCapturedError(fiber, errorInfo);
  };

  return update;
}

function createClassErrorUpdate(fiber, errorInfo, lane) {
  var update = createUpdate(NoTimestamp, lane);
  update.tag = CaptureUpdate;
  var getDerivedStateFromError = fiber.type.getDerivedStateFromError;

  if (typeof getDerivedStateFromError === 'function') {
    var error$1 = errorInfo.value;

    update.payload = function () {
      logCapturedError(fiber, errorInfo);
      return getDerivedStateFromError(error$1);
    };
  }

  var inst = fiber.stateNode;

  if (inst !== null && typeof inst.componentDidCatch === 'function') {
    update.callback = function callback() {
      {
        markFailedErrorBoundaryForHotReloading(fiber);
      }

      if (typeof getDerivedStateFromError !== 'function') {
        // To preserve the preexisting retry behavior of error boundaries,
        // we keep track of which ones already failed during this batch.
        // This gets reset before we yield back to the browser.
        // TODO: Warn in strict mode if getDerivedStateFromError is
        // not defined.
        markLegacyErrorBoundaryAsFailed(this); // Only log here if componentDidCatch is the only error boundary method defined

        logCapturedError(fiber, errorInfo);
      }

      var error$1 = errorInfo.value;
      var stack = errorInfo.stack;
      this.componentDidCatch(error$1, {
        componentStack: stack !== null ? stack : ''
      });

      {
        if (typeof getDerivedStateFromError !== 'function') {
          // If componentDidCatch is the only error boundary method defined,
          // then it needs to call setState to recover from errors.
          // If no state update is scheduled then the boundary will swallow the error.
          if (!includesSomeLane(fiber.lanes, SyncLane)) {
            error('%s: Error boundaries should implement getDerivedStateFromError(). ' + 'In that method, return a state update to display an error message or fallback UI.', getComponentName(fiber.type) || 'Unknown');
          }
        }
      }
    };
  } else {
    update.callback = function () {
      markFailedErrorBoundaryForHotReloading(fiber);
    };
  }

  return update;
}

function attachPingListener(root, wakeable, lanes) {
  // Attach a listener to the promise to "ping" the root and retry. But only if
  // one does not already exist for the lanes we're currently rendering (which
  // acts like a "thread ID" here).
  var pingCache = root.pingCache;
  var threadIDs;

  if (pingCache === null) {
    pingCache = root.pingCache = new PossiblyWeakMap$1();
    threadIDs = new Set();
    pingCache.set(wakeable, threadIDs);
  } else {
    threadIDs = pingCache.get(wakeable);

    if (threadIDs === undefined) {
      threadIDs = new Set();
      pingCache.set(wakeable, threadIDs);
    }
  }

  if (!threadIDs.has(lanes)) {
    // Memoize using the thread ID to prevent redundant listeners.
    threadIDs.add(lanes);
    var ping = pingSuspendedRoot.bind(null, root, wakeable, lanes);
    wakeable.then(ping, ping);
  }
}

function throwException(root, returnFiber, sourceFiber, value, rootRenderLanes) {
  // The source fiber did not complete.
  sourceFiber.flags |= Incomplete; // Its effect list is no longer valid.

  sourceFiber.firstEffect = sourceFiber.lastEffect = null;

  if (value !== null && typeof value === 'object' && typeof value.then === 'function') {
    // This is a wakeable.
    var wakeable = value;

    if ((sourceFiber.mode & BlockingMode) === NoMode) {
      // Reset the memoizedState to what it was before we attempted
      // to render it.
      var currentSource = sourceFiber.alternate;

      if (currentSource) {
        sourceFiber.updateQueue = currentSource.updateQueue;
        sourceFiber.memoizedState = currentSource.memoizedState;
        sourceFiber.lanes = currentSource.lanes;
      } else {
        sourceFiber.updateQueue = null;
        sourceFiber.memoizedState = null;
      }
    }

    var hasInvisibleParentBoundary = hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext); // Schedule the nearest Suspense to re-render the timed out view.

    var _workInProgress = returnFiber;

    do {
      if (_workInProgress.tag === SuspenseComponent && shouldCaptureSuspense(_workInProgress, hasInvisibleParentBoundary)) {
        // Found the nearest boundary.
        // Stash the promise on the boundary fiber. If the boundary times out, we'll
        // attach another listener to flip the boundary back to its normal state.
        var wakeables = _workInProgress.updateQueue;

        if (wakeables === null) {
          var updateQueue = new Set();
          updateQueue.add(wakeable);
          _workInProgress.updateQueue = updateQueue;
        } else {
          wakeables.add(wakeable);
        } // If the boundary is outside of blocking mode, we should *not*
        // suspend the commit. Pretend as if the suspended component rendered
        // null and keep rendering. In the commit phase, we'll schedule a
        // subsequent synchronous update to re-render the Suspense.
        //
        // Note: It doesn't matter whether the component that suspended was
        // inside a blocking mode tree. If the Suspense is outside of it, we
        // should *not* suspend the commit.


        if ((_workInProgress.mode & BlockingMode) === NoMode) {
          _workInProgress.flags |= DidCapture;
          sourceFiber.flags |= ForceUpdateForLegacySuspense; // We're going to commit this fiber even though it didn't complete.
          // But we shouldn't call any lifecycle methods or callbacks. Remove
          // all lifecycle effect tags.

          sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);

          if (sourceFiber.tag === ClassComponent) {
            var currentSourceFiber = sourceFiber.alternate;

            if (currentSourceFiber === null) {
              // This is a new mount. Change the tag so it's not mistaken for a
              // completed class component. For example, we should not call
              // componentWillUnmount if it is deleted.
              sourceFiber.tag = IncompleteClassComponent;
            } else {
              // When we try rendering again, we should not reuse the current fiber,
              // since it's known to be in an inconsistent state. Use a force update to
              // prevent a bail out.
              var update = createUpdate(NoTimestamp, SyncLane);
              update.tag = ForceUpdate;
              enqueueUpdate(sourceFiber, update);
            }
          } // The source fiber did not complete. Mark it with Sync priority to
          // indicate that it still has pending work.


          sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane); // Exit without suspending.

          return;
        } // Confirmed that the boundary is in a concurrent mode tree. Continue
        // with the normal suspend path.
        //
        // After this we'll use a set of heuristics to determine whether this
        // render pass will run to completion or restart or "suspend" the commit.
        // The actual logic for this is spread out in different places.
        //
        // This first principle is that if we're going to suspend when we complete
        // a root, then we should also restart if we get an update or ping that
        // might unsuspend it, and vice versa. The only reason to suspend is
        // because you think you might want to restart before committing. However,
        // it doesn't make sense to restart only while in the period we're suspended.
        //
        // Restarting too aggressively is also not good because it starves out any
        // intermediate loading state. So we use heuristics to determine when.
        // Suspense Heuristics
        //
        // If nothing threw a Promise or all the same fallbacks are already showing,
        // then don't suspend/restart.
        //
        // If this is an initial render of a new tree of Suspense boundaries and
        // those trigger a fallback, then don't suspend/restart. We want to ensure
        // that we can show the initial loading state as quickly as possible.
        //
        // If we hit a "Delayed" case, such as when we'd switch from content back into
        // a fallback, then we should always suspend/restart. Transitions apply
        // to this case. If none is defined, JND is used instead.
        //
        // If we're already showing a fallback and it gets "retried", allowing us to show
        // another level, but there's still an inner boundary that would show a fallback,
        // then we suspend/restart for 500ms since the last time we showed a fallback
        // anywhere in the tree. This effectively throttles progressive loading into a
        // consistent train of commits. This also gives us an opportunity to restart to
        // get to the completed state slightly earlier.
        //
        // If there's ambiguity due to batching it's resolved in preference of:
        // 1) "delayed", 2) "initial render", 3) "retry".
        //
        // We want to ensure that a "busy" state doesn't get force committed. We want to
        // ensure that new initial loading states can commit as soon as possible.


        attachPingListener(root, wakeable, rootRenderLanes);
        _workInProgress.flags |= ShouldCapture;
        _workInProgress.lanes = rootRenderLanes;
        return;
      } // This boundary already captured during this render. Continue to the next
      // boundary.


      _workInProgress = _workInProgress.return;
    } while (_workInProgress !== null); // No boundary was found. Fallthrough to error mode.
    // TODO: Use invariant so the message is stripped in prod?


    value = new Error((getComponentName(sourceFiber.type) || 'A React component') + ' suspended while rendering, but no fallback UI was specified.\n' + '\n' + 'Add a <Suspense fallback=...> component higher in the tree to ' + 'provide a loading indicator or placeholder to display.');
  } // We didn't find a boundary that could handle this type of exception. Start
  // over and traverse parent path again, this time treating the exception
  // as an error.


  renderDidError();
  value = createCapturedValue(value, sourceFiber);
  var workInProgress = returnFiber;

  do {
    switch (workInProgress.tag) {
      case HostRoot:
        {
          var _errorInfo = value;
          workInProgress.flags |= ShouldCapture;
          var lane = pickArbitraryLane(rootRenderLanes);
          workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);

          var _update = createRootErrorUpdate(workInProgress, _errorInfo, lane);

          enqueueCapturedUpdate(workInProgress, _update);
          return;
        }

      case ClassComponent:
        // Capture and retry
        var errorInfo = value;
        var ctor = workInProgress.type;
        var instance = workInProgress.stateNode;

        if ((workInProgress.flags & DidCapture) === NoFlags && (typeof ctor.getDerivedStateFromError === 'function' || instance !== null && typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance))) {
          workInProgress.flags |= ShouldCapture;

          var _lane = pickArbitraryLane(rootRenderLanes);

          workInProgress.lanes = mergeLanes(workInProgress.lanes, _lane); // Schedule the error boundary to re-render using updated state

          var _update2 = createClassErrorUpdate(workInProgress, errorInfo, _lane);

          enqueueCapturedUpdate(workInProgress, _update2);
          return;
        }

        break;
    }

    workInProgress = workInProgress.return;
  } while (workInProgress !== null);
}

var didWarnAboutUndefinedSnapshotBeforeUpdate = null;

{
  didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();
}

var PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;

var callComponentWillUnmountWithTimer = function (current, instance) {
  instance.props = current.memoizedProps;
  instance.state = current.memoizedState;

  {
    instance.componentWillUnmount();
  }
}; // Capture errors so they don't interrupt unmounting.


function safelyCallComponentWillUnmount(current, instance) {
  {
    invokeGuardedCallback(null, callComponentWillUnmountWithTimer, null, current, instance);

    if (hasCaughtError()) {
      var unmountError = clearCaughtError();
      captureCommitPhaseError(current, unmountError);
    }
  }
}

function safelyDetachRef(current) {
  var ref = current.ref;

  if (ref !== null) {
    if (typeof ref === 'function') {
      {
        invokeGuardedCallback(null, ref, null, null);

        if (hasCaughtError()) {
          var refError = clearCaughtError();
          captureCommitPhaseError(current, refError);
        }
      }
    } else {
      ref.current = null;
    }
  }
}

function safelyCallDestroy(current, destroy) {
  {
    invokeGuardedCallback(null, destroy, null);

    if (hasCaughtError()) {
      var error = clearCaughtError();
      captureCommitPhaseError(current, error);
    }
  }
}

function commitBeforeMutationLifeCycles(current, finishedWork) {
  switch (finishedWork.tag) {
    case FunctionComponent:
    case ForwardRef:
    case SimpleMemoComponent:
    case Block:
      {
        return;
      }

    case ClassComponent:
      {
        if (finishedWork.flags & Snapshot) {
          if (current !== null) {
            var prevProps = current.memoizedProps;
            var prevState = current.memoizedState;
            var instance = finishedWork.stateNode; // We could update instance props and state here,
            // but instead we rely on them being set during last render.
            // TODO: revisit this when we implement resuming.

            {
              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                if (instance.props !== finishedWork.memoizedProps) {
                  error('Expected %s props to match memoized props before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance');
                }

                if (instance.state !== finishedWork.memoizedState) {
                  error('Expected %s state to match memoized state before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.state`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance');
                }
              }
            }

            var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);

            {
              var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;

              if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {
                didWarnSet.add(finishedWork.type);

                error('%s.getSnapshotBeforeUpdate(): A snapshot value (or null) ' + 'must be returned. You have returned undefined.', getComponentName(finishedWork.type));
              }
            }

            instance.__reactInternalSnapshotBeforeUpdate = snapshot;
          }
        }

        return;
      }

    case HostRoot:
      {
        {
          if (finishedWork.flags & Snapshot) {
            var root = finishedWork.stateNode;
            clearContainer(root.containerInfo);
          }
        }

        return;
      }

    case HostComponent:
    case HostText:
    case HostPortal:
    case IncompleteClassComponent:
      // Nothing to do for these component types
      return;
  }

  {
    {
      throw Error( "This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue." );
    }
  }
}

function commitHookEffectListUnmount(tag, finishedWork) {
  var updateQueue = finishedWork.updateQueue;
  var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;

  if (lastEffect !== null) {
    var firstEffect = lastEffect.next;
    var effect = firstEffect;

    do {
      if ((effect.tag & tag) === tag) {
        // Unmount
        var destroy = effect.destroy;
        effect.destroy = undefined;

        if (destroy !== undefined) {
          destroy();
        }
      }

      effect = effect.next;
    } while (effect !== firstEffect);
  }
}

function commitHookEffectListMount(tag, finishedWork) {
  var updateQueue = finishedWork.updateQueue;
  var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;

  if (lastEffect !== null) {
    var firstEffect = lastEffect.next;
    var effect = firstEffect;

    do {
      if ((effect.tag & tag) === tag) {
        // Mount
        var create = effect.create;
        effect.destroy = create();

        {
          var destroy = effect.destroy;

          if (destroy !== undefined && typeof destroy !== 'function') {
            var addendum = void 0;

            if (destroy === null) {
              addendum = ' You returned null. If your effect does not require clean ' + 'up, return undefined (or nothing).';
            } else if (typeof destroy.then === 'function') {
              addendum = '\n\nIt looks like you wrote useEffect(async () => ...) or returned a Promise. ' + 'Instead, write the async function inside your effect ' + 'and call it immediately:\n\n' + 'useEffect(() => {\n' + '  async function fetchData() {\n' + '    // You can await here\n' + '    const response = await MyAPI.getData(someId);\n' + '    // ...\n' + '  }\n' + '  fetchData();\n' + "}, [someId]); // Or [] if effect doesn't need props or state\n\n" + 'Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching';
            } else {
              addendum = ' You returned: ' + destroy;
            }

            error('An effect function must not return anything besides a function, ' + 'which is used for clean-up.%s', addendum);
          }
        }
      }

      effect = effect.next;
    } while (effect !== firstEffect);
  }
}

function schedulePassiveEffects(finishedWork) {
  var updateQueue = finishedWork.updateQueue;
  var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;

  if (lastEffect !== null) {
    var firstEffect = lastEffect.next;
    var effect = firstEffect;

    do {
      var _effect = effect,
          next = _effect.next,
          tag = _effect.tag;

      if ((tag & Passive$1) !== NoFlags$1 && (tag & HasEffect) !== NoFlags$1) {
        enqueuePendingPassiveHookEffectUnmount(finishedWork, effect);
        enqueuePendingPassiveHookEffectMount(finishedWork, effect);
      }

      effect = next;
    } while (effect !== firstEffect);
  }
}

function commitLifeCycles(finishedRoot, current, finishedWork, committedLanes) {
  switch (finishedWork.tag) {
    case FunctionComponent:
    case ForwardRef:
    case SimpleMemoComponent:
    case Block:
      {
        // At this point layout effects have already been destroyed (during mutation phase).
        // This is done to prevent sibling component effects from interfering with each other,
        // e.g. a destroy function in one component should never override a ref set
        // by a create function in another component during the same commit.
        {
          commitHookEffectListMount(Layout | HasEffect, finishedWork);
        }

        schedulePassiveEffects(finishedWork);
        return;
      }

    case ClassComponent:
      {
        var instance = finishedWork.stateNode;

        if (finishedWork.flags & Update) {
          if (current === null) {
            // We could update instance props and state here,
            // but instead we rely on them being set during last render.
            // TODO: revisit this when we implement resuming.
            {
              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                if (instance.props !== finishedWork.memoizedProps) {
                  error('Expected %s props to match memoized props before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance');
                }

                if (instance.state !== finishedWork.memoizedState) {
                  error('Expected %s state to match memoized state before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.state`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance');
                }
              }
            }

            {
              instance.componentDidMount();
            }
          } else {
            var prevProps = finishedWork.elementType === finishedWork.type ? current.memoizedProps : resolveDefaultProps(finishedWork.type, current.memoizedProps);
            var prevState = current.memoizedState; // We could update instance props and state here,
            // but instead we rely on them being set during last render.
            // TODO: revisit this when we implement resuming.

            {
              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                if (instance.props !== finishedWork.memoizedProps) {
                  error('Expected %s props to match memoized props before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance');
                }

                if (instance.state !== finishedWork.memoizedState) {
                  error('Expected %s state to match memoized state before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.state`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance');
                }
              }
            }

            {
              instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
            }
          }
        } // TODO: I think this is now always non-null by the time it reaches the
        // commit phase. Consider removing the type check.


        var updateQueue = finishedWork.updateQueue;

        if (updateQueue !== null) {
          {
            if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
              if (instance.props !== finishedWork.memoizedProps) {
                error('Expected %s props to match memoized props before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance');
              }

              if (instance.state !== finishedWork.memoizedState) {
                error('Expected %s state to match memoized state before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.state`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance');
              }
            }
          } // We could update instance props and state here,
          // but instead we rely on them being set during last render.
          // TODO: revisit this when we implement resuming.


          commitUpdateQueue(finishedWork, updateQueue, instance);
        }

        return;
      }

    case HostRoot:
      {
        // TODO: I think this is now always non-null by the time it reaches the
        // commit phase. Consider removing the type check.
        var _updateQueue = finishedWork.updateQueue;

        if (_updateQueue !== null) {
          var _instance = null;

          if (finishedWork.child !== null) {
            switch (finishedWork.child.tag) {
              case HostComponent:
                _instance = getPublicInstance(finishedWork.child.stateNode);
                break;

              case ClassComponent:
                _instance = finishedWork.child.stateNode;
                break;
            }
          }

          commitUpdateQueue(finishedWork, _updateQueue, _instance);
        }

        return;
      }

    case HostComponent:
      {
        var _instance2 = finishedWork.stateNode; // Renderers may schedule work to be done after host components are mounted
        // (eg DOM renderer may schedule auto-focus for inputs and form controls).
        // These effects should only be committed when components are first mounted,
        // aka when there is no current/alternate.

        if (current === null && finishedWork.flags & Update) {
          var type = finishedWork.type;
          var props = finishedWork.memoizedProps;
          commitMount(_instance2, type, props);
        }

        return;
      }

    case HostText:
      {
        // We have no life-cycles associated with text.
        return;
      }

    case HostPortal:
      {
        // We have no life-cycles associated with portals.
        return;
      }

    case Profiler:
      {
        {
          var _finishedWork$memoize2 = finishedWork.memoizedProps,
              onCommit = _finishedWork$memoize2.onCommit,
              onRender = _finishedWork$memoize2.onRender;
          var effectDuration = finishedWork.stateNode.effectDuration;
          var commitTime = getCommitTime();

          if (typeof onRender === 'function') {
            {
              onRender(finishedWork.memoizedProps.id, current === null ? 'mount' : 'update', finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, commitTime, finishedRoot.memoizedInteractions);
            }
          }
        }

        return;
      }

    case SuspenseComponent:
      {
        commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
        return;
      }

    case SuspenseListComponent:
    case IncompleteClassComponent:
    case FundamentalComponent:
    case ScopeComponent:
    case OffscreenComponent:
    case LegacyHiddenComponent:
      return;
  }

  {
    {
      throw Error( "This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue." );
    }
  }
}

function hideOrUnhideAllChildren(finishedWork, isHidden) {
  {
    // We only have the top Fiber that was inserted but we need to recurse down its
    // children to find all the terminal nodes.
    var node = finishedWork;

    while (true) {
      if (node.tag === HostComponent) {
        var instance = node.stateNode;

        if (isHidden) {
          hideInstance(instance);
        } else {
          unhideInstance(node.stateNode, node.memoizedProps);
        }
      } else if (node.tag === HostText) {
        var _instance3 = node.stateNode;

        if (isHidden) {
          hideTextInstance(_instance3);
        } else {
          unhideTextInstance(_instance3, node.memoizedProps);
        }
      } else if ((node.tag === OffscreenComponent || node.tag === LegacyHiddenComponent) && node.memoizedState !== null && node !== finishedWork) ; else if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === finishedWork) {
        return;
      }

      while (node.sibling === null) {
        if (node.return === null || node.return === finishedWork) {
          return;
        }

        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  }
}

function commitAttachRef(finishedWork) {
  var ref = finishedWork.ref;

  if (ref !== null) {
    var instance = finishedWork.stateNode;
    var instanceToUse;

    switch (finishedWork.tag) {
      case HostComponent:
        instanceToUse = getPublicInstance(instance);
        break;

      default:
        instanceToUse = instance;
    } // Moved outside to ensure DCE works with this flag

    if (typeof ref === 'function') {
      ref(instanceToUse);
    } else {
      {
        if (!ref.hasOwnProperty('current')) {
          error('Unexpected ref object provided for %s. ' + 'Use either a ref-setter function or React.createRef().', getComponentName(finishedWork.type));
        }
      }

      ref.current = instanceToUse;
    }
  }
}

function commitDetachRef(current) {
  var currentRef = current.ref;

  if (currentRef !== null) {
    if (typeof currentRef === 'function') {
      currentRef(null);
    } else {
      currentRef.current = null;
    }
  }
} // User-originating errors (lifecycles and refs) should not interrupt
// deletion, so don't let them throw. Host-originating errors should
// interrupt deletion, so it's okay


function commitUnmount(finishedRoot, current, renderPriorityLevel) {
  onCommitUnmount(current);

  switch (current.tag) {
    case FunctionComponent:
    case ForwardRef:
    case MemoComponent:
    case SimpleMemoComponent:
    case Block:
      {
        var updateQueue = current.updateQueue;

        if (updateQueue !== null) {
          var lastEffect = updateQueue.lastEffect;

          if (lastEffect !== null) {
            var firstEffect = lastEffect.next;
            var effect = firstEffect;

            do {
              var _effect2 = effect,
                  destroy = _effect2.destroy,
                  tag = _effect2.tag;

              if (destroy !== undefined) {
                if ((tag & Passive$1) !== NoFlags$1) {
                  enqueuePendingPassiveHookEffectUnmount(current, effect);
                } else {
                  {
                    safelyCallDestroy(current, destroy);
                  }
                }
              }

              effect = effect.next;
            } while (effect !== firstEffect);
          }
        }

        return;
      }

    case ClassComponent:
      {
        safelyDetachRef(current);
        var instance = current.stateNode;

        if (typeof instance.componentWillUnmount === 'function') {
          safelyCallComponentWillUnmount(current, instance);
        }

        return;
      }

    case HostComponent:
      {
        safelyDetachRef(current);
        return;
      }

    case HostPortal:
      {
        // TODO: this is recursive.
        // We are also not using this parent because
        // the portal will get pushed immediately.
        {
          unmountHostComponents(finishedRoot, current);
        }

        return;
      }

    case FundamentalComponent:
      {

        return;
      }

    case DehydratedFragment:
      {

        return;
      }

    case ScopeComponent:
      {

        return;
      }
  }
}

function commitNestedUnmounts(finishedRoot, root, renderPriorityLevel) {
  // While we're inside a removed host node we don't want to call
  // removeChild on the inner nodes because they're removed by the top
  // call anyway. We also want to call componentWillUnmount on all
  // composites before this host node is removed from the tree. Therefore
  // we do an inner loop while we're still inside the host node.
  var node = root;

  while (true) {
    commitUnmount(finishedRoot, node); // Visit children because they may contain more composite or host nodes.
    // Skip portals because commitUnmount() currently visits them recursively.

    if (node.child !== null && ( // If we use mutation we drill down into portals using commitUnmount above.
    // If we don't use mutation we drill down into portals here instead.
     node.tag !== HostPortal)) {
      node.child.return = node;
      node = node.child;
      continue;
    }

    if (node === root) {
      return;
    }

    while (node.sibling === null) {
      if (node.return === null || node.return === root) {
        return;
      }

      node = node.return;
    }

    node.sibling.return = node.return;
    node = node.sibling;
  }
}

function detachFiberMutation(fiber) {
  // Cut off the return pointers to disconnect it from the tree. Ideally, we
  // should clear the child pointer of the parent alternate to let this
  // get GC:ed but we don't know which for sure which parent is the current
  // one so we'll settle for GC:ing the subtree of this child. This child
  // itself will be GC:ed when the parent updates the next time.
  // Note: we cannot null out sibling here, otherwise it can cause issues
  // with findDOMNode and how it requires the sibling field to carry out
  // traversal in a later effect. See PR #16820. We now clear the sibling
  // field after effects, see: detachFiberAfterEffects.
  //
  // Don't disconnect stateNode now; it will be detached in detachFiberAfterEffects.
  // It may be required if the current component is an error boundary,
  // and one of its descendants throws while unmounting a passive effect.
  fiber.alternate = null;
  fiber.child = null;
  fiber.dependencies = null;
  fiber.firstEffect = null;
  fiber.lastEffect = null;
  fiber.memoizedProps = null;
  fiber.memoizedState = null;
  fiber.pendingProps = null;
  fiber.return = null;
  fiber.updateQueue = null;

  {
    fiber._debugOwner = null;
  }
}

function getHostParentFiber(fiber) {
  var parent = fiber.return;

  while (parent !== null) {
    if (isHostParent(parent)) {
      return parent;
    }

    parent = parent.return;
  }

  {
    {
      throw Error( "Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue." );
    }
  }
}

function isHostParent(fiber) {
  return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
}

function getHostSibling(fiber) {
  // We're going to search forward into the tree until we find a sibling host
  // node. Unfortunately, if multiple insertions are done in a row we have to
  // search past them. This leads to exponential search for the next sibling.
  // TODO: Find a more efficient way to do this.
  var node = fiber;

  siblings: while (true) {
    // If we didn't find anything, let's try the next sibling.
    while (node.sibling === null) {
      if (node.return === null || isHostParent(node.return)) {
        // If we pop out of the root or hit the parent the fiber we are the
        // last sibling.
        return null;
      }

      node = node.return;
    }

    node.sibling.return = node.return;
    node = node.sibling;

    while (node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedFragment) {
      // If it is not host node and, we might have a host node inside it.
      // Try to search down until we find one.
      if (node.flags & Placement) {
        // If we don't have a child, try the siblings instead.
        continue siblings;
      } // If we don't have a child, try the siblings instead.
      // We also skip portals because they are not part of this host tree.


      if (node.child === null || node.tag === HostPortal) {
        continue siblings;
      } else {
        node.child.return = node;
        node = node.child;
      }
    } // Check if this host node is stable or about to be placed.


    if (!(node.flags & Placement)) {
      // Found it!
      return node.stateNode;
    }
  }
}

function commitPlacement(finishedWork) {


  var parentFiber = getHostParentFiber(finishedWork); // Note: these two variables *must* always be updated together.

  var parent;
  var isContainer;
  var parentStateNode = parentFiber.stateNode;

  switch (parentFiber.tag) {
    case HostComponent:
      parent = parentStateNode;
      isContainer = false;
      break;

    case HostRoot:
      parent = parentStateNode.containerInfo;
      isContainer = true;
      break;

    case HostPortal:
      parent = parentStateNode.containerInfo;
      isContainer = true;
      break;

    case FundamentalComponent:

    // eslint-disable-next-line-no-fallthrough

    default:
      {
        {
          throw Error( "Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue." );
        }
      }

  }

  if (parentFiber.flags & ContentReset) {
    // Reset the text content of the parent before doing any insertions
    resetTextContent(parent); // Clear ContentReset from the effect tag

    parentFiber.flags &= ~ContentReset;
  }

  var before = getHostSibling(finishedWork); // We only have the top Fiber that was inserted but we need to recurse down its
  // children to find all the terminal nodes.

  if (isContainer) {
    insertOrAppendPlacementNodeIntoContainer(finishedWork, before, parent);
  } else {
    insertOrAppendPlacementNode(finishedWork, before, parent);
  }
}

function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {
  var tag = node.tag;
  var isHost = tag === HostComponent || tag === HostText;

  if (isHost || enableFundamentalAPI ) {
    var stateNode = isHost ? node.stateNode : node.stateNode.instance;

    if (before) {
      insertInContainerBefore(parent, stateNode, before);
    } else {
      appendChildToContainer(parent, stateNode);
    }
  } else if (tag === HostPortal) ; else {
    var child = node.child;

    if (child !== null) {
      insertOrAppendPlacementNodeIntoContainer(child, before, parent);
      var sibling = child.sibling;

      while (sibling !== null) {
        insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);
        sibling = sibling.sibling;
      }
    }
  }
}

function insertOrAppendPlacementNode(node, before, parent) {
  var tag = node.tag;
  var isHost = tag === HostComponent || tag === HostText;

  if (isHost || enableFundamentalAPI ) {
    var stateNode = isHost ? node.stateNode : node.stateNode.instance;

    if (before) {
      insertBefore(parent, stateNode, before);
    } else {
      appendChild(parent, stateNode);
    }
  } else if (tag === HostPortal) ; else {
    var child = node.child;

    if (child !== null) {
      insertOrAppendPlacementNode(child, before, parent);
      var sibling = child.sibling;

      while (sibling !== null) {
        insertOrAppendPlacementNode(sibling, before, parent);
        sibling = sibling.sibling;
      }
    }
  }
}

function unmountHostComponents(finishedRoot, current, renderPriorityLevel) {
  // We only have the top Fiber that was deleted but we need to recurse down its
  // children to find all the terminal nodes.
  var node = current; // Each iteration, currentParent is populated with node's host parent if not
  // currentParentIsValid.

  var currentParentIsValid = false; // Note: these two variables *must* always be updated together.

  var currentParent;
  var currentParentIsContainer;

  while (true) {
    if (!currentParentIsValid) {
      var parent = node.return;

      findParent: while (true) {
        if (!(parent !== null)) {
          {
            throw Error( "Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue." );
          }
        }

        var parentStateNode = parent.stateNode;

        switch (parent.tag) {
          case HostComponent:
            currentParent = parentStateNode;
            currentParentIsContainer = false;
            break findParent;

          case HostRoot:
            currentParent = parentStateNode.containerInfo;
            currentParentIsContainer = true;
            break findParent;

          case HostPortal:
            currentParent = parentStateNode.containerInfo;
            currentParentIsContainer = true;
            break findParent;

        }

        parent = parent.return;
      }

      currentParentIsValid = true;
    }

    if (node.tag === HostComponent || node.tag === HostText) {
      commitNestedUnmounts(finishedRoot, node); // After all the children have unmounted, it is now safe to remove the
      // node from the tree.

      if (currentParentIsContainer) {
        removeChildFromContainer(currentParent, node.stateNode);
      } else {
        removeChild(currentParent, node.stateNode);
      } // Don't visit children because we already visited them.

    } else if (node.tag === HostPortal) {
      if (node.child !== null) {
        // When we go into a portal, it becomes the parent to remove from.
        // We will reassign it back when we pop the portal on the way up.
        currentParent = node.stateNode.containerInfo;
        currentParentIsContainer = true; // Visit children because portals might contain host components.

        node.child.return = node;
        node = node.child;
        continue;
      }
    } else {
      commitUnmount(finishedRoot, node); // Visit children because we may find more host components below.

      if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }
    }

    if (node === current) {
      return;
    }

    while (node.sibling === null) {
      if (node.return === null || node.return === current) {
        return;
      }

      node = node.return;

      if (node.tag === HostPortal) {
        // When we go out of the portal, we need to restore the parent.
        // Since we don't keep a stack of them, we will search for it.
        currentParentIsValid = false;
      }
    }

    node.sibling.return = node.return;
    node = node.sibling;
  }
}

function commitDeletion(finishedRoot, current, renderPriorityLevel) {
  {
    // Recursively delete all host nodes from the parent.
    // Detach refs and call componentWillUnmount() on the whole subtree.
    unmountHostComponents(finishedRoot, current);
  }

  var alternate = current.alternate;
  detachFiberMutation(current);

  if (alternate !== null) {
    detachFiberMutation(alternate);
  }
}

function commitWork(current, finishedWork) {

  switch (finishedWork.tag) {
    case FunctionComponent:
    case ForwardRef:
    case MemoComponent:
    case SimpleMemoComponent:
    case Block:
      {
        // Layout effects are destroyed during the mutation phase so that all
        // destroy functions for all fibers are called before any create functions.
        // This prevents sibling component effects from interfering with each other,
        // e.g. a destroy function in one component should never override a ref set
        // by a create function in another component during the same commit.
        {
          commitHookEffectListUnmount(Layout | HasEffect, finishedWork);
        }

        return;
      }

    case ClassComponent:
      {
        return;
      }

    case HostComponent:
      {
        var instance = finishedWork.stateNode;

        if (instance != null) {
          // Commit the work prepared earlier.
          var newProps = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps
          // as the newProps. The updatePayload will contain the real change in
          // this case.

          var oldProps = current !== null ? current.memoizedProps : newProps;
          var type = finishedWork.type; // TODO: Type the updateQueue to be specific to host components.

          var updatePayload = finishedWork.updateQueue;
          finishedWork.updateQueue = null;

          if (updatePayload !== null) {
            commitUpdate(instance, updatePayload, type, oldProps, newProps);
          }
        }

        return;
      }

    case HostText:
      {
        if (!(finishedWork.stateNode !== null)) {
          {
            throw Error( "This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue." );
          }
        }

        var textInstance = finishedWork.stateNode;
        var newText = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps
        // as the newProps. The updatePayload will contain the real change in
        // this case.

        var oldText = current !== null ? current.memoizedProps : newText;
        commitTextUpdate(textInstance, oldText, newText);
        return;
      }

    case HostRoot:
      {
        {
          var _root = finishedWork.stateNode;

          if (_root.hydrate) {
            // We've just hydrated. No need to hydrate again.
            _root.hydrate = false;
            commitHydratedContainer(_root.containerInfo);
          }
        }

        return;
      }

    case Profiler:
      {
        return;
      }

    case SuspenseComponent:
      {
        commitSuspenseComponent(finishedWork);
        attachSuspenseRetryListeners(finishedWork);
        return;
      }

    case SuspenseListComponent:
      {
        attachSuspenseRetryListeners(finishedWork);
        return;
      }

    case IncompleteClassComponent:
      {
        return;
      }

    case FundamentalComponent:
      {

        break;
      }

    case ScopeComponent:
      {

        break;
      }

    case OffscreenComponent:
    case LegacyHiddenComponent:
      {
        var newState = finishedWork.memoizedState;
        var isHidden = newState !== null;
        hideOrUnhideAllChildren(finishedWork, isHidden);
        return;
      }
  }

  {
    {
      throw Error( "This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue." );
    }
  }
}

function commitSuspenseComponent(finishedWork) {
  var newState = finishedWork.memoizedState;

  if (newState !== null) {
    markCommitTimeOfFallback();

    {
      // Hide the Offscreen component that contains the primary children. TODO:
      // Ideally, this effect would have been scheduled on the Offscreen fiber
      // itself. That's how unhiding works: the Offscreen component schedules an
      // effect on itself. However, in this case, the component didn't complete,
      // so the fiber was never added to the effect list in the normal path. We
      // could have appended it to the effect list in the Suspense component's
      // second pass, but doing it this way is less complicated. This would be
      // simpler if we got rid of the effect list and traversed the tree, like
      // we're planning to do.
      var primaryChildParent = finishedWork.child;
      hideOrUnhideAllChildren(primaryChildParent, true);
    }
  }
}

function commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {

  var newState = finishedWork.memoizedState;

  if (newState === null) {
    var current = finishedWork.alternate;

    if (current !== null) {
      var prevState = current.memoizedState;

      if (prevState !== null) {
        var suspenseInstance = prevState.dehydrated;

        if (suspenseInstance !== null) {
          commitHydratedSuspenseInstance(suspenseInstance);
        }
      }
    }
  }
}

function attachSuspenseRetryListeners(finishedWork) {
  // If this boundary just timed out, then it will have a set of wakeables.
  // For each wakeable, attach a listener so that when it resolves, React
  // attempts to re-render the boundary in the primary (pre-timeout) state.
  var wakeables = finishedWork.updateQueue;

  if (wakeables !== null) {
    finishedWork.updateQueue = null;
    var retryCache = finishedWork.stateNode;

    if (retryCache === null) {
      retryCache = finishedWork.stateNode = new PossiblyWeakSet();
    }

    wakeables.forEach(function (wakeable) {
      // Memoize using the boundary fiber to prevent redundant listeners.
      var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);

      if (!retryCache.has(wakeable)) {
        {
          if (wakeable.__reactDoNotTraceInteractions !== true) {
            retry = tracing.unstable_wrap(retry);
          }
        }

        retryCache.add(wakeable);
        wakeable.then(retry, retry);
      }
    });
  }
} // This function detects when a Suspense boundary goes from visible to hidden.
// It returns false if the boundary is already hidden.
// TODO: Use an effect tag.


function isSuspenseBoundaryBeingHidden(current, finishedWork) {
  if (current !== null) {
    var oldState = current.memoizedState;

    if (oldState === null || oldState.dehydrated !== null) {
      var newState = finishedWork.memoizedState;
      return newState !== null && newState.dehydrated === null;
    }
  }

  return false;
}

function commitResetTextContent(current) {

  resetTextContent(current.stateNode);
}

var COMPONENT_TYPE = 0;
var HAS_PSEUDO_CLASS_TYPE = 1;
var ROLE_TYPE = 2;
var TEST_NAME_TYPE = 3;
var TEXT_TYPE = 4;

if (typeof Symbol === 'function' && Symbol.for) {
  var symbolFor$1 = Symbol.for;
  COMPONENT_TYPE = symbolFor$1('selector.component');
  HAS_PSEUDO_CLASS_TYPE = symbolFor$1('selector.has_pseudo_class');
  ROLE_TYPE = symbolFor$1('selector.role');
  TEST_NAME_TYPE = symbolFor$1('selector.test_id');
  TEXT_TYPE = symbolFor$1('selector.text');
}
var commitHooks = [];
function onCommitRoot$1() {
  {
    commitHooks.forEach(function (commitHook) {
      return commitHook();
    });
  }
}

var ceil = Math.ceil;
var ReactCurrentDispatcher$2 = ReactSharedInternals.ReactCurrentDispatcher,
    ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner,
    IsSomeRendererActing = ReactSharedInternals.IsSomeRendererActing;
var NoContext =
/*             */
0;
var BatchedContext =
/*               */
1;
var EventContext =
/*                 */
2;
var DiscreteEventContext =
/*         */
4;
var LegacyUnbatchedContext =
/*       */
8;
var RenderContext =
/*                */
16;
var CommitContext =
/*                */
32;
var RetryAfterError =
/*       */
64;
var RootIncomplete = 0;
var RootFatalErrored = 1;
var RootErrored = 2;
var RootSuspended = 3;
var RootSuspendedWithDelay = 4;
var RootCompleted = 5; // Describes where we are in the React execution stack

var executionContext = NoContext; // The root we're working on

var workInProgressRoot = null; // The fiber we're working on

var workInProgress = null; // The lanes we're rendering

var workInProgressRootRenderLanes = NoLanes; // Stack that allows components to change the render lanes for its subtree
// This is a superset of the lanes we started working on at the root. The only
// case where it's different from `workInProgressRootRenderLanes` is when we
// enter a subtree that is hidden and needs to be unhidden: Suspense and
// Offscreen component.
//
// Most things in the work loop should deal with workInProgressRootRenderLanes.
// Most things in begin/complete phases should deal with subtreeRenderLanes.

var subtreeRenderLanes = NoLanes;
var subtreeRenderLanesCursor = createCursor(NoLanes); // Whether to root completed, errored, suspended, etc.

var workInProgressRootExitStatus = RootIncomplete; // A fatal error, if one is thrown

var workInProgressRootFatalError = null; // "Included" lanes refer to lanes that were worked on during this render. It's
// slightly different than `renderLanes` because `renderLanes` can change as you
// enter and exit an Offscreen tree. This value is the combination of all render
// lanes for the entire render phase.

var workInProgressRootIncludedLanes = NoLanes; // The work left over by components that were visited during this render. Only
// includes unprocessed updates, not work in bailed out children.

var workInProgressRootSkippedLanes = NoLanes; // Lanes that were updated (in an interleaved event) during this render.

var workInProgressRootUpdatedLanes = NoLanes; // Lanes that were pinged (in an interleaved event) during this render.

var workInProgressRootPingedLanes = NoLanes;
var mostRecentlyUpdatedRoot = null; // The most recent time we committed a fallback. This lets us ensure a train
// model where we don't commit new loading states in too quick succession.

var globalMostRecentFallbackTime = 0;
var FALLBACK_THROTTLE_MS = 500; // The absolute time for when we should start giving up on rendering
// more and prefer CPU suspense heuristics instead.

var workInProgressRootRenderTargetTime = Infinity; // How long a render is supposed to take before we start following CPU
// suspense heuristics and opt out of rendering more content.

var RENDER_TIMEOUT_MS = 500;

function resetRenderTimer() {
  workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;
}

function getRenderTargetTime() {
  return workInProgressRootRenderTargetTime;
}
var nextEffect = null;
var hasUncaughtError = false;
var firstUncaughtError = null;
var legacyErrorBoundariesThatAlreadyFailed = null;
var rootDoesHavePassiveEffects = false;
var rootWithPendingPassiveEffects = null;
var pendingPassiveEffectsRenderPriority = NoPriority$1;
var pendingPassiveEffectsLanes = NoLanes;
var pendingPassiveHookEffectsMount = [];
var pendingPassiveHookEffectsUnmount = [];
var rootsWithPendingDiscreteUpdates = null; // Use these to prevent an infinite loop of nested updates

var NESTED_UPDATE_LIMIT = 50;
var nestedUpdateCount = 0;
var rootWithNestedUpdates = null;
var NESTED_PASSIVE_UPDATE_LIMIT = 50;
var nestedPassiveUpdateCount = 0; // Marks the need to reschedule pending interactions at these lanes
// during the commit phase. This enables them to be traced across components
// that spawn new work during render. E.g. hidden boundaries, suspended SSR
// hydration or SuspenseList.
// TODO: Can use a bitmask instead of an array

var spawnedWorkDuringRender = null; // If two updates are scheduled within the same event, we should treat their
// event times as simultaneous, even if the actual clock time has advanced
// between the first and second call.

var currentEventTime = NoTimestamp;
var currentEventWipLanes = NoLanes;
var currentEventPendingLanes = NoLanes; // Dev only flag that tracks if passive effects are currently being flushed.
// We warn about state updates for unmounted components differently in this case.

var isFlushingPassiveEffects = false;
var focusedInstanceHandle = null;
var shouldFireAfterActiveInstanceBlur = false;
function getWorkInProgressRoot() {
  return workInProgressRoot;
}
function requestEventTime() {
  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
    // We're inside React, so it's fine to read the actual time.
    return now();
  } // We're not inside React, so we may be in the middle of a browser event.


  if (currentEventTime !== NoTimestamp) {
    // Use the same start time for all updates until we enter React again.
    return currentEventTime;
  } // This is the first update since React yielded. Compute a new start time.


  currentEventTime = now();
  return currentEventTime;
}
function requestUpdateLane(fiber) {
  // Special cases
  var mode = fiber.mode;

  if ((mode & BlockingMode) === NoMode) {
    return SyncLane;
  } else if ((mode & ConcurrentMode) === NoMode) {
    return getCurrentPriorityLevel() === ImmediatePriority$1 ? SyncLane : SyncBatchedLane;
  } // The algorithm for assigning an update to a lane should be stable for all
  // updates at the same priority within the same event. To do this, the inputs
  // to the algorithm must be the same. For example, we use the `renderLanes`
  // to avoid choosing a lane that is already in the middle of rendering.
  //
  // However, the "included" lanes could be mutated in between updates in the
  // same event, like if you perform an update inside `flushSync`. Or any other
  // code path that might call `prepareFreshStack`.
  //
  // The trick we use is to cache the first of each of these inputs within an
  // event. Then reset the cached values once we can be sure the event is over.
  // Our heuristic for that is whenever we enter a concurrent work loop.
  //
  // We'll do the same for `currentEventPendingLanes` below.


  if (currentEventWipLanes === NoLanes) {
    currentEventWipLanes = workInProgressRootIncludedLanes;
  }

  var isTransition = requestCurrentTransition() !== NoTransition;

  if (isTransition) {
    if (currentEventPendingLanes !== NoLanes) {
      currentEventPendingLanes = mostRecentlyUpdatedRoot !== null ? mostRecentlyUpdatedRoot.pendingLanes : NoLanes;
    }

    return findTransitionLane(currentEventWipLanes, currentEventPendingLanes);
  } // TODO: Remove this dependency on the Scheduler priority.
  // To do that, we're replacing it with an update lane priority.


  var schedulerPriority = getCurrentPriorityLevel(); // The old behavior was using the priority level of the Scheduler.
  // This couples React to the Scheduler internals, so we're replacing it
  // with the currentUpdateLanePriority above. As an example of how this
  // could be problematic, if we're not inside `Scheduler.runWithPriority`,
  // then we'll get the priority of the current running Scheduler task,
  // which is probably not what we want.

  var lane;

  if ( // TODO: Temporary. We're removing the concept of discrete updates.
  (executionContext & DiscreteEventContext) !== NoContext && schedulerPriority === UserBlockingPriority$2) {
    lane = findUpdateLane(InputDiscreteLanePriority, currentEventWipLanes);
  } else {
    var schedulerLanePriority = schedulerPriorityToLanePriority(schedulerPriority);

    lane = findUpdateLane(schedulerLanePriority, currentEventWipLanes);
  }

  return lane;
}

function requestRetryLane(fiber) {
  // This is a fork of `requestUpdateLane` designed specifically for Suspense
  // "retries" — a special update that attempts to flip a Suspense boundary
  // from its placeholder state to its primary/resolved state.
  // Special cases
  var mode = fiber.mode;

  if ((mode & BlockingMode) === NoMode) {
    return SyncLane;
  } else if ((mode & ConcurrentMode) === NoMode) {
    return getCurrentPriorityLevel() === ImmediatePriority$1 ? SyncLane : SyncBatchedLane;
  } // See `requestUpdateLane` for explanation of `currentEventWipLanes`


  if (currentEventWipLanes === NoLanes) {
    currentEventWipLanes = workInProgressRootIncludedLanes;
  }

  return findRetryLane(currentEventWipLanes);
}

function scheduleUpdateOnFiber(fiber, lane, eventTime) {
  checkForNestedUpdates();
  warnAboutRenderPhaseUpdatesInDEV(fiber);
  var root = markUpdateLaneFromFiberToRoot(fiber, lane);

  if (root === null) {
    warnAboutUpdateOnUnmountedFiberInDEV(fiber);
    return null;
  } // Mark that the root has a pending update.


  markRootUpdated(root, lane, eventTime);

  if (root === workInProgressRoot) {
    // Received an update to a tree that's in the middle of rendering. Mark
    // that there was an interleaved update work on this root. Unless the
    // `deferRenderPhaseUpdateToNextBatch` flag is off and this is a render
    // phase update. In that case, we don't treat render phase updates as if
    // they were interleaved, for backwards compat reasons.
    {
      workInProgressRootUpdatedLanes = mergeLanes(workInProgressRootUpdatedLanes, lane);
    }

    if (workInProgressRootExitStatus === RootSuspendedWithDelay) {
      // The root already suspended with a delay, which means this render
      // definitely won't finish. Since we have a new update, let's mark it as
      // suspended now, right before marking the incoming update. This has the
      // effect of interrupting the current render and switching to the update.
      // TODO: Make sure this doesn't override pings that happen while we've
      // already started rendering.
      markRootSuspended$1(root, workInProgressRootRenderLanes);
    }
  } // TODO: requestUpdateLanePriority also reads the priority. Pass the
  // priority as an argument to that function and this one.


  var priorityLevel = getCurrentPriorityLevel();

  if (lane === SyncLane) {
    if ( // Check if we're inside unbatchedUpdates
    (executionContext & LegacyUnbatchedContext) !== NoContext && // Check if we're not already rendering
    (executionContext & (RenderContext | CommitContext)) === NoContext) {
      // Register pending interactions on the root to avoid losing traced interaction data.
      schedulePendingInteractions(root, lane); // This is a legacy edge case. The initial mount of a ReactDOM.render-ed
      // root inside of batchedUpdates should be synchronous, but layout updates
      // should be deferred until the end of the batch.

      performSyncWorkOnRoot(root);
    } else {
      ensureRootIsScheduled(root, eventTime);
      schedulePendingInteractions(root, lane);

      if (executionContext === NoContext) {
        // Flush the synchronous work now, unless we're already working or inside
        // a batch. This is intentionally inside scheduleUpdateOnFiber instead of
        // scheduleCallbackForFiber to preserve the ability to schedule a callback
        // without immediately flushing it. We only do this for user-initiated
        // updates, to preserve historical behavior of legacy mode.
        resetRenderTimer();
        flushSyncCallbackQueue();
      }
    }
  } else {
    // Schedule a discrete update but only if it's not Sync.
    if ((executionContext & DiscreteEventContext) !== NoContext && ( // Only updates at user-blocking priority or greater are considered
    // discrete, even inside a discrete event.
    priorityLevel === UserBlockingPriority$2 || priorityLevel === ImmediatePriority$1)) {
      // This is the result of a discrete event. Track the lowest priority
      // discrete update per root so we can flush them early, if needed.
      if (rootsWithPendingDiscreteUpdates === null) {
        rootsWithPendingDiscreteUpdates = new Set([root]);
      } else {
        rootsWithPendingDiscreteUpdates.add(root);
      }
    } // Schedule other updates after in case the callback is sync.


    ensureRootIsScheduled(root, eventTime);
    schedulePendingInteractions(root, lane);
  } // We use this when assigning a lane for a transition inside
  // `requestUpdateLane`. We assume it's the same as the root being updated,
  // since in the common case of a single root app it probably is. If it's not
  // the same root, then it's not a huge deal, we just might batch more stuff
  // together more than necessary.


  mostRecentlyUpdatedRoot = root;
} // This is split into a separate function so we can mark a fiber with pending
// work without treating it as a typical update that originates from an event;
// e.g. retrying a Suspense boundary isn't an update, but it does schedule work
// on a fiber.

function markUpdateLaneFromFiberToRoot(sourceFiber, lane) {
  // Update the source fiber's lanes
  sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);
  var alternate = sourceFiber.alternate;

  if (alternate !== null) {
    alternate.lanes = mergeLanes(alternate.lanes, lane);
  }

  {
    if (alternate === null && (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags) {
      warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
    }
  } // Walk the parent path to the root and update the child expiration time.


  var node = sourceFiber;
  var parent = sourceFiber.return;

  while (parent !== null) {
    parent.childLanes = mergeLanes(parent.childLanes, lane);
    alternate = parent.alternate;

    if (alternate !== null) {
      alternate.childLanes = mergeLanes(alternate.childLanes, lane);
    } else {
      {
        if ((parent.flags & (Placement | Hydrating)) !== NoFlags) {
          warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
        }
      }
    }

    node = parent;
    parent = parent.return;
  }

  if (node.tag === HostRoot) {
    var root = node.stateNode;
    return root;
  } else {
    return null;
  }
} // Use this function to schedule a task for a root. There's only one task per
// root; if a task was already scheduled, we'll check to make sure the priority
// of the existing task is the same as the priority of the next level that the
// root has work on. This function is called on every update, and right before
// exiting a task.


function ensureRootIsScheduled(root, currentTime) {
  var existingCallbackNode = root.callbackNode; // Check if any lanes are being starved by other work. If so, mark them as
  // expired so we know to work on those next.

  markStarvedLanesAsExpired(root, currentTime); // Determine the next lanes to work on, and their priority.

  var nextLanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes); // This returns the priority level computed during the `getNextLanes` call.

  var newCallbackPriority = returnNextLanesPriority();

  if (nextLanes === NoLanes) {
    // Special case: There's nothing to work on.
    if (existingCallbackNode !== null) {
      cancelCallback(existingCallbackNode);
      root.callbackNode = null;
      root.callbackPriority = NoLanePriority;
    }

    return;
  } // Check if there's an existing task. We may be able to reuse it.


  if (existingCallbackNode !== null) {
    var existingCallbackPriority = root.callbackPriority;

    if (existingCallbackPriority === newCallbackPriority) {
      // The priority hasn't changed. We can reuse the existing task. Exit.
      return;
    } // The priority changed. Cancel the existing callback. We'll schedule a new
    // one below.


    cancelCallback(existingCallbackNode);
  } // Schedule a new callback.


  var newCallbackNode;

  if (newCallbackPriority === SyncLanePriority) {
    // Special case: Sync React callbacks are scheduled on a special
    // internal queue
    newCallbackNode = scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));
  } else if (newCallbackPriority === SyncBatchedLanePriority) {
    newCallbackNode = scheduleCallback(ImmediatePriority$1, performSyncWorkOnRoot.bind(null, root));
  } else {
    var schedulerPriorityLevel = lanePriorityToSchedulerPriority(newCallbackPriority);
    newCallbackNode = scheduleCallback(schedulerPriorityLevel, performConcurrentWorkOnRoot.bind(null, root));
  }

  root.callbackPriority = newCallbackPriority;
  root.callbackNode = newCallbackNode;
} // This is the entry point for every concurrent task, i.e. anything that
// goes through Scheduler.


function performConcurrentWorkOnRoot(root) {
  // Since we know we're in a React event, we can clear the current
  // event time. The next update will compute a new event time.
  currentEventTime = NoTimestamp;
  currentEventWipLanes = NoLanes;
  currentEventPendingLanes = NoLanes;

  if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
    {
      throw Error( "Should not already be working." );
    }
  } // Flush any pending passive effects before deciding which lanes to work on,
  // in case they schedule additional work.


  var originalCallbackNode = root.callbackNode;
  var didFlushPassiveEffects = flushPassiveEffects();

  if (didFlushPassiveEffects) {
    // Something in the passive effect phase may have canceled the current task.
    // Check if the task node for this root was changed.
    if (root.callbackNode !== originalCallbackNode) {
      // The current task was canceled. Exit. We don't need to call
      // `ensureRootIsScheduled` because the check above implies either that
      // there's a new task, or that there's no remaining work on this root.
      return null;
    }
  } // Determine the next expiration time to work on, using the fields stored
  // on the root.


  var lanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);

  if (lanes === NoLanes) {
    // Defensive coding. This is never expected to happen.
    return null;
  }

  var exitStatus = renderRootConcurrent(root, lanes);

  if (includesSomeLane(workInProgressRootIncludedLanes, workInProgressRootUpdatedLanes)) {
    // The render included lanes that were updated during the render phase.
    // For example, when unhiding a hidden tree, we include all the lanes
    // that were previously skipped when the tree was hidden. That set of
    // lanes is a superset of the lanes we started rendering with.
    //
    // So we'll throw out the current work and restart.
    prepareFreshStack(root, NoLanes);
  } else if (exitStatus !== RootIncomplete) {
    if (exitStatus === RootErrored) {
      executionContext |= RetryAfterError; // If an error occurred during hydration,
      // discard server response and fall back to client side render.

      if (root.hydrate) {
        root.hydrate = false;
        clearContainer(root.containerInfo);
      } // If something threw an error, try rendering one more time. We'll render
      // synchronously to block concurrent data mutations, and we'll includes
      // all pending updates are included. If it still fails after the second
      // attempt, we'll give up and commit the resulting tree.


      lanes = getLanesToRetrySynchronouslyOnError(root);

      if (lanes !== NoLanes) {
        exitStatus = renderRootSync(root, lanes);
      }
    }

    if (exitStatus === RootFatalErrored) {
      var fatalError = workInProgressRootFatalError;
      prepareFreshStack(root, NoLanes);
      markRootSuspended$1(root, lanes);
      ensureRootIsScheduled(root, now());
      throw fatalError;
    } // We now have a consistent tree. The next step is either to commit it,
    // or, if something suspended, wait to commit it after a timeout.


    var finishedWork = root.current.alternate;
    root.finishedWork = finishedWork;
    root.finishedLanes = lanes;
    finishConcurrentRender(root, exitStatus, lanes);
  }

  ensureRootIsScheduled(root, now());

  if (root.callbackNode === originalCallbackNode) {
    // The task node scheduled for this root is the same one that's
    // currently executed. Need to return a continuation.
    return performConcurrentWorkOnRoot.bind(null, root);
  }

  return null;
}

function finishConcurrentRender(root, exitStatus, lanes) {
  switch (exitStatus) {
    case RootIncomplete:
    case RootFatalErrored:
      {
        {
          {
            throw Error( "Root did not complete. This is a bug in React." );
          }
        }
      }
    // Flow knows about invariant, so it complains if I add a break
    // statement, but eslint doesn't know about invariant, so it complains
    // if I do. eslint-disable-next-line no-fallthrough

    case RootErrored:
      {
        // We should have already attempted to retry this tree. If we reached
        // this point, it errored again. Commit it.
        commitRoot(root);
        break;
      }

    case RootSuspended:
      {
        markRootSuspended$1(root, lanes); // We have an acceptable loading state. We need to figure out if we
        // should immediately commit it or wait a bit.

        if (includesOnlyRetries(lanes) && // do not delay if we're inside an act() scope
        !shouldForceFlushFallbacksInDEV()) {
          // This render only included retries, no updates. Throttle committing
          // retries so that we don't show too many loading states too quickly.
          var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(); // Don't bother with a very short suspense time.

          if (msUntilTimeout > 10) {
            var nextLanes = getNextLanes(root, NoLanes);

            if (nextLanes !== NoLanes) {
              // There's additional work on this root.
              break;
            }

            var suspendedLanes = root.suspendedLanes;

            if (!isSubsetOfLanes(suspendedLanes, lanes)) {
              // We should prefer to render the fallback of at the last
              // suspended level. Ping the last suspended level to try
              // rendering it again.
              // FIXME: What if the suspended lanes are Idle? Should not restart.
              var eventTime = requestEventTime();
              markRootPinged(root, suspendedLanes);
              break;
            } // The render is suspended, it hasn't timed out, and there's no
            // lower priority work to do. Instead of committing the fallback
            // immediately, wait for more data to arrive.


            root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root), msUntilTimeout);
            break;
          }
        } // The work expired. Commit immediately.


        commitRoot(root);
        break;
      }

    case RootSuspendedWithDelay:
      {
        markRootSuspended$1(root, lanes);

        if (includesOnlyTransitions(lanes)) {
          // This is a transition, so we should exit without committing a
          // placeholder and without scheduling a timeout. Delay indefinitely
          // until we receive more data.
          break;
        }

        if (!shouldForceFlushFallbacksInDEV()) {
          // This is not a transition, but we did trigger an avoided state.
          // Schedule a placeholder to display after a short delay, using the Just
          // Noticeable Difference.
          // TODO: Is the JND optimization worth the added complexity? If this is
          // the only reason we track the event time, then probably not.
          // Consider removing.
          var mostRecentEventTime = getMostRecentEventTime(root, lanes);
          var eventTimeMs = mostRecentEventTime;
          var timeElapsedMs = now() - eventTimeMs;

          var _msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs; // Don't bother with a very short suspense time.


          if (_msUntilTimeout > 10) {
            // Instead of committing the fallback immediately, wait for more data
            // to arrive.
            root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root), _msUntilTimeout);
            break;
          }
        } // Commit the placeholder.


        commitRoot(root);
        break;
      }

    case RootCompleted:
      {
        // The work completed. Ready to commit.
        commitRoot(root);
        break;
      }

    default:
      {
        {
          {
            throw Error( "Unknown root exit status." );
          }
        }
      }
  }
}

function markRootSuspended$1(root, suspendedLanes) {
  // When suspending, we should always exclude lanes that were pinged or (more
  // rarely, since we try to avoid it) updated during the render phase.
  // TODO: Lol maybe there's a better way to factor this besides this
  // obnoxiously named function :)
  suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);
  suspendedLanes = removeLanes(suspendedLanes, workInProgressRootUpdatedLanes);
  markRootSuspended(root, suspendedLanes);
} // This is the entry point for synchronous tasks that don't go
// through Scheduler


function performSyncWorkOnRoot(root) {
  if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
    {
      throw Error( "Should not already be working." );
    }
  }

  flushPassiveEffects();
  var lanes;
  var exitStatus;

  if (root === workInProgressRoot && includesSomeLane(root.expiredLanes, workInProgressRootRenderLanes)) {
    // There's a partial tree, and at least one of its lanes has expired. Finish
    // rendering it before rendering the rest of the expired work.
    lanes = workInProgressRootRenderLanes;
    exitStatus = renderRootSync(root, lanes);

    if (includesSomeLane(workInProgressRootIncludedLanes, workInProgressRootUpdatedLanes)) {
      // The render included lanes that were updated during the render phase.
      // For example, when unhiding a hidden tree, we include all the lanes
      // that were previously skipped when the tree was hidden. That set of
      // lanes is a superset of the lanes we started rendering with.
      //
      // Note that this only happens when part of the tree is rendered
      // concurrently. If the whole tree is rendered synchronously, then there
      // are no interleaved events.
      lanes = getNextLanes(root, lanes);
      exitStatus = renderRootSync(root, lanes);
    }
  } else {
    lanes = getNextLanes(root, NoLanes);
    exitStatus = renderRootSync(root, lanes);
  }

  if (root.tag !== LegacyRoot && exitStatus === RootErrored) {
    executionContext |= RetryAfterError; // If an error occurred during hydration,
    // discard server response and fall back to client side render.

    if (root.hydrate) {
      root.hydrate = false;
      clearContainer(root.containerInfo);
    } // If something threw an error, try rendering one more time. We'll render
    // synchronously to block concurrent data mutations, and we'll includes
    // all pending updates are included. If it still fails after the second
    // attempt, we'll give up and commit the resulting tree.


    lanes = getLanesToRetrySynchronouslyOnError(root);

    if (lanes !== NoLanes) {
      exitStatus = renderRootSync(root, lanes);
    }
  }

  if (exitStatus === RootFatalErrored) {
    var fatalError = workInProgressRootFatalError;
    prepareFreshStack(root, NoLanes);
    markRootSuspended$1(root, lanes);
    ensureRootIsScheduled(root, now());
    throw fatalError;
  } // We now have a consistent tree. Because this is a sync render, we
  // will commit it even if something suspended.


  var finishedWork = root.current.alternate;
  root.finishedWork = finishedWork;
  root.finishedLanes = lanes;
  commitRoot(root); // Before exiting, make sure there's a callback scheduled for the next
  // pending level.

  ensureRootIsScheduled(root, now());
  return null;
}
function flushDiscreteUpdates() {
  // TODO: Should be able to flush inside batchedUpdates, but not inside `act`.
  // However, `act` uses `batchedUpdates`, so there's no way to distinguish
  // those two cases. Need to fix this before exposing flushDiscreteUpdates
  // as a public API.
  if ((executionContext & (BatchedContext | RenderContext | CommitContext)) !== NoContext) {
    {
      if ((executionContext & RenderContext) !== NoContext) {
        error('unstable_flushDiscreteUpdates: Cannot flush updates when React is ' + 'already rendering.');
      }
    } // We're already rendering, so we can't synchronously flush pending work.
    // This is probably a nested event dispatch triggered by a lifecycle/effect,
    // like `el.focus()`. Exit.


    return;
  }

  flushPendingDiscreteUpdates(); // If the discrete updates scheduled passive effects, flush them now so that
  // they fire before the next serial event.

  flushPassiveEffects();
}

function flushPendingDiscreteUpdates() {
  if (rootsWithPendingDiscreteUpdates !== null) {
    // For each root with pending discrete updates, schedule a callback to
    // immediately flush them.
    var roots = rootsWithPendingDiscreteUpdates;
    rootsWithPendingDiscreteUpdates = null;
    roots.forEach(function (root) {
      markDiscreteUpdatesExpired(root);
      ensureRootIsScheduled(root, now());
    });
  } // Now flush the immediate queue.


  flushSyncCallbackQueue();
}

function batchedUpdates$1(fn, a) {
  var prevExecutionContext = executionContext;
  executionContext |= BatchedContext;

  try {
    return fn(a);
  } finally {
    executionContext = prevExecutionContext;

    if (executionContext === NoContext) {
      // Flush the immediate callbacks that were scheduled during this batch
      resetRenderTimer();
      flushSyncCallbackQueue();
    }
  }
}
function batchedEventUpdates$1(fn, a) {
  var prevExecutionContext = executionContext;
  executionContext |= EventContext;

  try {
    return fn(a);
  } finally {
    executionContext = prevExecutionContext;

    if (executionContext === NoContext) {
      // Flush the immediate callbacks that were scheduled during this batch
      resetRenderTimer();
      flushSyncCallbackQueue();
    }
  }
}
function discreteUpdates$1(fn, a, b, c, d) {
  var prevExecutionContext = executionContext;
  executionContext |= DiscreteEventContext;

  {
    try {
      return runWithPriority$1(UserBlockingPriority$2, fn.bind(null, a, b, c, d));
    } finally {
      executionContext = prevExecutionContext;

      if (executionContext === NoContext) {
        // Flush the immediate callbacks that were scheduled during this batch
        resetRenderTimer();
        flushSyncCallbackQueue();
      }
    }
  }
}
function unbatchedUpdates(fn, a) {
  var prevExecutionContext = executionContext;
  executionContext &= ~BatchedContext;
  executionContext |= LegacyUnbatchedContext;

  try {
    return fn(a);
  } finally {
    executionContext = prevExecutionContext;

    if (executionContext === NoContext) {
      // Flush the immediate callbacks that were scheduled during this batch
      resetRenderTimer();
      flushSyncCallbackQueue();
    }
  }
}
function flushSync(fn, a) {
  var prevExecutionContext = executionContext;

  if ((prevExecutionContext & (RenderContext | CommitContext)) !== NoContext) {
    {
      error('flushSync was called from inside a lifecycle method. React cannot ' + 'flush when React is already rendering. Consider moving this call to ' + 'a scheduler task or micro task.');
    }

    return fn(a);
  }

  executionContext |= BatchedContext;

  {
    try {
      if (fn) {
        return runWithPriority$1(ImmediatePriority$1, fn.bind(null, a));
      } else {
        return undefined;
      }
    } finally {
      executionContext = prevExecutionContext; // Flush the immediate callbacks that were scheduled during this batch.
      // Note that this will happen even if batchedUpdates is higher up
      // the stack.

      flushSyncCallbackQueue();
    }
  }
}
function pushRenderLanes(fiber, lanes) {
  push(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);
  subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);
  workInProgressRootIncludedLanes = mergeLanes(workInProgressRootIncludedLanes, lanes);
}
function popRenderLanes(fiber) {
  subtreeRenderLanes = subtreeRenderLanesCursor.current;
  pop(subtreeRenderLanesCursor, fiber);
}

function prepareFreshStack(root, lanes) {
  root.finishedWork = null;
  root.finishedLanes = NoLanes;
  var timeoutHandle = root.timeoutHandle;

  if (timeoutHandle !== noTimeout) {
    // The root previous suspended and scheduled a timeout to commit a fallback
    // state. Now that we have additional work, cancel the timeout.
    root.timeoutHandle = noTimeout; // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above

    cancelTimeout(timeoutHandle);
  }

  if (workInProgress !== null) {
    var interruptedWork = workInProgress.return;

    while (interruptedWork !== null) {
      unwindInterruptedWork(interruptedWork);
      interruptedWork = interruptedWork.return;
    }
  }

  workInProgressRoot = root;
  workInProgress = createWorkInProgress(root.current, null);
  workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;
  workInProgressRootExitStatus = RootIncomplete;
  workInProgressRootFatalError = null;
  workInProgressRootSkippedLanes = NoLanes;
  workInProgressRootUpdatedLanes = NoLanes;
  workInProgressRootPingedLanes = NoLanes;

  {
    spawnedWorkDuringRender = null;
  }

  {
    ReactStrictModeWarnings.discardPendingWarnings();
  }
}

function handleError(root, thrownValue) {
  do {
    var erroredWork = workInProgress;

    try {
      // Reset module-level state that was set during the render phase.
      resetContextDependencies();
      resetHooksAfterThrow();
      resetCurrentFiber(); // TODO: I found and added this missing line while investigating a
      // separate issue. Write a regression test using string refs.

      ReactCurrentOwner$2.current = null;

      if (erroredWork === null || erroredWork.return === null) {
        // Expected to be working on a non-root fiber. This is a fatal error
        // because there's no ancestor that can handle it; the root is
        // supposed to capture all errors that weren't caught by an error
        // boundary.
        workInProgressRootExitStatus = RootFatalErrored;
        workInProgressRootFatalError = thrownValue; // Set `workInProgress` to null. This represents advancing to the next
        // sibling, or the parent if there are no siblings. But since the root
        // has no siblings nor a parent, we set it to null. Usually this is
        // handled by `completeUnitOfWork` or `unwindWork`, but since we're
        // intentionally not calling those, we need set it here.
        // TODO: Consider calling `unwindWork` to pop the contexts.

        workInProgress = null;
        return;
      }

      if (enableProfilerTimer && erroredWork.mode & ProfileMode) {
        // Record the time spent rendering before an error was thrown. This
        // avoids inaccurate Profiler durations in the case of a
        // suspended render.
        stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);
      }

      throwException(root, erroredWork.return, erroredWork, thrownValue, workInProgressRootRenderLanes);
      completeUnitOfWork(erroredWork);
    } catch (yetAnotherThrownValue) {
      // Something in the return path also threw.
      thrownValue = yetAnotherThrownValue;

      if (workInProgress === erroredWork && erroredWork !== null) {
        // If this boundary has already errored, then we had trouble processing
        // the error. Bubble it to the next boundary.
        erroredWork = erroredWork.return;
        workInProgress = erroredWork;
      } else {
        erroredWork = workInProgress;
      }

      continue;
    } // Return to the normal work loop.


    return;
  } while (true);
}

function pushDispatcher() {
  var prevDispatcher = ReactCurrentDispatcher$2.current;
  ReactCurrentDispatcher$2.current = ContextOnlyDispatcher;

  if (prevDispatcher === null) {
    // The React isomorphic package does not include a default dispatcher.
    // Instead the first renderer will lazily attach one, in order to give
    // nicer error messages.
    return ContextOnlyDispatcher;
  } else {
    return prevDispatcher;
  }
}

function popDispatcher(prevDispatcher) {
  ReactCurrentDispatcher$2.current = prevDispatcher;
}

function pushInteractions(root) {
  {
    var prevInteractions = tracing.__interactionsRef.current;
    tracing.__interactionsRef.current = root.memoizedInteractions;
    return prevInteractions;
  }
}

function popInteractions(prevInteractions) {
  {
    tracing.__interactionsRef.current = prevInteractions;
  }
}

function markCommitTimeOfFallback() {
  globalMostRecentFallbackTime = now();
}
function markSkippedUpdateLanes(lane) {
  workInProgressRootSkippedLanes = mergeLanes(lane, workInProgressRootSkippedLanes);
}
function renderDidSuspend() {
  if (workInProgressRootExitStatus === RootIncomplete) {
    workInProgressRootExitStatus = RootSuspended;
  }
}
function renderDidSuspendDelayIfPossible() {
  if (workInProgressRootExitStatus === RootIncomplete || workInProgressRootExitStatus === RootSuspended) {
    workInProgressRootExitStatus = RootSuspendedWithDelay;
  } // Check if there are updates that we skipped tree that might have unblocked
  // this render.


  if (workInProgressRoot !== null && (includesNonIdleWork(workInProgressRootSkippedLanes) || includesNonIdleWork(workInProgressRootUpdatedLanes))) {
    // Mark the current render as suspended so that we switch to working on
    // the updates that were skipped. Usually we only suspend at the end of
    // the render phase.
    // TODO: We should probably always mark the root as suspended immediately
    // (inside this function), since by suspending at the end of the render
    // phase introduces a potential mistake where we suspend lanes that were
    // pinged or updated while we were rendering.
    markRootSuspended$1(workInProgressRoot, workInProgressRootRenderLanes);
  }
}
function renderDidError() {
  if (workInProgressRootExitStatus !== RootCompleted) {
    workInProgressRootExitStatus = RootErrored;
  }
} // Called during render to determine if anything has suspended.
// Returns false if we're not sure.

function renderHasNotSuspendedYet() {
  // If something errored or completed, we can't really be sure,
  // so those are false.
  return workInProgressRootExitStatus === RootIncomplete;
}

function renderRootSync(root, lanes) {
  var prevExecutionContext = executionContext;
  executionContext |= RenderContext;
  var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack
  // and prepare a fresh one. Otherwise we'll continue where we left off.

  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {
    prepareFreshStack(root, lanes);
    startWorkOnPendingInteractions(root, lanes);
  }

  var prevInteractions = pushInteractions(root);

  do {
    try {
      workLoopSync();
      break;
    } catch (thrownValue) {
      handleError(root, thrownValue);
    }
  } while (true);

  resetContextDependencies();

  {
    popInteractions(prevInteractions);
  }

  executionContext = prevExecutionContext;
  popDispatcher(prevDispatcher);

  if (workInProgress !== null) {
    // This is a sync render, so we should have finished the whole tree.
    {
      {
        throw Error( "Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue." );
      }
    }
  }


  workInProgressRoot = null;
  workInProgressRootRenderLanes = NoLanes;
  return workInProgressRootExitStatus;
} // The work loop is an extremely hot path. Tell Closure not to inline it.

/** @noinline */


function workLoopSync() {
  // Already timed out, so perform work without checking if we need to yield.
  while (workInProgress !== null) {
    performUnitOfWork(workInProgress);
  }
}

function renderRootConcurrent(root, lanes) {
  var prevExecutionContext = executionContext;
  executionContext |= RenderContext;
  var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack
  // and prepare a fresh one. Otherwise we'll continue where we left off.

  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {
    resetRenderTimer();
    prepareFreshStack(root, lanes);
    startWorkOnPendingInteractions(root, lanes);
  }

  var prevInteractions = pushInteractions(root);

  do {
    try {
      workLoopConcurrent();
      break;
    } catch (thrownValue) {
      handleError(root, thrownValue);
    }
  } while (true);

  resetContextDependencies();

  {
    popInteractions(prevInteractions);
  }

  popDispatcher(prevDispatcher);
  executionContext = prevExecutionContext;


  if (workInProgress !== null) {

    return RootIncomplete;
  } else {


    workInProgressRoot = null;
    workInProgressRootRenderLanes = NoLanes; // Return the final exit status.

    return workInProgressRootExitStatus;
  }
}
/** @noinline */


function workLoopConcurrent() {
  // Perform work until Scheduler asks us to yield
  while (workInProgress !== null && !shouldYield()) {
    performUnitOfWork(workInProgress);
  }
}

function performUnitOfWork(unitOfWork) {
  // The current, flushed, state of this fiber is the alternate. Ideally
  // nothing should rely on this, but relying on it here means that we don't
  // need an additional field on the work in progress.
  var current = unitOfWork.alternate;
  setCurrentFiber(unitOfWork);
  var next;

  if ( (unitOfWork.mode & ProfileMode) !== NoMode) {
    startProfilerTimer(unitOfWork);
    next = beginWork$1(current, unitOfWork, subtreeRenderLanes);
    stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);
  } else {
    next = beginWork$1(current, unitOfWork, subtreeRenderLanes);
  }

  resetCurrentFiber();
  unitOfWork.memoizedProps = unitOfWork.pendingProps;

  if (next === null) {
    // If this doesn't spawn new work, complete the current work.
    completeUnitOfWork(unitOfWork);
  } else {
    workInProgress = next;
  }

  ReactCurrentOwner$2.current = null;
}

function completeUnitOfWork(unitOfWork) {
  // Attempt to complete the current unit of work, then move to the next
  // sibling. If there are no more siblings, return to the parent fiber.
  var completedWork = unitOfWork;

  do {
    // The current, flushed, state of this fiber is the alternate. Ideally
    // nothing should rely on this, but relying on it here means that we don't
    // need an additional field on the work in progress.
    var current = completedWork.alternate;
    var returnFiber = completedWork.return; // Check if the work completed or if something threw.

    if ((completedWork.flags & Incomplete) === NoFlags) {
      setCurrentFiber(completedWork);
      var next = void 0;

      if ( (completedWork.mode & ProfileMode) === NoMode) {
        next = completeWork(current, completedWork, subtreeRenderLanes);
      } else {
        startProfilerTimer(completedWork);
        next = completeWork(current, completedWork, subtreeRenderLanes); // Update render duration assuming we didn't error.

        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);
      }

      resetCurrentFiber();

      if (next !== null) {
        // Completing this fiber spawned new work. Work on that next.
        workInProgress = next;
        return;
      }

      resetChildLanes(completedWork);

      if (returnFiber !== null && // Do not append effects to parents if a sibling failed to complete
      (returnFiber.flags & Incomplete) === NoFlags) {
        // Append all the effects of the subtree and this fiber onto the effect
        // list of the parent. The completion order of the children affects the
        // side-effect order.
        if (returnFiber.firstEffect === null) {
          returnFiber.firstEffect = completedWork.firstEffect;
        }

        if (completedWork.lastEffect !== null) {
          if (returnFiber.lastEffect !== null) {
            returnFiber.lastEffect.nextEffect = completedWork.firstEffect;
          }

          returnFiber.lastEffect = completedWork.lastEffect;
        } // If this fiber had side-effects, we append it AFTER the children's
        // side-effects. We can perform certain side-effects earlier if needed,
        // by doing multiple passes over the effect list. We don't want to
        // schedule our own side-effect on our own list because if end up
        // reusing children we'll schedule this effect onto itself since we're
        // at the end.


        var flags = completedWork.flags; // Skip both NoWork and PerformedWork tags when creating the effect
        // list. PerformedWork effect is read by React DevTools but shouldn't be
        // committed.

        if (flags > PerformedWork) {
          if (returnFiber.lastEffect !== null) {
            returnFiber.lastEffect.nextEffect = completedWork;
          } else {
            returnFiber.firstEffect = completedWork;
          }

          returnFiber.lastEffect = completedWork;
        }
      }
    } else {
      // This fiber did not complete because something threw. Pop values off
      // the stack without entering the complete phase. If this is a boundary,
      // capture values if possible.
      var _next = unwindWork(completedWork); // Because this fiber did not complete, don't reset its expiration time.


      if (_next !== null) {
        // If completing this work spawned new work, do that next. We'll come
        // back here again.
        // Since we're restarting, remove anything that is not a host effect
        // from the effect tag.
        _next.flags &= HostEffectMask;
        workInProgress = _next;
        return;
      }

      if ( (completedWork.mode & ProfileMode) !== NoMode) {
        // Record the render duration for the fiber that errored.
        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false); // Include the time spent working on failed children before continuing.

        var actualDuration = completedWork.actualDuration;
        var child = completedWork.child;

        while (child !== null) {
          actualDuration += child.actualDuration;
          child = child.sibling;
        }

        completedWork.actualDuration = actualDuration;
      }

      if (returnFiber !== null) {
        // Mark the parent fiber as incomplete and clear its effect list.
        returnFiber.firstEffect = returnFiber.lastEffect = null;
        returnFiber.flags |= Incomplete;
      }
    }

    var siblingFiber = completedWork.sibling;

    if (siblingFiber !== null) {
      // If there is more work to do in this returnFiber, do that next.
      workInProgress = siblingFiber;
      return;
    } // Otherwise, return to the parent


    completedWork = returnFiber; // Update the next thing we're working on in case something throws.

    workInProgress = completedWork;
  } while (completedWork !== null); // We've reached the root.


  if (workInProgressRootExitStatus === RootIncomplete) {
    workInProgressRootExitStatus = RootCompleted;
  }
}

function resetChildLanes(completedWork) {
  if ( // TODO: Move this check out of the hot path by moving `resetChildLanes`
  // to switch statement in `completeWork`.
  (completedWork.tag === LegacyHiddenComponent || completedWork.tag === OffscreenComponent) && completedWork.memoizedState !== null && !includesSomeLane(subtreeRenderLanes, OffscreenLane) && (completedWork.mode & ConcurrentMode) !== NoLanes) {
    // The children of this component are hidden. Don't bubble their
    // expiration times.
    return;
  }

  var newChildLanes = NoLanes; // Bubble up the earliest expiration time.

  if ( (completedWork.mode & ProfileMode) !== NoMode) {
    // In profiling mode, resetChildExpirationTime is also used to reset
    // profiler durations.
    var actualDuration = completedWork.actualDuration;
    var treeBaseDuration = completedWork.selfBaseDuration; // When a fiber is cloned, its actualDuration is reset to 0. This value will
    // only be updated if work is done on the fiber (i.e. it doesn't bailout).
    // When work is done, it should bubble to the parent's actualDuration. If
    // the fiber has not been cloned though, (meaning no work was done), then
    // this value will reflect the amount of time spent working on a previous
    // render. In that case it should not bubble. We determine whether it was
    // cloned by comparing the child pointer.

    var shouldBubbleActualDurations = completedWork.alternate === null || completedWork.child !== completedWork.alternate.child;
    var child = completedWork.child;

    while (child !== null) {
      newChildLanes = mergeLanes(newChildLanes, mergeLanes(child.lanes, child.childLanes));

      if (shouldBubbleActualDurations) {
        actualDuration += child.actualDuration;
      }

      treeBaseDuration += child.treeBaseDuration;
      child = child.sibling;
    }

    var isTimedOutSuspense = completedWork.tag === SuspenseComponent && completedWork.memoizedState !== null;

    if (isTimedOutSuspense) {
      // Don't count time spent in a timed out Suspense subtree as part of the base duration.
      var primaryChildFragment = completedWork.child;

      if (primaryChildFragment !== null) {
        treeBaseDuration -= primaryChildFragment.treeBaseDuration;
      }
    }

    completedWork.actualDuration = actualDuration;
    completedWork.treeBaseDuration = treeBaseDuration;
  } else {
    var _child = completedWork.child;

    while (_child !== null) {
      newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child.lanes, _child.childLanes));
      _child = _child.sibling;
    }
  }

  completedWork.childLanes = newChildLanes;
}

function commitRoot(root) {
  var renderPriorityLevel = getCurrentPriorityLevel();
  runWithPriority$1(ImmediatePriority$1, commitRootImpl.bind(null, root, renderPriorityLevel));
  return null;
}

function commitRootImpl(root, renderPriorityLevel) {
  do {
    // `flushPassiveEffects` will call `flushSyncUpdateQueue` at the end, which
    // means `flushPassiveEffects` will sometimes result in additional
    // passive effects. So we need to keep flushing in a loop until there are
    // no more pending effects.
    // TODO: Might be better if `flushPassiveEffects` did not automatically
    // flush synchronous work at the end, to avoid factoring hazards like this.
    flushPassiveEffects();
  } while (rootWithPendingPassiveEffects !== null);

  flushRenderPhaseStrictModeWarningsInDEV();

  if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
    {
      throw Error( "Should not already be working." );
    }
  }

  var finishedWork = root.finishedWork;
  var lanes = root.finishedLanes;

  if (finishedWork === null) {

    return null;
  }

  root.finishedWork = null;
  root.finishedLanes = NoLanes;

  if (!(finishedWork !== root.current)) {
    {
      throw Error( "Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue." );
    }
  } // commitRoot never returns a continuation; it always finishes synchronously.
  // So we can clear these now to allow a new callback to be scheduled.


  root.callbackNode = null; // Update the first and last pending times on this root. The new first
  // pending time is whatever is left on the root fiber.

  var remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);
  markRootFinished(root, remainingLanes); // Clear already finished discrete updates in case that a later call of
  // `flushDiscreteUpdates` starts a useless render pass which may cancels
  // a scheduled timeout.

  if (rootsWithPendingDiscreteUpdates !== null) {
    if (!hasDiscreteLanes(remainingLanes) && rootsWithPendingDiscreteUpdates.has(root)) {
      rootsWithPendingDiscreteUpdates.delete(root);
    }
  }

  if (root === workInProgressRoot) {
    // We can reset these now that they are finished.
    workInProgressRoot = null;
    workInProgress = null;
    workInProgressRootRenderLanes = NoLanes;
  } // Get the list of effects.


  var firstEffect;

  if (finishedWork.flags > PerformedWork) {
    // A fiber's effect list consists only of its children, not itself. So if
    // the root has an effect, we need to add it to the end of the list. The
    // resulting list is the set that would belong to the root's parent, if it
    // had one; that is, all the effects in the tree including the root.
    if (finishedWork.lastEffect !== null) {
      finishedWork.lastEffect.nextEffect = finishedWork;
      firstEffect = finishedWork.firstEffect;
    } else {
      firstEffect = finishedWork;
    }
  } else {
    // There is no effect on the root.
    firstEffect = finishedWork.firstEffect;
  }

  if (firstEffect !== null) {

    var prevExecutionContext = executionContext;
    executionContext |= CommitContext;
    var prevInteractions = pushInteractions(root); // Reset this to null before calling lifecycles

    ReactCurrentOwner$2.current = null; // The commit phase is broken into several sub-phases. We do a separate pass
    // of the effect list for each phase: all mutation effects come before all
    // layout effects, and so on.
    // The first phase a "before mutation" phase. We use this phase to read the
    // state of the host tree right before we mutate it. This is where
    // getSnapshotBeforeUpdate is called.

    focusedInstanceHandle = prepareForCommit(root.containerInfo);
    shouldFireAfterActiveInstanceBlur = false;
    nextEffect = firstEffect;

    do {
      {
        invokeGuardedCallback(null, commitBeforeMutationEffects, null);

        if (hasCaughtError()) {
          if (!(nextEffect !== null)) {
            {
              throw Error( "Should be working on an effect." );
            }
          }

          var error = clearCaughtError();
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      }
    } while (nextEffect !== null); // We no longer need to track the active instance fiber


    focusedInstanceHandle = null;

    {
      // Mark the current commit time to be shared by all Profilers in this
      // batch. This enables them to be grouped later.
      recordCommitTime();
    } // The next phase is the mutation phase, where we mutate the host tree.


    nextEffect = firstEffect;

    do {
      {
        invokeGuardedCallback(null, commitMutationEffects, null, root, renderPriorityLevel);

        if (hasCaughtError()) {
          if (!(nextEffect !== null)) {
            {
              throw Error( "Should be working on an effect." );
            }
          }

          var _error = clearCaughtError();

          captureCommitPhaseError(nextEffect, _error);
          nextEffect = nextEffect.nextEffect;
        }
      }
    } while (nextEffect !== null);

    resetAfterCommit(root.containerInfo); // The work-in-progress tree is now the current tree. This must come after
    // the mutation phase, so that the previous tree is still current during
    // componentWillUnmount, but before the layout phase, so that the finished
    // work is current during componentDidMount/Update.

    root.current = finishedWork; // The next phase is the layout phase, where we call effects that read
    // the host tree after it's been mutated. The idiomatic use case for this is
    // layout, but class component lifecycles also fire here for legacy reasons.

    nextEffect = firstEffect;

    do {
      {
        invokeGuardedCallback(null, commitLayoutEffects, null, root, lanes);

        if (hasCaughtError()) {
          if (!(nextEffect !== null)) {
            {
              throw Error( "Should be working on an effect." );
            }
          }

          var _error2 = clearCaughtError();

          captureCommitPhaseError(nextEffect, _error2);
          nextEffect = nextEffect.nextEffect;
        }
      }
    } while (nextEffect !== null);

    nextEffect = null; // Tell Scheduler to yield at the end of the frame, so the browser has an
    // opportunity to paint.

    requestPaint();

    {
      popInteractions(prevInteractions);
    }

    executionContext = prevExecutionContext;
  } else {
    // No effects.
    root.current = finishedWork; // Measure these anyway so the flamegraph explicitly shows that there were
    // no effects.
    // TODO: Maybe there's a better way to report this.

    {
      recordCommitTime();
    }
  }

  var rootDidHavePassiveEffects = rootDoesHavePassiveEffects;

  if (rootDoesHavePassiveEffects) {
    // This commit has passive effects. Stash a reference to them. But don't
    // schedule a callback until after flushing layout work.
    rootDoesHavePassiveEffects = false;
    rootWithPendingPassiveEffects = root;
    pendingPassiveEffectsLanes = lanes;
    pendingPassiveEffectsRenderPriority = renderPriorityLevel;
  } else {
    // We are done with the effect chain at this point so let's clear the
    // nextEffect pointers to assist with GC. If we have passive effects, we'll
    // clear this in flushPassiveEffects.
    nextEffect = firstEffect;

    while (nextEffect !== null) {
      var nextNextEffect = nextEffect.nextEffect;
      nextEffect.nextEffect = null;

      if (nextEffect.flags & Deletion) {
        detachFiberAfterEffects(nextEffect);
      }

      nextEffect = nextNextEffect;
    }
  } // Read this again, since an effect might have updated it


  remainingLanes = root.pendingLanes; // Check if there's remaining work on this root

  if (remainingLanes !== NoLanes) {
    {
      if (spawnedWorkDuringRender !== null) {
        var expirationTimes = spawnedWorkDuringRender;
        spawnedWorkDuringRender = null;

        for (var i = 0; i < expirationTimes.length; i++) {
          scheduleInteractions(root, expirationTimes[i], root.memoizedInteractions);
        }
      }

      schedulePendingInteractions(root, remainingLanes);
    }
  } else {
    // If there's no remaining work, we can clear the set of already failed
    // error boundaries.
    legacyErrorBoundariesThatAlreadyFailed = null;
  }

  {
    if (!rootDidHavePassiveEffects) {
      // If there are no passive effects, then we can complete the pending interactions.
      // Otherwise, we'll wait until after the passive effects are flushed.
      // Wait to do this until after remaining work has been scheduled,
      // so that we don't prematurely signal complete for interactions when there's e.g. hidden work.
      finishPendingInteractions(root, lanes);
    }
  }

  if (remainingLanes === SyncLane) {
    // Count the number of times the root synchronously re-renders without
    // finishing. If there are too many, it indicates an infinite update loop.
    if (root === rootWithNestedUpdates) {
      nestedUpdateCount++;
    } else {
      nestedUpdateCount = 0;
      rootWithNestedUpdates = root;
    }
  } else {
    nestedUpdateCount = 0;
  }

  onCommitRoot(finishedWork.stateNode, renderPriorityLevel);

  {
    onCommitRoot$1();
  } // Always call this before exiting `commitRoot`, to ensure that any
  // additional work on this root is scheduled.


  ensureRootIsScheduled(root, now());

  if (hasUncaughtError) {
    hasUncaughtError = false;
    var _error3 = firstUncaughtError;
    firstUncaughtError = null;
    throw _error3;
  }

  if ((executionContext & LegacyUnbatchedContext) !== NoContext) {
    // a ReactDOM.render-ed root inside of batchedUpdates. The commit fired
    // synchronously, but layout updates should be deferred until the end
    // of the batch.


    return null;
  } // If layout work was scheduled, flush it now.


  flushSyncCallbackQueue();

  return null;
}

function commitBeforeMutationEffects() {
  while (nextEffect !== null) {
    var current = nextEffect.alternate;

    if (!shouldFireAfterActiveInstanceBlur && focusedInstanceHandle !== null) {
      if ((nextEffect.flags & Deletion) !== NoFlags) {
        if (doesFiberContain(nextEffect, focusedInstanceHandle)) {
          shouldFireAfterActiveInstanceBlur = true;
        }
      } else {
        // TODO: Move this out of the hot path using a dedicated effect tag.
        if (nextEffect.tag === SuspenseComponent && isSuspenseBoundaryBeingHidden(current, nextEffect) && doesFiberContain(nextEffect, focusedInstanceHandle)) {
          shouldFireAfterActiveInstanceBlur = true;
        }
      }
    }

    var flags = nextEffect.flags;

    if ((flags & Snapshot) !== NoFlags) {
      setCurrentFiber(nextEffect);
      commitBeforeMutationLifeCycles(current, nextEffect);
      resetCurrentFiber();
    }

    if ((flags & Passive) !== NoFlags) {
      // If there are passive effects, schedule a callback to flush at
      // the earliest opportunity.
      if (!rootDoesHavePassiveEffects) {
        rootDoesHavePassiveEffects = true;
        scheduleCallback(NormalPriority$1, function () {
          flushPassiveEffects();
          return null;
        });
      }
    }

    nextEffect = nextEffect.nextEffect;
  }
}

function commitMutationEffects(root, renderPriorityLevel) {
  // TODO: Should probably move the bulk of this function to commitWork.
  while (nextEffect !== null) {
    setCurrentFiber(nextEffect);
    var flags = nextEffect.flags;

    if (flags & ContentReset) {
      commitResetTextContent(nextEffect);
    }

    if (flags & Ref) {
      var current = nextEffect.alternate;

      if (current !== null) {
        commitDetachRef(current);
      }
    } // The following switch statement is only concerned about placement,
    // updates, and deletions. To avoid needing to add a case for every possible
    // bitmap value, we remove the secondary effects from the effect tag and
    // switch on that value.


    var primaryFlags = flags & (Placement | Update | Deletion | Hydrating);

    switch (primaryFlags) {
      case Placement:
        {
          commitPlacement(nextEffect); // Clear the "placement" from effect tag so that we know that this is
          // inserted, before any life-cycles like componentDidMount gets called.
          // TODO: findDOMNode doesn't rely on this any more but isMounted does
          // and isMounted is deprecated anyway so we should be able to kill this.

          nextEffect.flags &= ~Placement;
          break;
        }

      case PlacementAndUpdate:
        {
          // Placement
          commitPlacement(nextEffect); // Clear the "placement" from effect tag so that we know that this is
          // inserted, before any life-cycles like componentDidMount gets called.

          nextEffect.flags &= ~Placement; // Update

          var _current = nextEffect.alternate;
          commitWork(_current, nextEffect);
          break;
        }

      case Hydrating:
        {
          nextEffect.flags &= ~Hydrating;
          break;
        }

      case HydratingAndUpdate:
        {
          nextEffect.flags &= ~Hydrating; // Update

          var _current2 = nextEffect.alternate;
          commitWork(_current2, nextEffect);
          break;
        }

      case Update:
        {
          var _current3 = nextEffect.alternate;
          commitWork(_current3, nextEffect);
          break;
        }

      case Deletion:
        {
          commitDeletion(root, nextEffect);
          break;
        }
    }

    resetCurrentFiber();
    nextEffect = nextEffect.nextEffect;
  }
}

function commitLayoutEffects(root, committedLanes) {


  while (nextEffect !== null) {
    setCurrentFiber(nextEffect);
    var flags = nextEffect.flags;

    if (flags & (Update | Callback)) {
      var current = nextEffect.alternate;
      commitLifeCycles(root, current, nextEffect);
    }

    {
      if (flags & Ref) {
        commitAttachRef(nextEffect);
      }
    }

    resetCurrentFiber();
    nextEffect = nextEffect.nextEffect;
  }
}

function flushPassiveEffects() {
  // Returns whether passive effects were flushed.
  if (pendingPassiveEffectsRenderPriority !== NoPriority$1) {
    var priorityLevel = pendingPassiveEffectsRenderPriority > NormalPriority$1 ? NormalPriority$1 : pendingPassiveEffectsRenderPriority;
    pendingPassiveEffectsRenderPriority = NoPriority$1;

    {
      return runWithPriority$1(priorityLevel, flushPassiveEffectsImpl);
    }
  }

  return false;
}
function enqueuePendingPassiveHookEffectMount(fiber, effect) {
  pendingPassiveHookEffectsMount.push(effect, fiber);

  if (!rootDoesHavePassiveEffects) {
    rootDoesHavePassiveEffects = true;
    scheduleCallback(NormalPriority$1, function () {
      flushPassiveEffects();
      return null;
    });
  }
}
function enqueuePendingPassiveHookEffectUnmount(fiber, effect) {
  pendingPassiveHookEffectsUnmount.push(effect, fiber);

  {
    fiber.flags |= PassiveUnmountPendingDev;
    var alternate = fiber.alternate;

    if (alternate !== null) {
      alternate.flags |= PassiveUnmountPendingDev;
    }
  }

  if (!rootDoesHavePassiveEffects) {
    rootDoesHavePassiveEffects = true;
    scheduleCallback(NormalPriority$1, function () {
      flushPassiveEffects();
      return null;
    });
  }
}

function invokePassiveEffectCreate(effect) {
  var create = effect.create;
  effect.destroy = create();
}

function flushPassiveEffectsImpl() {
  if (rootWithPendingPassiveEffects === null) {
    return false;
  }

  var root = rootWithPendingPassiveEffects;
  var lanes = pendingPassiveEffectsLanes;
  rootWithPendingPassiveEffects = null;
  pendingPassiveEffectsLanes = NoLanes;

  if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
    {
      throw Error( "Cannot flush passive effects while already rendering." );
    }
  }

  {
    isFlushingPassiveEffects = true;
  }

  var prevExecutionContext = executionContext;
  executionContext |= CommitContext;
  var prevInteractions = pushInteractions(root); // It's important that ALL pending passive effect destroy functions are called
  // before ANY passive effect create functions are called.
  // Otherwise effects in sibling components might interfere with each other.
  // e.g. a destroy function in one component may unintentionally override a ref
  // value set by a create function in another component.
  // Layout effects have the same constraint.
  // First pass: Destroy stale passive effects.

  var unmountEffects = pendingPassiveHookEffectsUnmount;
  pendingPassiveHookEffectsUnmount = [];

  for (var i = 0; i < unmountEffects.length; i += 2) {
    var _effect = unmountEffects[i];
    var fiber = unmountEffects[i + 1];
    var destroy = _effect.destroy;
    _effect.destroy = undefined;

    {
      fiber.flags &= ~PassiveUnmountPendingDev;
      var alternate = fiber.alternate;

      if (alternate !== null) {
        alternate.flags &= ~PassiveUnmountPendingDev;
      }
    }

    if (typeof destroy === 'function') {
      {
        setCurrentFiber(fiber);

        {
          invokeGuardedCallback(null, destroy, null);
        }

        if (hasCaughtError()) {
          if (!(fiber !== null)) {
            {
              throw Error( "Should be working on an effect." );
            }
          }

          var error = clearCaughtError();
          captureCommitPhaseError(fiber, error);
        }

        resetCurrentFiber();
      }
    }
  } // Second pass: Create new passive effects.


  var mountEffects = pendingPassiveHookEffectsMount;
  pendingPassiveHookEffectsMount = [];

  for (var _i = 0; _i < mountEffects.length; _i += 2) {
    var _effect2 = mountEffects[_i];
    var _fiber = mountEffects[_i + 1];

    {
      setCurrentFiber(_fiber);

      {
        invokeGuardedCallback(null, invokePassiveEffectCreate, null, _effect2);
      }

      if (hasCaughtError()) {
        if (!(_fiber !== null)) {
          {
            throw Error( "Should be working on an effect." );
          }
        }

        var _error4 = clearCaughtError();

        captureCommitPhaseError(_fiber, _error4);
      }

      resetCurrentFiber();
    }
  } // Note: This currently assumes there are no passive effects on the root fiber
  // because the root is not part of its own effect list.
  // This could change in the future.


  var effect = root.current.firstEffect;

  while (effect !== null) {
    var nextNextEffect = effect.nextEffect; // Remove nextEffect pointer to assist GC

    effect.nextEffect = null;

    if (effect.flags & Deletion) {
      detachFiberAfterEffects(effect);
    }

    effect = nextNextEffect;
  }

  {
    popInteractions(prevInteractions);
    finishPendingInteractions(root, lanes);
  }

  {
    isFlushingPassiveEffects = false;
  }

  executionContext = prevExecutionContext;
  flushSyncCallbackQueue(); // If additional passive effects were scheduled, increment a counter. If this
  // exceeds the limit, we'll fire a warning.

  nestedPassiveUpdateCount = rootWithPendingPassiveEffects === null ? 0 : nestedPassiveUpdateCount + 1;
  return true;
}

function isAlreadyFailedLegacyErrorBoundary(instance) {
  return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);
}
function markLegacyErrorBoundaryAsFailed(instance) {
  if (legacyErrorBoundariesThatAlreadyFailed === null) {
    legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);
  } else {
    legacyErrorBoundariesThatAlreadyFailed.add(instance);
  }
}

function prepareToThrowUncaughtError(error) {
  if (!hasUncaughtError) {
    hasUncaughtError = true;
    firstUncaughtError = error;
  }
}

var onUncaughtError = prepareToThrowUncaughtError;

function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
  var errorInfo = createCapturedValue(error, sourceFiber);
  var update = createRootErrorUpdate(rootFiber, errorInfo, SyncLane);
  enqueueUpdate(rootFiber, update);
  var eventTime = requestEventTime();
  var root = markUpdateLaneFromFiberToRoot(rootFiber, SyncLane);

  if (root !== null) {
    markRootUpdated(root, SyncLane, eventTime);
    ensureRootIsScheduled(root, eventTime);
    schedulePendingInteractions(root, SyncLane);
  }
}

function captureCommitPhaseError(sourceFiber, error) {
  if (sourceFiber.tag === HostRoot) {
    // Error was thrown at the root. There is no parent, so the root
    // itself should capture it.
    captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);
    return;
  }

  var fiber = sourceFiber.return;

  while (fiber !== null) {
    if (fiber.tag === HostRoot) {
      captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error);
      return;
    } else if (fiber.tag === ClassComponent) {
      var ctor = fiber.type;
      var instance = fiber.stateNode;

      if (typeof ctor.getDerivedStateFromError === 'function' || typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) {
        var errorInfo = createCapturedValue(error, sourceFiber);
        var update = createClassErrorUpdate(fiber, errorInfo, SyncLane);
        enqueueUpdate(fiber, update);
        var eventTime = requestEventTime();
        var root = markUpdateLaneFromFiberToRoot(fiber, SyncLane);

        if (root !== null) {
          markRootUpdated(root, SyncLane, eventTime);
          ensureRootIsScheduled(root, eventTime);
          schedulePendingInteractions(root, SyncLane);
        } else {
          // This component has already been unmounted.
          // We can't schedule any follow up work for the root because the fiber is already unmounted,
          // but we can still call the log-only boundary so the error isn't swallowed.
          //
          // TODO This is only a temporary bandaid for the old reconciler fork.
          // We can delete this special case once the new fork is merged.
          if (typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) {
            try {
              instance.componentDidCatch(error, errorInfo);
            } catch (errorToIgnore) {// TODO Ignore this error? Rethrow it?
              // This is kind of an edge case.
            }
          }
        }

        return;
      }
    }

    fiber = fiber.return;
  }
}
function pingSuspendedRoot(root, wakeable, pingedLanes) {
  var pingCache = root.pingCache;

  if (pingCache !== null) {
    // The wakeable resolved, so we no longer need to memoize, because it will
    // never be thrown again.
    pingCache.delete(wakeable);
  }

  var eventTime = requestEventTime();
  markRootPinged(root, pingedLanes);

  if (workInProgressRoot === root && isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)) {
    // Received a ping at the same priority level at which we're currently
    // rendering. We might want to restart this render. This should mirror
    // the logic of whether or not a root suspends once it completes.
    // TODO: If we're rendering sync either due to Sync, Batched or expired,
    // we should probably never restart.
    // If we're suspended with delay, or if it's a retry, we'll always suspend
    // so we can always restart.
    if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && includesOnlyRetries(workInProgressRootRenderLanes) && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) {
      // Restart from the root.
      prepareFreshStack(root, NoLanes);
    } else {
      // Even though we can't restart right now, we might get an
      // opportunity later. So we mark this render as having a ping.
      workInProgressRootPingedLanes = mergeLanes(workInProgressRootPingedLanes, pingedLanes);
    }
  }

  ensureRootIsScheduled(root, eventTime);
  schedulePendingInteractions(root, pingedLanes);
}

function retryTimedOutBoundary(boundaryFiber, retryLane) {
  // The boundary fiber (a Suspense component or SuspenseList component)
  // previously was rendered in its fallback state. One of the promises that
  // suspended it has resolved, which means at least part of the tree was
  // likely unblocked. Try rendering again, at a new expiration time.
  if (retryLane === NoLane) {
    retryLane = requestRetryLane(boundaryFiber);
  } // TODO: Special case idle priority?


  var eventTime = requestEventTime();
  var root = markUpdateLaneFromFiberToRoot(boundaryFiber, retryLane);

  if (root !== null) {
    markRootUpdated(root, retryLane, eventTime);
    ensureRootIsScheduled(root, eventTime);
    schedulePendingInteractions(root, retryLane);
  }
}
function resolveRetryWakeable(boundaryFiber, wakeable) {
  var retryLane = NoLane; // Default

  var retryCache;

  {
    retryCache = boundaryFiber.stateNode;
  }

  if (retryCache !== null) {
    // The wakeable resolved, so we no longer need to memoize, because it will
    // never be thrown again.
    retryCache.delete(wakeable);
  }

  retryTimedOutBoundary(boundaryFiber, retryLane);
} // Computes the next Just Noticeable Difference (JND) boundary.
// The theory is that a person can't tell the difference between small differences in time.
// Therefore, if we wait a bit longer than necessary that won't translate to a noticeable
// difference in the experience. However, waiting for longer might mean that we can avoid
// showing an intermediate loading state. The longer we have already waited, the harder it
// is to tell small differences in time. Therefore, the longer we've already waited,
// the longer we can wait additionally. At some point we have to give up though.
// We pick a train model where the next boundary commits at a consistent schedule.
// These particular numbers are vague estimates. We expect to adjust them based on research.

function jnd(timeElapsed) {
  return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3000 ? 3000 : timeElapsed < 4320 ? 4320 : ceil(timeElapsed / 1960) * 1960;
}

function checkForNestedUpdates() {
  if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
    nestedUpdateCount = 0;
    rootWithNestedUpdates = null;

    {
      {
        throw Error( "Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops." );
      }
    }
  }

  {
    if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {
      nestedPassiveUpdateCount = 0;

      error('Maximum update depth exceeded. This can happen when a component ' + "calls setState inside useEffect, but useEffect either doesn't " + 'have a dependency array, or one of the dependencies changes on ' + 'every render.');
    }
  }
}

function flushRenderPhaseStrictModeWarningsInDEV() {
  {
    ReactStrictModeWarnings.flushLegacyContextWarning();

    {
      ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
    }
  }
}

var didWarnStateUpdateForNotYetMountedComponent = null;

function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {
  {
    if ((executionContext & RenderContext) !== NoContext) {
      // We let the other warning about render phase updates deal with this one.
      return;
    }

    if (!(fiber.mode & (BlockingMode | ConcurrentMode))) {
      return;
    }

    var tag = fiber.tag;

    if (tag !== IndeterminateComponent && tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent && tag !== Block) {
      // Only warn for user-defined components, not internal ones like Suspense.
      return;
    } // We show the whole stack but dedupe on the top component's name because
    // the problematic code almost always lies inside that component.


    var componentName = getComponentName(fiber.type) || 'ReactComponent';

    if (didWarnStateUpdateForNotYetMountedComponent !== null) {
      if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) {
        return;
      }

      didWarnStateUpdateForNotYetMountedComponent.add(componentName);
    } else {
      didWarnStateUpdateForNotYetMountedComponent = new Set([componentName]);
    }

    var previousFiber = current;

    try {
      setCurrentFiber(fiber);

      error("Can't perform a React state update on a component that hasn't mounted yet. " + 'This indicates that you have a side-effect in your render function that ' + 'asynchronously later calls tries to update the component. Move this work to ' + 'useEffect instead.');
    } finally {
      if (previousFiber) {
        setCurrentFiber(fiber);
      } else {
        resetCurrentFiber();
      }
    }
  }
}

var didWarnStateUpdateForUnmountedComponent = null;

function warnAboutUpdateOnUnmountedFiberInDEV(fiber) {
  {
    var tag = fiber.tag;

    if (tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent && tag !== Block) {
      // Only warn for user-defined components, not internal ones like Suspense.
      return;
    } // If there are pending passive effects unmounts for this Fiber,
    // we can assume that they would have prevented this update.


    if ((fiber.flags & PassiveUnmountPendingDev) !== NoFlags) {
      return;
    } // We show the whole stack but dedupe on the top component's name because
    // the problematic code almost always lies inside that component.


    var componentName = getComponentName(fiber.type) || 'ReactComponent';

    if (didWarnStateUpdateForUnmountedComponent !== null) {
      if (didWarnStateUpdateForUnmountedComponent.has(componentName)) {
        return;
      }

      didWarnStateUpdateForUnmountedComponent.add(componentName);
    } else {
      didWarnStateUpdateForUnmountedComponent = new Set([componentName]);
    }

    if (isFlushingPassiveEffects) ; else {
      var previousFiber = current;

      try {
        setCurrentFiber(fiber);

        error("Can't perform a React state update on an unmounted component. This " + 'is a no-op, but it indicates a memory leak in your application. To ' + 'fix, cancel all subscriptions and asynchronous tasks in %s.', tag === ClassComponent ? 'the componentWillUnmount method' : 'a useEffect cleanup function');
      } finally {
        if (previousFiber) {
          setCurrentFiber(fiber);
        } else {
          resetCurrentFiber();
        }
      }
    }
  }
}

var beginWork$1;

{
  var dummyFiber = null;

  beginWork$1 = function (current, unitOfWork, lanes) {
    // If a component throws an error, we replay it again in a synchronously
    // dispatched event, so that the debugger will treat it as an uncaught
    // error See ReactErrorUtils for more information.
    // Before entering the begin phase, copy the work-in-progress onto a dummy
    // fiber. If beginWork throws, we'll use this to reset the state.
    var originalWorkInProgressCopy = assignFiberPropertiesInDEV(dummyFiber, unitOfWork);

    try {
      return beginWork(current, unitOfWork, lanes);
    } catch (originalError) {
      if (originalError !== null && typeof originalError === 'object' && typeof originalError.then === 'function') {
        // Don't replay promises. Treat everything else like an error.
        throw originalError;
      } // Keep this code in sync with handleError; any changes here must have
      // corresponding changes there.


      resetContextDependencies();
      resetHooksAfterThrow(); // Don't reset current debug fiber, since we're about to work on the
      // same fiber again.
      // Unwind the failed stack frame

      unwindInterruptedWork(unitOfWork); // Restore the original properties of the fiber.

      assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);

      if ( unitOfWork.mode & ProfileMode) {
        // Reset the profiler timer.
        startProfilerTimer(unitOfWork);
      } // Run beginWork again.


      invokeGuardedCallback(null, beginWork, null, current, unitOfWork, lanes);

      if (hasCaughtError()) {
        var replayError = clearCaughtError(); // `invokeGuardedCallback` sometimes sets an expando `_suppressLogging`.
        // Rethrow this error instead of the original one.

        throw replayError;
      } else {
        // This branch is reachable if the render phase is impure.
        throw originalError;
      }
    }
  };
}

var didWarnAboutUpdateInRender = false;
var didWarnAboutUpdateInRenderForAnotherComponent;

{
  didWarnAboutUpdateInRenderForAnotherComponent = new Set();
}

function warnAboutRenderPhaseUpdatesInDEV(fiber) {
  {
    if (isRendering && (executionContext & RenderContext) !== NoContext && !getIsUpdatingOpaqueValueInRenderPhaseInDEV()) {
      switch (fiber.tag) {
        case FunctionComponent:
        case ForwardRef:
        case SimpleMemoComponent:
          {
            var renderingComponentName = workInProgress && getComponentName(workInProgress.type) || 'Unknown'; // Dedupe by the rendering component because it's the one that needs to be fixed.

            var dedupeKey = renderingComponentName;

            if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {
              didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);
              var setStateComponentName = getComponentName(fiber.type) || 'Unknown';

              error('Cannot update a component (`%s`) while rendering a ' + 'different component (`%s`). To locate the bad setState() call inside `%s`, ' + 'follow the stack trace as described in https://reactjs.org/link/setstate-in-render', setStateComponentName, renderingComponentName, renderingComponentName);
            }

            break;
          }

        case ClassComponent:
          {
            if (!didWarnAboutUpdateInRender) {
              error('Cannot update during an existing state transition (such as ' + 'within `render`). Render methods should be a pure ' + 'function of props and state.');

              didWarnAboutUpdateInRender = true;
            }

            break;
          }
      }
    }
  }
} // a 'shared' variable that changes when act() opens/closes in tests.


var IsThisRendererActing = {
  current: false
};
function warnIfNotScopedWithMatchingAct(fiber) {
  {
    if ( IsSomeRendererActing.current === true && IsThisRendererActing.current !== true) {
      var previousFiber = current;

      try {
        setCurrentFiber(fiber);

        error("It looks like you're using the wrong act() around your test interactions.\n" + 'Be sure to use the matching version of act() corresponding to your renderer:\n\n' + '// for react-dom:\n' + // Break up imports to avoid accidentally parsing them as dependencies.
        'import {act} fr' + "om 'react-dom/test-utils';\n" + '// ...\n' + 'act(() => ...);\n\n' + '// for react-test-renderer:\n' + // Break up imports to avoid accidentally parsing them as dependencies.
        'import TestRenderer fr' + "om react-test-renderer';\n" + 'const {act} = TestRenderer;\n' + '// ...\n' + 'act(() => ...);');
      } finally {
        if (previousFiber) {
          setCurrentFiber(fiber);
        } else {
          resetCurrentFiber();
        }
      }
    }
  }
}
function warnIfNotCurrentlyActingEffectsInDEV(fiber) {
  {
    if ( (fiber.mode & StrictMode) !== NoMode && IsSomeRendererActing.current === false && IsThisRendererActing.current === false) {
      error('An update to %s ran an effect, but was not wrapped in act(...).\n\n' + 'When testing, code that causes React state updates should be ' + 'wrapped into act(...):\n\n' + 'act(() => {\n' + '  /* fire events that update state */\n' + '});\n' + '/* assert on the output */\n\n' + "This ensures that you're testing the behavior the user would see " + 'in the browser.' + ' Learn more at https://reactjs.org/link/wrap-tests-with-act', getComponentName(fiber.type));
    }
  }
}

function warnIfNotCurrentlyActingUpdatesInDEV(fiber) {
  {
    if ( executionContext === NoContext && IsSomeRendererActing.current === false && IsThisRendererActing.current === false) {
      var previousFiber = current;

      try {
        setCurrentFiber(fiber);

        error('An update to %s inside a test was not wrapped in act(...).\n\n' + 'When testing, code that causes React state updates should be ' + 'wrapped into act(...):\n\n' + 'act(() => {\n' + '  /* fire events that update state */\n' + '});\n' + '/* assert on the output */\n\n' + "This ensures that you're testing the behavior the user would see " + 'in the browser.' + ' Learn more at https://reactjs.org/link/wrap-tests-with-act', getComponentName(fiber.type));
      } finally {
        if (previousFiber) {
          setCurrentFiber(fiber);
        } else {
          resetCurrentFiber();
        }
      }
    }
  }
}

var warnIfNotCurrentlyActingUpdatesInDev = warnIfNotCurrentlyActingUpdatesInDEV; // In tests, we want to enforce a mocked scheduler.

var didWarnAboutUnmockedScheduler = false; // TODO Before we release concurrent mode, revisit this and decide whether a mocked
// scheduler is the actual recommendation. The alternative could be a testing build,
// a new lib, or whatever; we dunno just yet. This message is for early adopters
// to get their tests right.

function warnIfUnmockedScheduler(fiber) {
  {
    if (didWarnAboutUnmockedScheduler === false && Scheduler.unstable_flushAllWithoutAsserting === undefined) {
      if (fiber.mode & BlockingMode || fiber.mode & ConcurrentMode) {
        didWarnAboutUnmockedScheduler = true;

        error('In Concurrent or Sync modes, the "scheduler" module needs to be mocked ' + 'to guarantee consistent behaviour across tests and browsers. ' + 'For example, with jest: \n' + // Break up requires to avoid accidentally parsing them as dependencies.
        "jest.mock('scheduler', () => require" + "('scheduler/unstable_mock'));\n\n" + 'For more info, visit https://reactjs.org/link/mock-scheduler');
      }
    }
  }
}

function computeThreadID(root, lane) {
  // Interaction threads are unique per root and expiration time.
  // NOTE: Intentionally unsound cast. All that matters is that it's a number
  // and it represents a batch of work. Could make a helper function instead,
  // but meh this is fine for now.
  return lane * 1000 + root.interactionThreadID;
}

function markSpawnedWork(lane) {

  if (spawnedWorkDuringRender === null) {
    spawnedWorkDuringRender = [lane];
  } else {
    spawnedWorkDuringRender.push(lane);
  }
}

function scheduleInteractions(root, lane, interactions) {

  if (interactions.size > 0) {
    var pendingInteractionMap = root.pendingInteractionMap;
    var pendingInteractions = pendingInteractionMap.get(lane);

    if (pendingInteractions != null) {
      interactions.forEach(function (interaction) {
        if (!pendingInteractions.has(interaction)) {
          // Update the pending async work count for previously unscheduled interaction.
          interaction.__count++;
        }

        pendingInteractions.add(interaction);
      });
    } else {
      pendingInteractionMap.set(lane, new Set(interactions)); // Update the pending async work count for the current interactions.

      interactions.forEach(function (interaction) {
        interaction.__count++;
      });
    }

    var subscriber = tracing.__subscriberRef.current;

    if (subscriber !== null) {
      var threadID = computeThreadID(root, lane);
      subscriber.onWorkScheduled(interactions, threadID);
    }
  }
}

function schedulePendingInteractions(root, lane) {

  scheduleInteractions(root, lane, tracing.__interactionsRef.current);
}

function startWorkOnPendingInteractions(root, lanes) {
  // we can accurately attribute time spent working on it, And so that cascading
  // work triggered during the render phase will be associated with it.


  var interactions = new Set();
  root.pendingInteractionMap.forEach(function (scheduledInteractions, scheduledLane) {
    if (includesSomeLane(lanes, scheduledLane)) {
      scheduledInteractions.forEach(function (interaction) {
        return interactions.add(interaction);
      });
    }
  }); // Store the current set of interactions on the FiberRoot for a few reasons:
  // We can re-use it in hot functions like performConcurrentWorkOnRoot()
  // without having to recalculate it. We will also use it in commitWork() to
  // pass to any Profiler onRender() hooks. This also provides DevTools with a
  // way to access it when the onCommitRoot() hook is called.

  root.memoizedInteractions = interactions;

  if (interactions.size > 0) {
    var subscriber = tracing.__subscriberRef.current;

    if (subscriber !== null) {
      var threadID = computeThreadID(root, lanes);

      try {
        subscriber.onWorkStarted(interactions, threadID);
      } catch (error) {
        // If the subscriber throws, rethrow it in a separate task
        scheduleCallback(ImmediatePriority$1, function () {
          throw error;
        });
      }
    }
  }
}

function finishPendingInteractions(root, committedLanes) {

  var remainingLanesAfterCommit = root.pendingLanes;
  var subscriber;

  try {
    subscriber = tracing.__subscriberRef.current;

    if (subscriber !== null && root.memoizedInteractions.size > 0) {
      // FIXME: More than one lane can finish in a single commit.
      var threadID = computeThreadID(root, committedLanes);
      subscriber.onWorkStopped(root.memoizedInteractions, threadID);
    }
  } catch (error) {
    // If the subscriber throws, rethrow it in a separate task
    scheduleCallback(ImmediatePriority$1, function () {
      throw error;
    });
  } finally {
    // Clear completed interactions from the pending Map.
    // Unless the render was suspended or cascading work was scheduled,
    // In which case– leave pending interactions until the subsequent render.
    var pendingInteractionMap = root.pendingInteractionMap;
    pendingInteractionMap.forEach(function (scheduledInteractions, lane) {
      // Only decrement the pending interaction count if we're done.
      // If there's still work at the current priority,
      // That indicates that we are waiting for suspense data.
      if (!includesSomeLane(remainingLanesAfterCommit, lane)) {
        pendingInteractionMap.delete(lane);
        scheduledInteractions.forEach(function (interaction) {
          interaction.__count--;

          if (subscriber !== null && interaction.__count === 0) {
            try {
              subscriber.onInteractionScheduledWorkCompleted(interaction);
            } catch (error) {
              // If the subscriber throws, rethrow it in a separate task
              scheduleCallback(ImmediatePriority$1, function () {
                throw error;
              });
            }
          }
        });
      }
    });
  }
} // `act` testing API

function shouldForceFlushFallbacksInDEV() {
  // Never force flush in production. This function should get stripped out.
  return  actingUpdatesScopeDepth > 0;
}
// so we can tell if any async act() calls try to run in parallel.


var actingUpdatesScopeDepth = 0;

function detachFiberAfterEffects(fiber) {
  fiber.sibling = null;
  fiber.stateNode = null;
}

var resolveFamily = null; // $FlowFixMe Flow gets confused by a WeakSet feature check below.

var failedBoundaries = null;
var setRefreshHandler = function (handler) {
  {
    resolveFamily = handler;
  }
};
function resolveFunctionForHotReloading(type) {
  {
    if (resolveFamily === null) {
      // Hot reloading is disabled.
      return type;
    }

    var family = resolveFamily(type);

    if (family === undefined) {
      return type;
    } // Use the latest known implementation.


    return family.current;
  }
}
function resolveClassForHotReloading(type) {
  // No implementation differences.
  return resolveFunctionForHotReloading(type);
}
function resolveForwardRefForHotReloading(type) {
  {
    if (resolveFamily === null) {
      // Hot reloading is disabled.
      return type;
    }

    var family = resolveFamily(type);

    if (family === undefined) {
      // Check if we're dealing with a real forwardRef. Don't want to crash early.
      if (type !== null && type !== undefined && typeof type.render === 'function') {
        // ForwardRef is special because its resolved .type is an object,
        // but it's possible that we only have its inner render function in the map.
        // If that inner render function is different, we'll build a new forwardRef type.
        var currentRender = resolveFunctionForHotReloading(type.render);

        if (type.render !== currentRender) {
          var syntheticType = {
            $$typeof: REACT_FORWARD_REF_TYPE,
            render: currentRender
          };

          if (type.displayName !== undefined) {
            syntheticType.displayName = type.displayName;
          }

          return syntheticType;
        }
      }

      return type;
    } // Use the latest known implementation.


    return family.current;
  }
}
function isCompatibleFamilyForHotReloading(fiber, element) {
  {
    if (resolveFamily === null) {
      // Hot reloading is disabled.
      return false;
    }

    var prevType = fiber.elementType;
    var nextType = element.type; // If we got here, we know types aren't === equal.

    var needsCompareFamilies = false;
    var $$typeofNextType = typeof nextType === 'object' && nextType !== null ? nextType.$$typeof : null;

    switch (fiber.tag) {
      case ClassComponent:
        {
          if (typeof nextType === 'function') {
            needsCompareFamilies = true;
          }

          break;
        }

      case FunctionComponent:
        {
          if (typeof nextType === 'function') {
            needsCompareFamilies = true;
          } else if ($$typeofNextType === REACT_LAZY_TYPE) {
            // We don't know the inner type yet.
            // We're going to assume that the lazy inner type is stable,
            // and so it is sufficient to avoid reconciling it away.
            // We're not going to unwrap or actually use the new lazy type.
            needsCompareFamilies = true;
          }

          break;
        }

      case ForwardRef:
        {
          if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {
            needsCompareFamilies = true;
          } else if ($$typeofNextType === REACT_LAZY_TYPE) {
            needsCompareFamilies = true;
          }

          break;
        }

      case MemoComponent:
      case SimpleMemoComponent:
        {
          if ($$typeofNextType === REACT_MEMO_TYPE) {
            // TODO: if it was but can no longer be simple,
            // we shouldn't set this.
            needsCompareFamilies = true;
          } else if ($$typeofNextType === REACT_LAZY_TYPE) {
            needsCompareFamilies = true;
          }

          break;
        }

      default:
        return false;
    } // Check if both types have a family and it's the same one.


    if (needsCompareFamilies) {
      // Note: memo() and forwardRef() we'll compare outer rather than inner type.
      // This means both of them need to be registered to preserve state.
      // If we unwrapped and compared the inner types for wrappers instead,
      // then we would risk falsely saying two separate memo(Foo)
      // calls are equivalent because they wrap the same Foo function.
      var prevFamily = resolveFamily(prevType);

      if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) {
        return true;
      }
    }

    return false;
  }
}
function markFailedErrorBoundaryForHotReloading(fiber) {
  {
    if (resolveFamily === null) {
      // Hot reloading is disabled.
      return;
    }

    if (typeof WeakSet !== 'function') {
      return;
    }

    if (failedBoundaries === null) {
      failedBoundaries = new WeakSet();
    }

    failedBoundaries.add(fiber);
  }
}
var scheduleRefresh = function (root, update) {
  {
    if (resolveFamily === null) {
      // Hot reloading is disabled.
      return;
    }

    var staleFamilies = update.staleFamilies,
        updatedFamilies = update.updatedFamilies;
    flushPassiveEffects();
    flushSync(function () {
      scheduleFibersWithFamiliesRecursively(root.current, updatedFamilies, staleFamilies);
    });
  }
};
var scheduleRoot = function (root, element) {
  {
    if (root.context !== emptyContextObject) {
      // Super edge case: root has a legacy _renderSubtree context
      // but we don't know the parentComponent so we can't pass it.
      // Just ignore. We'll delete this with _renderSubtree code path later.
      return;
    }

    flushPassiveEffects();
    flushSync(function () {
      updateContainer(element, root, null, null);
    });
  }
};

function scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {
  {
    var alternate = fiber.alternate,
        child = fiber.child,
        sibling = fiber.sibling,
        tag = fiber.tag,
        type = fiber.type;
    var candidateType = null;

    switch (tag) {
      case FunctionComponent:
      case SimpleMemoComponent:
      case ClassComponent:
        candidateType = type;
        break;

      case ForwardRef:
        candidateType = type.render;
        break;
    }

    if (resolveFamily === null) {
      throw new Error('Expected resolveFamily to be set during hot reload.');
    }

    var needsRender = false;
    var needsRemount = false;

    if (candidateType !== null) {
      var family = resolveFamily(candidateType);

      if (family !== undefined) {
        if (staleFamilies.has(family)) {
          needsRemount = true;
        } else if (updatedFamilies.has(family)) {
          if (tag === ClassComponent) {
            needsRemount = true;
          } else {
            needsRender = true;
          }
        }
      }
    }

    if (failedBoundaries !== null) {
      if (failedBoundaries.has(fiber) || alternate !== null && failedBoundaries.has(alternate)) {
        needsRemount = true;
      }
    }

    if (needsRemount) {
      fiber._debugNeedsRemount = true;
    }

    if (needsRemount || needsRender) {
      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
    }

    if (child !== null && !needsRemount) {
      scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);
    }

    if (sibling !== null) {
      scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);
    }
  }
}

var findHostInstancesForRefresh = function (root, families) {
  {
    var hostInstances = new Set();
    var types = new Set(families.map(function (family) {
      return family.current;
    }));
    findHostInstancesForMatchingFibersRecursively(root.current, types, hostInstances);
    return hostInstances;
  }
};

function findHostInstancesForMatchingFibersRecursively(fiber, types, hostInstances) {
  {
    var child = fiber.child,
        sibling = fiber.sibling,
        tag = fiber.tag,
        type = fiber.type;
    var candidateType = null;

    switch (tag) {
      case FunctionComponent:
      case SimpleMemoComponent:
      case ClassComponent:
        candidateType = type;
        break;

      case ForwardRef:
        candidateType = type.render;
        break;
    }

    var didMatch = false;

    if (candidateType !== null) {
      if (types.has(candidateType)) {
        didMatch = true;
      }
    }

    if (didMatch) {
      // We have a match. This only drills down to the closest host components.
      // There's no need to search deeper because for the purpose of giving
      // visual feedback, "flashing" outermost parent rectangles is sufficient.
      findHostInstancesForFiberShallowly(fiber, hostInstances);
    } else {
      // If there's no match, maybe there will be one further down in the child tree.
      if (child !== null) {
        findHostInstancesForMatchingFibersRecursively(child, types, hostInstances);
      }
    }

    if (sibling !== null) {
      findHostInstancesForMatchingFibersRecursively(sibling, types, hostInstances);
    }
  }
}

function findHostInstancesForFiberShallowly(fiber, hostInstances) {
  {
    var foundHostInstances = findChildHostInstancesForFiberShallowly(fiber, hostInstances);

    if (foundHostInstances) {
      return;
    } // If we didn't find any host children, fallback to closest host parent.


    var node = fiber;

    while (true) {
      switch (node.tag) {
        case HostComponent:
          hostInstances.add(node.stateNode);
          return;

        case HostPortal:
          hostInstances.add(node.stateNode.containerInfo);
          return;

        case HostRoot:
          hostInstances.add(node.stateNode.containerInfo);
          return;
      }

      if (node.return === null) {
        throw new Error('Expected to reach root first.');
      }

      node = node.return;
    }
  }
}

function findChildHostInstancesForFiberShallowly(fiber, hostInstances) {
  {
    var node = fiber;
    var foundHostInstances = false;

    while (true) {
      if (node.tag === HostComponent) {
        // We got a match.
        foundHostInstances = true;
        hostInstances.add(node.stateNode); // There may still be more, so keep searching.
      } else if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === fiber) {
        return foundHostInstances;
      }

      while (node.sibling === null) {
        if (node.return === null || node.return === fiber) {
          return foundHostInstances;
        }

        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  }

  return false;
}

var hasBadMapPolyfill;

{
  hasBadMapPolyfill = false;

  try {
    var nonExtensibleObject = Object.preventExtensions({});
    /* eslint-disable no-new */

    new Map([[nonExtensibleObject, null]]);
    new Set([nonExtensibleObject]);
    /* eslint-enable no-new */
  } catch (e) {
    // TODO: Consider warning about bad polyfills
    hasBadMapPolyfill = true;
  }
}

var debugCounter = 1;

function FiberNode(tag, pendingProps, key, mode) {
  // Instance
  this.tag = tag;
  this.key = key;
  this.elementType = null;
  this.type = null;
  this.stateNode = null; // Fiber

  this.return = null;
  this.child = null;
  this.sibling = null;
  this.index = 0;
  this.ref = null;
  this.pendingProps = pendingProps;
  this.memoizedProps = null;
  this.updateQueue = null;
  this.memoizedState = null;
  this.dependencies = null;
  this.mode = mode; // Effects

  this.flags = NoFlags;
  this.nextEffect = null;
  this.firstEffect = null;
  this.lastEffect = null;
  this.lanes = NoLanes;
  this.childLanes = NoLanes;
  this.alternate = null;

  {
    // Note: The following is done to avoid a v8 performance cliff.
    //
    // Initializing the fields below to smis and later updating them with
    // double values will cause Fibers to end up having separate shapes.
    // This behavior/bug has something to do with Object.preventExtension().
    // Fortunately this only impacts DEV builds.
    // Unfortunately it makes React unusably slow for some applications.
    // To work around this, initialize the fields below with doubles.
    //
    // Learn more about this here:
    // https://github.com/facebook/react/issues/14365
    // https://bugs.chromium.org/p/v8/issues/detail?id=8538
    this.actualDuration = Number.NaN;
    this.actualStartTime = Number.NaN;
    this.selfBaseDuration = Number.NaN;
    this.treeBaseDuration = Number.NaN; // It's okay to replace the initial doubles with smis after initialization.
    // This won't trigger the performance cliff mentioned above,
    // and it simplifies other profiler code (including DevTools).

    this.actualDuration = 0;
    this.actualStartTime = -1;
    this.selfBaseDuration = 0;
    this.treeBaseDuration = 0;
  }

  {
    // This isn't directly used but is handy for debugging internals:
    this._debugID = debugCounter++;
    this._debugSource = null;
    this._debugOwner = null;
    this._debugNeedsRemount = false;
    this._debugHookTypes = null;

    if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {
      Object.preventExtensions(this);
    }
  }
} // This is a constructor function, rather than a POJO constructor, still
// please ensure we do the following:
// 1) Nobody should add any instance methods on this. Instance methods can be
//    more difficult to predict when they get optimized and they are almost
//    never inlined properly in static compilers.
// 2) Nobody should rely on `instanceof Fiber` for type testing. We should
//    always know when it is a fiber.
// 3) We might want to experiment with using numeric keys since they are easier
//    to optimize in a non-JIT environment.
// 4) We can easily go from a constructor to a createFiber object literal if that
//    is faster.
// 5) It should be easy to port this to a C struct and keep a C implementation
//    compatible.


var createFiber = function (tag, pendingProps, key, mode) {
  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors
  return new FiberNode(tag, pendingProps, key, mode);
};

function shouldConstruct$1(Component) {
  var prototype = Component.prototype;
  return !!(prototype && prototype.isReactComponent);
}

function isSimpleFunctionComponent(type) {
  return typeof type === 'function' && !shouldConstruct$1(type) && type.defaultProps === undefined;
}
function resolveLazyComponentTag(Component) {
  if (typeof Component === 'function') {
    return shouldConstruct$1(Component) ? ClassComponent : FunctionComponent;
  } else if (Component !== undefined && Component !== null) {
    var $$typeof = Component.$$typeof;

    if ($$typeof === REACT_FORWARD_REF_TYPE) {
      return ForwardRef;
    }

    if ($$typeof === REACT_MEMO_TYPE) {
      return MemoComponent;
    }
  }

  return IndeterminateComponent;
} // This is used to create an alternate fiber to do work on.

function createWorkInProgress(current, pendingProps) {
  var workInProgress = current.alternate;

  if (workInProgress === null) {
    // We use a double buffering pooling technique because we know that we'll
    // only ever need at most two versions of a tree. We pool the "other" unused
    // node that we're free to reuse. This is lazily created to avoid allocating
    // extra objects for things that are never updated. It also allow us to
    // reclaim the extra memory if needed.
    workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);
    workInProgress.elementType = current.elementType;
    workInProgress.type = current.type;
    workInProgress.stateNode = current.stateNode;

    {
      // DEV-only fields
      workInProgress._debugID = current._debugID;
      workInProgress._debugSource = current._debugSource;
      workInProgress._debugOwner = current._debugOwner;
      workInProgress._debugHookTypes = current._debugHookTypes;
    }

    workInProgress.alternate = current;
    current.alternate = workInProgress;
  } else {
    workInProgress.pendingProps = pendingProps; // Needed because Blocks store data on type.

    workInProgress.type = current.type; // We already have an alternate.
    // Reset the effect tag.

    workInProgress.flags = NoFlags; // The effect list is no longer valid.

    workInProgress.nextEffect = null;
    workInProgress.firstEffect = null;
    workInProgress.lastEffect = null;

    {
      // We intentionally reset, rather than copy, actualDuration & actualStartTime.
      // This prevents time from endlessly accumulating in new commits.
      // This has the downside of resetting values for different priority renders,
      // But works for yielding (the common case) and should support resuming.
      workInProgress.actualDuration = 0;
      workInProgress.actualStartTime = -1;
    }
  }

  workInProgress.childLanes = current.childLanes;
  workInProgress.lanes = current.lanes;
  workInProgress.child = current.child;
  workInProgress.memoizedProps = current.memoizedProps;
  workInProgress.memoizedState = current.memoizedState;
  workInProgress.updateQueue = current.updateQueue; // Clone the dependencies object. This is mutated during the render phase, so
  // it cannot be shared with the current fiber.

  var currentDependencies = current.dependencies;
  workInProgress.dependencies = currentDependencies === null ? null : {
    lanes: currentDependencies.lanes,
    firstContext: currentDependencies.firstContext
  }; // These will be overridden during the parent's reconciliation

  workInProgress.sibling = current.sibling;
  workInProgress.index = current.index;
  workInProgress.ref = current.ref;

  {
    workInProgress.selfBaseDuration = current.selfBaseDuration;
    workInProgress.treeBaseDuration = current.treeBaseDuration;
  }

  {
    workInProgress._debugNeedsRemount = current._debugNeedsRemount;

    switch (workInProgress.tag) {
      case IndeterminateComponent:
      case FunctionComponent:
      case SimpleMemoComponent:
        workInProgress.type = resolveFunctionForHotReloading(current.type);
        break;

      case ClassComponent:
        workInProgress.type = resolveClassForHotReloading(current.type);
        break;

      case ForwardRef:
        workInProgress.type = resolveForwardRefForHotReloading(current.type);
        break;
    }
  }

  return workInProgress;
} // Used to reuse a Fiber for a second pass.

function resetWorkInProgress(workInProgress, renderLanes) {
  // This resets the Fiber to what createFiber or createWorkInProgress would
  // have set the values to before during the first pass. Ideally this wouldn't
  // be necessary but unfortunately many code paths reads from the workInProgress
  // when they should be reading from current and writing to workInProgress.
  // We assume pendingProps, index, key, ref, return are still untouched to
  // avoid doing another reconciliation.
  // Reset the effect tag but keep any Placement tags, since that's something
  // that child fiber is setting, not the reconciliation.
  workInProgress.flags &= Placement; // The effect list is no longer valid.

  workInProgress.nextEffect = null;
  workInProgress.firstEffect = null;
  workInProgress.lastEffect = null;
  var current = workInProgress.alternate;

  if (current === null) {
    // Reset to createFiber's initial values.
    workInProgress.childLanes = NoLanes;
    workInProgress.lanes = renderLanes;
    workInProgress.child = null;
    workInProgress.memoizedProps = null;
    workInProgress.memoizedState = null;
    workInProgress.updateQueue = null;
    workInProgress.dependencies = null;
    workInProgress.stateNode = null;

    {
      // Note: We don't reset the actualTime counts. It's useful to accumulate
      // actual time across multiple render passes.
      workInProgress.selfBaseDuration = 0;
      workInProgress.treeBaseDuration = 0;
    }
  } else {
    // Reset to the cloned values that createWorkInProgress would've.
    workInProgress.childLanes = current.childLanes;
    workInProgress.lanes = current.lanes;
    workInProgress.child = current.child;
    workInProgress.memoizedProps = current.memoizedProps;
    workInProgress.memoizedState = current.memoizedState;
    workInProgress.updateQueue = current.updateQueue; // Needed because Blocks store data on type.

    workInProgress.type = current.type; // Clone the dependencies object. This is mutated during the render phase, so
    // it cannot be shared with the current fiber.

    var currentDependencies = current.dependencies;
    workInProgress.dependencies = currentDependencies === null ? null : {
      lanes: currentDependencies.lanes,
      firstContext: currentDependencies.firstContext
    };

    {
      // Note: We don't reset the actualTime counts. It's useful to accumulate
      // actual time across multiple render passes.
      workInProgress.selfBaseDuration = current.selfBaseDuration;
      workInProgress.treeBaseDuration = current.treeBaseDuration;
    }
  }

  return workInProgress;
}
function createHostRootFiber(tag) {
  var mode;

  if (tag === ConcurrentRoot) {
    mode = ConcurrentMode | BlockingMode | StrictMode;
  } else if (tag === BlockingRoot) {
    mode = BlockingMode | StrictMode;
  } else {
    mode = NoMode;
  }

  if ( isDevToolsPresent) {
    // Always collect profile timings when DevTools are present.
    // This enables DevTools to start capturing timing at any point–
    // Without some nodes in the tree having empty base times.
    mode |= ProfileMode;
  }

  return createFiber(HostRoot, null, null, mode);
}
function createFiberFromTypeAndProps(type, // React$ElementType
key, pendingProps, owner, mode, lanes) {
  var fiberTag = IndeterminateComponent; // The resolved type is set if we know what the final type will be. I.e. it's not lazy.

  var resolvedType = type;

  if (typeof type === 'function') {
    if (shouldConstruct$1(type)) {
      fiberTag = ClassComponent;

      {
        resolvedType = resolveClassForHotReloading(resolvedType);
      }
    } else {
      {
        resolvedType = resolveFunctionForHotReloading(resolvedType);
      }
    }
  } else if (typeof type === 'string') {
    fiberTag = HostComponent;
  } else {
    getTag: switch (type) {
      case REACT_FRAGMENT_TYPE:
        return createFiberFromFragment(pendingProps.children, mode, lanes, key);

      case REACT_DEBUG_TRACING_MODE_TYPE:
        fiberTag = Mode;
        mode |= DebugTracingMode;
        break;

      case REACT_STRICT_MODE_TYPE:
        fiberTag = Mode;
        mode |= StrictMode;
        break;

      case REACT_PROFILER_TYPE:
        return createFiberFromProfiler(pendingProps, mode, lanes, key);

      case REACT_SUSPENSE_TYPE:
        return createFiberFromSuspense(pendingProps, mode, lanes, key);

      case REACT_SUSPENSE_LIST_TYPE:
        return createFiberFromSuspenseList(pendingProps, mode, lanes, key);

      case REACT_OFFSCREEN_TYPE:
        return createFiberFromOffscreen(pendingProps, mode, lanes, key);

      case REACT_LEGACY_HIDDEN_TYPE:
        return createFiberFromLegacyHidden(pendingProps, mode, lanes, key);

      case REACT_SCOPE_TYPE:

      // eslint-disable-next-line no-fallthrough

      default:
        {
          if (typeof type === 'object' && type !== null) {
            switch (type.$$typeof) {
              case REACT_PROVIDER_TYPE:
                fiberTag = ContextProvider;
                break getTag;

              case REACT_CONTEXT_TYPE:
                // This is a consumer
                fiberTag = ContextConsumer;
                break getTag;

              case REACT_FORWARD_REF_TYPE:
                fiberTag = ForwardRef;

                {
                  resolvedType = resolveForwardRefForHotReloading(resolvedType);
                }

                break getTag;

              case REACT_MEMO_TYPE:
                fiberTag = MemoComponent;
                break getTag;

              case REACT_LAZY_TYPE:
                fiberTag = LazyComponent;
                resolvedType = null;
                break getTag;

              case REACT_BLOCK_TYPE:
                fiberTag = Block;
                break getTag;
            }
          }

          var info = '';

          {
            if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
              info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and " + 'named imports.';
            }

            var ownerName = owner ? getComponentName(owner.type) : null;

            if (ownerName) {
              info += '\n\nCheck the render method of `' + ownerName + '`.';
            }
          }

          {
            {
              throw Error( "Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + (type == null ? type : typeof type) + "." + info );
            }
          }
        }
    }
  }

  var fiber = createFiber(fiberTag, pendingProps, key, mode);
  fiber.elementType = type;
  fiber.type = resolvedType;
  fiber.lanes = lanes;

  {
    fiber._debugOwner = owner;
  }

  return fiber;
}
function createFiberFromElement(element, mode, lanes) {
  var owner = null;

  {
    owner = element._owner;
  }

  var type = element.type;
  var key = element.key;
  var pendingProps = element.props;
  var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes);

  {
    fiber._debugSource = element._source;
    fiber._debugOwner = element._owner;
  }

  return fiber;
}
function createFiberFromFragment(elements, mode, lanes, key) {
  var fiber = createFiber(Fragment, elements, key, mode);
  fiber.lanes = lanes;
  return fiber;
}

function createFiberFromProfiler(pendingProps, mode, lanes, key) {
  {
    if (typeof pendingProps.id !== 'string') {
      error('Profiler must specify an "id" as a prop');
    }
  }

  var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode); // TODO: The Profiler fiber shouldn't have a type. It has a tag.

  fiber.elementType = REACT_PROFILER_TYPE;
  fiber.type = REACT_PROFILER_TYPE;
  fiber.lanes = lanes;

  {
    fiber.stateNode = {
      effectDuration: 0,
      passiveEffectDuration: 0
    };
  }

  return fiber;
}

function createFiberFromSuspense(pendingProps, mode, lanes, key) {
  var fiber = createFiber(SuspenseComponent, pendingProps, key, mode); // TODO: The SuspenseComponent fiber shouldn't have a type. It has a tag.
  // This needs to be fixed in getComponentName so that it relies on the tag
  // instead.

  fiber.type = REACT_SUSPENSE_TYPE;
  fiber.elementType = REACT_SUSPENSE_TYPE;
  fiber.lanes = lanes;
  return fiber;
}
function createFiberFromSuspenseList(pendingProps, mode, lanes, key) {
  var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);

  {
    // TODO: The SuspenseListComponent fiber shouldn't have a type. It has a tag.
    // This needs to be fixed in getComponentName so that it relies on the tag
    // instead.
    fiber.type = REACT_SUSPENSE_LIST_TYPE;
  }

  fiber.elementType = REACT_SUSPENSE_LIST_TYPE;
  fiber.lanes = lanes;
  return fiber;
}
function createFiberFromOffscreen(pendingProps, mode, lanes, key) {
  var fiber = createFiber(OffscreenComponent, pendingProps, key, mode); // TODO: The OffscreenComponent fiber shouldn't have a type. It has a tag.
  // This needs to be fixed in getComponentName so that it relies on the tag
  // instead.

  {
    fiber.type = REACT_OFFSCREEN_TYPE;
  }

  fiber.elementType = REACT_OFFSCREEN_TYPE;
  fiber.lanes = lanes;
  return fiber;
}
function createFiberFromLegacyHidden(pendingProps, mode, lanes, key) {
  var fiber = createFiber(LegacyHiddenComponent, pendingProps, key, mode); // TODO: The LegacyHidden fiber shouldn't have a type. It has a tag.
  // This needs to be fixed in getComponentName so that it relies on the tag
  // instead.

  {
    fiber.type = REACT_LEGACY_HIDDEN_TYPE;
  }

  fiber.elementType = REACT_LEGACY_HIDDEN_TYPE;
  fiber.lanes = lanes;
  return fiber;
}
function createFiberFromText(content, mode, lanes) {
  var fiber = createFiber(HostText, content, null, mode);
  fiber.lanes = lanes;
  return fiber;
}
function createFiberFromHostInstanceForDeletion() {
  var fiber = createFiber(HostComponent, null, null, NoMode); // TODO: These should not need a type.

  fiber.elementType = 'DELETED';
  fiber.type = 'DELETED';
  return fiber;
}
function createFiberFromPortal(portal, mode, lanes) {
  var pendingProps = portal.children !== null ? portal.children : [];
  var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
  fiber.lanes = lanes;
  fiber.stateNode = {
    containerInfo: portal.containerInfo,
    pendingChildren: null,
    // Used by persistent updates
    implementation: portal.implementation
  };
  return fiber;
} // Used for stashing WIP properties to replay failed work in DEV.

function assignFiberPropertiesInDEV(target, source) {
  if (target === null) {
    // This Fiber's initial properties will always be overwritten.
    // We only use a Fiber to ensure the same hidden class so DEV isn't slow.
    target = createFiber(IndeterminateComponent, null, null, NoMode);
  } // This is intentionally written as a list of all properties.
  // We tried to use Object.assign() instead but this is called in
  // the hottest path, and Object.assign() was too slow:
  // https://github.com/facebook/react/issues/12502
  // This code is DEV-only so size is not a concern.


  target.tag = source.tag;
  target.key = source.key;
  target.elementType = source.elementType;
  target.type = source.type;
  target.stateNode = source.stateNode;
  target.return = source.return;
  target.child = source.child;
  target.sibling = source.sibling;
  target.index = source.index;
  target.ref = source.ref;
  target.pendingProps = source.pendingProps;
  target.memoizedProps = source.memoizedProps;
  target.updateQueue = source.updateQueue;
  target.memoizedState = source.memoizedState;
  target.dependencies = source.dependencies;
  target.mode = source.mode;
  target.flags = source.flags;
  target.nextEffect = source.nextEffect;
  target.firstEffect = source.firstEffect;
  target.lastEffect = source.lastEffect;
  target.lanes = source.lanes;
  target.childLanes = source.childLanes;
  target.alternate = source.alternate;

  {
    target.actualDuration = source.actualDuration;
    target.actualStartTime = source.actualStartTime;
    target.selfBaseDuration = source.selfBaseDuration;
    target.treeBaseDuration = source.treeBaseDuration;
  }

  target._debugID = source._debugID;
  target._debugSource = source._debugSource;
  target._debugOwner = source._debugOwner;
  target._debugNeedsRemount = source._debugNeedsRemount;
  target._debugHookTypes = source._debugHookTypes;
  return target;
}

function FiberRootNode(containerInfo, tag, hydrate) {
  this.tag = tag;
  this.containerInfo = containerInfo;
  this.pendingChildren = null;
  this.current = null;
  this.pingCache = null;
  this.finishedWork = null;
  this.timeoutHandle = noTimeout;
  this.context = null;
  this.pendingContext = null;
  this.hydrate = hydrate;
  this.callbackNode = null;
  this.callbackPriority = NoLanePriority;
  this.eventTimes = createLaneMap(NoLanes);
  this.expirationTimes = createLaneMap(NoTimestamp);
  this.pendingLanes = NoLanes;
  this.suspendedLanes = NoLanes;
  this.pingedLanes = NoLanes;
  this.expiredLanes = NoLanes;
  this.mutableReadLanes = NoLanes;
  this.finishedLanes = NoLanes;
  this.entangledLanes = NoLanes;
  this.entanglements = createLaneMap(NoLanes);

  {
    this.mutableSourceEagerHydrationData = null;
  }

  {
    this.interactionThreadID = tracing.unstable_getThreadID();
    this.memoizedInteractions = new Set();
    this.pendingInteractionMap = new Map();
  }

  {
    switch (tag) {
      case BlockingRoot:
        this._debugRootType = 'createBlockingRoot()';
        break;

      case ConcurrentRoot:
        this._debugRootType = 'createRoot()';
        break;

      case LegacyRoot:
        this._debugRootType = 'createLegacyRoot()';
        break;
    }
  }
}

function createFiberRoot(containerInfo, tag, hydrate, hydrationCallbacks) {
  var root = new FiberRootNode(containerInfo, tag, hydrate);
  // stateNode is any.


  var uninitializedFiber = createHostRootFiber(tag);
  root.current = uninitializedFiber;
  uninitializedFiber.stateNode = root;
  initializeUpdateQueue(uninitializedFiber);
  return root;
}

// This ensures that the version used for server rendering matches the one
// that is eventually read during hydration.
// If they don't match there's a potential tear and a full deopt render is required.

function registerMutableSourceForHydration(root, mutableSource) {
  var getVersion = mutableSource._getVersion;
  var version = getVersion(mutableSource._source); // TODO Clear this data once all pending hydration work is finished.
  // Retaining it forever may interfere with GC.

  if (root.mutableSourceEagerHydrationData == null) {
    root.mutableSourceEagerHydrationData = [mutableSource, version];
  } else {
    root.mutableSourceEagerHydrationData.push(mutableSource, version);
  }
}

function createPortal(children, containerInfo, // TODO: figure out the API for cross-renderer implementation.
implementation) {
  var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
  return {
    // This tag allow us to uniquely identify this as a React Portal
    $$typeof: REACT_PORTAL_TYPE,
    key: key == null ? null : '' + key,
    children: children,
    containerInfo: containerInfo,
    implementation: implementation
  };
}

var didWarnAboutNestedUpdates;
var didWarnAboutFindNodeInStrictMode;

{
  didWarnAboutNestedUpdates = false;
  didWarnAboutFindNodeInStrictMode = {};
}

function getContextForSubtree(parentComponent) {
  if (!parentComponent) {
    return emptyContextObject;
  }

  var fiber = get(parentComponent);
  var parentContext = findCurrentUnmaskedContext(fiber);

  if (fiber.tag === ClassComponent) {
    var Component = fiber.type;

    if (isContextProvider(Component)) {
      return processChildContext(fiber, Component, parentContext);
    }
  }

  return parentContext;
}

function findHostInstanceWithWarning(component, methodName) {
  {
    var fiber = get(component);

    if (fiber === undefined) {
      if (typeof component.render === 'function') {
        {
          {
            throw Error( "Unable to find node on an unmounted component." );
          }
        }
      } else {
        {
          {
            throw Error( "Argument appears to not be a ReactComponent. Keys: " + Object.keys(component) );
          }
        }
      }
    }

    var hostFiber = findCurrentHostFiber(fiber);

    if (hostFiber === null) {
      return null;
    }

    if (hostFiber.mode & StrictMode) {
      var componentName = getComponentName(fiber.type) || 'Component';

      if (!didWarnAboutFindNodeInStrictMode[componentName]) {
        didWarnAboutFindNodeInStrictMode[componentName] = true;
        var previousFiber = current;

        try {
          setCurrentFiber(hostFiber);

          if (fiber.mode & StrictMode) {
            error('%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which is inside StrictMode. ' + 'Instead, add a ref directly to the element you want to reference. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-find-node', methodName, methodName, componentName);
          } else {
            error('%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which renders StrictMode children. ' + 'Instead, add a ref directly to the element you want to reference. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-find-node', methodName, methodName, componentName);
          }
        } finally {
          // Ideally this should reset to previous but this shouldn't be called in
          // render and there's another warning for that anyway.
          if (previousFiber) {
            setCurrentFiber(previousFiber);
          } else {
            resetCurrentFiber();
          }
        }
      }
    }

    return hostFiber.stateNode;
  }
}

function createContainer(containerInfo, tag, hydrate, hydrationCallbacks) {
  return createFiberRoot(containerInfo, tag, hydrate);
}
function updateContainer(element, container, parentComponent, callback) {
  {
    onScheduleRoot(container, element);
  }

  var current$1 = container.current;
  var eventTime = requestEventTime();

  {
    // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
    if ('undefined' !== typeof jest) {
      warnIfUnmockedScheduler(current$1);
      warnIfNotScopedWithMatchingAct(current$1);
    }
  }

  var lane = requestUpdateLane(current$1);

  var context = getContextForSubtree(parentComponent);

  if (container.context === null) {
    container.context = context;
  } else {
    container.pendingContext = context;
  }

  {
    if (isRendering && current !== null && !didWarnAboutNestedUpdates) {
      didWarnAboutNestedUpdates = true;

      error('Render methods should be a pure function of props and state; ' + 'triggering nested component updates from render is not allowed. ' + 'If necessary, trigger nested updates in componentDidUpdate.\n\n' + 'Check the render method of %s.', getComponentName(current.type) || 'Unknown');
    }
  }

  var update = createUpdate(eventTime, lane); // Caution: React DevTools currently depends on this property
  // being called "element".

  update.payload = {
    element: element
  };
  callback = callback === undefined ? null : callback;

  if (callback !== null) {
    {
      if (typeof callback !== 'function') {
        error('render(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callback);
      }
    }

    update.callback = callback;
  }

  enqueueUpdate(current$1, update);
  scheduleUpdateOnFiber(current$1, lane, eventTime);
  return lane;
}
function getPublicRootInstance(container) {
  var containerFiber = container.current;

  if (!containerFiber.child) {
    return null;
  }

  switch (containerFiber.child.tag) {
    case HostComponent:
      return getPublicInstance(containerFiber.child.stateNode);

    default:
      return containerFiber.child.stateNode;
  }
}

function markRetryLaneImpl(fiber, retryLane) {
  var suspenseState = fiber.memoizedState;

  if (suspenseState !== null && suspenseState.dehydrated !== null) {
    suspenseState.retryLane = higherPriorityLane(suspenseState.retryLane, retryLane);
  }
} // Increases the priority of thennables when they resolve within this boundary.


function markRetryLaneIfNotHydrated(fiber, retryLane) {
  markRetryLaneImpl(fiber, retryLane);
  var alternate = fiber.alternate;

  if (alternate) {
    markRetryLaneImpl(alternate, retryLane);
  }
}

function attemptUserBlockingHydration$1(fiber) {
  if (fiber.tag !== SuspenseComponent) {
    // We ignore HostRoots here because we can't increase
    // their priority and they should not suspend on I/O,
    // since you have to wrap anything that might suspend in
    // Suspense.
    return;
  }

  var eventTime = requestEventTime();
  var lane = InputDiscreteHydrationLane;
  scheduleUpdateOnFiber(fiber, lane, eventTime);
  markRetryLaneIfNotHydrated(fiber, lane);
}
function attemptContinuousHydration$1(fiber) {
  if (fiber.tag !== SuspenseComponent) {
    // We ignore HostRoots here because we can't increase
    // their priority and they should not suspend on I/O,
    // since you have to wrap anything that might suspend in
    // Suspense.
    return;
  }

  var eventTime = requestEventTime();
  var lane = SelectiveHydrationLane;
  scheduleUpdateOnFiber(fiber, lane, eventTime);
  markRetryLaneIfNotHydrated(fiber, lane);
}
function attemptHydrationAtCurrentPriority$1(fiber) {
  if (fiber.tag !== SuspenseComponent) {
    // We ignore HostRoots here because we can't increase
    // their priority other than synchronously flush it.
    return;
  }

  var eventTime = requestEventTime();
  var lane = requestUpdateLane(fiber);
  scheduleUpdateOnFiber(fiber, lane, eventTime);
  markRetryLaneIfNotHydrated(fiber, lane);
}
function runWithPriority$2(priority, fn) {

  try {
    setCurrentUpdateLanePriority(priority);
    return fn();
  } finally {
  }
}
function findHostInstanceWithNoPortals(fiber) {
  var hostFiber = findCurrentHostFiberWithNoPortals(fiber);

  if (hostFiber === null) {
    return null;
  }

  if (hostFiber.tag === FundamentalComponent) {
    return hostFiber.stateNode.instance;
  }

  return hostFiber.stateNode;
}

var shouldSuspendImpl = function (fiber) {
  return false;
};

function shouldSuspend(fiber) {
  return shouldSuspendImpl(fiber);
}
var overrideHookState = null;
var overrideHookStateDeletePath = null;
var overrideHookStateRenamePath = null;
var overrideProps = null;
var overridePropsDeletePath = null;
var overridePropsRenamePath = null;
var scheduleUpdate = null;
var setSuspenseHandler = null;

{
  var copyWithDeleteImpl = function (obj, path, index) {
    var key = path[index];
    var updated = Array.isArray(obj) ? obj.slice() : _assign({}, obj);

    if (index + 1 === path.length) {
      if (Array.isArray(updated)) {
        updated.splice(key, 1);
      } else {
        delete updated[key];
      }

      return updated;
    } // $FlowFixMe number or string is fine here


    updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);
    return updated;
  };

  var copyWithDelete = function (obj, path) {
    return copyWithDeleteImpl(obj, path, 0);
  };

  var copyWithRenameImpl = function (obj, oldPath, newPath, index) {
    var oldKey = oldPath[index];
    var updated = Array.isArray(obj) ? obj.slice() : _assign({}, obj);

    if (index + 1 === oldPath.length) {
      var newKey = newPath[index]; // $FlowFixMe number or string is fine here

      updated[newKey] = updated[oldKey];

      if (Array.isArray(updated)) {
        updated.splice(oldKey, 1);
      } else {
        delete updated[oldKey];
      }
    } else {
      // $FlowFixMe number or string is fine here
      updated[oldKey] = copyWithRenameImpl( // $FlowFixMe number or string is fine here
      obj[oldKey], oldPath, newPath, index + 1);
    }

    return updated;
  };

  var copyWithRename = function (obj, oldPath, newPath) {
    if (oldPath.length !== newPath.length) {
      warn('copyWithRename() expects paths of the same length');

      return;
    } else {
      for (var i = 0; i < newPath.length - 1; i++) {
        if (oldPath[i] !== newPath[i]) {
          warn('copyWithRename() expects paths to be the same except for the deepest key');

          return;
        }
      }
    }

    return copyWithRenameImpl(obj, oldPath, newPath, 0);
  };

  var copyWithSetImpl = function (obj, path, index, value) {
    if (index >= path.length) {
      return value;
    }

    var key = path[index];
    var updated = Array.isArray(obj) ? obj.slice() : _assign({}, obj); // $FlowFixMe number or string is fine here

    updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);
    return updated;
  };

  var copyWithSet = function (obj, path, value) {
    return copyWithSetImpl(obj, path, 0, value);
  };

  var findHook = function (fiber, id) {
    // For now, the "id" of stateful hooks is just the stateful hook index.
    // This may change in the future with e.g. nested hooks.
    var currentHook = fiber.memoizedState;

    while (currentHook !== null && id > 0) {
      currentHook = currentHook.next;
      id--;
    }

    return currentHook;
  }; // Support DevTools editable values for useState and useReducer.


  overrideHookState = function (fiber, id, path, value) {
    var hook = findHook(fiber, id);

    if (hook !== null) {
      var newState = copyWithSet(hook.memoizedState, path, value);
      hook.memoizedState = newState;
      hook.baseState = newState; // We aren't actually adding an update to the queue,
      // because there is no update we can add for useReducer hooks that won't trigger an error.
      // (There's no appropriate action type for DevTools overrides.)
      // As a result though, React will see the scheduled update as a noop and bailout.
      // Shallow cloning props works as a workaround for now to bypass the bailout check.

      fiber.memoizedProps = _assign({}, fiber.memoizedProps);
      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
    }
  };

  overrideHookStateDeletePath = function (fiber, id, path) {
    var hook = findHook(fiber, id);

    if (hook !== null) {
      var newState = copyWithDelete(hook.memoizedState, path);
      hook.memoizedState = newState;
      hook.baseState = newState; // We aren't actually adding an update to the queue,
      // because there is no update we can add for useReducer hooks that won't trigger an error.
      // (There's no appropriate action type for DevTools overrides.)
      // As a result though, React will see the scheduled update as a noop and bailout.
      // Shallow cloning props works as a workaround for now to bypass the bailout check.

      fiber.memoizedProps = _assign({}, fiber.memoizedProps);
      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
    }
  };

  overrideHookStateRenamePath = function (fiber, id, oldPath, newPath) {
    var hook = findHook(fiber, id);

    if (hook !== null) {
      var newState = copyWithRename(hook.memoizedState, oldPath, newPath);
      hook.memoizedState = newState;
      hook.baseState = newState; // We aren't actually adding an update to the queue,
      // because there is no update we can add for useReducer hooks that won't trigger an error.
      // (There's no appropriate action type for DevTools overrides.)
      // As a result though, React will see the scheduled update as a noop and bailout.
      // Shallow cloning props works as a workaround for now to bypass the bailout check.

      fiber.memoizedProps = _assign({}, fiber.memoizedProps);
      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
    }
  }; // Support DevTools props for function components, forwardRef, memo, host components, etc.


  overrideProps = function (fiber, path, value) {
    fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);

    if (fiber.alternate) {
      fiber.alternate.pendingProps = fiber.pendingProps;
    }

    scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
  };

  overridePropsDeletePath = function (fiber, path) {
    fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);

    if (fiber.alternate) {
      fiber.alternate.pendingProps = fiber.pendingProps;
    }

    scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
  };

  overridePropsRenamePath = function (fiber, oldPath, newPath) {
    fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);

    if (fiber.alternate) {
      fiber.alternate.pendingProps = fiber.pendingProps;
    }

    scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
  };

  scheduleUpdate = function (fiber) {
    scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
  };

  setSuspenseHandler = function (newShouldSuspendImpl) {
    shouldSuspendImpl = newShouldSuspendImpl;
  };
}

function findHostInstanceByFiber(fiber) {
  var hostFiber = findCurrentHostFiber(fiber);

  if (hostFiber === null) {
    return null;
  }

  return hostFiber.stateNode;
}

function emptyFindFiberByHostInstance(instance) {
  return null;
}

function getCurrentFiberForDevTools() {
  return current;
}

function injectIntoDevTools(devToolsConfig) {
  var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
  var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
  return injectInternals({
    bundleType: devToolsConfig.bundleType,
    version: devToolsConfig.version,
    rendererPackageName: devToolsConfig.rendererPackageName,
    rendererConfig: devToolsConfig.rendererConfig,
    overrideHookState: overrideHookState,
    overrideHookStateDeletePath: overrideHookStateDeletePath,
    overrideHookStateRenamePath: overrideHookStateRenamePath,
    overrideProps: overrideProps,
    overridePropsDeletePath: overridePropsDeletePath,
    overridePropsRenamePath: overridePropsRenamePath,
    setSuspenseHandler: setSuspenseHandler,
    scheduleUpdate: scheduleUpdate,
    currentDispatcherRef: ReactCurrentDispatcher,
    findHostInstanceByFiber: findHostInstanceByFiber,
    findFiberByHostInstance: findFiberByHostInstance || emptyFindFiberByHostInstance,
    // React Refresh
    findHostInstancesForRefresh:  findHostInstancesForRefresh ,
    scheduleRefresh:  scheduleRefresh ,
    scheduleRoot:  scheduleRoot ,
    setRefreshHandler:  setRefreshHandler ,
    // Enables DevTools to append owner stacks to error messages in DEV mode.
    getCurrentFiber:  getCurrentFiberForDevTools 
  });
}

function ReactDOMRoot(container, options) {
  this._internalRoot = createRootImpl(container, ConcurrentRoot, options);
}

function ReactDOMBlockingRoot(container, tag, options) {
  this._internalRoot = createRootImpl(container, tag, options);
}

ReactDOMRoot.prototype.render = ReactDOMBlockingRoot.prototype.render = function (children) {
  var root = this._internalRoot;

  {
    if (typeof arguments[1] === 'function') {
      error('render(...): does not support the second callback argument. ' + 'To execute a side effect after rendering, declare it in a component body with useEffect().');
    }

    var container = root.containerInfo;

    if (container.nodeType !== COMMENT_NODE) {
      var hostInstance = findHostInstanceWithNoPortals(root.current);

      if (hostInstance) {
        if (hostInstance.parentNode !== container) {
          error('render(...): It looks like the React-rendered content of the ' + 'root container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + "root.unmount() to empty a root's container.");
        }
      }
    }
  }

  updateContainer(children, root, null, null);
};

ReactDOMRoot.prototype.unmount = ReactDOMBlockingRoot.prototype.unmount = function () {
  {
    if (typeof arguments[0] === 'function') {
      error('unmount(...): does not support a callback argument. ' + 'To execute a side effect after rendering, declare it in a component body with useEffect().');
    }
  }

  var root = this._internalRoot;
  var container = root.containerInfo;
  updateContainer(null, root, null, function () {
    unmarkContainerAsRoot(container);
  });
};

function createRootImpl(container, tag, options) {
  // Tag is either LegacyRoot or Concurrent Root
  var hydrate = options != null && options.hydrate === true;
  var hydrationCallbacks = options != null && options.hydrationOptions || null;
  var mutableSources = options != null && options.hydrationOptions != null && options.hydrationOptions.mutableSources || null;
  var root = createContainer(container, tag, hydrate);
  markContainerAsRoot(root.current, container);
  var containerNodeType = container.nodeType;

  {
    var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
    listenToAllSupportedEvents(rootContainerElement);
  }

  if (mutableSources) {
    for (var i = 0; i < mutableSources.length; i++) {
      var mutableSource = mutableSources[i];
      registerMutableSourceForHydration(root, mutableSource);
    }
  }

  return root;
}
function createLegacyRoot(container, options) {
  return new ReactDOMBlockingRoot(container, LegacyRoot, options);
}
function isValidContainer(node) {
  return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));
}

var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;
var topLevelUpdateWarnings;
var warnedAboutHydrateAPI = false;

{
  topLevelUpdateWarnings = function (container) {
    if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
      var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer._internalRoot.current);

      if (hostInstance) {
        if (hostInstance.parentNode !== container) {
          error('render(...): It looks like the React-rendered content of this ' + 'container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + 'ReactDOM.unmountComponentAtNode to empty a container.');
        }
      }
    }

    var isRootRenderedBySomeReact = !!container._reactRootContainer;
    var rootEl = getReactRootElementInContainer(container);
    var hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl));

    if (hasNonRootReactChild && !isRootRenderedBySomeReact) {
      error('render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.');
    }

    if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === 'BODY') {
      error('render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.');
    }
  };
}

function getReactRootElementInContainer(container) {
  if (!container) {
    return null;
  }

  if (container.nodeType === DOCUMENT_NODE) {
    return container.documentElement;
  } else {
    return container.firstChild;
  }
}

function shouldHydrateDueToLegacyHeuristic(container) {
  var rootElement = getReactRootElementInContainer(container);
  return !!(rootElement && rootElement.nodeType === ELEMENT_NODE && rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME));
}

function legacyCreateRootFromDOMContainer(container, forceHydrate) {
  var shouldHydrate = forceHydrate || shouldHydrateDueToLegacyHeuristic(container); // First clear any existing content.

  if (!shouldHydrate) {
    var warned = false;
    var rootSibling;

    while (rootSibling = container.lastChild) {
      {
        if (!warned && rootSibling.nodeType === ELEMENT_NODE && rootSibling.hasAttribute(ROOT_ATTRIBUTE_NAME)) {
          warned = true;

          error('render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.');
        }
      }

      container.removeChild(rootSibling);
    }
  }

  {
    if (shouldHydrate && !forceHydrate && !warnedAboutHydrateAPI) {
      warnedAboutHydrateAPI = true;

      warn('render(): Calling ReactDOM.render() to hydrate server-rendered markup ' + 'will stop working in React v18. Replace the ReactDOM.render() call ' + 'with ReactDOM.hydrate() if you want React to attach to the server HTML.');
    }
  }

  return createLegacyRoot(container, shouldHydrate ? {
    hydrate: true
  } : undefined);
}

function warnOnInvalidCallback$1(callback, callerName) {
  {
    if (callback !== null && typeof callback !== 'function') {
      error('%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);
    }
  }
}

function legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
  {
    topLevelUpdateWarnings(container);
    warnOnInvalidCallback$1(callback === undefined ? null : callback, 'render');
  } // TODO: Without `any` type, Flow says "Property cannot be accessed on any
  // member of intersection type." Whyyyyyy.


  var root = container._reactRootContainer;
  var fiberRoot;

  if (!root) {
    // Initial mount
    root = container._reactRootContainer = legacyCreateRootFromDOMContainer(container, forceHydrate);
    fiberRoot = root._internalRoot;

    if (typeof callback === 'function') {
      var originalCallback = callback;

      callback = function () {
        var instance = getPublicRootInstance(fiberRoot);
        originalCallback.call(instance);
      };
    } // Initial mount should not be batched.


    unbatchedUpdates(function () {
      updateContainer(children, fiberRoot, parentComponent, callback);
    });
  } else {
    fiberRoot = root._internalRoot;

    if (typeof callback === 'function') {
      var _originalCallback = callback;

      callback = function () {
        var instance = getPublicRootInstance(fiberRoot);

        _originalCallback.call(instance);
      };
    } // Update


    updateContainer(children, fiberRoot, parentComponent, callback);
  }

  return getPublicRootInstance(fiberRoot);
}

function findDOMNode(componentOrElement) {
  {
    var owner = ReactCurrentOwner$3.current;

    if (owner !== null && owner.stateNode !== null) {
      var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;

      if (!warnedAboutRefsInRender) {
        error('%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(owner.type) || 'A component');
      }

      owner.stateNode._warnedAboutRefsInRender = true;
    }
  }

  if (componentOrElement == null) {
    return null;
  }

  if (componentOrElement.nodeType === ELEMENT_NODE) {
    return componentOrElement;
  }

  {
    return findHostInstanceWithWarning(componentOrElement, 'findDOMNode');
  }
}
function hydrate(element, container, callback) {
  if (!isValidContainer(container)) {
    {
      throw Error( "Target container is not a DOM element." );
    }
  }

  {
    var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;

    if (isModernRoot) {
      error('You are calling ReactDOM.hydrate() on a container that was previously ' + 'passed to ReactDOM.createRoot(). This is not supported. ' + 'Did you mean to call createRoot(container, {hydrate: true}).render(element)?');
    }
  } // TODO: throw or warn if we couldn't hydrate?


  return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);
}
function render(element, container, callback) {
  if (!isValidContainer(container)) {
    {
      throw Error( "Target container is not a DOM element." );
    }
  }

  {
    var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;

    if (isModernRoot) {
      error('You are calling ReactDOM.render() on a container that was previously ' + 'passed to ReactDOM.createRoot(). This is not supported. ' + 'Did you mean to call root.render(element)?');
    }
  }

  return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);
}
function unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
  if (!isValidContainer(containerNode)) {
    {
      throw Error( "Target container is not a DOM element." );
    }
  }

  if (!(parentComponent != null && has(parentComponent))) {
    {
      throw Error( "parentComponent must be a valid React Component" );
    }
  }

  return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
}
function unmountComponentAtNode(container) {
  if (!isValidContainer(container)) {
    {
      throw Error( "unmountComponentAtNode(...): Target container is not a DOM element." );
    }
  }

  {
    var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;

    if (isModernRoot) {
      error('You are calling ReactDOM.unmountComponentAtNode() on a container that was previously ' + 'passed to ReactDOM.createRoot(). This is not supported. Did you mean to call root.unmount()?');
    }
  }

  if (container._reactRootContainer) {
    {
      var rootEl = getReactRootElementInContainer(container);
      var renderedByDifferentReact = rootEl && !getInstanceFromNode(rootEl);

      if (renderedByDifferentReact) {
        error("unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by another copy of React.');
      }
    } // Unmount should not be batched.


    unbatchedUpdates(function () {
      legacyRenderSubtreeIntoContainer(null, null, container, false, function () {
        // $FlowFixMe This should probably use `delete container._reactRootContainer`
        container._reactRootContainer = null;
        unmarkContainerAsRoot(container);
      });
    }); // If you call unmountComponentAtNode twice in quick succession, you'll
    // get `true` twice. That's probably fine?

    return true;
  } else {
    {
      var _rootEl = getReactRootElementInContainer(container);

      var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode(_rootEl)); // Check if the container itself is a React root node.

      var isContainerReactRoot = container.nodeType === ELEMENT_NODE && isValidContainer(container.parentNode) && !!container.parentNode._reactRootContainer;

      if (hasNonRootReactChild) {
        error("unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.');
      }
    }

    return false;
  }
}

setAttemptUserBlockingHydration(attemptUserBlockingHydration$1);
setAttemptContinuousHydration(attemptContinuousHydration$1);
setAttemptHydrationAtCurrentPriority(attemptHydrationAtCurrentPriority$1);
setAttemptHydrationAtPriority(runWithPriority$2);
var didWarnAboutUnstableCreatePortal = false;

{
  if (typeof Map !== 'function' || // $FlowIssue Flow incorrectly thinks Map has no prototype
  Map.prototype == null || typeof Map.prototype.forEach !== 'function' || typeof Set !== 'function' || // $FlowIssue Flow incorrectly thinks Set has no prototype
  Set.prototype == null || typeof Set.prototype.clear !== 'function' || typeof Set.prototype.forEach !== 'function') {
    error('React depends on Map and Set built-in types. Make sure that you load a ' + 'polyfill in older browsers. https://reactjs.org/link/react-polyfills');
  }
}

setRestoreImplementation(restoreControlledState$3);
setBatchingImplementation(batchedUpdates$1, discreteUpdates$1, flushDiscreteUpdates, batchedEventUpdates$1);

function createPortal$1(children, container) {
  var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

  if (!isValidContainer(container)) {
    {
      throw Error( "Target container is not a DOM element." );
    }
  } // TODO: pass ReactDOM portal implementation as third argument
  // $FlowFixMe The Flow type is opaque but there's no way to actually create it.


  return createPortal(children, container, null, key);
}

function renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {

  return unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback);
}

function unstable_createPortal(children, container) {
  var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

  {
    if (!didWarnAboutUnstableCreatePortal) {
      didWarnAboutUnstableCreatePortal = true;

      warn('The ReactDOM.unstable_createPortal() alias has been deprecated, ' + 'and will be removed in React 18+. Update your code to use ' + 'ReactDOM.createPortal() instead. It has the exact same API, ' + 'but without the "unstable_" prefix.');
    }
  }

  return createPortal$1(children, container, key);
}

var Internals = {
  // Keep in sync with ReactTestUtils.js, and ReactTestUtilsAct.js.
  // This is an array for better minification.
  Events: [getInstanceFromNode, getNodeFromInstance, getFiberCurrentPropsFromNode, enqueueStateRestore, restoreStateIfNeeded, flushPassiveEffects, // TODO: This is related to `act`, not events. Move to separate key?
  IsThisRendererActing]
};
var foundDevTools = injectIntoDevTools({
  findFiberByHostInstance: getClosestInstanceFromNode,
  bundleType:  1 ,
  version: ReactVersion,
  rendererPackageName: 'react-dom'
});

{
  if (!foundDevTools && canUseDOM && window.top === window.self) {
    // If we're in Chrome or Firefox, provide a download link if not installed.
    if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
      var protocol = window.location.protocol; // Don't warn in exotic cases like chrome-extension://.

      if (/^(https?|file):$/.test(protocol)) {
        // eslint-disable-next-line react-internal/no-production-logging
        console.info('%cDownload the React DevTools ' + 'for a better development experience: ' + 'https://reactjs.org/link/react-devtools' + (protocol === 'file:' ? '\nYou might need to use a local HTTP server (instead of file://): ' + 'https://reactjs.org/link/react-devtools-faq' : ''), 'font-weight:bold');
      }
    }
  }
}

exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Internals;
exports.createPortal = createPortal$1;
exports.findDOMNode = findDOMNode;
exports.flushSync = flushSync;
exports.hydrate = hydrate;
exports.render = render;
exports.unmountComponentAtNode = unmountComponentAtNode;
exports.unstable_batchedUpdates = batchedUpdates$1;
exports.unstable_createPortal = unstable_createPortal;
exports.unstable_renderSubtreeIntoContainer = renderSubtreeIntoContainer;
exports.version = ReactVersion;
  })();
}


/***/ }),
/* 918 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (process.env.NODE_ENV === 'production') {
  module.exports = __webpack_require__(919);
} else {
  module.exports = __webpack_require__(920);
}


/***/ }),
/* 919 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** @license React v0.20.2
 * scheduler-tracing.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var b=0;exports.__interactionsRef=null;exports.__subscriberRef=null;exports.unstable_clear=function(a){return a()};exports.unstable_getCurrent=function(){return null};exports.unstable_getThreadID=function(){return++b};exports.unstable_subscribe=function(){};exports.unstable_trace=function(a,d,c){return c()};exports.unstable_unsubscribe=function(){};exports.unstable_wrap=function(a){return a};


/***/ }),
/* 920 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** @license React v0.20.2
 * scheduler-tracing.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



if (process.env.NODE_ENV !== "production") {
  (function() {
'use strict';

var DEFAULT_THREAD_ID = 0; // Counters used to generate unique IDs.

var interactionIDCounter = 0;
var threadIDCounter = 0; // Set of currently traced interactions.
// Interactions "stack"–
// Meaning that newly traced interactions are appended to the previously active set.
// When an interaction goes out of scope, the previous set (if any) is restored.

exports.__interactionsRef = null; // Listener(s) to notify when interactions begin and end.

exports.__subscriberRef = null;

{
  exports.__interactionsRef = {
    current: new Set()
  };
  exports.__subscriberRef = {
    current: null
  };
}
function unstable_clear(callback) {

  var prevInteractions = exports.__interactionsRef.current;
  exports.__interactionsRef.current = new Set();

  try {
    return callback();
  } finally {
    exports.__interactionsRef.current = prevInteractions;
  }
}
function unstable_getCurrent() {
  {
    return exports.__interactionsRef.current;
  }
}
function unstable_getThreadID() {
  return ++threadIDCounter;
}
function unstable_trace(name, timestamp, callback) {
  var threadID = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DEFAULT_THREAD_ID;

  var interaction = {
    __count: 1,
    id: interactionIDCounter++,
    name: name,
    timestamp: timestamp
  };
  var prevInteractions = exports.__interactionsRef.current; // Traced interactions should stack/accumulate.
  // To do that, clone the current interactions.
  // The previous set will be restored upon completion.

  var interactions = new Set(prevInteractions);
  interactions.add(interaction);
  exports.__interactionsRef.current = interactions;
  var subscriber = exports.__subscriberRef.current;
  var returnValue;

  try {
    if (subscriber !== null) {
      subscriber.onInteractionTraced(interaction);
    }
  } finally {
    try {
      if (subscriber !== null) {
        subscriber.onWorkStarted(interactions, threadID);
      }
    } finally {
      try {
        returnValue = callback();
      } finally {
        exports.__interactionsRef.current = prevInteractions;

        try {
          if (subscriber !== null) {
            subscriber.onWorkStopped(interactions, threadID);
          }
        } finally {
          interaction.__count--; // If no async work was scheduled for this interaction,
          // Notify subscribers that it's completed.

          if (subscriber !== null && interaction.__count === 0) {
            subscriber.onInteractionScheduledWorkCompleted(interaction);
          }
        }
      }
    }
  }

  return returnValue;
}
function unstable_wrap(callback) {
  var threadID = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_THREAD_ID;

  var wrappedInteractions = exports.__interactionsRef.current;
  var subscriber = exports.__subscriberRef.current;

  if (subscriber !== null) {
    subscriber.onWorkScheduled(wrappedInteractions, threadID);
  } // Update the pending async work count for the current interactions.
  // Update after calling subscribers in case of error.


  wrappedInteractions.forEach(function (interaction) {
    interaction.__count++;
  });
  var hasRun = false;

  function wrapped() {
    var prevInteractions = exports.__interactionsRef.current;
    exports.__interactionsRef.current = wrappedInteractions;
    subscriber = exports.__subscriberRef.current;

    try {
      var returnValue;

      try {
        if (subscriber !== null) {
          subscriber.onWorkStarted(wrappedInteractions, threadID);
        }
      } finally {
        try {
          returnValue = callback.apply(undefined, arguments);
        } finally {
          exports.__interactionsRef.current = prevInteractions;

          if (subscriber !== null) {
            subscriber.onWorkStopped(wrappedInteractions, threadID);
          }
        }
      }

      return returnValue;
    } finally {
      if (!hasRun) {
        // We only expect a wrapped function to be executed once,
        // But in the event that it's executed more than once–
        // Only decrement the outstanding interaction counts once.
        hasRun = true; // Update pending async counts for all wrapped interactions.
        // If this was the last scheduled async work for any of them,
        // Mark them as completed.

        wrappedInteractions.forEach(function (interaction) {
          interaction.__count--;

          if (subscriber !== null && interaction.__count === 0) {
            subscriber.onInteractionScheduledWorkCompleted(interaction);
          }
        });
      }
    }
  }

  wrapped.cancel = function cancel() {
    subscriber = exports.__subscriberRef.current;

    try {
      if (subscriber !== null) {
        subscriber.onWorkCanceled(wrappedInteractions, threadID);
      }
    } finally {
      // Update pending async counts for all wrapped interactions.
      // If this was the last scheduled async work for any of them,
      // Mark them as completed.
      wrappedInteractions.forEach(function (interaction) {
        interaction.__count--;

        if (subscriber && interaction.__count === 0) {
          subscriber.onInteractionScheduledWorkCompleted(interaction);
        }
      });
    }
  };

  return wrapped;
}

var subscribers = null;

{
  subscribers = new Set();
}

function unstable_subscribe(subscriber) {
  {
    subscribers.add(subscriber);

    if (subscribers.size === 1) {
      exports.__subscriberRef.current = {
        onInteractionScheduledWorkCompleted: onInteractionScheduledWorkCompleted,
        onInteractionTraced: onInteractionTraced,
        onWorkCanceled: onWorkCanceled,
        onWorkScheduled: onWorkScheduled,
        onWorkStarted: onWorkStarted,
        onWorkStopped: onWorkStopped
      };
    }
  }
}
function unstable_unsubscribe(subscriber) {
  {
    subscribers.delete(subscriber);

    if (subscribers.size === 0) {
      exports.__subscriberRef.current = null;
    }
  }
}

function onInteractionTraced(interaction) {
  var didCatchError = false;
  var caughtError = null;
  subscribers.forEach(function (subscriber) {
    try {
      subscriber.onInteractionTraced(interaction);
    } catch (error) {
      if (!didCatchError) {
        didCatchError = true;
        caughtError = error;
      }
    }
  });

  if (didCatchError) {
    throw caughtError;
  }
}

function onInteractionScheduledWorkCompleted(interaction) {
  var didCatchError = false;
  var caughtError = null;
  subscribers.forEach(function (subscriber) {
    try {
      subscriber.onInteractionScheduledWorkCompleted(interaction);
    } catch (error) {
      if (!didCatchError) {
        didCatchError = true;
        caughtError = error;
      }
    }
  });

  if (didCatchError) {
    throw caughtError;
  }
}

function onWorkScheduled(interactions, threadID) {
  var didCatchError = false;
  var caughtError = null;
  subscribers.forEach(function (subscriber) {
    try {
      subscriber.onWorkScheduled(interactions, threadID);
    } catch (error) {
      if (!didCatchError) {
        didCatchError = true;
        caughtError = error;
      }
    }
  });

  if (didCatchError) {
    throw caughtError;
  }
}

function onWorkStarted(interactions, threadID) {
  var didCatchError = false;
  var caughtError = null;
  subscribers.forEach(function (subscriber) {
    try {
      subscriber.onWorkStarted(interactions, threadID);
    } catch (error) {
      if (!didCatchError) {
        didCatchError = true;
        caughtError = error;
      }
    }
  });

  if (didCatchError) {
    throw caughtError;
  }
}

function onWorkStopped(interactions, threadID) {
  var didCatchError = false;
  var caughtError = null;
  subscribers.forEach(function (subscriber) {
    try {
      subscriber.onWorkStopped(interactions, threadID);
    } catch (error) {
      if (!didCatchError) {
        didCatchError = true;
        caughtError = error;
      }
    }
  });

  if (didCatchError) {
    throw caughtError;
  }
}

function onWorkCanceled(interactions, threadID) {
  var didCatchError = false;
  var caughtError = null;
  subscribers.forEach(function (subscriber) {
    try {
      subscriber.onWorkCanceled(interactions, threadID);
    } catch (error) {
      if (!didCatchError) {
        didCatchError = true;
        caughtError = error;
      }
    }
  });

  if (didCatchError) {
    throw caughtError;
  }
}

exports.unstable_clear = unstable_clear;
exports.unstable_getCurrent = unstable_getCurrent;
exports.unstable_getThreadID = unstable_getThreadID;
exports.unstable_subscribe = unstable_subscribe;
exports.unstable_trace = unstable_trace;
exports.unstable_unsubscribe = unstable_unsubscribe;
exports.unstable_wrap = unstable_wrap;
  })();
}


/***/ })
/******/ 	]);
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/async module */
/******/ 	(() => {
/******/ 		var webpackThen = typeof Symbol === "function" ? Symbol("webpack then") : "__webpack_then__";
/******/ 		var webpackExports = typeof Symbol === "function" ? Symbol("webpack exports") : "__webpack_exports__";
/******/ 		var completeQueue = (queue) => {
/******/ 			if(queue) {
/******/ 				queue.forEach((fn) => (fn.r--));
/******/ 				queue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));
/******/ 			}
/******/ 		}
/******/ 		var completeFunction = (fn) => (!--fn.r && fn());
/******/ 		var queueFunction = (queue, fn) => (queue ? queue.push(fn) : completeFunction(fn));
/******/ 		var wrapDeps = (deps) => (deps.map((dep) => {
/******/ 			if(dep !== null && typeof dep === "object") {
/******/ 				if(dep[webpackThen]) return dep;
/******/ 				if(dep.then) {
/******/ 					var queue = [];
/******/ 					dep.then((r) => {
/******/ 						obj[webpackExports] = r;
/******/ 						completeQueue(queue);
/******/ 						queue = 0;
/******/ 					});
/******/ 					var obj = {};
/******/ 												obj[webpackThen] = (fn, reject) => (queueFunction(queue, fn), dep['catch'](reject));
/******/ 					return obj;
/******/ 				}
/******/ 			}
/******/ 			var ret = {};
/******/ 								ret[webpackThen] = (fn) => (completeFunction(fn));
/******/ 								ret[webpackExports] = dep;
/******/ 								return ret;
/******/ 		}));
/******/ 		__webpack_require__.a = (module, body, hasAwait) => {
/******/ 			var queue = hasAwait && [];
/******/ 			var exports = module.exports;
/******/ 			var currentDeps;
/******/ 			var outerResolve;
/******/ 			var reject;
/******/ 			var isEvaluating = true;
/******/ 			var nested = false;
/******/ 			var whenAll = (deps, onResolve, onReject) => {
/******/ 				if (nested) return;
/******/ 				nested = true;
/******/ 				onResolve.r += deps.length;
/******/ 				deps.map((dep, i) => (dep[webpackThen](onResolve, onReject)));
/******/ 				nested = false;
/******/ 			};
/******/ 			var promise = new Promise((resolve, rej) => {
/******/ 				reject = rej;
/******/ 				outerResolve = () => (resolve(exports), completeQueue(queue), queue = 0);
/******/ 			});
/******/ 			promise[webpackExports] = exports;
/******/ 			promise[webpackThen] = (fn, rejectFn) => {
/******/ 				if (isEvaluating) { return completeFunction(fn); }
/******/ 				if (currentDeps) whenAll(currentDeps, fn, rejectFn);
/******/ 				queueFunction(queue, fn);
/******/ 				promise['catch'](rejectFn);
/******/ 			};
/******/ 			module.exports = promise;
/******/ 			body((deps) => {
/******/ 				if(!deps) return outerResolve();
/******/ 				currentDeps = wrapDeps(deps);
/******/ 				var fn, result;
/******/ 				var promise = new Promise((resolve, reject) => {
/******/ 					fn = () => (resolve(result = currentDeps.map((d) => (d[webpackExports]))));
/******/ 					fn.r = 0;
/******/ 					whenAll(currentDeps, fn, reject);
/******/ 				});
/******/ 				return fn.r ? promise : result;
/******/ 			}).then(outerResolve, reject);
/******/ 			isEvaluating = false;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/ensure chunk */
/******/ 	(() => {
/******/ 		__webpack_require__.f = {};
/******/ 		// This file contains only the entry chunk.
/******/ 		// The chunk loading function for additional chunks
/******/ 		__webpack_require__.e = (chunkId) => {
/******/ 			return Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {
/******/ 				__webpack_require__.f[key](chunkId, promises);
/******/ 				return promises;
/******/ 			}, []));
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.u = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "" + chunkId + ".index.js";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/harmony module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.hmd = (module) => {
/******/ 			module = Object.create(module);
/******/ 			if (!module.children) module.children = [];
/******/ 			Object.defineProperty(module, 'exports', {
/******/ 				enumerable: true,
/******/ 				set: () => {
/******/ 					throw new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);
/******/ 				}
/******/ 			});
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/load script */
/******/ 	(() => {
/******/ 		var inProgress = {};
/******/ 		var dataWebpackPrefix = "DataHost:";
/******/ 		// loadScript function to load a script via script tag
/******/ 		__webpack_require__.l = (url, done, key, chunkId) => {
/******/ 			if(inProgress[url]) { inProgress[url].push(done); return; }
/******/ 			var script, needAttach;
/******/ 			if(key !== undefined) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				for(var i = 0; i < scripts.length; i++) {
/******/ 					var s = scripts[i];
/******/ 					if(s.getAttribute("src") == url || s.getAttribute("data-webpack") == dataWebpackPrefix + key) { script = s; break; }
/******/ 				}
/******/ 			}
/******/ 			if(!script) {
/******/ 				needAttach = true;
/******/ 				script = document.createElement('script');
/******/ 		
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 				script.setAttribute("data-webpack", dataWebpackPrefix + key);
/******/ 				script.src = url;
/******/ 			}
/******/ 			inProgress[url] = [done];
/******/ 			var onScriptComplete = (prev, event) => {
/******/ 				// avoid mem leaks in IE.
/******/ 				script.onerror = script.onload = null;
/******/ 				clearTimeout(timeout);
/******/ 				var doneFns = inProgress[url];
/******/ 				delete inProgress[url];
/******/ 				script.parentNode && script.parentNode.removeChild(script);
/******/ 				doneFns && doneFns.forEach((fn) => (fn(event)));
/******/ 				if(prev) return prev(event);
/******/ 			}
/******/ 			;
/******/ 			var timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);
/******/ 			script.onerror = onScriptComplete.bind(null, script.onerror);
/******/ 			script.onload = onScriptComplete.bind(null, script.onload);
/******/ 			needAttach && document.head.appendChild(script);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/wasm loading */
/******/ 	(() => {
/******/ 		__webpack_require__.v = (exports, wasmModuleId, wasmModuleHash, importsObj) => {
/******/ 			var req = fetch(__webpack_require__.p + "" + wasmModuleHash + ".module.wasm");
/******/ 			if (typeof WebAssembly.instantiateStreaming === 'function') {
/******/ 				return WebAssembly.instantiateStreaming(req, importsObj)
/******/ 					.then((res) => (Object.assign(exports, res.instance.exports)));
/******/ 			}
/******/ 			return req
/******/ 				.then((x) => (x.arrayBuffer()))
/******/ 				.then((bytes) => (WebAssembly.instantiate(bytes, importsObj)))
/******/ 				.then((res) => (Object.assign(exports, res.instance.exports)));
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) scriptUrl = scripts[scripts.length - 1].src
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			0: 0
/******/ 		};
/******/ 		
/******/ 		__webpack_require__.f.j = (chunkId, promises) => {
/******/ 				// JSONP chunk loading for javascript
/******/ 				var installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;
/******/ 				if(installedChunkData !== 0) { // 0 means "already installed".
/******/ 		
/******/ 					// a Promise means "currently loading".
/******/ 					if(installedChunkData) {
/******/ 						promises.push(installedChunkData[2]);
/******/ 					} else {
/******/ 						if(true) { // all chunks have JS
/******/ 							// setup Promise in chunk cache
/******/ 							var promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));
/******/ 							promises.push(installedChunkData[2] = promise);
/******/ 		
/******/ 							// start chunk loading
/******/ 							var url = __webpack_require__.p + __webpack_require__.u(chunkId);
/******/ 							// create error before stack unwound to get useful stacktrace later
/******/ 							var error = new Error();
/******/ 							var loadingEnded = (event) => {
/******/ 								if(__webpack_require__.o(installedChunks, chunkId)) {
/******/ 									installedChunkData = installedChunks[chunkId];
/******/ 									if(installedChunkData !== 0) installedChunks[chunkId] = undefined;
/******/ 									if(installedChunkData) {
/******/ 										var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 										var realSrc = event && event.target && event.target.src;
/******/ 										error.message = 'Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 										error.name = 'ChunkLoadError';
/******/ 										error.type = errorType;
/******/ 										error.request = realSrc;
/******/ 										installedChunkData[1](error);
/******/ 									}
/******/ 								}
/******/ 							};
/******/ 							__webpack_require__.l(url, loadingEnded, "chunk-" + chunkId, chunkId);
/******/ 						} else installedChunks[chunkId] = 0;
/******/ 					}
/******/ 				}
/******/ 		};
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkIds[i]] = 0;
/******/ 			}
/******/ 		
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = this["webpackChunkDataHost"] = this["webpackChunkDataHost"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Background": () => (/* reexport safe */ _lib_background__WEBPACK_IMPORTED_MODULE_0__.Background),
/* harmony export */   "InjectionScript": () => (/* reexport safe */ _lib_injectionScript__WEBPACK_IMPORTED_MODULE_1__.InjectionScript),
/* harmony export */   "FractalUI": () => (/* reexport safe */ _lib_fractalUI__WEBPACK_IMPORTED_MODULE_2__.FractalUI)
/* harmony export */ });
/* harmony import */ var _lib_background__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var _lib_injectionScript__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2);
/* harmony import */ var _lib_fractalUI__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3);




})();

/******/ 	return __webpack_exports__;
/******/ })()
;
});